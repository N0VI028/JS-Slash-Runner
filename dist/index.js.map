{"version":3,"file":"index.js","mappings":"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","sources":["webpack://JS-Slash-Runner/webpack/runtime/async module","webpack://JS-Slash-Runner/external module \"../../../../../scripts/power-user.js\"","webpack://JS-Slash-Runner/./src/component/script_repository/default_scripts/index.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands.js\"","webpack://JS-Slash-Runner/./src/component/character_level/library.ts","webpack://JS-Slash-Runner/./src/iframe_server/_impl.ts","webpack://JS-Slash-Runner/./src/util/load_script.ts","webpack://JS-Slash-Runner/./src/slash_command/event.ts","webpack://JS-Slash-Runner/./src/util/extension_variables.ts","webpack://JS-Slash-Runner/./src/third_party.html","webpack://JS-Slash-Runner/external module \"../../../../../scripts/popup.js\"","webpack://JS-Slash-Runner/./src/util/check_update.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommand.js\"","webpack://JS-Slash-Runner/./src/component/macro.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandArgument.js\"","webpack://JS-Slash-Runner/./src/function/character.ts","webpack://JS-Slash-Runner/./src/function/chat_message.ts","webpack://JS-Slash-Runner/./src/function/displayed_message.ts","webpack://JS-Slash-Runner/./src/function/frontend_version.ts","webpack://JS-Slash-Runner/./src/function/generate.ts","webpack://JS-Slash-Runner/./src/function/lorebook.ts","webpack://JS-Slash-Runner/./src/function/lorebook_entry.ts","webpack://JS-Slash-Runner/./src/function/slash.ts","webpack://JS-Slash-Runner/./src/function/tavern_regex.ts","webpack://JS-Slash-Runner/./src/function/util.ts","webpack://JS-Slash-Runner/./src/function/variables.ts","webpack://JS-Slash-Runner/./src/function/index.ts","webpack://JS-Slash-Runner/external module \"../../../../../script.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/RossAscends-mods.js\"","webpack://JS-Slash-Runner/./src/component/audio/index.ts","webpack://JS-Slash-Runner/./src/component/main.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/macros.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/extensions.js\"","webpack://JS-Slash-Runner/./src/iframe_server/tavern_regex.ts","webpack://JS-Slash-Runner/./src/script_url.ts","webpack://JS-Slash-Runner/./src/iframe_server/character.ts","webpack://JS-Slash-Runner/./src/iframe_server/generate.ts","webpack://JS-Slash-Runner/./src/iframe_server/lorebook_entry.ts","webpack://JS-Slash-Runner/./src/iframe_server/index.ts","webpack://JS-Slash-Runner/./src/iframe_server/chat_message.ts","webpack://JS-Slash-Runner/./src/iframe_server/displayed_message.ts","webpack://JS-Slash-Runner/./src/iframe_server/frontend_version.ts","webpack://JS-Slash-Runner/./src/iframe_server/lorebook.ts","webpack://JS-Slash-Runner/./src/iframe_server/slash.ts","webpack://JS-Slash-Runner/./src/iframe_server/util.ts","webpack://JS-Slash-Runner/./src/iframe_server/audio.ts","webpack://JS-Slash-Runner/./src/component/message_iframe.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/tags.js\"","webpack://JS-Slash-Runner/./src/compatibility.ts","webpack://JS-Slash-Runner/./src/util/multimap.ts","webpack://JS-Slash-Runner/./src/util/helper.ts","webpack://JS-Slash-Runner/./src/iframe_server/variables.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/extensions/regex/engine.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/openai.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/world-info.js\"","webpack://JS-Slash-Runner/./src/component/character_level/script_iframe.ts","webpack://JS-Slash-Runner/./src/component/character_level/index.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandCommonEnumsProvider.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandEnumValue.js\"","webpack://JS-Slash-Runner/./src/slash_command/audio.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/authors-note.js\"","webpack://JS-Slash-Runner/./src/index.ts","webpack://JS-Slash-Runner/./src/component/script_repository/index.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandParser.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/PromptManager.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/utils.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/group-chats.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/i18n.js\"","webpack://JS-Slash-Runner/./src/iframe_client/index.ts","webpack://JS-Slash-Runner/webpack/bootstrap","webpack://JS-Slash-Runner/webpack/runtime/define property getters","webpack://JS-Slash-Runner/webpack/runtime/hasOwnProperty shorthand","webpack://JS-Slash-Runner/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"flushEphemeralStoppingStrings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.flushEphemeralStoppingStrings), [\"persona_description_positions\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.persona_description_positions), [\"power_user\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.power_user) });","/**\n * 默认脚本ID常量\n */\nexport const DEFAULT_SCRIPT_IDS = {\n  AUTO_FIX_OPTIONS: 'default_auto_fix_options',\n  AUTO_OPEN_SCOPE_REGEX: 'default_auto_open_scope_regex',\n};\n\n/**\n * 默认脚本配置\n * 包含每个默认脚本的基本信息\n */\nexport const DEFAULT_SCRIPT_CONFIGS = {\n  [DEFAULT_SCRIPT_IDS.AUTO_FIX_OPTIONS]: {\n    name: '自动关闭前端卡不兼容选项',\n    scriptId: 'auto_fix_options',\n  },\n  [DEFAULT_SCRIPT_IDS.AUTO_OPEN_SCOPE_REGEX]: {\n    name: '自动开启角色卡局部正则',\n    scriptId: 'auto_open_scope_regex',\n  },\n};\n\n/**\n * 加载脚本内容\n * @param scriptId 脚本ID\n * @returns 脚本内容\n */\nexport async function loadScriptContent(scriptId: string): Promise<string> {\n  try {\n    const response = await fetch(\n      `/scripts/extensions/third-party/JS-Slash-Runner/src/component/script_repository/default_scripts/${scriptId}.js`,\n    );\n    if (!response.ok) {\n      throw new Error(`加载默认脚本内容失败: ${response.statusText}`);\n    }\n    return await response.text();\n  } catch (error) {\n    console.error(`加载默认脚本内容失败: ${scriptId}:`, error);\n    return '';\n  }\n}\n\n/**\n * 加载脚本信息\n * @param scriptId 脚本ID\n * @returns 脚本信息HTML\n */\nexport async function loadScriptInfo(scriptId: string): Promise<string> {\n  try {\n    const response = await fetch(\n      `/scripts/extensions/third-party/JS-Slash-Runner/src/component/script_repository/default_scripts/${scriptId}.html`,\n    );\n    if (!response.ok) {\n      throw new Error(`加载默认脚本信息失败: ${response.statusText}`);\n    }\n    return await response.text();\n  } catch (error) {\n    console.error(`加载默认脚本信息失败: ${scriptId}:`, error);\n    return '';\n  }\n}\n\n/**\n * 创建单个默认脚本\n * @param scriptId 脚本ID\n * @returns 脚本对象\n */\nexport async function createDefaultScript(scriptId: string): Promise<any> {\n  const config = DEFAULT_SCRIPT_CONFIGS[scriptId];\n  if (!config) {\n    console.error(`未找到脚本配置: ${scriptId}`);\n    return null;\n  }\n\n  try {\n    return {\n      id: scriptId,\n      name: config.name,\n      content: await loadScriptContent(config.scriptId),\n      info: await loadScriptInfo(config.scriptId),\n      enabled: false,\n    };\n  } catch (error) {\n    console.error(`创建默认脚本失败: ${scriptId}:`, error);\n    return null;\n  }\n}\n\n/**\n * 创建自动关闭前端卡不兼容选项脚本\n * @returns 脚本对象\n */\nexport async function createAutoFixOptionsScript(): Promise<any> {\n  return (await createDefaultScript(DEFAULT_SCRIPT_IDS.AUTO_FIX_OPTIONS)) || {};\n}\n\n/**\n * 创建自动开启角色卡局部正则脚本\n * @returns 脚本对象\n */\nexport async function createAutoOpenScopeRegexScript(): Promise<any> {\n  return (await createDefaultScript(DEFAULT_SCRIPT_IDS.AUTO_OPEN_SCOPE_REGEX)) || {};\n}\n\n/**\n * 创建所有默认脚本\n * @returns 默认脚本数组\n */\nexport async function createDefaultScripts(): Promise<any[]> {\n  const scripts: any[] = [];\n\n  for (const scriptId of Object.values(DEFAULT_SCRIPT_IDS)) {\n    const script = await createDefaultScript(scriptId);\n    if (script) {\n      scripts.push(script);\n    }\n  }\n\n  return scripts;\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"executeSlashCommandsWithOptions\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_js_aacea5c1__.executeSlashCommandsWithOptions) });","import { loadScripts } from '@/util/load_script';\n\nexport let libraries_text: string = '';\n\nexport function initialize(): void {\n  const libraries = loadScripts('库-');\n  console.info(`[Library] 加载库: ${JSON.stringify(libraries.map(library => library.name))}`);\n\n  libraries_text = libraries.map(script => script.code).join('\\n');\n}\n\nexport function destroy(): void {\n  libraries_text = '';\n}\n","export interface IframeMessage {\n  request: string;\n  uid: number;\n}\n\nexport function getIframeName<T extends IframeMessage>(event: MessageEvent<T>): string {\n  const window = event.source as Window;\n  return window.frameElement?.id as string;\n}\n\nexport function getLogPrefix<T extends IframeMessage>(event: MessageEvent<T>): string {\n  return `${event.data.request}(${getIframeName(event)}) `;\n}\n\ntype IframeHandlers = {\n  [request: string]: (event: MessageEvent<any>) => Promise<any | void>;\n};\n\nexport const iframe_handlers: IframeHandlers = {};\n\nexport function registerIframeHandler<T extends IframeMessage>(\n  request: string,\n  handler: (event: MessageEvent<T>) => Promise<any | void>,\n) {\n  iframe_handlers[request] = handler;\n}","import { getCharacterRegexes, getGlobalRegexes, isCharacterTavernRegexEnabled } from '@/iframe_server/tavern_regex';\n\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\n\nexport interface Script {\n  name: string;\n  code: string;\n}\n\nexport function loadScripts(prefix: string): Script[] {\n  const filterScriptFromRegex = (script: RegexScriptData) =>\n    script.scriptName.replace(/^【.*】/, '').startsWith(prefix);\n  const isEnabled = (script: RegexScriptData) => !script.disabled;\n  const toName = (script: RegexScriptData) => script.scriptName.replace(/^【.*】/, '').replace(prefix, '');\n\n  let scripts: RegexScriptData[] = [];\n\n  const enabled_global_regexes = getGlobalRegexes().filter(filterScriptFromRegex).filter(isEnabled);\n  scripts.push(...enabled_global_regexes);\n\n  const enabled_character_regexes = getCharacterRegexes()\n    .filter(filterScriptFromRegex)\n    .filter(isEnabled)\n    .filter(script => (isCharacterTavernRegexEnabled() ? true : script.runOnEdit));\n  scripts.push(...enabled_character_regexes);\n\n  const to_script = (script: RegexScriptData) => ({ name: toName(script), code: script.replaceString });\n  return scripts.map(to_script);\n}\n\nexport function is_equal_scripts(lhs: Script[], rhs: Script[]): boolean {\n  if (lhs === rhs) {\n    return true;\n  }\n  if (lhs == null || rhs == null) {\n    return false;\n  }\n  if (lhs.length !== rhs.length) {\n    return false;\n  }\n\n  for (let i = 0; i < lhs.length; i++) {\n    if (lhs[i].name !== rhs[i].name && lhs[i].code !== rhs[i].code) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { eventSource } from '@sillytavern/script';\nimport { SlashCommand } from '@sillytavern/scripts/slash-commands/SlashCommand';\nimport { ARGUMENT_TYPE, SlashCommandNamedArgument } from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\nexport async function slashEventEmit(named_args: any): Promise<any> {\n  const event: string = named_args.event;\n  const data: string[] = named_args.data ?? [];\n\n  eventSource.emit(event, ...data);\n\n  console.info(`[Event][/event-emit] 发送 '${event}' 事件, 携带数据: ${JSON.stringify(data)}`);\n\n  return event;\n}\n\nexport function initSlashEventEmit() {\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'event-emit',\n      callback: slashEventEmit,\n      returns: '发送的事件名称',\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'event',\n          description: '事件名称',\n          typeList: [ARGUMENT_TYPE.STRING],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'data',\n          description: '要传输的数据',\n          typeList: [ARGUMENT_TYPE.STRING],\n          isRequired: false,\n          acceptsMultiple: true,\n        }),\n      ],\n      unnamedArgumentList: [],\n      helpString: `\n    <div>\n        发送 \\`event\\` 事件, 同时可以发送一些数据.\n        所有正在监听该消息频道的 listener 函数都会自动运行, 并能用函数参数接收发送来的数据.\n        由于酒馆 STScript 输入方式的局限性, 所有数据将会以字符串 string 类型接收; 如果需要 number 等类型, 请自行转换.\n    </div>\n    <div>\n        <strong>Example:</strong>\n        <ul>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"读档\"</code></pre>\n            </li>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"存档\" data={{getvar::数据}} data=8 data=你好 {{user}}</code></pre>\n            </li>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"随便什么名称\" data=\"这是一个 数据\" data={{user}}</code></pre>\n            </li>\n        </ul>\n    </div>\n  `,\n    }),\n  );\n}\n","import {\n  characters,\n  getThumbnailUrl,\n  this_chid,\n  user_avatar,\n  saveSettingsDebounced,\n} from '@sillytavern/script';\nimport { extension_settings } from '@sillytavern/scripts/extensions';\nimport { setValueByPath } from '@sillytavern/scripts/utils';\n\nexport const extensionName = 'JS-Slash-Runner';\n//TODO: 修改名称\nexport const extensionFolderPath = `third-party/${extensionName}`;\n\n// 获取头像原图\nexport const charsPath = '/characters/';\nexport const getUserAvatarPath = () => `./User Avatars/${user_avatar}`;\nexport const getCharAvatarPath = () => {\n  //@ts-ignore\n  const thumbnailPath = getThumbnailUrl('avatar', characters[this_chid].avatar);\n  const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n  return charsPath + targetAvatarImg;\n};\n\n/**\n * 获取扩展设置变量的值\n * @returns 设置变量的值\n */\nexport function getSettingValue(key: string) {\n  const keys = key.split('.');\n  //@ts-ignore\n  let value = extension_settings[extensionName];\n\n  for (const k of keys) {\n    if (value === undefined || value === null) {\n      return undefined;\n    }\n    value = value[k];\n  }\n\n  return value;\n}\n\n/**\n * 保存扩展设置变量的值\n * @param key 设置变量的键\n * @param value 设置变量的值\n */\nexport async function saveSettingValue(key: string, value: any) {\n  //@ts-ignore\n  setValueByPath(extension_settings[extensionName], key, value);\n  await saveSettingsDebounced();\n}\n","// Module\nvar code = `<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css\" integrity=\"sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"/> <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/themes/base/jquery-ui.min.css\" integrity=\"sha512-TFee0335YRJoyiqz8hA8KV3P0tXa5CpRBSoM0Wnkn7JoJx1kaq1yXL/rb8YFpWXkMOjRcv5txv+C6UluttluCQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"/> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js\" integrity=\"sha512-Qlv6VSKh1gDKGoJbnyA5RMXYcvnpIqhO++MhIM2fStMcGT9i2T//tSwYFlcyoRRDcDZ+TYHpH8azBBCyhpSeqw==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\" integrity=\"sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js\" integrity=\"sha512-MSOo1aY+3pXCOCdGAYoBZ6YGI0aragoQsg1mKKBHXCYPIWxamwOE7Drh+N5CPgGI5SA9IEKJiPjdfqWFWmZtRA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js\" integrity=\"sha512-WFN04846sdKMIP5LKNphMaWzU7YpMyCU245etK3g/2ARYbPK9Ub18eG+ljU96qKRCWh+quCY7yefSmlkQw1ANQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/yamljs/0.3.0/yaml.min.js\" integrity=\"sha512-f/K0Q5lZ1SrdNdjc2BO2I5kTx8E5Uw1EU3PhSUB9fYPohap5rPWEmQRCjtpDxNmQB4/+MMI/Cf+nvh1VSiwrTA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> `;\n// Exports\nexport default code;","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"POPUP_TYPE\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__.POPUP_TYPE), [\"callGenericPopup\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__.callGenericPopup) });","import { renderExtensionTemplateAsync } from '@sillytavern/scripts/extensions';\r\nimport { POPUP_TYPE, callGenericPopup } from '@sillytavern/scripts/popup';\r\nimport { extensionFolderPath } from './extension_variables';\r\n\r\n/**\r\n * 从 GitLab 仓库获取指定文件的原始内容 (支持项目 ID 或项目路径)\r\n * @param filePath 文件在仓库中的路径 (会被自动 URL 编码)\r\n * @returns 返回文件内容的 Promise<string>\r\n */\r\nasync function fetchRawFileContentFromGitLab(filePath: string): Promise<string> {\r\n  const encodedFilePath = encodeURIComponent(filePath);\r\n  const url = `https://${GITLAB_INSTANCE_URL}/api/v4/projects/${GITLAB_PROJECT_PATH}/repository/files/${encodedFilePath}/raw?ref=${GITLAB_BRANCH}`;\r\n\r\n  const headers: HeadersInit = {\r\n    'Cache-Control': 'no-cache',\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, { method: 'GET', headers: headers });\r\n    if (!response.ok) {\r\n      let errorBody = '';\r\n      try {\r\n        errorBody = await response.text();\r\n      } catch (e) {\r\n        /* ignore */\r\n      }\r\n      throw new Error(\r\n        `[TavernHelper] 无法获取 GitLab 文件: ${response.status} ${response.statusText}. URL: ${url}. Response: ${errorBody}`,\r\n      );\r\n    }\r\n    const content = await response.text();\r\n    return content.trim();\r\n  } catch (error) {\r\n    console.error('[TavernHelper] 获取 GitLab 文件内容时出错:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * 从 JSON 文件内容中解析 'version' 字段的值\r\n * @param content 文件内容字符串\r\n * @returns 解析出的版本号字符串 (例如 \"2.5.5\")\r\n * @throws 如果内容不是有效的 JSON，或者 'version' 字段不存在或不是字符串，则抛出错误\r\n */\r\nexport function parseVersionFromFile(content: string): string {\r\n  try {\r\n    const data = JSON.parse(content);\r\n\r\n    if (data && typeof data.version === 'string') {\r\n      return data.version;\r\n    } else {\r\n      throw new Error(\"[TavernHelper] 在 JSON 数据中未找到有效的 'version' 字段 (必须是字符串类型)\");\r\n    }\r\n  } catch (error) {\r\n    console.error('[TavernHelper] 解析版本文件内容时出错:', error);\r\n\r\n    if (error instanceof SyntaxError) {\r\n      throw new Error(`[TavernHelper] 无法将文件内容解析为 JSON: ${error.message}`);\r\n    }\r\n\r\n    throw new Error(\r\n      `[TavernHelper] 无法从文件内容中解析版本号: ${error instanceof Error ? error.message : String(error)}`,\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 比较两个语义化版本号 (Semantic Versioning - Major.Minor.Patch)\r\n * @param versionA 版本号字符串 A (例如 \"2.5.5\")\r\n * @param versionB 版本号字符串 B (例如 \"1.0.0\")\r\n * @returns\r\n * - 正数 (> 0): 如果 versionA > versionB (A 更新)\r\n * - 负数 (< 0): 如果 versionA < versionB (B 更新)\r\n * - 0:        如果 versionA == versionB (版本相同)\r\n * 注意: 这个基础比较器不处理预发布标签 (-beta) 或构建元数据 (+build)。\r\n * 它会将 \"2.5.5-beta\" 和 \"2.5.5\" 在此比较中视为相等。\r\n */\r\nfunction compareSemVer(versionA: string, versionB: string): number {\r\n  const cleanVersionA = versionA.split('-')[0].split('+')[0];\r\n  const cleanVersionB = versionB.split('-')[0].split('+')[0];\r\n\r\n  const partsA = cleanVersionA.split('.').map(Number);\r\n  const partsB = cleanVersionB.split('.').map(Number);\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    // 如果某个版本号部分缺失 (例如 \"1.2\" vs \"1.2.3\")，则视为 0\r\n    const numA = partsA[i] || 0;\r\n    const numB = partsB[i] || 0;\r\n\r\n    if (isNaN(numA) || isNaN(numB)) {\r\n      console.warn(`[TavernHelper] 版本号 \"${versionA}\" 或 \"${versionB}\" 包含非数字部分，可能导致比较不准确。`);\r\n      return 0;\r\n    }\r\n\r\n    if (numA > numB) {\r\n      return 1;\r\n    }\r\n    if (numA < numB) {\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nexport async function getFileContentByPath(filePath: string) {\r\n  try {\r\n    const response = await fetch(filePath);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const content = await response.text();\r\n    return content;\r\n  } catch (error) {\r\n    console.error(`读取文件 ${filePath} 失败:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nconst GITLAB_INSTANCE_URL = 'gitlab.com';\r\nconst GITLAB_PROJECT_PATH = 'novi028/JS-Slash-Runner';\r\nconst GITLAB_BRANCH = 'main';\r\nconst VERSION_FILE_PATH_GITLAB = 'manifest.json';\r\nconst CHANGELOG_FILE_PATH_GITLAB = '/doc/CHANGELOG.md';\r\nconst GITLAB_ACCESS_TOKEN = undefined;\r\nexport const VERSION_FILE_PATH = `/scripts/extensions/${extensionFolderPath}/manifest.json`;\r\nlet CURRENT_VERSION: string;\r\nlet LATEST_VERSION: string;\r\n\r\nexport async function runCheckWithPath() {\r\n  try {\r\n    CURRENT_VERSION = await getFileContentByPath(VERSION_FILE_PATH);\r\n\r\n    const content = await fetchRawFileContentFromGitLab(VERSION_FILE_PATH_GITLAB);\r\n\r\n    const latestVersion = parseVersionFromFile(content);\r\n    LATEST_VERSION = latestVersion;\r\n    console.info(`获取到的最新版本: ${latestVersion}`);\r\n    const currentVersion = parseVersionFromFile(CURRENT_VERSION);\r\n\r\n    const comparisonResult = compareSemVer(latestVersion, currentVersion);\r\n\r\n    if (comparisonResult > 0) {\r\n      console.info(`[JS-Slash-Runner] 需要更新！最新版本 ${latestVersion} > 当前版本 ${currentVersion}`);\r\n      return true;\r\n    } else if (comparisonResult === 0) {\r\n      console.info(`[JS-Slash-Runner] 当前版本 ${currentVersion} 已是最新。`);\r\n      return false;\r\n    } else {\r\n      console.warn(`[TavernHelper] 当前版本 ${currentVersion} 比远程版本 ${latestVersion} 还新？`);\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.error('[TavernHelper] 版本检查失败:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 添加版本更新提示元素\r\n */\r\nexport function addVersionUpdateElement() {\r\n  const container = $('#tavern-helper-extension-container .inline-drawer-header b');\r\n  container.append(`\r\n    <span style=\"color: red; font-size: 12px; font-weight: bold;\">\r\n      New!\r\n    </span>\r\n  `);\r\n}\r\n\r\nasync function handleVersionUpdate() {\r\n  const changelogContent = await fetchRawFileContentFromGitLab(CHANGELOG_FILE_PATH_GITLAB);\r\n  if (LATEST_VERSION === undefined) {\r\n    LATEST_VERSION = parseVersionFromFile(await fetchRawFileContentFromGitLab(VERSION_FILE_PATH_GITLAB));\r\n  }\r\n\r\n  if (CURRENT_VERSION === undefined) {\r\n    CURRENT_VERSION = parseVersionFromFile(await getFileContentByPath(VERSION_FILE_PATH));\r\n  }\r\n\r\n  const comparisonResult = compareSemVer(LATEST_VERSION, CURRENT_VERSION);\r\n\r\n  if (comparisonResult >= 0) {\r\n    const logs = parseChangelogBetweenVersions(changelogContent, CURRENT_VERSION, LATEST_VERSION);\r\n    console.info(`更新日志:\\n${logs}`);\r\n  } else {\r\n    console.warn(`[TavernHelper] 当前版本 ${CURRENT_VERSION} 比远程版本 ${LATEST_VERSION} 还新？`);\r\n  }\r\n}\r\n\r\n/**\r\n * 解析变更日志内容，提取两个版本之间的日志\r\n * @param changelogContent 变更日志的完整内容\r\n * @param currentVersion 当前版本号\r\n * @param latestVersion 最新版本号\r\n * @returns 两个版本之间的日志内容\r\n */\r\nfunction parseChangelogBetweenVersions(\r\n  changelogContent: string,\r\n  currentVersion: string,\r\n  latestVersion: string,\r\n): string {\r\n  const regex = new RegExp(`##\\\\s*(${currentVersion}|${latestVersion})`, 'g');\r\n  const matches = [...changelogContent.matchAll(regex)];\r\n\r\n  if (matches.length < 2) {\r\n    return '无法找到完整的版本日志。';\r\n  }\r\n\r\n  const startIndex = matches[0].index;\r\n  const endIndex = matches[1].index;\r\n  return changelogContent.substring(startIndex, endIndex).trim();\r\n}\r\n\r\n/**\r\n * 弹出changeLog的popup\r\n */\r\nfunction handleUpdateButton(logs: string) {\r\n  \r\n}\r\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"SlashCommand\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommand_js_7714abe5__.SlashCommand) });","import { getCharAvatarPath, getUserAvatarPath } from '@/util/extension_variables';\n\nimport { chat, chat_metadata, event_types, eventSource } from '@sillytavern/script';\nimport { extension_settings } from '@sillytavern/scripts/extensions';\nimport { MacroFunction, MacrosParser } from '@sillytavern/scripts/macros';\n\nconst predefinedMacros = new Map<string, string | MacroFunction>([\n  ['userAvatarPath', getUserAvatarPath],\n  ['charAvatarPath', getCharAvatarPath],\n]);\n\n/**\n * 注册一个宏\n * @param {string} key - 宏的名称\n * @param {MacroFunction|string} value - 字符串或返回字符串的函数\n */\nexport function registerMacro(key: string, value: string | MacroFunction) {\n  MacrosParser.registerMacro(key, value);\n  console.log(`[Macro] 宏 \"${key}\" 注册成功`);\n}\n\n/**\n * 注册所有预定义的宏\n */\nexport function registerAllMacros() {\n  for (const [key, value] of predefinedMacros.entries()) {\n    MacrosParser.registerMacro(key, value);\n    console.log(`[Macro] 宏 \"${key}\" 注册成功`);\n  }\n}\n\n/**\n * 注销指定的宏\n * @param {string} key - 要注销的宏名称\n */\nexport function unregisterMacro(key: string) {\n  MacrosParser.unregisterMacro(key);\n  console.log(`[Macro] 宏 \"${key}\" 注销成功`);\n}\n\n/**\n * 注销所有预定义的宏\n */\nexport function unregisterAllMacros() {\n  for (const key of predefinedMacros.keys()) {\n    MacrosParser.unregisterMacro(key);\n    console.log(`[Macro] 宏 \"${key}\" 注销成功`);\n  }\n}\n\nfunction get_property_from_path(object: Record<string, any>, path: string, default_value: any) {\n  let result: Record<string, any> | undefined = object;\n  for (const key of path.split('.')) {\n    if (result === undefined) {\n      return default_value;\n    }\n    result = result[key];\n  }\n  return result ?? default_value;\n}\n\nfunction demacro(event_data: Parameters<ListenerType['chat_completion_prompt_ready']>[0]) {\n  const map = {\n    get_global_variable: extension_settings.variables.global,\n    get_chat_variable: (chat_metadata as { variables: Object }).variables,\n    get_message_variable:\n      chat\n        .filter(message => message.variables?.[message.swipe_id ?? 0] !== undefined)\n        .map(message => message.variables[message.swipe_id ?? 0])\n        .at(-1) ?? {},\n  };\n  event_data.chat.forEach(messages => {\n    messages.content = messages.content.replaceAll(\n      /\\{\\{(get_global_variable|get_chat_variable|get_message_variable)::(.*?)\\}\\}/g,\n      (_substring, type: keyof typeof map, path: string) => {\n        return JSON.stringify(get_property_from_path(map[type], path, null));\n      },\n    );\n  });\n}\n\nexport function initializeMacroOnExtension() {\n  eventSource.on(event_types.CHAT_COMPLETION_PROMPT_READY, demacro);\n}\n\nexport function destroyMacroOnExtension() {\n  eventSource.removeListener(event_types.CHAT_COMPLETION_PROMPT_READY, demacro);\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"ARGUMENT_TYPE\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.ARGUMENT_TYPE), [\"SlashCommandArgument\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.SlashCommandArgument), [\"SlashCommandNamedArgument\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.SlashCommandNamedArgument) });","import { charsPath } from '@/util/extension_variables';\nimport { characters, getPastCharacterChats, getRequestHeaders, getThumbnailUrl, this_chid } from '@sillytavern/script';\n\ntype v1CharData = (typeof characters)[number];\n\n/**\n * 角色卡管理类\n * 用于封装角色卡数据操作和提供便捷的访问方法\n */\nexport class Character {\n  /**\n   * v1CharData类型的角色卡数据\n   * @see char-data.js 中的 v1CharData 类型定义\n   */\n  private charData: v1CharData;\n\n  constructor(characterData: v1CharData) {\n    this.charData = characterData;\n  }\n\n  /**\n   * 根据名称或头像id查找角色卡数据\n   * @param options 查找选项\n   * @returns 找到的角色卡数据，找不到为null\n   */\n  static find({ name, allowAvatar = true }: { name?: string; allowAvatar?: boolean } = {}): any {\n    if (name === undefined) {\n      // @ts-ignore\n      const currentChar = characters[this_chid];\n      if (currentChar) {\n        name = currentChar.avatar;\n        // 确保allowAvatar为true，以便可以通过avatar准确查找角色\n        allowAvatar = true;\n      }\n    }\n\n    const matches = (char: { avatar: string; name: string }) =>\n      !name || char.name === name || (allowAvatar && char.avatar === name);\n\n    const filteredCharacters = characters;\n\n    // 如果有确定的角色头像id提供，则返回该角色\n    if (allowAvatar && name) {\n      const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n      if (characterByAvatar) {\n        return characterByAvatar;\n      }\n    }\n\n    // 查找所有匹配的角色\n    const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n    if (matchingCharacters.length > 1) {\n      console.warn(`[Character] [findCharacter] 找到多个符合条件的角色，返回导入时间最早的角色: ${name}`);\n    }\n\n    if (matchingCharacters.length === 0) {\n      throw new Error(`[Character] [findCharacter] 提供的名称或头像ID为: ${name}，未找到符合条件的角色`);\n    }\n\n    return matchingCharacters[0];\n  }\n\n  /**\n   * 根据名称查找角色卡数据在characters数组中的索引（类似this_chid）\n   * @param name 角色名称\n   * @returns 角色卡数据在characters数组中的索引，未找到返回-1\n   */\n\n  static findCharacterIndex(name: string) {\n    const matchTypes = [\n      (a: string, b: string) => a === b,\n      (a: string, b: string) => a.startsWith(b),\n      (a: string, b: string) => a.includes(b),\n    ];\n\n    const exactAvatarMatch = characters.findIndex(x => x.avatar === name);\n\n    if (exactAvatarMatch !== -1) {\n      return exactAvatarMatch;\n    }\n\n    for (const matchType of matchTypes) {\n      const index = characters.findIndex(x => matchType(x.name.toLowerCase(), name.toLowerCase()));\n      if (index !== -1) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * 从服务器获取每个聊天文件的聊天内容，并将其编译成字典。\n   * 该函数遍历提供的聊天元数据列表，并请求每个聊天的实际聊天内容，\n   *\n   * @param {Array} data - 包含每个聊天的元数据的数组，例如文件名。\n   * @param {boolean} isGroupChat - 一个标志，指示聊天是否为群组聊天。\n   * @returns {Promise<Object>} chat_dict - 一个字典，其中每个键是文件名，值是\n   * 从服务器获取的相应聊天内容。\n   */\n  static async getChatsFromFiles(data: any[], isGroupChat: boolean) {\n    const chat_dict: Record<string, any> = {};\n    const chat_list = Object.values(data)\n      .sort((a, b) => a['file_name'].localeCompare(b['file_name']))\n      .reverse();\n\n    const chat_promise = chat_list.map(({ file_name }) => {\n      // eslint-disable-next-line no-async-promise-executor\n      return new Promise<void>(async (res, _rej) => {\n        try {\n          // 从文件名中提取角色名称（破折号前的部分）\n          const ch_name = isGroupChat ? '' : file_name.split(' - ')[0];\n\n          // 使用Character.find方法查找角色，获取头像\n          let characterData = null;\n          let avatar_url = '';\n\n          if (!isGroupChat && ch_name) {\n            characterData = Character.find({ name: ch_name });\n            if (characterData) {\n              avatar_url = characterData.avatar;\n            }\n          }\n\n          const endpoint = isGroupChat ? '/api/chats/group/get' : '/api/chats/get';\n          const requestBody = isGroupChat\n            ? JSON.stringify({ id: file_name })\n            : JSON.stringify({\n                ch_name: ch_name,\n                file_name: file_name.replace('.jsonl', ''),\n                avatar_url: avatar_url,\n              });\n\n          const chatResponse = await fetch(endpoint, {\n            method: 'POST',\n            headers: getRequestHeaders(),\n            body: requestBody,\n            cache: 'no-cache',\n          });\n\n          if (!chatResponse.ok) {\n            return res();\n          }\n\n          const currentChat = await chatResponse.json();\n          if (!isGroupChat) {\n            // remove the first message, which is metadata, only for individual chats\n            currentChat.shift();\n          }\n          chat_dict[file_name] = currentChat;\n        } catch (error) {\n          console.error(error);\n        }\n\n        return res();\n      });\n    });\n\n    await Promise.all(chat_promise);\n\n    return chat_dict;\n  }\n\n  /**\n   * 获取角色管理内的数据\n   * @returns 完整的角色管理内的数据对象\n   */\n  getCardData(): v1CharData {\n    return this.charData;\n  }\n\n  /**\n   * 获取角色头像ID\n   * @returns 头像ID/文件名\n   */\n  getAvatarId(): string {\n    return this.charData.avatar || '';\n  }\n\n  /**\n   * 获取正则脚本\n   * @returns 正则脚本数组\n   */\n  getRegexScripts(): Array<{\n    id: string;\n    scriptName: string;\n    findRegex: string;\n    replaceString: string;\n    trimStrings: string[];\n    placement: number[];\n    disabled: boolean;\n    markdownOnly: boolean;\n    promptOnly: boolean;\n    runOnEdit: boolean;\n    substituteRegex: number | boolean;\n    minDepth: number;\n    maxDepth: number;\n  }> {\n    return this.charData.data?.extensions?.regex_scripts || [];\n  }\n\n  /**\n   * 获取角色书\n   * @returns 角色书数据对象或null\n   */\n  getCharacterBook(): {\n    name: string;\n    entries: Array<{\n      keys: string[];\n      secondary_keys?: string[];\n      comment: string;\n      content: string;\n      constant: boolean;\n      selective: boolean;\n      insertion_order: number;\n      enabled: boolean;\n      position: string;\n      extensions: any;\n      id: number;\n    }>;\n  } | null {\n    return this.charData.data?.character_book || null;\n  }\n\n  /**\n   * 获取角色世界名称\n   * @returns 世界名称\n   */\n  getWorldName(): string {\n    return this.charData.data?.extensions?.world || '';\n  }\n}\n\n/**\n * 获取角色卡数据\n * @param name 角色名称或头像ID\n * @param allowAvatar 是否允许通过头像ID查找\n * @returns 角色卡数据\n */\nexport function getCharData(name?: string, allowAvatar: boolean = true): v1CharData | null {\n  try {\n    const characterData = Character.find({ name, allowAvatar });\n    if (!characterData) return null;\n\n    const character = new Character(characterData);\n    console.info(`获取角色卡数据成功, 角色: ${name || '未知'}`);\n    return character.getCardData();\n  } catch (error) {\n    console.error(`获取角色卡数据失败, 角色: ${name || '未知'}`, error);\n    return null;\n  }\n}\n\n/**\n * 获取角色头像路径\n * @param name 角色名称或头像ID\n * @param allowAvatar 是否允许通过头像ID查找\n * @returns 角色头像路径\n */\nexport function getCharAvatarPath(name?: string, allowAvatar: boolean = true): string | null {\n  try {\n    const characterData = Character.find({ name, allowAvatar });\n    if (!characterData) return null;\n\n    const character = new Character(characterData);\n    const avatarId = character.getAvatarId();\n\n    // 使用getThumbnailUrl获取缩略图URL，然后提取实际文件名\n    const thumbnailPath = getThumbnailUrl('avatar', avatarId);\n    const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n\n    // 假设charsPath在其他地方定义\n    console.info(`获取角色头像路径成功, 角色: ${name || '未知'}`);\n    return charsPath + targetAvatarImg;\n  } catch (error) {\n    console.error(`获取角色头像路径失败, 角色: ${name || '未知'}`, error);\n    return null;\n  }\n}\n\n/**\n * 获取角色聊天历史摘要\n * @param name 角色名称或头像ID\n * @param allowAvatar 是否允许通过头像ID查找\n * @returns 聊天历史摘要数组\n */\nexport async function getChatHistoryBrief(name?: string, allowAvatar: boolean = true): Promise<any[] | null> {\n  try {\n    const characterData = Character.find({ name, allowAvatar });\n    if (!characterData) return null;\n\n    const character = new Character(characterData);\n    const index = Character.findCharacterIndex(character.getAvatarId());\n\n    if (index === -1) return null;\n\n    const chats = await getPastCharacterChats(index);\n    console.info(`获取角色聊天历史摘要成功, 角色: ${name || '未知'}`);\n    return chats;\n  } catch (error) {\n    console.error(`获取角色聊天历史摘要失败, 角色: ${name || '未知'}`, error);\n    return null;\n  }\n}\n\n/**\n * 获取聊天历史详情\n * @param data 聊天数据数组\n * @param isGroupChat 是否为群组聊天\n * @returns 聊天历史详情\n */\nexport async function getChatHistoryDetail(\n  data: any[],\n  isGroupChat: boolean = false,\n): Promise<Record<string, any> | null> {\n  try {\n    const result = await Character.getChatsFromFiles(data, isGroupChat);\n    console.info(`获取聊天文件详情成功`);\n    return result;\n  } catch (error) {\n    console.error(`获取聊天文件详情失败`, error);\n    return null;\n  }\n}\n","import { handlePartialRender } from '@/component/message_iframe';\n\nimport {\n  chat,\n  messageFormatting,\n  reloadCurrentChat,\n  saveChatConditional,\n  substituteParamsExtended,\n  system_message_types,\n} from '@sillytavern/script';\nimport { stringToRange } from '@sillytavern/scripts/utils';\n\ninterface GetChatMessagesOption {\n  role?: 'all' | 'system' | 'assistant' | 'user'; // 按 role 筛选消息; 默认为 `'all'`\n  hide_state?: 'all' | 'hidden' | 'unhidden'; // 按是否被隐藏筛选消息; 默认为 `'all'`\n}\n\n/**\n * 获取聊天消息\n *\n * @param range 要获取的消息楼层号或楼层范围, 与 `/messages` 相同\n * @param option 可选选项\n *   - `role:'all'|'system'|'assistant'|'user'`: 按 role 筛选消息; 默认为 `'all'`\n *   - `hide_state:'all'|'hidden'|'unhidden'`: 按是否被隐藏筛选消息; 默认为 `'all'`\n *\n * @returns 一个数组, 数组的元素是每楼的消息 `ChatMessage`. 该数组依据按 message_id 从低到高排序.\n */\nexport async function getChatMessages(\n  range: string | number,\n  option: GetChatMessagesOption = {},\n): Promise<ChatMessage[]> {\n  const range_demacroed = substituteParamsExtended(range.toString());\n  const rangeNumber = stringToRange(range_demacroed, 0, chat.length - 1);\n  if (!rangeNumber) {\n    throw Error(`提供的消息范围 range 无效: ${range}`);\n  }\n  if (!['all', 'system', 'assistant', 'user'].includes(option.role ?? 'all')) {\n    throw Error(`提供的 role 无效, 请提供 'all', 'system', 'assistant' 或 'user', 你提供的是: ${option.role}`);\n  }\n  if (!['all', 'hidden', 'unhidden'].includes(option.hide_state ?? 'all')) {\n    throw Error(`提供的 hide_state 无效, 请提供 'all', 'hidden' 或 'unhidden', 你提供的是: ${option.hide_state}`);\n  }\n\n  const { start, end } = rangeNumber;\n\n  const getRole = (chat_message: any) => {\n    const is_narrator = chat_message.extra?.type === system_message_types.NARRATOR;\n    if (is_narrator) {\n      if (chat_message.is_user) {\n        return 'unknown';\n      }\n      return 'system';\n    }\n    if (chat_message.is_user) {\n      return 'user';\n    }\n    return 'assistant';\n  };\n\n  const process_message = async (message_id: number): Promise<ChatMessage | null> => {\n    const message = chat[message_id];\n    if (!message) {\n      console.warn(`没找到第 ${message_id} 楼的消息`);\n      return null;\n    }\n\n    const role = getRole(message);\n    if (option.role !== 'all' && role !== option.role) {\n      console.debug(`筛去了第 ${message_id} 楼的消息因为它的身份不是 ${option.role}`);\n      return null;\n    }\n\n    if (option.hide_state !== 'all' && (option.hide_state === 'hidden') !== message.is_system) {\n      console.debug(\n        `筛去了第 ${message_id} 楼的消息因为它${\n          option.hide_state === 'hidden' ? `` : `没`\n        } 被隐藏`,\n      );\n      return null;\n    }\n\n    const swipe_id = message?.swipe_id ?? 0;\n    const swipes = message?.swipes ?? [message.mes];\n    const swipes_data = message?.variables ?? [];\n    const data = swipes_data[swipe_id] ?? {};\n\n    return {\n      message_id: message_id,\n      name: message.name,\n      role: role as 'system' | 'assistant' | 'user',\n      is_hidden: message.is_system,\n      message: message.mes,\n      data: data,\n\n      swipe_id: swipe_id,\n      swipes: swipes,\n      swipes_data: swipes_data,\n\n      is_user: message.is_user,\n      is_system_or_hidden: message.is_system,\n    };\n  };\n\n  const promises: Promise<ChatMessage | null>[] = [];\n  for (let i: number = start; i <= end; ++i) {\n    promises.push(process_message(i));\n  }\n\n  const chat_messages: ChatMessage[] = (await Promise.all(promises)).filter(chat_message => chat_message !== null);\n\n  console.info(\n    `获取${start == end ? `第 ${start} ` : ` ${start}-${end} `}楼的消息, 选项: ${JSON.stringify(\n      option,\n    )} `,\n  );\n  return chat_messages;\n}\n\n/**\n * 设置某消息楼层某聊天消息页的信息. 如果设置了当前会被发送给 ai 的消息文本 (正被使用且没被隐藏的消息页文本), 则 \"仅格式提示词\" 正则将会使用它而不是原来的消息.\n *\n * @param field_values 要设置的信息\n *   - message?: 消息页要设置的消息文本\n *   - data?: 消息页要绑定的数据\n * @param message_id 消息楼层id\n * @param option 可选选项:\n *   - `swipe_id?:'current'|number`: 要替换的消息页 (`'current'` 来替换当前使用的消息页, 或从 0 开始的序号来替换对应消息页), 如果消息中还没有该消息页, 则会创建该页; 默认为 `'current'`\n *   - `refresh?:'none'|'display_current'|'display_and_render_current'|'all'`: 是否更新页面的显示和 iframe 渲染, 只会更新已经被加载显示在网页的楼层, 更新显示时会触发被更新楼层的 \"仅格式显示\" 正则; 默认为 `'display_and_render_current'`\n */\nexport async function setChatMessage(\n  field_values: ChatMessageToSet,\n  message_id: number,\n  option?: SetChatMessageOption,\n): Promise<void> {\n  field_values = typeof field_values === 'string' ? { message: field_values } : field_values;\n  const required_option: Required<SetChatMessageOption> = {\n    swipe_id: option?.swipe_id ?? 'current',\n    refresh: option?.refresh ?? 'display_and_render_current',\n  };\n      if (typeof required_option.swipe_id !== 'number' && required_option.swipe_id !== 'current') {\n        throw Error(`提供的 swipe_id 无效, 请提供 'current' 或序号, 你提供的是: ${required_option.swipe_id} `);\n      }\n      if (!['none', 'display_current', 'display_and_render_current', 'all'].includes(required_option.refresh)) {\n        throw Error(\n          `提供的 refresh 无效, 请提供 'none', 'display_current', 'display_and_render_current' 或 'all', 你提供的是: ${required_option.refresh} `,\n        );\n      }\n\n      const chat_message = chat[message_id];\n  if (!chat_message) {\n    console.warn(`未找到第 ${message_id} 楼的消息`);\n    return;\n  }\n\n  const add_swipes_if_required = (): boolean => {\n    if (required_option.swipe_id === 'current') {\n      return false;\n    }\n\n    // swipe_id 对应的消息页存在\n    if (required_option.swipe_id == 0 || (chat_message.swipes && required_option.swipe_id < chat_message.swipes.length)) {\n      return true;\n    }\n\n        if (!chat_message.swipes) {\n          chat_message.swipe_id = 0;\n          chat_message.swipes = [chat_message.mes];\n          chat_message.swipe_info = [{}];\n        }\n        for (let i = chat_message.swipes.length; i <= required_option.swipe_id; ++i) {\n          chat_message.swipes.push('');\n          chat_message.swipe_info.push({});\n        }\n        return true;\n      };\n\n      const swipe_id_previous_index: number = chat_message.swipe_id ?? 0;\n      const swipe_id_to_set_index: number = required_option.swipe_id == 'current' ? swipe_id_previous_index : required_option.swipe_id;\n      const swipe_id_to_use_index: number = required_option.refresh != 'none' ? swipe_id_to_set_index : swipe_id_previous_index;\n      const message: string =\n        field_values.message ??\n        (chat_message.swipes ? chat_message.swipes[swipe_id_to_set_index] : undefined) ??\n        chat_message.mes;\n\n      const update_chat_message = () => {\n        const message_demacroed = substituteParamsExtended(message);\n\n        if (field_values.data) {\n          if (!chat_message.variables) {\n            chat_message.variables = [];\n          }\n          chat_message.variables[swipe_id_to_set_index] = field_values.data;\n        }\n\n        if (chat_message.swipes) {\n          chat_message.swipes[swipe_id_to_set_index] = message_demacroed;\n          chat_message.swipe_id = swipe_id_to_use_index;\n        }\n\n        if (swipe_id_to_use_index === swipe_id_to_set_index) {\n          chat_message.mes = message_demacroed;\n        }\n      };\n\n      const update_partial_html = (should_update_swipe: boolean) => {\n        // @ts-ignore\n        const mes_html = $(`div.mes[mesid = \"${message_id}\"]`);\n        if (!mes_html) {\n          return;\n        }\n\n        if (should_update_swipe) {\n          // FIXME: 只有一条消息时, swipes-counter 不会正常显示; 此外还要考虑 swipes-counter 的 \"Swipe # for All Messages\" 选项\n          mes_html\n            .find('.swipes-counter')\n            .text(`${swipe_id_to_use_index + 1}\\u200b/\\u200b${chat_message.swipes.length}`);\n        }\n        if (required_option.refresh != 'none') {\n          mes_html\n            .find('.mes_text')\n            .empty()\n            .append(\n              messageFormatting(message, chat_message.name, chat_message.is_system, chat_message.is_user, message_id),\n            );\n          if (required_option.refresh == 'display_and_render_current') {\n            handlePartialRender(message_id);\n          }\n        }\n      };\n\n      const should_update_swipe: boolean = add_swipes_if_required();\n      update_chat_message();\n      if (required_option.refresh == 'all') {\n        await reloadCurrentChat();\n      } else {\n        update_partial_html(should_update_swipe);\n        // QUESTION: saveChatDebounced 还是 await saveChatConditional?\n        await saveChatConditional();\n      }\n\n      console.info(\n        `设置第 ${message_id} 楼消息, 选项: ${JSON.stringify(\n          required_option,\n        )}, 设置前使用的消息页: ${swipe_id_previous_index}, 设置的消息页: ${swipe_id_to_set_index}, 现在使用的消息页: ${swipe_id_to_use_index} `,\n      );\n}\n","import { chat, messageFormatting } from '@sillytavern/script';\nimport { getLastMessageId } from '@sillytavern/scripts/macros';\n\n\n/**\n * 将字符串处理为酒馆用于显示的 html 格式. 将会,\n * 1. 替换字符串中的酒馆宏\n * 2. 对字符串应用对应的酒馆正则\n * 3. 将字符串调整为 html 格式\n *\n * @param text 要处理的字符串\n * @param option 可选选项\n *   - `message_id?:number`: 消息所在的楼层, 要求该楼层已经存在, 即在 `[0, await getLastMessageId()]` 范围内; 默认为最新楼层\n *\n * @returns 处理结果\n */\nexport function formatAsDisplayedMessage(text: string, option: FormatAsDisplayedMessageOption = {}): string {\n  option.message_id = option.message_id ?? 'last';\n  if (typeof option.message_id !== 'number' && !['last', 'last_user', 'last_char'].includes(option.message_id)) {\n    throw Error(\n      `提供的 message_id 无效, 请提供 'last', 'last_user', 'last_char' 或楼层消息号, 你提供的是: ${option.message_id}`,\n    );\n  }\n  const last_message_id = getLastMessageId();\n  if (last_message_id === null) {\n    throw Error(`未找到任何消息楼层, 你提供的是: ${option.message_id}`);\n  }\n  switch (option.message_id) {\n    case 'last':\n      option.message_id = last_message_id;\n      break;\n    case 'last_user': {\n      const last_user_message_id = getLastMessageId({ filter: (m: any) => m.is_user && !m.is_system }) as number;\n      if (last_user_message_id === null) {\n        throw Error(`未找到任何 user 消息楼层, 你提供的是: ${option.message_id}`);\n      }\n      option.message_id = last_user_message_id;\n      break;\n    }\n    case 'last_char': {\n      const last_char_message_id = getLastMessageId({ filter: (m: any) => !m.is_user && !m.is_system }) as number;\n      if (last_char_message_id === null) {\n        throw Error(`未找到任何 char 消息楼层, 你提供的是: ${option.message_id}`);\n      }\n      option.message_id = last_char_message_id;\n      break;\n    }\n  }\n  if (option.message_id < 0 || option.message_id > last_message_id) {\n    throw Error(`提供的 message_id 不在 [0, ${last_message_id}] 内, 你提供的是: ${option.message_id} `);\n  }\n\n  const chat_message = chat[option.message_id];\n  const result = messageFormatting(\n    text,\n    chat_message.name,\n    chat_message.is_system,\n    chat_message.is_user,\n    option.message_id,\n  );\n\n  console.info(\n    `将字符串处理为酒馆用于显示的 html 格式, 字符串: '${text}', 选项: '${JSON.stringify(option)}', 结果: '${result}'`,\n  );\n  return result;\n}\n","import { getRequestHeaders } from '@sillytavern/script';\nimport { t } from '@sillytavern/scripts/i18n';\n\nimport { extensionName } from '@/util/extension_variables';\n\n\n/**\n * 更新前端助手\n */\nexport async function updateFrontendVersion() {\n  const response = await fetch('/api/extensions/update', {\n    method: 'POST',\n    headers: getRequestHeaders(),\n    body: JSON.stringify({ extensionName: extensionName }),\n  });\n  if (!response.ok) {\n    const text = await response.text();\n    // @ts-ignore\n    toastr.error(text || response.statusText, t`更新前端助手失败`, { timeOut: 5000 });\n    console.error(`更新前端助手失败: ${text}`);\n    return false;\n  }\n\n  const data = await response.json();\n  if (data.isUpToDate) {\n    console.info(`前端助手已是最新版本, 无需更新`);\n  } else {\n    // @ts-ignore\n    toastr.success(t`成功更新前端助手为 ${data.shortCommitHash}`, t`请刷新页面`);\n    console.info(`成功更新前端助手为  ${data.shortCommitHash}, 请刷新页面`);\n  }\n  return true;\n}\n","import {\n  MAX_INJECTION_DEPTH,\n  activateSendButtons,\n  baseChatReplace,\n  characters,\n  chat,\n  chat_metadata,\n  cleanUpMessage,\n  countOccurrences,\n  deactivateSendButtons,\n  eventSource,\n  extension_prompt_roles,\n  extension_prompt_types,\n  getBiasStrings,\n  getCharacterCardFields,\n  getExtensionPromptRoleByName,\n  getMaxContextSize,\n  isOdd,\n  name1,\n  name2,\n  saveChatConditional,\n  saveSettingsDebounced,\n  setExtensionPrompt,\n  setGenerationProgress,\n  showSwipeButtons,\n  stopGeneration,\n  substituteParams,\n  this_chid,\n} from '@sillytavern/script';\nimport { NOTE_MODULE_NAME, metadata_keys, shouldWIAddPrompt } from '@sillytavern/scripts/authors-note';\nimport { extension_settings, getContext } from '@sillytavern/scripts/extensions';\nimport { getRegexedString, regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\nimport {\n  ChatCompletion,\n  Message,\n  MessageCollection,\n  isImageInliningSupported,\n  oai_settings,\n  prepareOpenAIMessages,\n  sendOpenAIRequest,\n  setOpenAIMessageExamples,\n  setOpenAIMessages,\n  setupChatCompletionPromptManager,\n} from '@sillytavern/scripts/openai';\nimport {\n  flushEphemeralStoppingStrings,\n  persona_description_positions,\n  power_user,\n} from '@sillytavern/scripts/power-user';\nimport { Prompt, PromptCollection } from '@sillytavern/scripts/PromptManager';\nimport { Stopwatch, getBase64Async } from '@sillytavern/scripts/utils';\nimport { getWorldInfoPrompt, wi_anchor_position, world_info_include_names } from '@sillytavern/scripts/world-info';\n\n// 在文件顶部添加 abortController 声明\nlet abortController = new AbortController();\n\nfunction fromOverrides(overrides: Overrides): detail.OverrideConfig {\n  return {\n    world_info_before: overrides.world_info_before,\n    persona_description: overrides.persona_description,\n    char_description: overrides.char_description,\n    char_personality: overrides.char_personality,\n    scenario: overrides.scenario,\n    world_info_after: overrides.world_info_after,\n    dialogue_examples: overrides.dialogue_examples,\n\n    with_depth_entries: overrides.chat_history?.with_depth_entries,\n    author_note: overrides.chat_history?.author_note,\n    chat_history: overrides.chat_history?.prompts,\n  };\n}\n\nfunction fromInjectionPrompt(inject: InjectionPrompt): detail.InjectionPrompt {\n  const position_map = {\n    before_prompt: 'BEFORE_PROMPT',\n    in_chat: 'IN_CHAT',\n    after_prompt: 'IN_PROMPT',\n    none: 'NONE',\n  } as const;\n  return {\n    role: inject.role,\n    content: inject.content,\n    position: position_map[inject.position],\n    depth: inject.depth,\n    scan: inject.should_scan,\n  };\n}\n\nfunction fromGenerateConfig(config: GenerateConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: true,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    overrides: config.overrides !== undefined ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects !== undefined ? config.injects.map(fromInjectionPrompt) : undefined,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n  };\n}\n\nfunction fromGenerateRawConfig(config: GenerateRawConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: false,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n    overrides: config.overrides ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects ? config.injects.map(fromInjectionPrompt) : undefined,\n    order: config.ordered_prompts,\n  };\n}\n\nnamespace detail {\n  export interface RolePrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n    image?: File | string;\n  }\n\n  export interface InjectionPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n    position?: 'IN_PROMPT' | 'IN_CHAT' | 'BEFORE_PROMPT' | 'NONE';\n    depth?: number;\n    scan?: boolean;\n  }\n\n  export interface CustomPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n  }\n\n  // 覆盖配置类型\n  export interface OverrideConfig {\n    world_info_before?: string; // 世界书（角色定义之前的部分）\n    persona_description?: string; // 用户描述\n    char_description?: string; // 角色描述\n    char_personality?: string; // 角色高级定义-性格\n    scenario?: string; // 场景\n    world_info_after?: string; // 世界书（角色定义之后的部分）\n    dialogue_examples?: string; // 角色高级定义-对话示例\n\n    with_depth_entries?: boolean; // 世界书深度\n    author_note?: string; // 作者注释\n    chat_history?: RolePrompt[]; // 聊天历史\n  }\n\n  // 内置提示词条目类型\n  export type BuiltinPromptEntry =\n    | 'world_info_before' // 世界书(角色定义前)\n    | 'persona_description' // 用户描述\n    | 'char_description' // 角色描述\n    | 'char_personality' // 角色性格\n    | 'scenario' // 场景\n    | 'world_info_after' // 世界书(角色定义后)\n    | 'dialogue_examples' // 对话示例\n    | 'chat_history' // 聊天历史\n    | 'user_input'; // 用户输入\n\n  // 生成参数类型\n  export interface GenerateParams {\n    user_input?: string;\n    use_preset?: boolean;\n    image?: File | string;\n    stream?: boolean;\n    overrides?: OverrideConfig;\n    max_chat_history?: number;\n    inject?: InjectionPrompt[];\n    order?: Array<BuiltinPromptEntry | CustomPrompt>;\n  }\n}\n\nconst type = 'quiet';\nconst dryRun = false;\n\nconst character_names_behavior = {\n  NONE: -1,\n  DEFAULT: 0,\n  COMPLETION: 1,\n  CONTENT: 2,\n};\n\nconst roleTypes: Record<\n  'system' | 'user' | 'assistant',\n  (typeof extension_prompt_roles)[keyof typeof extension_prompt_roles]\n> = {\n  system: extension_prompt_roles.SYSTEM,\n  user: extension_prompt_roles.USER,\n  assistant: extension_prompt_roles.ASSISTANT,\n};\nconst default_order: detail.BuiltinPromptEntry[] = [\n  'world_info_before',\n  'persona_description',\n  'char_description',\n  'char_personality',\n  'scenario',\n  'world_info_after',\n  'dialogue_examples',\n  'chat_history',\n  'user_input',\n];\n\nclass StreamingProcessor {\n  public generator: () => AsyncGenerator<{ text: string }, void, void>;\n  public stoppingStrings?: any;\n  public result: string;\n  public isStopped: boolean;\n  public isFinished: boolean;\n  public abortController: AbortController;\n  private messageBuffer: string;\n\n  constructor() {\n    this.result = '';\n    this.messageBuffer = '';\n    this.isStopped = false;\n    this.isFinished = false;\n    this.generator = this.nullStreamingGeneration;\n    this.abortController = new AbortController();\n  }\n\n  onProgressStreaming(text: string, isFinal: boolean) {\n    // 计算增量文本\n    const newText = text.slice(this.messageBuffer.length);\n    this.messageBuffer = text;\n\n    let processedText = cleanUpMessage(newText, false, false, !isFinal, this.stoppingStrings);\n\n    const charsToBalance = ['*', '\"', '```'];\n    for (const char of charsToBalance) {\n      if (!isFinal && isOdd(countOccurrences(processedText, char))) {\n        const separator = char.length > 1 ? '\\n' : '';\n        processedText = processedText.trimEnd() + separator + char;\n      }\n    }\n\n    eventSource.emit('js_stream_token_received_fully', text);\n    eventSource.emit('js_stream_token_received_incrementally', processedText);\n\n    if (isFinal) {\n      const fullText = cleanUpMessage(text, false, false, false, this.stoppingStrings);\n      eventSource.emit('js_generation_ended', fullText);\n    }\n  }\n\n  onErrorStreaming() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n    this.isStopped = true;\n    unblockGeneration();\n    saveChatConditional();\n  }\n\n  async *nullStreamingGeneration(): AsyncGenerator<{ text: string }, void, void> {\n    throw Error('Generation function for streaming is not hooked up');\n  }\n\n  async generate() {\n    try {\n      const sw = new Stopwatch(1000 / power_user.streaming_fps);\n      const timestamps = [];\n\n      for await (const { text } of this.generator()) {\n        timestamps.push(Date.now());\n        if (this.isStopped) {\n          this.messageBuffer = '';\n          return;\n        }\n\n        this.result = text;\n        await sw.tick(() => this.onProgressStreaming(text, false));\n      }\n\n      if (!this.isStopped) {\n        this.onProgressStreaming(this.result, true);\n      } else {\n        this.messageBuffer = '';\n      }\n\n      const seconds = (timestamps[timestamps.length - 1] - timestamps[0]) / 1000;\n      console.warn(\n        `Stream stats: ${timestamps.length} tokens, ${seconds.toFixed(2)} seconds, rate: ${Number(\n          timestamps.length / seconds,\n        ).toFixed(2)} TPS`,\n      );\n    } catch (err) {\n      if (!this.isFinished) {\n        this.onErrorStreaming();\n        throw Error(`Generate method error: ${err}`);\n      }\n      this.messageBuffer = '';\n      return this.result;\n    }\n\n    this.isFinished = true;\n    return this.result;\n  }\n}\n\nasync function iframeGenerate({\n  user_input = '',\n  use_preset = true,\n  image = undefined,\n  overrides = undefined,\n  max_chat_history = undefined,\n  inject = [],\n  order = undefined,\n  stream = false,\n}: detail.GenerateParams = {}): Promise<string> {\n  //初始化\n  abortController = new AbortController();\n\n  // 1. 处理用户输入（正则，宏）\n  const processedUserInput = processUserInput(substituteParams(user_input), oai_settings) || '';\n\n  // 2. 准备过滤后的基础数据\n  const baseData = await prepareAndOverrideData(\n    {\n      overrides,\n      max_chat_history,\n      inject,\n      order,\n    },\n    processedUserInput,\n  );\n\n  // 3. 根据 use_preset 分流处理\n  const generate_data = use_preset\n    ? await handlePresetPath(baseData, processedUserInput, {\n        image,\n        overrides,\n        max_chat_history,\n        inject,\n        order,\n      })\n    : await handleCustomPath(\n        baseData,\n        {\n          image,\n          overrides,\n          max_chat_history,\n          inject,\n          order,\n        },\n        processedUserInput,\n      );\n  console.log('[Generate:发送提示词]', generate_data);\n  // 4. 根据 stream 参数决定生成方式\n  return await generateResponse(generate_data, stream);\n}\n\nasync function prepareAndOverrideData(\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const getOverrideContent = (identifier: string): string | detail.RolePrompt[] | undefined => {\n    if (!config.overrides) return undefined;\n    const value = config.overrides[identifier as keyof detail.OverrideConfig];\n    if (typeof value === 'boolean') return undefined;\n    return value;\n  };\n\n  // 1. 处理角色卡高级定义角色备注 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config)) {\n    handleCharDepthPrompt();\n  }\n\n  // 2. 设置作者注释 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('author_note', config)) {\n    setAuthorNotePrompt(config);\n  }\n\n  // 3. 处理user角色描述 - 仅在chat_history和persona_description都未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('persona_description', config)) {\n    setPersonaDescriptionExtensionPrompt();\n  }\n\n  // 4. 获取角色卡基础字段\n  const {\n    description: rawDescription,\n    personality: rawPersonality,\n    persona: rawPersona,\n    scenario: rawScenario,\n    mesExamples: rawMesExamples,\n    system,\n    jailbreak,\n  } = getCharacterCardFields();\n\n  // 判断是否被过滤,如果被过滤返回空字符串,否则返回override的值或原始值\n  const description = isPromptFiltered('char_description', config)\n    ? ''\n    : getOverrideContent('char_description') ?? rawDescription;\n\n  const personality = isPromptFiltered('char_personality', config)\n    ? ''\n    : getOverrideContent('char_personality') ?? rawPersonality;\n\n  const persona = isPromptFiltered('persona_description', config)\n    ? ''\n    : getOverrideContent('persona_description') ?? rawPersona;\n\n  const scenario = isPromptFiltered('scenario', config) ? '' : getOverrideContent('scenario') ?? rawScenario;\n\n  const mesExamples = isPromptFiltered('dialogue_examples', config)\n    ? ''\n    : (getOverrideContent('dialogue_examples') as string) ?? rawMesExamples;\n\n  let mesExamplesArray = parseMesExamples(mesExamples);\n  let oaiMessageExamples = [];\n  oaiMessageExamples = setOpenAIMessageExamples(mesExamplesArray);\n\n  // 5. 获取偏置字符串\n  const { promptBias } = getBiasStrings(processedUserInput, type);\n\n  // 6. 处理自定义注入的提示词\n  if (config.inject) {\n    await handleInjectedPrompts(config);\n  }\n\n  // 7. 处理聊天记录\n  let oaiMessages = [];\n  if (config.overrides?.chat_history) {\n    oaiMessages = [...config.overrides.chat_history].reverse();\n  } else {\n    oaiMessages = setOpenAIMessages(await processChatHistory(chat));\n    if (config.max_chat_history !== undefined) {\n      oaiMessages = oaiMessages.slice(0, config.max_chat_history);\n    }\n  }\n\n  // 添加临时消息用于激活世界书\n  addTemporaryUserMessage(processedUserInput);\n  // 8. 处理世界信息\n  const worldInfo = await processWorldInfo(oaiMessages as detail.RolePrompt[], config);\n\n  // 移除临时消息\n  removeTemporaryUserMessage();\n\n  // 9. 处理世界书消息示例\n  mesExamplesArray = !isPromptFiltered('dialogue_examples', config)\n    ? await processMessageExamples(mesExamplesArray, worldInfo.worldInfoExamples)\n    : [];\n\n  return {\n    characterInfo: {\n      description,\n      personality,\n      persona,\n      scenario,\n      system: system,\n      jailbreak: jailbreak,\n    },\n    chatContext: {\n      oaiMessages,\n      oaiMessageExamples,\n      promptBias,\n    },\n    worldInfo,\n  };\n}\n\n//处理角色卡中的深度提示词\nfunction handleCharDepthPrompt() {\n  const depthPromptText =\n    // @ts-ignore\n    baseChatReplace(characters[this_chid]?.data?.extensions?.depth_prompt?.prompt?.trim(), name1, name2) || '';\n  // @ts-ignore\n  const depthPromptDepth = characters[this_chid]?.data?.extensions?.depth_prompt?.depth ?? '4';\n  const depthPromptRole = getExtensionPromptRoleByName(\n    // @ts-ignore\n    characters[this_chid]?.data?.extensions?.depth_prompt?.role ?? 'system',\n  );\n  setExtensionPrompt(\n    'DEPTH_PROMPT',\n    depthPromptText,\n    extension_prompt_types.IN_CHAT,\n    depthPromptDepth,\n    // @ts-ignore\n    extension_settings.note.allowWIScan,\n    depthPromptRole,\n  );\n}\n//处理作者注释\nfunction setAuthorNotePrompt(config: detail.GenerateParams) {\n  const authorNoteOverride = config?.overrides?.author_note;\n  // @ts-ignore\n  let prompt = authorNoteOverride ?? $('#extension_floating_prompt').val() as string;\n\n  setExtensionPrompt(\n    NOTE_MODULE_NAME,\n    prompt,\n    // @ts-ignore\n    chat_metadata[metadata_keys.position],\n    // @ts-ignore\n    chat_metadata[metadata_keys.depth],\n    // @ts-ignore\n    extension_settings.note.allowWIScan,\n    // @ts-ignore\n    chat_metadata[metadata_keys.role],\n  );\n}\n//用户角色描述提示词设置为提示词管理器之外的选项的情况\nfunction setPersonaDescriptionExtensionPrompt() {\n  const description = power_user.persona_description;\n  const INJECT_TAG = 'PERSONA_DESCRIPTION';\n  setExtensionPrompt(INJECT_TAG, '', extension_prompt_types.IN_PROMPT, 0);\n\n  if (!description || power_user.persona_description_position === persona_description_positions.NONE) {\n    return;\n  }\n\n  //当user信息在作者注释前后 - 仅在作者注释未被过滤时执行\n  const promptPositions = [persona_description_positions.BOTTOM_AN, persona_description_positions.TOP_AN];\n\n  if (promptPositions.includes(power_user.persona_description_position) && shouldWIAddPrompt) {\n    // @ts-ignore\n    const originalAN = getContext().extensionPrompts[NOTE_MODULE_NAME].value;\n    const ANWithDesc =\n      power_user.persona_description_position === persona_description_positions.TOP_AN\n        ? `${description}\\n${originalAN}`\n        : `${originalAN}\\n${description}`;\n\n    setExtensionPrompt(\n      NOTE_MODULE_NAME,\n      ANWithDesc,\n      // @ts-ignore\n      chat_metadata[metadata_keys.position],\n      // @ts-ignore\n      chat_metadata[metadata_keys.depth],\n      // @ts-ignore\n      extension_settings.note.allowWIScan,\n      // @ts-ignore\n      chat_metadata[metadata_keys.role],\n    );\n  }\n\n  // user信息深度注入不依赖于作者注释的状态，直接应用\n  if (power_user.persona_description_position === persona_description_positions.AT_DEPTH) {\n    setExtensionPrompt(\n      INJECT_TAG,\n      description,\n      extension_prompt_types.IN_CHAT,\n      power_user.persona_description_depth,\n      true,\n      power_user.persona_description_role,\n    );\n  }\n}\nasync function handleInjectedPrompts(promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>) {\n  if (!promptConfig || !Array.isArray(promptConfig.inject)) return;\n\n  const injects = promptConfig.inject;\n\n  const positionMap = {\n    IN_PROMPT: extension_prompt_types.IN_PROMPT,\n    IN_CHAT: extension_prompt_types.IN_CHAT,\n    BEFORE_PROMPT: extension_prompt_types.BEFORE_PROMPT,\n    NONE: extension_prompt_types.NONE,\n  };\n\n  for (const inject of injects) {\n    const validatedInject = {\n      role: roleTypes[inject.role] ?? extension_prompt_roles.SYSTEM,\n      content: inject.content || '',\n      depth: Number(inject.depth) || 0,\n      scan: Boolean(inject.scan) || true,\n      position: positionMap[inject.position as keyof typeof positionMap] ?? extension_prompt_types.IN_CHAT,\n    };\n\n    // 设置用户自定义注入提示词\n    setExtensionPrompt(\n      `INJECTION-${inject.depth}-${inject.role}`,\n      validatedInject.content,\n      validatedInject.position,\n      validatedInject.depth,\n      validatedInject.scan,\n      validatedInject.role,\n    );\n  }\n}\n// 处理聊天记录\nasync function processChatHistory(chat: any[]) {\n  let coreChat = chat.filter(x => !x.is_system);\n\n  return await Promise.all(\n    coreChat.map(async (chatItem, index) => {\n      let message = chatItem.mes;\n      let regexType = chatItem.is_user ? regex_placement.USER_INPUT : regex_placement.AI_OUTPUT;\n\n      let regexedMessage = getRegexedString(message, regexType, {\n        isPrompt: true,\n        depth: coreChat.length - index - 1,\n      });\n\n      return {\n        ...chatItem,\n        mes: regexedMessage,\n        index,\n      };\n    }),\n  );\n}\n\n// 处理世界书\nasync function processWorldInfo(\n  oaiMessages: detail.RolePrompt[],\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const chatForWI = oaiMessages\n    .filter(x => x.role !== 'system')\n    .map(x => {\n      const name = x.role === 'user' ? name1 : name2;\n      return world_info_include_names ? `${name}: ${x.content}` : x.content;\n    })\n    .reverse();\n\n  const this_max_context = getMaxContextSize();\n  const { worldInfoString, worldInfoBefore, worldInfoAfter, worldInfoExamples, worldInfoDepth } =\n    await getWorldInfoPrompt(chatForWI, this_max_context, dryRun);\n\n  await clearInjectionPrompts(['customDepthWI']);\n\n  if (!isPromptFiltered('with_depth_entries', config)) {\n    processWorldInfoDepth(worldInfoDepth);\n  }\n\n  // 先检查是否被过滤，如果被过滤直接返回null\n  const finalWorldInfoBefore = isPromptFiltered('world_info_before', config)\n    ? null\n    : config.overrides?.world_info_before !== undefined\n    ? config.overrides.world_info_before\n    : worldInfoBefore;\n\n  const finalWorldInfoAfter = isPromptFiltered('world_info_after', config)\n    ? null\n    : config.overrides?.world_info_after !== undefined\n    ? config.overrides.world_info_after\n    : worldInfoAfter;\n\n  return {\n    worldInfoString,\n    worldInfoBefore: finalWorldInfoBefore,\n    worldInfoAfter: finalWorldInfoAfter,\n    worldInfoExamples,\n    worldInfoDepth: !isPromptFiltered('with_depth_entries', config) ? worldInfoDepth : null,\n  };\n}\n// 处理世界信息深度部分\nfunction processWorldInfoDepth(worldInfoDepth: any[]) {\n  if (Array.isArray(worldInfoDepth)) {\n    worldInfoDepth.forEach(entry => {\n      const joinedEntries = entry.entries.join('\\n');\n      setExtensionPrompt(\n        `customDepthWI-${entry.depth}-${entry.role}`,\n        joinedEntries,\n        extension_prompt_types.IN_CHAT,\n        entry.depth,\n        false,\n        entry.role,\n      );\n    });\n  }\n}\n// 处理世界书中示例前后\nasync function processMessageExamples(mesExamplesArray: string[], worldInfoExamples: any[]): Promise<string[]> {\n  // 处理世界信息中的示例\n  for (const example of worldInfoExamples) {\n    if (!example.content.length) continue;\n\n    const formattedExample = baseChatReplace(example.content, name1, name2);\n    const cleanedExample = parseMesExamples(formattedExample);\n\n    if (example.position === wi_anchor_position.before) {\n      mesExamplesArray.unshift(...cleanedExample);\n    } else {\n      mesExamplesArray.push(...cleanedExample);\n    }\n  }\n\n  return mesExamplesArray;\n}\n//处理对话示例格式\nfunction parseMesExamples(examplesStr: string) {\n  if (examplesStr.length === 0 || examplesStr === '<START>') {\n    return [];\n  }\n\n  if (!examplesStr.startsWith('<START>')) {\n    examplesStr = '<START>\\n' + examplesStr.trim();\n  }\n  const blockHeading = '<START>\\n';\n  const splitExamples = examplesStr\n    .split(/<START>/gi)\n    .slice(1)\n    .map(block => `${blockHeading}${block.trim()}\\n`);\n\n  return splitExamples;\n}\n//用户输入先正则处理\nfunction processUserInput(user_input: string, oai_settings: any) {\n  if (user_input === '') {\n    user_input = oai_settings.send_if_empty.trim();\n  }\n  return getRegexedString(user_input, regex_placement.USER_INPUT, {\n    isPrompt: true,\n    depth: 0,\n  });\n}\n//使用预设\nasync function handlePresetPath(\n  baseData: any,\n  processedUserInput: string,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  // prepareOpenAIMessages会从设置里读取场景因此临时覆盖\n  let originalScenario = null;\n\n  try {\n    const scenarioOverride = config?.overrides?.scenario;\n    // @ts-ignore\n    if (scenarioOverride && characters && characters[this_chid]) {\n      // 保存原始场景\n      // @ts-ignore\n      originalScenario = characters[this_chid].scenario || null;\n      // @ts-ignore\n      characters[this_chid].scenario = scenarioOverride;\n    }\n    // 添加user消息(一次性)\n    const userMessageTemp = {\n      role: 'user',\n      content: processedUserInput,\n      image: config.image,\n    };\n\n    if (config.image) {\n      userMessageTemp.image = await convertFileToBase64(config.image);\n    }\n\n    baseData.chatContext.oaiMessages.unshift(userMessageTemp);\n\n    const messageData = {\n      name2,\n      charDescription: baseData.characterInfo.description,\n      charPersonality: baseData.characterInfo.personality,\n      Scenario: baseData.characterInfo.scenario,\n      worldInfoBefore: baseData.worldInfo.worldInfoBefore,\n      worldInfoAfter: baseData.worldInfo.worldInfoAfter,\n      extensionPrompts: getContext().extensionPrompts,\n      bias: baseData.chatContext.promptBias,\n      type: 'normal',\n      quietPrompt: '',\n      quietImage: null,\n      cyclePrompt: '',\n      systemPromptOverride: baseData.characterInfo.system,\n      jailbreakPromptOverride: baseData.characterInfo.jailbreak,\n      personaDescription: baseData.characterInfo.persona,\n      messages: baseData.chatContext.oaiMessages,\n      messageExamples: baseData.chatContext.oaiMessageExamples,\n    };\n\n    const [prompt] = await prepareOpenAIMessages(messageData as any, dryRun);\n\n    return { prompt };\n  } finally {\n    // 恢复原始场景\n    // @ts-ignore\n    if (originalScenario !== null && characters && characters[this_chid]) {\n      // @ts-ignore\n      characters[this_chid].scenario = originalScenario;\n    }\n  }\n}\nasync function convertSystemPromptsToCollection(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const promptCollection = new PromptCollection();\n  const examplesCollection = new MessageCollection('dialogue_examples');\n  // 处理自定义注入\n  const customPrompts = (promptConfig.order || default_order)\n    .map((item, index) => {\n      if (typeof item === 'object' && item.role && item.content) {\n        const identifier = `custom_prompt_${index}`;\n        return {\n          identifier,\n          role: item.role as 'system' | 'user' | 'assistant',\n          content: item.content,\n        };\n      }\n      return null;\n    })\n    .filter((item): item is NonNullable<typeof item> => item !== null);\n\n  for (const prompt of customPrompts) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: prompt.identifier,\n        // @ts-ignore\n        role: prompt.role,\n        content: prompt.content,\n        system_prompt: prompt.role === 'system',\n      }),\n    );\n  }\n\n  // 处理角色信息\n  const characterPrompts = [\n    {\n      id: 'char_description',\n      content: baseData.characterInfo.description,\n      role: 'system',\n    },\n    {\n      id: 'char_personality',\n      content: baseData.characterInfo.personality,\n      role: 'system',\n    },\n    {\n      id: 'scenario',\n      content: baseData.characterInfo.scenario,\n      role: 'system',\n    },\n  ];\n\n  // 添加角色相关提示词\n  characterPrompts.forEach(prompt => {\n    if (prompt.content) {\n      promptCollection.add(\n        // @ts-ignore\n        new Prompt({\n          // @ts-ignore\n          identifier: prompt.id,\n          // @ts-ignore\n          role: prompt.role,\n          // @ts-ignore\n          content: prompt.content,\n          // @ts-ignore\n          system_prompt: true,\n        }),\n      );\n    }\n  });\n\n  //当user信息在提示词管理器中时\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.IN_PROMPT\n  ) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: 'persona_description',\n        // @ts-ignore\n        role: 'system',\n        // @ts-ignore\n        content: baseData.characterInfo.persona,\n        // @ts-ignore\n        system_prompt: true,\n      }),\n    );\n  }\n\n  // 处理世界信息\n  if (baseData.worldInfo.world_info_before) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: 'world_info_before',\n        // @ts-ignore\n        role: 'system',\n        // @ts-ignore\n        content: baseData.worldInfo.world_info_before,\n        // @ts-ignore\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.worldInfo.world_info_after) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: 'world_info_after',\n        // @ts-ignore\n        role: 'system',\n        // @ts-ignore\n        content: baseData.worldInfo.world_info_after,\n        // @ts-ignore\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.chatContext.oaiMessageExamples.length > 0) {\n    // 遍历所有对话示例\n    for (const dialogue of [...baseData.chatContext.oaiMessageExamples]) {\n      const dialogueIndex = baseData.chatContext.oaiMessageExamples.indexOf(dialogue);\n      const chatMessages = [];\n\n      for (let promptIndex = 0; promptIndex < dialogue.length; promptIndex++) {\n        const prompt = dialogue[promptIndex];\n        const role = 'system';\n        const content = prompt.content || '';\n        const identifier = `dialogue_examples ${dialogueIndex}-${promptIndex}`;\n\n        const chatMessage = await Message.createAsync(role, content, identifier);\n        await chatMessage.setName(prompt.name);\n        chatMessages.push(chatMessage);\n      }\n      for (const message of chatMessages) {\n        examplesCollection.add(message);\n      }\n    }\n  }\n  return {\n    systemPrompts: promptCollection,\n    dialogue_examples: examplesCollection,\n  };\n}\n//不使用预设\nasync function handleCustomPath(\n  baseData: any,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const chatCompletion = new ChatCompletion();\n  chatCompletion.setTokenBudget(oai_settings.openai_max_context, oai_settings.openai_max_tokens);\n  chatCompletion.reserveBudget(3);\n  const orderArray = config.order || default_order;\n  const positionMap: Record<string, number> = orderArray.reduce((acc: Record<string, number>, item, index) => {\n    if (typeof item === 'string') {\n      acc[item.toLowerCase()] = index;\n    } else if (typeof item === 'object') {\n      acc[`custom_prompt_${index}`] = index;\n    }\n    return acc;\n  }, {});\n\n  //转换为集合\n  const { systemPrompts, dialogue_examples } = await convertSystemPromptsToCollection(baseData, config);\n  const addToChatCompletionInOrder = async (source: any, index: number) => {\n    if (typeof source === 'object') {\n      // 处理自定义注入\n      const collection = new MessageCollection(`custom_prompt_${index}`);\n      const message = await Message.createAsync(source.role, source.content, `custom_prompt_${index}`);\n      collection.add(message);\n      chatCompletion.add(collection, index);\n    } else if (systemPrompts.has(source)) {\n      // 处理普通提示词\n      const prompt = systemPrompts.get(source);\n      const collection = new MessageCollection(source);\n      const message = await Message.fromPromptAsync(prompt);\n      collection.add(message);\n      chatCompletion.add(collection, positionMap[source]);\n    }\n  };\n\n  // 处理所有类型的提示词\n  for (const [index, item] of orderArray.entries()) {\n    if (typeof item === 'string') {\n      // 使用 isPromptFiltered 替代 promptFilter 判断\n      if (!isPromptFiltered(item, config)) {\n        await addToChatCompletionInOrder(item, index);\n      }\n    } else if (typeof item === 'object' && item.role && item.content) {\n      await addToChatCompletionInOrder(item, index);\n    }\n  }\n\n  const dialogue_examplesIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'dialogue_examples',\n  );\n\n  if (dialogue_examplesIndex !== -1 && !isPromptFiltered('dialogue_examples', config)) {\n    chatCompletion.add(dialogue_examples, dialogue_examplesIndex);\n  }\n  //给user输入预留token\n  const userInputMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n  chatCompletion.reserveBudget(userInputMessage);\n\n  await processChatHistoryAndInject(baseData, config, chatCompletion, processedUserInput);\n  chatCompletion.freeBudget(userInputMessage);\n\n  //根据当前预设决定是否合并连续系统role消息\n  if (oai_settings.squash_system_messages) {\n    await chatCompletion.squashSystemMessages();\n  }\n  const prompt = chatCompletion.getChat();\n  return { prompt };\n}\n\nasync function processChatHistoryAndInject(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  chatCompletion: ChatCompletion,\n  processedUserInput: string,\n) {\n  const orderArray = promptConfig.order || default_order;\n  const chatHistoryIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'chat_history',\n  );\n  const userInputIndex = orderArray.findIndex(item => typeof item === 'string' && item.toLowerCase() === 'user_input');\n\n  const hasUserInput = userInputIndex !== -1;\n  const hasChatHistory = chatHistoryIndex !== -1;\n  const isChatHistoryFiltered = isPromptFiltered('chat_history', promptConfig);\n\n  // 创建用户输入消息\n  const userMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n\n  // 仅在需要时添加图像\n  if (promptConfig.image && hasUserInput) {\n    await userMessage.addImage(await convertFileToBase64(promptConfig.image));\n  }\n\n  // 如果聊天记录被过滤或不在order中，只处理用户输入\n  if (isChatHistoryFiltered || !hasChatHistory) {\n    const insertIndex = hasUserInput ? userInputIndex : orderArray.length;\n    chatCompletion.add(new MessageCollection('user_input', userMessage), insertIndex);\n    return;\n  }\n\n  // 处理聊天记录\n  const chatCollection = new MessageCollection('chat_history');\n\n  // 为新聊天指示预留token\n  const newChat = oai_settings.new_chat_prompt;\n  const newChatMessage = await Message.createAsync('system', substituteParams(newChat), 'newMainChat');\n  chatCompletion.reserveBudget(newChatMessage);\n\n  // 添加新聊天提示词到集合的最前面\n  chatCollection.add(newChatMessage);\n\n  // 处理空消息替换\n  const lastChatPrompt = baseData.chatContext.oaiMessages[baseData.chatContext.oaiMessages.length - 1];\n  const emptyMessage = await Message.createAsync('user', oai_settings.send_if_empty, 'emptyUserMessageReplacement');\n\n  if (\n    lastChatPrompt &&\n    lastChatPrompt.role === 'assistant' &&\n    oai_settings.send_if_empty &&\n    chatCompletion.canAfford(emptyMessage)\n  ) {\n    chatCollection.add(emptyMessage);\n  }\n\n  // 将用户消息添加到消息数组中准备处理注入\n  if (!hasUserInput) {\n    const userPrompt = {\n      role: 'user',\n      content: processedUserInput,\n      identifier: 'user_input',\n      image: promptConfig.image ? await convertFileToBase64(promptConfig.image) : undefined,\n    };\n    baseData.chatContext.oaiMessages.unshift(userPrompt);\n  }\n\n  // 处理注入和添加消息\n  const messages = (await populationInjectionPrompts(baseData.chatContext.oaiMessages, promptConfig.inject)).reverse();\n  const imageInlining = isImageInliningSupported();\n  // 添加聊天记录\n  const chatPool = [...messages];\n  for (const chatPrompt of chatPool) {\n    const prompt = new Prompt(chatPrompt as any);\n    prompt.identifier = `chat_history-${messages.length - chatPool.indexOf(chatPrompt)}`;\n    prompt.content = substituteParams(prompt.content);\n\n    const chatMessage = await Message.fromPromptAsync(prompt);\n    const promptManager = setupChatCompletionPromptManager(oai_settings);\n\n    if (promptManager) {\n      // @ts-ignore\n      if (promptManager.serviceSettings.names_behavior === character_names_behavior.COMPLETION && prompt.name) {\n        const messageName = promptManager.isValidName(prompt.name)\n          ? prompt.name\n          : promptManager.sanitizeName(prompt.name);\n        await chatMessage.setName(messageName);\n      }\n    }\n    if (imageInlining && chatPrompt.image) {\n      await chatMessage.addImage(chatPrompt.image as string);\n    }\n    if (chatCompletion.canAfford(chatMessage)) {\n      chatCollection.add(chatMessage);\n    } else {\n      break;\n    }\n  }\n\n  // 释放新聊天提示词的预留token\n  chatCompletion.freeBudget(newChatMessage);\n\n  if (hasUserInput) {\n    // 按各自在order中的位置添加聊天记录和用户输入\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n    chatCompletion.add(new MessageCollection('user_input', userMessage), userInputIndex);\n  } else {\n    // 聊天记录中已包含用户输入，直接添加到chat_history位置\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n  }\n}\nasync function populationInjectionPrompts(messages: detail.RolePrompt[], customInjects: detail.InjectionPrompt[] = []) {\n  let processedMessages = [...messages];\n  let totalInsertedMessages = 0;\n  const injectionPrompts = [];\n  // @ts-ignore\n  const authorsNote = getContext().extensionPrompts[NOTE_MODULE_NAME];\n  if (authorsNote && authorsNote.value) {\n    injectionPrompts.push({\n      role: getPromptRole(authorsNote.role),\n      content: authorsNote.value,\n      identifier: 'authorsNote',\n      injection_depth: authorsNote.depth,\n      injected: true,\n    });\n  }\n\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.AT_DEPTH\n  ) {\n    injectionPrompts.push({\n      role: 'system',\n      content: power_user.persona_description,\n      identifier: 'persona_description',\n      injection_depth: power_user.persona_description_depth,\n      injected: true,\n    });\n  }\n\n  // 处理自定义注入\n  if (Array.isArray(customInjects)) {\n    for (const inject of customInjects) {\n      injectionPrompts.push({\n        identifier: `INJECTION-${inject.role}-${inject.depth}`,\n        role: inject.role,\n        content: inject.content,\n        injection_depth: inject.depth || 0,\n        injected: true,\n      });\n    }\n  }\n\n  for (let i = 0; i <= MAX_INJECTION_DEPTH; i++) {\n    const depthPrompts = injectionPrompts.filter(prompt => prompt.injection_depth === i && prompt.content);\n\n    const roles = ['system', 'user', 'assistant'];\n    const roleMessages = [];\n    const separator = '\\n';\n\n    for (const role of roles) {\n      // 直接处理当前深度和角色的所有提示词\n      const rolePrompts = depthPrompts\n        .filter(prompt => prompt.role === role)\n        .map(x => x.content.trim())\n        .join(separator);\n\n      if (rolePrompts) {\n        roleMessages.push({\n          role: role as 'user' | 'system' | 'assistant',\n          content: rolePrompts,\n          injected: true,\n        });\n      }\n    }\n\n    if (roleMessages.length) {\n      const injectIdx = i + totalInsertedMessages;\n      processedMessages.splice(injectIdx, 0, ...roleMessages);\n      totalInsertedMessages += roleMessages.length;\n    }\n  }\n\n  return processedMessages;\n}\n\nfunction getPromptRole(role: number) {\n  switch (role) {\n    case extension_prompt_roles.SYSTEM:\n      return 'system';\n    case extension_prompt_roles.USER:\n      return 'user';\n    case extension_prompt_roles.ASSISTANT:\n      return 'assistant';\n    default:\n      return 'system';\n  }\n}\n\n//生成响应\nasync function generateResponse(generate_data: any, useStream = false): Promise<string> {\n  let result = '';\n  try {\n    deactivateSendButtons();\n\n    if (useStream) {\n      let originalStreamSetting = oai_settings.stream_openai;\n      if (!originalStreamSetting) {\n        oai_settings.stream_openai = true;\n        saveSettingsDebounced();\n      }\n      const streamingProcessor = new StreamingProcessor();\n      // @ts-ignore\n      streamingProcessor.generator = await sendOpenAIRequest('normal', generate_data.prompt, abortController.signal);\n      result = (await streamingProcessor.generate()) as string;\n      // console.log(\"getMessage\", getMessage);\n      if (originalStreamSetting !== oai_settings.stream_openai) {\n        oai_settings.stream_openai = originalStreamSetting;\n        saveSettingsDebounced();\n      }\n    } else {\n      eventSource.emit('js_generation_started');\n      const response = await sendOpenAIRequest(type, generate_data.prompt, abortController.signal);\n      result = await handleResponse(response);\n    }\n  } catch (error) {\n    throw error;\n  } finally {\n    unblockGeneration();\n    await clearInjectionPrompts(['INJECTION']);\n  }\n  return result;\n}\n\n// 处理响应\nasync function handleResponse(response: any) {\n  if (!response) {\n    throw Error(`未得到响应`);\n  }\n  if (response.error) {\n    if (response?.response) {\n      // @ts-ignore\n      toastr.error(response.response, t`API Error`, {\n        preventDuplicates: true,\n      });\n    }\n    throw Error(response?.response);\n  }\n  const message: string = extractMessageFromData(response);\n  eventSource.emit('js_generation_ended', message);\n  return message;\n}\n\nfunction unblockGeneration() {\n  activateSendButtons();\n  showSwipeButtons();\n  setGenerationProgress(0);\n  flushEphemeralStoppingStrings();\n}\n\n// 清理注入\nasync function clearInjectionPrompts(prefixes: string[]) {\n  const prompts: Record<string, any> = getContext().extensionPrompts;\n  Object.keys(prompts)\n    .filter(key => prefixes.some(prefix => key.startsWith(prefix)))\n    .forEach(key => delete prompts[key]);\n\n  await saveChatConditional();\n}\nfunction extractMessageFromData(data: any) {\n  if (typeof data === 'string') {\n    return data;\n  }\n\n  return (\n    data?.choices?.[0]?.message?.content ??\n    data?.choices?.[0]?.text ??\n    data?.text ??\n    data?.message?.content?.[0]?.text ??\n    data?.message?.tool_plan ??\n    ''\n  );\n}\n\nasync function convertFileToBase64(image: File | string): Promise<string> {\n  if (image instanceof File) {\n    return await getBase64Async(image);\n  }\n  return image;\n}\n\nfunction addTemporaryUserMessage(userContent: string) {\n  setExtensionPrompt('TEMP_USER_MESSAGE', userContent, extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction removeTemporaryUserMessage() {\n  setExtensionPrompt('TEMP_USER_MESSAGE', '', extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction isPromptFiltered(promptId: string, config: { overrides?: detail.OverrideConfig }): boolean {\n  if (!config.overrides) {\n    return false;\n  }\n\n  if (promptId === 'with_depth_entries') {\n    return config.overrides.with_depth_entries === false;\n  }\n\n  // 特殊处理 chat_history\n  if (promptId === 'chat_history') {\n    const prompts = config.overrides.chat_history;\n    return prompts !== undefined && prompts.length === 0;\n  }\n\n  // 对于普通提示词，只有当它在 overrides 中存在且为空字符串时才被过滤\n  const override = config.overrides[promptId as keyof Omit<detail.OverrideConfig, 'chat_history'>];\n  return override !== undefined && override === '';\n}\n\n/**\n * 使用酒馆当前启用的预设, 让 ai 生成一段文本.\n *\n * 该函数在执行过程中将会发送以下事件:\n * - `iframe_events.GENERATION_STARTED`: 生成开始\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n * - `iframe_events.GENERATION_ENDED`: 生成结束, 监听它可以得到生成的最终文本 (当然也能通过函数返回值获得)\n *\n * @param config 提示词和生成方式设置\n *   - `user_input?:string`: 用户输入\n *   - `should_stream?:boolean`: 是否启用流式传输; 默认为 'false'\n *   - `image?:File|string`: 图片输入\n *   - `overrides?:Overrides`: 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词. 如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖角色描述\n *   - `injects?:InjectionPrompt[]`: 要额外注入的提示词\n *   - `max_chat_history?:'all'|number`: 最多使用多少条聊天历史\n * @returns 生成的最终文本\n */\nexport async function generate(config: GenerateConfig) {\n  console.info(`发送生成请求: ${config}`);\n\n  const converted_config = fromGenerateConfig(config);\n  return await iframeGenerate(converted_config);\n}\n\n/**\n * 不使用酒馆当前启用的预设, 让 ai 生成一段文本.\n *\n * 该函数在执行过程中将会发送以下事件:\n * - `iframe_events.GENERATION_STARTED`: 生成开始\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n * - `iframe_events.GENERATION_ENDED`: 生成结束, 监听它可以得到生成的最终文本 (当然也能通过函数返回值获得)\n *\n * @param config 提示词和生成方式设置\n *   - `user_input?:string`: 用户输入\n *   - `should_stream?:boolean`: 是否启用流式传输; 默认为 'false'\n *   - `image?:File|string`: 图片输入\n *   - `overrides?:Overrides`: 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词. 如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖角色描述\n *   - `injects?:InjectionPrompt[]`: 要额外注入的提示词\n *   - `max_chat_history?:'all'|number`: 最多使用多少条聊天历史\n *   - `ordered_prompts?:(BuiltinPrompt|RolePrompt)[]`: 一个提示词数组, 数组元素将会按顺序发给 ai, 因而相当于自定义预设\n * @returns 生成的最终文本\n */\nexport async function generateRaw(config: GenerateRawConfig) {\n  console.info(`发送生成请求: ${config}`);\n\n  const converted_config = fromGenerateRawConfig(config);\n  return await iframeGenerate(converted_config);\n}\n\n// @ts-ignore\n$(document).on('click', '#mes_stop', function () {\n  const wasStopped = stopGeneration();\n  if (wasStopped) {\n    if (abortController) {\n      abortController.abort('Clicked stop button');\n    }\n    unblockGeneration();\n  }\n});\n","import { findChar } from '@/compatibility';\n\nimport {\n  characters,\n  getOneCharacter,\n  getRequestHeaders,\n  saveCharacterDebounced,\n  saveSettings,\n  saveSettingsDebounced,\n  this_chid,\n} from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { ensureImageFormatSupported, getCharaFilename } from '@sillytavern/scripts/utils';\nimport {\n  createNewWorldInfo,\n  deleteWorldInfo,\n  getWorldInfoSettings,\n  selected_world_info,\n  setWorldInfoButtonClass,\n  world_info,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\nasync function editCurrentCharacter(): Promise<boolean> {\n  // @ts-ignore\n  $('#rm_info_avatar').html('');\n  // @ts-ignore\n  const form_data = new FormData(($('#form_create') as JQuery<HTMLFormElement>).get(0));\n\n  const raw_file = form_data.get('avatar');\n  if (raw_file instanceof File) {\n    const converted_file = await ensureImageFormatSupported(raw_file);\n    form_data.set('avatar', converted_file);\n  }\n\n  const headers = getRequestHeaders();\n  // @ts-ignore\n  delete headers['Content-Type'];\n\n  // TODO: 这里的代码可以用来修改第一条消息!\n  form_data.delete('alternate_greetings');\n  // @ts-ignore\n  const chid = $('.open_alternate_greetings').data('chid');\n  if (chid && Array.isArray(characters[chid]?.data?.alternate_greetings)) {\n    for (const value of characters[chid].data.alternate_greetings) {\n      form_data.append('alternate_greetings', value);\n    }\n  }\n\n  const response = await fetch('/api/characters/edit', {\n    method: 'POST',\n    headers: headers,\n    body: form_data,\n    cache: 'no-cache',\n  });\n\n  if (!response.ok) {\n    return false;\n  }\n\n  await getOneCharacter(form_data.get('avatar_url'));\n  // @ts-ignore\n  $('#add_avatar_button').replaceWith($('#add_avatar_button').val('').clone(true));\n  // @ts-ignore\n  $('#create_button').attr('value', 'Save');\n\n  return true;\n}\n\nfunction toLorebookSettings(world_info_settings: ReturnType<typeof getWorldInfoSettings>): LorebookSettings {\n  return {\n    selected_global_lorebooks: (world_info_settings.world_info as { globalSelect: string[] }).globalSelect,\n\n    scan_depth: world_info_settings.world_info_depth,\n    context_percentage: world_info_settings.world_info_budget,\n    budget_cap: world_info_settings.world_info_budget_cap,\n    min_activations: world_info_settings.world_info_min_activations,\n    max_depth: world_info_settings.world_info_min_activations_depth_max,\n    max_recursion_steps: world_info_settings.world_info_max_recursion_steps,\n\n    insertion_strategy: { 0: 'evenly', 1: 'character_first', 2: 'global_first' }[\n      world_info_settings.world_info_character_strategy\n    ] as 'evenly' | 'character_first' | 'global_first',\n\n    include_names: world_info_settings.world_info_include_names,\n    recursive: world_info_settings.world_info_recursive,\n    case_sensitive: world_info_settings.world_info_case_sensitive,\n    match_whole_words: world_info_settings.world_info_match_whole_words,\n    use_group_scoring: world_info_settings.world_info_use_group_scoring,\n    overflow_alert: world_info_settings.world_info_overflow_alert,\n  };\n}\n\nfunction assignPartialLorebookSettings(settings: Partial<LorebookSettings>): void {\n  const for_eachs = {\n    selected_global_lorebooks: (value: LorebookSettings['selected_global_lorebooks']) => {\n      // @ts-ignore\n      $('#world_info').find('option[value!=\"\"]').remove();\n      world_names.forEach((item, i) =>\n        // @ts-ignore\n        $('#world_info').append(`<option value='${i}'${value.includes(item) ? ' selected' : ''}>${item}</option>`),\n      );\n\n      selected_world_info.length = 0;\n      selected_world_info.push(...value);\n      saveSettings();\n    },\n\n    scan_depth: (value: LorebookSettings['scan_depth']) => {\n      // @ts-ignore\n      $('#world_info_depth').val(value).trigger('input');\n    },\n    context_percentage: (value: LorebookSettings['context_percentage']) => {\n      // @ts-ignore\n      $('#world_info_budget').val(value).trigger('input');\n    },\n    budget_cap: (value: LorebookSettings['budget_cap']) => {\n      // @ts-ignore\n      $('#world_info_budget_cap').val(value).trigger('input');\n    },\n    min_activations: (value: LorebookSettings['min_activations']) => {\n      // @ts-ignore\n      $('#world_info_min_activations').val(value).trigger('input');\n    },\n    max_depth: (value: LorebookSettings['max_depth']) => {\n      // @ts-ignore\n      $('#world_info_min_activations_depth_max').val(value).trigger('input');\n    },\n    max_recursion_steps: (value: LorebookSettings['max_recursion_steps']) => {\n      // @ts-ignore\n      $('#world_info_max_recursion_steps').val(value).trigger('input');\n    },\n\n    insertion_strategy: (value: LorebookSettings['insertion_strategy']) => {\n      const converted_value = { evenly: 0, character_first: 1, global_first: 2 }[value];\n      // @ts-ignore\n      $(`#world_info_character_strategy option[value='${converted_value}']`).prop('selected', true);\n      // @ts-ignore\n      $('#world_info_character_strategy').val(converted_value).trigger('change');\n    },\n\n    include_names: (value: LorebookSettings['include_names']) => {\n      // @ts-ignore\n      $('#world_info_include_names').prop('checked', value).trigger('input');\n    },\n    recursive: (value: LorebookSettings['recursive']) => {\n      // @ts-ignore\n      $('#world_info_recursive').prop('checked', value).trigger('input');\n    },\n    case_sensitive: (value: LorebookSettings['case_sensitive']) => {\n      // @ts-ignore\n      $('#world_info_case_sensitive').prop('checked', value).trigger('input');\n    },\n    match_whole_words: (value: LorebookSettings['match_whole_words']) => {\n      // @ts-ignore\n      $('#world_info_match_whole_words').prop('checked', value).trigger('input');\n    },\n    use_group_scoring: (value: LorebookSettings['use_group_scoring']) => {\n      // @ts-ignore\n      $('#world_info_use_group_scoring').prop('checked', value).trigger('change');\n    },\n    overflow_alert: (value: LorebookSettings['overflow_alert']) => {\n      // @ts-ignore\n      $('#world_info_overflow_alert').prop('checked', value).trigger('change');\n    },\n  };\n\n  Object.entries(settings)\n    .filter(([_, value]) => value !== undefined)\n    .forEach(([field, value]) => {\n      // @ts-ignore\n      for_eachs[field]?.(value);\n    });\n}\n\n/**\n * 获取当前的世界书全局设置\n *\n * @returns 当前的世界书全局设置\n */\nexport function getLorebookSettings(): LorebookSettings {\n  const lorebook_settings = toLorebookSettings(getWorldInfoSettings());\n\n  console.info(`获取世界书全局设置:\\n${JSON.stringify(lorebook_settings, undefined, 2)}`);\n  return lorebook_settings;\n}\n\n/**\n * 修改世界书全局设置\n *\n * @returns 修改世界书全局设置\n */\nexport function setLorebookSettings(settings: Partial<LorebookSettings>): void {\n  if (settings.selected_global_lorebooks) {\n    const inexisting_lorebooks = settings.selected_global_lorebooks.filter(lorebook => !world_names.includes(lorebook));\n    if (inexisting_lorebooks.length > 0) {\n      throw Error(`尝试修改要全局启用的世界书, 但未找到以下世界书: ${JSON.stringify(inexisting_lorebooks)}`);\n    }\n  }\n\n  assignPartialLorebookSettings(settings);\n\n  console.info(`修改世界书全局设置:\\n${JSON.stringify(settings, undefined, 2)}`);\n}\n\n/**\n * 获取角色卡绑定的世界书\n *\n * @param option 可选选项\n *   - `name?:string`: 要查询的角色卡名称; 默认为当前角色卡\n *   - `type?:'all'|'primary'|'additional'`: 按角色世界书的绑定类型筛选世界书; 默认为 `'all'`\n *\n * @returns 一个 CharLorebook 数组\n */\nexport function getCharLorebooks(option: GetCharLorebooksOption): CharLorebooks {\n  // @ts-ignore\n  if (selected_group && !option.name) {\n    throw Error(`不要在群组中调用这个功能`);\n  }\n  //@ts-ignore\n  const filename = option.name ?? characters[this_chid]?.avatar ?? null;\n  // @ts-ignore\n  const character = findChar({ name: filename });\n  if (!character) {\n    throw Error(`未找到名为 '${filename}' 的角色卡`);\n  }\n\n  let books: CharLorebooks = { primary: null, additional: [] };\n\n  if (character.data?.extensions?.world) {\n    books.primary = character.data?.extensions?.world;\n  }\n\n  // @ts-ignore\n  const extraCharLore = world_info.charLore?.find(e => e.name === filename);\n  if (extraCharLore && Array.isArray(extraCharLore.extraBooks)) {\n    books.additional = extraCharLore.extraBooks;\n  }\n\n  console.info(`获取角色卡绑定的世界书, 选项: ${JSON.stringify(option)}, 获取结果: ${JSON.stringify(books)}`);\n  return books;\n}\n\n// TODO: 加入文档中\n/**\n * 设置当前角色卡绑定的世界书\n *\n * @param lorebooks 要设置的世界书信息\n *    - `primary: string | null;`: 主要世界书名称，设为null或空字符串表示移除\n *    - `additional: string[];`: 附加世界书名称数组，设为空数组表示移除所有附加世界书\n */\nexport async function setCurrentCharLorebooks(lorebooks: Partial<CharLorebooks>): Promise<void> {\n  // @ts-ignore\n  if (selected_group && !option.name) {\n    throw Error(`不要在群组中调用这个功能`);\n  }\n  // @ts-ignore\n  const filename = getCharaFilename(this_chid);\n  if (!filename) {\n    throw Error(`未打开任何角色卡`);\n  }\n\n  const inexisting_lorebooks: string[] = [\n    ...(lorebooks.primary && !world_names.includes(lorebooks.primary) ? [lorebooks.primary] : []),\n    ...(lorebooks.additional ? lorebooks.additional.filter(lorebook => !world_names.includes(lorebook)) : []),\n  ];\n  if (inexisting_lorebooks.length > 0) {\n    throw Error(`尝试修改 '${filename}' 绑定的世界书, 但未找到以下世界书: ${inexisting_lorebooks}`);\n  }\n\n  if (lorebooks.primary !== undefined) {\n    // @ts-ignore\n    const previous_primary = String($('#character_world').val());\n    // @ts-ignore\n    $('#character_world').val(lorebooks.primary ? lorebooks.primary : '');\n\n    // @ts-ignore\n    $('.character_world_info_selector')\n      .find('option:selected')\n      .val(lorebooks.primary ? world_names.indexOf(lorebooks.primary) : '');\n\n    if (previous_primary && !lorebooks.primary) {\n      // @ts-ignore\n      const data = JSON.parse(String($('#character_json_data').val()));\n      if (data?.data?.character_book) {\n        data.data.character_book = undefined;\n      }\n      // @ts-ignore\n      $('#character_json_data').val(JSON.stringify(data));\n    }\n\n    if (!(await editCurrentCharacter())) {\n      throw Error(`尝试为 '${filename}' 绑定主要世界书, 但在访问酒馆后端时出错`);\n    }\n\n    // @ts-ignore\n    setWorldInfoButtonClass(undefined, !!lorebooks.primary);\n  }\n\n  if (lorebooks.additional !== undefined) {\n    interface CharLoreEntry {\n      name: string;\n      extraBooks: string[];\n    }\n    let char_lore = (world_info as { charLore: CharLoreEntry[] }).charLore ?? [];\n\n    const existing_char_index = char_lore.findIndex(entry => entry.name === filename);\n    if (existing_char_index === -1) {\n      char_lore.push({ name: filename, extraBooks: lorebooks.additional });\n    } else if (lorebooks.additional.length === 0) {\n      char_lore.splice(existing_char_index, 1);\n    } else {\n      char_lore[existing_char_index].extraBooks = lorebooks.additional;\n    }\n\n    Object.assign(world_info, { charLore: char_lore });\n  }\n\n  saveCharacterDebounced();\n  saveSettingsDebounced();\n\n  console.info(\n    `修改角色卡绑定的世界书, 要修改的部分: ${JSON.stringify(lorebooks)}${\n      lorebooks.primary === undefined ? ', 主要世界书保持不变' : ''\n    }${lorebooks.additional === undefined ? ', 附加世界书保持不变' : ''}`,\n  );\n}\n\n/**\n * 获取世界书列表\n *\n * @returns 世界书名称列表\n */\nexport async function getLorebooks(): Promise<string[]> {\n  console.info(`获取世界书列表: ${JSON.stringify(world_names)}`);\n  return world_names;\n}\n\n/**\n * 删除世界书\n *\n * @param lorebook 世界书名称\n * @returns 是否成功删除, 可能因世界书不存在等原因而失败\n */\nexport async function deleteLorebook(lorebook: string): Promise<boolean> {\n  const success = await deleteWorldInfo(lorebook);\n\n  console.info(`移除世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n  return success;\n}\n\n/**\n * 新建世界书\n *\n * @param lorebook 世界书名称\n *\n * @returns 是否成功创建, 如果已经存在同名世界书会失败\n */\nexport async function createLorebook(lorebook: string): Promise<boolean> {\n  const success = await createNewWorldInfo(lorebook, { interactive: false });\n\n  console.info(`新建世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n  return success;\n}\n","import { debounce } from '@sillytavern/scripts/utils';\nimport {\n  createWorldInfoEntry,\n  deleteWIOriginalDataValue,\n  loadWorldInfo,\n  originalWIDataKeyMap,\n  saveWorldInfo,\n  setWIOriginalDataValue,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\nfunction toLorebookEntry(entry: any): LorebookEntry {\n  return {\n    uid: entry.uid,\n    display_index: entry.displayIndex,\n    comment: entry.comment,\n    enabled: !entry.disable,\n    type: entry.constant ? 'constant' : entry.vectorized ? 'vectorized' : 'selective',\n    position:\n      // @ts-ignore\n      {\n        0: 'before_character_definition',\n        1: 'after_character_definition',\n        5: 'before_example_messages',\n        6: 'after_example_messages',\n        2: 'before_author_note',\n        3: 'after_author_note',\n      }[entry.position] ??\n      (entry.role === 0 ? 'at_depth_as_system' : entry.role === 1 ? 'at_depth_as_user' : 'at_depth_as_assistant'),\n    depth: entry.position === 4 ? entry.depth : null,\n    order: entry.order,\n    probability: entry.probability,\n\n    key: entry.key,\n    logic: {\n      0: 'and_any',\n      1: 'and_all',\n      2: 'not_any',\n      3: 'not_all',\n    }[entry.selectiveLogic as number] as 'and_any' | 'and_all' | 'not_any' | 'not_all',\n    filter: entry.keysecondary,\n\n    scan_depth: entry.scanDepth ?? 'same_as_global',\n    case_sensitive: entry.caseSensitive ?? 'same_as_global',\n    match_whole_words: entry.matchWholeWords ?? 'same_as_global',\n    use_group_scoring: entry.useGroupScoring ?? 'same_as_global',\n    automation_id: entry.automationId || null,\n\n    exclude_recursion: entry.excludeRecursion,\n    prevent_recursion: entry.preventRecursion,\n    delay_until_recursion: entry.delayUntilRecursion,\n\n    content: entry.content,\n\n    group: entry.group,\n    group_prioritized: entry.groupOverride,\n    group_weight: entry.groupWeight,\n    sticky: entry.sticky || null,\n    cooldown: entry.cooldown || null,\n    delay: entry.delay || null,\n  };\n}\n\nfunction fromPartialLorebookEntry(entry: Partial<LorebookEntry>): any {\n  const transformers = {\n    uid: (value: LorebookEntry['uid']) => ({ uid: value }),\n    display_index: (value: LorebookEntry['display_index']) => ({ displayIndex: value }),\n\n    comment: (value: LorebookEntry['comment']) => ({ comment: value }),\n    enabled: (value: LorebookEntry['enabled']) => ({ disable: !value }),\n    type: (value: LorebookEntry['type']) => ({\n      constant: value === 'constant',\n      vectorized: value === 'vectorized',\n    }),\n    position: (value: LorebookEntry['position']) => ({\n      position: {\n        before_character_definition: 0,\n        after_character_definition: 1,\n        before_example_messages: 5,\n        after_example_messages: 6,\n        before_author_note: 2,\n        after_author_note: 3,\n        at_depth_as_system: 4,\n        at_depth_as_user: 4,\n        at_depth_as_assistant: 4,\n      }[value],\n      role:\n        // @ts-ignore\n        {\n          at_depth_as_system: 0,\n          at_depth_as_user: 1,\n          at_depth_as_assistant: 2,\n        }[value] ?? null,\n    }),\n    depth: (value: LorebookEntry['depth']) => ({ depth: value === null ? 4 : value }),\n    order: (value: LorebookEntry['order']) => ({ order: value }),\n    probability: (value: LorebookEntry['probability']) => ({ probability: value }),\n\n    key: (value: LorebookEntry['key']) => ({ key: value }),\n    logic: (value: LorebookEntry['logic']) => ({\n      selectiveLogic: {\n        and_any: 0,\n        and_all: 1,\n        not_any: 2,\n        not_all: 3,\n      }[value],\n    }),\n    filter: (value: LorebookEntry['filter']) => ({ keysecondary: value }),\n\n    scan_depth: (value: LorebookEntry['scan_depth']) => ({ scanDepth: value === 'same_as_global' ? null : value }),\n    case_sensitive: (value: LorebookEntry['case_sensitive']) => ({\n      caseSensitive: value === 'same_as_global' ? null : value,\n    }),\n    match_whole_words: (value: LorebookEntry['match_whole_words']) => ({\n      matchWholeWords: value === 'same_as_global' ? null : value,\n    }),\n    use_group_scoring: (value: LorebookEntry['use_group_scoring']) => ({\n      useGroupScoring: value === 'same_as_global' ? null : value,\n    }),\n    automation_id: (value: LorebookEntry['automation_id']) => ({ automationId: value === null ? '' : value }),\n\n    exclude_recursion: (value: LorebookEntry['exclude_recursion']) => ({ excludeRecursion: value }),\n    prevent_recursion: (value: LorebookEntry['prevent_recursion']) => ({ preventRecursion: value }),\n    delay_until_recursion: (value: LorebookEntry['delay_until_recursion']) => ({ delayUntilRecursion: value }),\n\n    content: (value: LorebookEntry['content']) => ({ content: value }),\n\n    group: (value: LorebookEntry['group']) => ({ group: value }),\n    group_prioritized: (value: LorebookEntry['group_prioritized']) => ({ groupOverride: value }),\n    group_weight: (value: LorebookEntry['group_weight']) => ({ groupWeight: value }),\n    sticky: (value: LorebookEntry['sticky']) => ({ sticky: value === null ? 0 : value }),\n    cooldown: (value: LorebookEntry['cooldown']) => ({ cooldown: value === null ? 0 : value }),\n    delay: (value: LorebookEntry['delay']) => ({ delay: value === null ? 0 : value }),\n  };\n\n  return Object.entries(entry)\n    .filter(([_, value]) => value !== undefined)\n    .reduce(\n      (result, [field, value]) => ({\n        ...result,\n        // @ts-ignore\n        ...transformers[field]?.(value),\n      }),\n      {},\n    );\n}\n\nfunction assignFieldValuesToWiEntry(data: any, wi_entry: any, field_values: any) {\n  Object.entries(field_values).forEach(([field, value]) => {\n    wi_entry[field] = value;\n    // @ts-ignore\n    const original_wi_mapped_key = originalWIDataKeyMap[field];\n    if (original_wi_mapped_key) {\n      // @ts-ignore\n      setWIOriginalDataValue(data, wi_entry.uid, original_wi_mapped_key, value);\n    }\n  });\n}\n\nfunction reloadEditor(file: string): void {\n  // @ts-ignore\n  const currentIndex = Number($('#world_editor_select').val());\n  const selectedIndex = world_names.indexOf(file);\n  if (selectedIndex !== -1 && currentIndex === selectedIndex) {\n    // @ts-ignore\n    $('#world_editor_select').val(selectedIndex).trigger('change');\n  }\n}\n\nconst reloadEditorDebounced = debounce(reloadEditor);\n\n/**\n * 获取世界书中的条目信息. **请务必阅读示例**.\n *\n * @param lorebook 世界书名称\n * @param option 可选选项\n *   - `filter:'none'|LorebookEntry的一个子集`: 按照指定字段值筛选条目, 要求对应字段值包含制定的内容; 默认为不进行筛选.\n *                                       如 `{content: '神乐光'}` 表示内容中必须有 `'神乐光'`, `{type: 'selective'}` 表示仅获取绿灯条目.\n *                                       由于实现限制, 只能做到这样的简单筛选; 如果需要更复杂的筛选, 请获取所有条目然后自己筛选.\n *\n * @returns 一个数组, 元素是各条目信息.\n */\nexport async function getLorebookEntries(lorebook: string, option: GetLorebookEntriesOption): Promise<LorebookEntry[]> {\n  if (!world_names.includes(lorebook)) {\n    throw Error(`未能找到世界书 '${lorebook}'`);\n  }\n\n  // @ts-ignore\n  let entries: LorebookEntry[] = Object.values((await loadWorldInfo(lorebook)).entries).map(toLorebookEntry);\n  const filter = option.filter ?? 'none';\n  if (filter !== 'none') {\n    entries = entries.filter(entry =>\n      Object.entries(filter).every(([field, expected_value]) => {\n        // @ts-ignore\n        const entry_value = entry[field];\n        if (Array.isArray(entry_value)) {\n          return (expected_value as string[]).every(value => entry_value.includes(value));\n        }\n        if (typeof entry_value === 'string') {\n          return entry_value.includes(expected_value as string);\n        }\n        return entry_value === expected_value;\n      }),\n    );\n  }\n\n  console.info(`获取世界书 '${lorebook}' 中的条目, 选项: ${JSON.stringify(option)}`);\n  return entries;\n}\n\n/**\n * 将条目信息修改回对应的世界书中, 如果某个字段不存在, 则该字段采用原来的值.\n *\n * 这只是修改信息, 不能创建新的条目, 因此要求条目必须已经在世界书中.\n *\n * @param lorebook 条目所在的世界书名称\n * @param entries 一个数组, 元素是各条目信息. 其中必须有 \"uid\", 而其他字段可选.\n */\nexport async function setLorebookEntries(lorebook: string, entries: LorebookEntry[]): Promise<void> {\n  if (!world_names.includes(lorebook)) {\n    throw Error(`未能找到世界书 '${lorebook}'`);\n  }\n  const data = await loadWorldInfo(lorebook);\n\n  const process_entry = async (entry: (typeof entries)[0]): Promise<void> => {\n    // @ts-ignore\n    const wi_entry = data.entries[entry.uid];\n    if (!wi_entry) {\n      throw Error(`未能在世界书 '${lorebook}' 中找到 uid=${entry.uid} 的条目`);\n    }\n    assignFieldValuesToWiEntry(data, wi_entry, fromPartialLorebookEntry(entry));\n  };\n\n  await Promise.all(entries.map(process_entry));\n  await saveWorldInfo(lorebook, data);\n  reloadEditorDebounced(lorebook);\n\n  console.info(`修改世界书 '${lorebook}' 中以下条目的以下字段:\\n${JSON.stringify(entries, undefined, 2)}`);\n}\n\n/**\n * 向世界书中新增一个条目\n *\n * @param lorebook 世界书名称\n * @param field_values 要对新条目设置的字段值, 如果不设置则采用酒馆给的默认值. **不能设置 `uid`**.\n *\n * @returns 新条目的 uid\n */\nexport async function createLorebookEntry(lorebook: string, field_values: Partial<LorebookEntry>): Promise<number> {\n  if (!world_names.includes(lorebook)) {\n    throw Error(`未能找到世界书 '${lorebook}'`);\n  }\n  const data = await loadWorldInfo(lorebook);\n  const wi_entry = createWorldInfoEntry(lorebook, data) as any;\n  const partial_lorebook_entry = fromPartialLorebookEntry(field_values);\n  if (partial_lorebook_entry.uid) {\n    delete partial_lorebook_entry.uid;\n  }\n  assignFieldValuesToWiEntry(data, wi_entry, partial_lorebook_entry);\n\n  await saveWorldInfo(lorebook, data);\n  reloadEditorDebounced(lorebook);\n\n  console.info(\n    `在世界书 '${lorebook}' 中新建 uid='${wi_entry.uid}' 条目, 并设置内容:\\n${JSON.stringify(\n      field_values,\n      undefined,\n      2,\n    )}`,\n  );\n  return wi_entry.uid;\n}\n\n/**\n * 删除世界书中的某个条目\n *\n * @param lorebook 世界书名称\n * @param uid 要删除的条目 uid\n *\n * @returns 是否成功删除, 可能因世界书不存在、对应条目不存在等原因失败\n */\nexport async function deleteLorebookEntry(lorebook: string, lorebook_uid: number): Promise<boolean> {\n  const data = await loadWorldInfo(lorebook);\n  // QUESTION: 好像没办法从 data 检测世界书是否存在?\n  let deleted = false;\n  // @ts-ignore 18046\n  if (data.entries[lorebook_uid]) {\n    // @ts-ignore 18046\n    delete data.entries[lorebook_uid];\n    deleted = true;\n  }\n  if (deleted) {\n    // @ts-ignore 2345\n    deleteWIOriginalDataValue(data, lorebook_uid);\n    await saveWorldInfo(lorebook, data);\n    reloadEditorDebounced(lorebook);\n  }\n\n  console.info(\n    `删除世界书 '${lorebook}' 中的 uid='${lorebook_uid}' 条目${deleted ? '成功' : '失败'}`,\n  );\n  return deleted;\n}\n","import { executeSlashCommandsWithOptions } from '@sillytavern/scripts/slash-commands';\n\n/**\n * 运行 Slash 命令, 注意如果命令写错了将不会有任何反馈\n *\n * @param command 要运行的 Slash 命令\n * @returns Slash 管道结果, 如果命令出错或执行了 `/abort` 则返回 `undefined`\n */\nexport async function triggerSlash(command: string): Promise<string> {\n  const result = await executeSlashCommandsWithOptions(command);\n  if (result.isError) {\n    throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n  }\n\n  console.info(`运行 Slash 命令: ${command}`);\n  return result.pipe;\n}\n\n// QUESTION: 弃用？保留实现但是只推荐使用triggerSlash\nexport async function triggerSlashWithResult(command: string): Promise<string> {\nconst result = await executeSlashCommandsWithOptions(command);\n      if (result.isError) {\n        throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n      }\n\n  console.info(`运行 Slash 命令 '${command}', 结果: ${result.pipe}`);\n  return result.pipe;\n}\n","import { partition } from '@/util/helper';\n\nimport { characters, reloadCurrentChat, saveChatConditional, saveSettings, this_chid } from '@sillytavern/script';\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\nimport { extension_settings, writeExtensionField } from '@sillytavern/scripts/extensions';\nimport { regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\n\nexport function isCharacterTavernRegexEnabled(): boolean {\n  // @ts-ignore 2345\n  return extension_settings?.character_allowed_regex?.includes(characters?.[this_chid]?.avatar);\n}\n\nexport function getGlobalRegexes(): RegexScriptData[] {\n  return extension_settings.regex ?? [];\n}\n\nexport function getCharacterRegexes(): RegexScriptData[] {\n  if (this_chid === undefined) {\n    throw new Error('当前没有选中角色，无法获取角色正则');\n  }\n  // @ts-ignore\n  return characters[this_chid]?.data?.extensions?.regex_scripts ?? [];\n}\n\nfunction toTavernRegex(regex_script_data: RegexScriptData, scope: 'global' | 'character'): TavernRegex {\n  return {\n    id: regex_script_data.id,\n    script_name: regex_script_data.scriptName,\n    enabled: !regex_script_data.disabled,\n    run_on_edit: regex_script_data.runOnEdit,\n    scope: scope,\n\n    find_regex: regex_script_data.findRegex,\n    replace_string: regex_script_data.replaceString,\n\n    source: {\n      user_input: regex_script_data.placement.includes(regex_placement.USER_INPUT),\n      ai_output: regex_script_data.placement.includes(regex_placement.AI_OUTPUT),\n      slash_command: regex_script_data.placement.includes(regex_placement.SLASH_COMMAND),\n      world_info: regex_script_data.placement.includes(regex_placement.WORLD_INFO),\n    },\n\n    destination: {\n      display: regex_script_data.markdownOnly,\n      prompt: regex_script_data.promptOnly,\n    },\n\n    min_depth: typeof regex_script_data.minDepth === 'number' ? regex_script_data.minDepth : null,\n    max_depth: typeof regex_script_data.maxDepth === 'number' ? regex_script_data.maxDepth : null,\n  };\n}\n\nfunction fromTavernRegex(tavern_regex: TavernRegex): RegexScriptData {\n  return {\n    id: tavern_regex.id,\n    scriptName: tavern_regex.script_name,\n    disabled: !tavern_regex.enabled,\n    runOnEdit: tavern_regex.run_on_edit,\n\n    findRegex: tavern_regex.find_regex,\n    replaceString: tavern_regex.replace_string,\n    trimStrings: [], // TODO: handle this?\n\n    placement: [\n      ...(tavern_regex.source.user_input ? [regex_placement.USER_INPUT] : []),\n      ...(tavern_regex.source.ai_output ? [regex_placement.AI_OUTPUT] : []),\n      ...(tavern_regex.source.slash_command ? [regex_placement.SLASH_COMMAND] : []),\n      ...(tavern_regex.source.world_info ? [regex_placement.WORLD_INFO] : []),\n    ],\n\n    substituteRegex: 0, // TODO: handle this?\n\n    // @ts-ignore\n    minDepth: tavern_regex.min_depth,\n    // @ts-ignore\n    maxDepth: tavern_regex.max_depth,\n\n    markdownOnly: tavern_regex.destination.display,\n    promptOnly: tavern_regex.destination.prompt,\n  };\n}\n\n/**\n * 判断局部正则是否启用\n * @returns 布尔值\n */\nexport function isCharacterTavernRegexesEnabled(): boolean {\n  const result = isCharacterTavernRegexEnabled();\n\n  console.info(`查询到局部正则${result ? '被启用' : '被禁用'}`);\n  return result;\n}\n\n/**\n * 获取酒馆正则\n *\n * @param option 可选选项\n *   - `scope?:'all'|'global'|'character'`:         // 按所在区域筛选酒馆正则; 默认为 `'all'`\n *   - `enable_state?:'all'|'enabled'|'disabled'`:  // 按是否被开启筛选酒馆正则; 默认为 `'all'`\n *\n * @returns 一个数组, 数组的元素是酒馆正则 `TavernRegex`. 该数组依据正则作用于文本的顺序排序, 也就是酒馆显示正则的地方从上到下排列.\n */\nexport function getTavernRegexes(option: GetTavernRegexesOption = {}): TavernRegex[] {\n  const scope = option.scope ?? 'all';\n  const enable_state = option.enable_state ?? 'all';\n\n  if (!['all', 'enabled', 'disabled'].includes(enable_state)) {\n    throw Error(`提供的 enable_state 无效, 请提供 'all', 'enabled' 或 'disabled', 你提供的是: ${enable_state}`);\n  }\n  if (!['all', 'global', 'character'].includes(scope)) {\n    throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${scope}`);\n  }\n\n  let regexes: TavernRegex[] = [];\n  if (scope === 'all' || scope === 'global') {\n    regexes = [...regexes, ...getGlobalRegexes().map(regex => toTavernRegex(regex, 'global'))];\n  }\n  if (scope === 'all' || scope === 'character') {\n    regexes = [...regexes, ...getCharacterRegexes().map(regex => toTavernRegex(regex, 'character'))];\n  }\n  if (enable_state !== 'all') {\n    regexes = regexes.filter(regex => regex.enabled === (enable_state === 'enabled'));\n  }\n\n  return regexes;\n}\n\n/**\n * 完全替换酒馆正则为 `regexes`.\n * - **这是一个很慢的操作!** 尽量对正则做完所有事后再一次性 replaceTavernRegexes.\n * - **为了重新应用正则, 它会重新载入整个聊天消息**, 将会触发 `tavern_events.CHAT_CHANGED` 进而重新加载全局脚本和楼层消息.\n *     这意味着如果你在全局脚本中运行本函数, 则该函数之后的内容将不会被执行.\n *\n * 之所以提供这么直接的函数, 是因为你可能需要调换正则顺序等.\n *\n * @param regexes 要用于替换的酒馆正则\n * @param option 可选选项\n *   - scope?: 'all' | 'global' | 'character';  // 要替换的酒馆正则部分; 默认为 'all'\n */\nexport async function replaceTavernRegexes(\n  regexes: TavernRegex[],\n  option: ReplaceTavernRegexesOption = {},\n): Promise<void> {\n  const scope = option.scope ?? 'all';\n\n  if (!['all', 'global', 'character'].includes(scope)) {\n    throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${scope}`);\n  }\n\n  // FIXME: `trimStrings` and `substituteRegex` are not considered\n  const emptied_regexes = regexes.filter(regex => regex.script_name == '');\n  if (emptied_regexes.length > 0) {\n    throw Error(`不能将酒馆正则的名称设置为空字符串:\\n${JSON.stringify(emptied_regexes.map(regex => regex.id))}`);\n  }\n  const [global_regexes, character_regexes] = partition(regexes, regex => regex.scope === 'global').map(regexes =>\n    regexes.map(fromTavernRegex),\n  );\n\n  if (this_chid === undefined) {\n    throw new Error('当前没有选中角色，无法获取角色正则');\n  }\n  // @ts-ignore\n  const character = characters[this_chid];\n  if (scope === 'all' || scope === 'global') {\n    extension_settings.regex = global_regexes;\n  }\n  if (scope === 'all' || scope === 'character') {\n    if (character) {\n      // @ts-ignore\n      characters[this_chid].data.extensions.regex_scripts = character_regexes;\n      // @ts-ignore\n      await writeExtensionField(this_chid, 'regex_scripts', character_regexes);\n    }\n  }\n  await saveSettings();\n  if (character) {\n    await saveChatConditional();\n  }\n  await reloadCurrentChat();\n\n  console.info(`替换酒馆正则\\\n${scope === 'all' || scope === 'global' ? `, 全局正则:\\n${JSON.stringify(global_regexes, undefined, 2)}` : ``}\\\n${scope === 'all' || scope === 'character' ? `, 局部正则:\\n${JSON.stringify(character_regexes, undefined, 2)}` : ``}`);\n}\n","import { substituteParamsExtended } from '@sillytavern/script';\n\n/**\n * 替换字符串中的酒馆宏\n *\n * @param text 要替换的字符串\n * @returns 替换结果\n *\n * @example\n * const text = substitudeMacros(\"{{char}} speaks in {{lastMessageId}}\");\n * text == \"少女歌剧 speaks in 5\";\n */\nexport function substitudeMacros(text: string): string {\n  const text_demacroed = substituteParamsExtended(text);\n\n  console.info(`替换字符串中的宏, 字符串: '${text}', 结果: '${text_demacroed}'`);\n  return text_demacroed;\n}\n","import { chat_metadata, saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\n\ninterface VariableOption {\n  type: 'chat' | 'global'; // 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n}\n\nfunction getVariablesByType(type: 'chat' | 'global'): Record<string, any> {\n  switch (type) {\n    case 'chat':\n      { const metadata = chat_metadata as {\n        variables: Record<string, any> | undefined;\n      };\n      if (!metadata.variables) {\n        metadata.variables = {};\n      }\n      return metadata.variables; }\n    case 'global':\n      return extension_settings.variables.global;\n  }\n}\n\n/**\n * 获取变量表\n *\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @returns 变量表\n *\n * @example\n * // 获取所有聊天变量并弹窗输出结果\n * const variables = getVariables();\n * alert(variables);\n *\n * @example\n * // 获取所有全局变量\n * const variables = getVariables({type: 'global'});\n * // 前端助手内置了 lodash 库, 你能用它做很多事, 比如查询某个变量是否存在\n * if (_.has(variables, \"神乐光.好感度\")) {\n *   ...\n * }\n */\nexport function getVariables({ type = 'chat' }: VariableOption): Record<string, any> {\n  const result = getVariablesByType(type);\n\n  console.info(`$获取${type == 'chat' ? `聊天` : `全局`}变量表:\\n${JSON.stringify(result, undefined, 2)}`);\n  return result;\n}\n\n/**\n * 完全替换变量表为 `variables`\n *\n * 之所以提供这么直接的函数, 是因为前端助手内置了 lodash 库:\n *   `insertOrAssignVariables` 等函数其实就是先 `getVariables` 获取变量表, 用 lodash 库处理, 再 `replaceVariables` 替换变量表.\n *\n * @param variables 要用于替换的变量表\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @example\n * // 执行前的聊天变量: `{爱城华恋: {好感度: 5}}`\n * await replaceVariables({神乐光: {好感度: 5, 认知度: 0}});\n * // 执行后的聊天变量: `{神乐光: {好感度: 5, 认知度: 0}}`\n *\n * @example\n * // 删除 `{神乐光: {好感度: 5}}` 变量\n * let variables = getVariables();\n * _.unset(variables, \"神乐光.好感度\");\n * replaceVariables(variables);\n */\nexport function replaceVariables(variables: Record<string, any>, { type = 'chat' }: VariableOption): void {\n  switch (type) {\n    case 'chat':\n      (chat_metadata as { variables: Object }).variables = variables;\n      saveMetadataDebounced();\n      break;\n    case 'global':\n      extension_settings.variables.global = variables;\n      saveSettingsDebounced();\n      break;\n  }\n\n  console.info(`将${type == 'chat' ? `聊天` : `全局`}变量表替换为:\\n${JSON.stringify(variables, undefined, 2)}`);\n}","import { getCharAvatarPath, getCharData, getChatHistoryBrief, getChatHistoryDetail } from '@/function/character';\nimport { getChatMessages, setChatMessage } from '@/function/chat_message';\nimport { formatAsDisplayedMessage } from '@/function/displayed_message';\nimport { updateFrontendVersion } from '@/function/frontend_version';\nimport { generate, generateRaw } from '@/function/generate';\nimport {\n  createLorebook,\n  deleteLorebook,\n  getCharLorebooks,\n  getLorebooks,\n  getLorebookSettings,\n  setCurrentCharLorebooks,\n  setLorebookSettings,\n} from '@/function/lorebook';\nimport {\n  createLorebookEntry,\n  deleteLorebookEntry,\n  getLorebookEntries,\n  setLorebookEntries,\n} from '@/function/lorebook_entry';\nimport { triggerSlash, triggerSlashWithResult } from '@/function/slash';\nimport { getTavernRegexes, isCharacterTavernRegexesEnabled, replaceTavernRegexes } from '@/function/tavern_regex';\nimport { substitudeMacros } from '@/function/util';\nimport { getVariables, replaceVariables } from '@/function/variables';\nimport { audioEnable, audioImport, audioMode, audioPlay, audioSelect } from '@/slash_command/audio';\n\n/**\n * 初始化TavernHelper全局对象\n * 将各种功能函数暴露到全局作用域\n */\nexport function initTavernHelperObject() {\n  (globalThis as unknown as { TavernHelper: Record<string, any> }).TavernHelper = {\n    // 变量\n    getVariables,\n    replaceVariables,\n    // 音频\n    audioEnable,\n    audioImport,\n    audioMode,\n    audioPlay,\n    audioSelect,\n    // 角色\n    getCharData,\n    getCharAvatarPath,\n    getChatHistoryBrief,\n    getChatHistoryDetail,\n    // 消息\n    getChatMessages,\n    setChatMessage,\n    // 显示消息\n    formatAsDisplayedMessage,\n    // 更新前端版本\n    updateFrontendVersion,\n    // 工具\n    substitudeMacros,\n    // 生成\n    generate,\n    generateRaw,\n    // 世界书\n    getLorebookEntries,\n    setLorebookEntries,\n    createLorebookEntry,\n    deleteLorebookEntry,\n    // 世界书设置\n    getLorebookSettings,\n    setLorebookSettings,\n    getCharLorebooks,\n    setCurrentCharLorebooks,\n    getLorebooks,\n    deleteLorebook,\n    createLorebook,\n    // 触发命令\n    triggerSlash,\n    triggerSlashWithResult,\n    // 酒馆正则\n    isCharacterTavernRegexesEnabled,\n    getTavernRegexes,\n    replaceTavernRegexes,\n  };\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"MAX_INJECTION_DEPTH\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.MAX_INJECTION_DEPTH), [\"activateSendButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.activateSendButtons), [\"baseChatReplace\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.baseChatReplace), [\"characters\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.characters), [\"chat\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.chat), [\"chat_metadata\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.chat_metadata), [\"cleanUpMessage\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.cleanUpMessage), [\"countOccurrences\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.countOccurrences), [\"deactivateSendButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.deactivateSendButtons), [\"eventSource\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.eventSource), [\"event_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.event_types), [\"extension_prompt_roles\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.extension_prompt_roles), [\"extension_prompt_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.extension_prompt_types), [\"getBiasStrings\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getBiasStrings), [\"getCharacterCardFields\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getCharacterCardFields), [\"getExtensionPromptRoleByName\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getExtensionPromptRoleByName), [\"getMaxContextSize\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getMaxContextSize), [\"getOneCharacter\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getOneCharacter), [\"getPastCharacterChats\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getPastCharacterChats), [\"getRequestHeaders\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getRequestHeaders), [\"getThumbnailUrl\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getThumbnailUrl), [\"isOdd\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.isOdd), [\"messageFormatting\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.messageFormatting), [\"name1\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.name1), [\"name2\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.name2), [\"reloadCurrentChat\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.reloadCurrentChat), [\"saveCharacterDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveCharacterDebounced), [\"saveChatConditional\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveChatConditional), [\"saveSettings\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveSettings), [\"saveSettingsDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveSettingsDebounced), [\"setExtensionPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.setExtensionPrompt), [\"setGenerationProgress\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.setGenerationProgress), [\"showSwipeButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.showSwipeButtons), [\"stopGeneration\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.stopGeneration), [\"substituteParams\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.substituteParams), [\"substituteParamsExtended\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.substituteParamsExtended), [\"system_message_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.system_message_types), [\"this_chid\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.this_chid), [\"updateMessageBlock\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.updateMessageBlock), [\"user_avatar\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.user_avatar) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"isMobile\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_RossAscends_mods_js_224b6398__.isMobile) });","import { getSettingValue, saveSettingValue, extensionFolderPath } from '@/util/extension_variables';\n\nimport { chat_metadata, eventSource, event_types, saveSettingsDebounced } from '@sillytavern/script';\nimport {\n  renderExtensionTemplateAsync,\n  saveMetadataDebounced,\n} from '@sillytavern/scripts/extensions';\nimport { POPUP_TYPE, callGenericPopup } from '@sillytavern/scripts/popup';\nimport { isMobile } from '@sillytavern/scripts/RossAscends-mods';\nimport { getSortableDelay } from '@sillytavern/scripts/utils';\n\nlet isAudioEnabled: boolean;\nexport let list_BGMS: string[] = [];\nexport let list_ambients: string[] = [];\nlet bgmEnded = true;\nlet ambientEnded = true;\n\nconst isExtensionEnabled = getSettingValue('enabled_extension');\nconst templatePath = `${extensionFolderPath}/src/component/audio`;\n// 定义默认音频设置\nexport const defaultAudioSettings = {\n  audio_enabled: true,\n  bgm_enabled: true,\n  ambient_enabled: true,\n  bgm_mode: 'repeat',\n  bgm_muted: false,\n  bgm_volume: 50,\n  bgm_selected: null,\n  bgm_current_time: 0,\n  ambient_mode: 'stop',\n  ambient_muted: false,\n  ambient_volume: 50,\n  ambient_selected: null,\n  ambient_current_time: 0,\n  audio_cooldown: 0,\n};\n\n/**\n * 更新音频\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @param isUserInput 是否由用户操作触发-将导致音频中断\n */\nexport async function updateAudio(type = 'bgm', isUserInput = false) {\n  if (!getSettingValue('audio.audio_setting')) {\n    return;\n  }\n\n  const isTypeEnabled =\n    type === 'bgm'\n      ? getSettingValue('audio.bgm_enabled')\n      : getSettingValue('audio.ambient_enabled');\n\n  if (!isTypeEnabled) {\n    return;\n  }\n  const audioEnded = type === 'bgm' ? bgmEnded : ambientEnded;\n  const audioSelector = `#audio_${type}`;\n\n  if (!isUserInput && $(audioSelector).attr('src') != '' && !audioEnded) {\n    return;\n  }\n\n  let audio_url = '';\n  const playlist = await getAudioUrl(type as 'bgm' | 'ambient');\n\n  if (isUserInput) {\n    audio_url =\n      type === 'bgm'\n        ? getSettingValue('audio.bgm_selected') || playlist[0]\n        : getSettingValue('audio.ambient_selected') || playlist[0];\n  } else {\n    const mode =\n      type === 'bgm'\n        ? getSettingValue('audio.bgm_mode')\n        : getSettingValue('audio.ambient_mode');\n\n    const selected =\n      type === 'bgm'\n        ? getSettingValue('audio.bgm_selected')\n        : getSettingValue('audio.ambient_selected');\n\n    audio_url = getNextFileByMode(mode, playlist, selected);\n  }\n\n  if (!audio_url) {\n    return;\n  }\n\n  const audio = $(audioSelector)[0] as HTMLAudioElement;\n\n  // 对于ambient类型，处理掉防缓存后缀\n  if (type === 'ambient') {\n    const cleanAudioSrc = audio.src.split('?')[0];\n    const cleanAudioUrl = audio_url.split('?')[0];\n    if (decodeURIComponent(cleanAudioSrc) === decodeURIComponent(cleanAudioUrl) && !audioEnded) {\n      return;\n    }\n  } else if (decodeURIComponent(audio.src) === decodeURIComponent(audio_url) && !audioEnded) {\n      return;\n    }\n\n  // 设置audioEnded状态\n  if (type === 'bgm') {\n    bgmEnded = false;\n  } else {\n    ambientEnded = false;\n  }\n\n  if (type === 'bgm') {\n    audio.src = audio_url;\n    audio.load();\n\n    await new Promise<void>(resolve => {\n      const canPlayHandler = () => {\n        audio.removeEventListener('canplaythrough', canPlayHandler);\n        resolve();\n      };\n\n      if (audio.readyState >= HTMLMediaElement.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener('canplaythrough', canPlayHandler);\n      }\n    });\n\n    await playAudio(type);\n  } else {\n    // 对于ambient类型，使用缓存破坏\n    const audioUrlWithCacheBusting = getAudioUrlWithCacheBusting(audio_url);\n    audio.src = audioUrlWithCacheBusting;\n    audio.load();\n\n    await new Promise<void>(resolve => {\n      const canPlayHandler = () => {\n        audio.removeEventListener('canplaythrough', canPlayHandler);\n        resolve();\n      };\n\n      if (audio.readyState >= HTMLMediaElement.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener('canplaythrough', canPlayHandler);\n      }\n    });\n\n    await playAudio(type as 'bgm' | 'ambient');\n  }\n\n  // 更新选中的音频\n  if (type === 'bgm') {\n    saveSettingValue('audio.bgm_selected', audio_url);\n  } else {\n    saveSettingValue('audio.ambient_selected', audio_url);\n  }\n\n  // 更新选择器\n  const selectElement = $(`#audio_${type}_select`);\n  if (selectElement.val() !== audio_url) {\n    selectElement.val(audio_url);\n  }\n\n  saveSettingsDebounced();\n}\n\n/**\n * 更新音频下拉选择菜单\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function updateAudioSelect(type = 'bgm') {\n  if (!getSettingValue(`audio.${type}_enabled`)) {\n    return;\n  }\n\n  const selectElement = $(`#audio_${type}_select`);\n  selectElement.empty();\n\n  if (type === 'bgm') {\n    list_BGMS = await getAudioUrl('bgm');\n  } else {\n    list_ambients = await getAudioUrl('ambient');\n  }\n\n  const audioList = type === 'bgm' ? list_BGMS : list_ambients;\n  let selectedSetting =\n    type === 'bgm'\n      ? getSettingValue('audio.bgm_selected')\n      : getSettingValue('audio.ambient_selected');\n\n  if (audioList && audioList.length > 0) {\n    // 检查当前选择的音频是否在列表中，如果不在则选择第一个\n    if (!audioList.includes(selectedSetting)) {\n      console.warn(`[Audio] 当前选择的音频 ${selectedSetting} 不在列表中，自动选择列表第一个音频`);\n      selectedSetting = audioList[0];\n      if (type === 'bgm') {\n        saveSettingValue('audio.bgm_selected', selectedSetting);\n      } else {\n        saveSettingValue('audio.ambient_selected', selectedSetting);\n      }\n      saveSettingsDebounced();\n    }\n\n    const audioFiles = Array.isArray(audioList) ? audioList : audioList.split(',').map(file => file.trim());\n    audioFiles.forEach((file: string) => {\n      const fileLabel = file.replace(/^.*[\\\\\\/]/, '').replace(/\\.[^/.]+$/, '');\n      selectElement.append(new Option(fileLabel, file));\n    });\n\n    selectElement.val(selectedSetting);\n  } else {\n    console.log(`[Audio] 暂无可用的 ${type.toUpperCase()} 资源`);\n  }\n}\n\n/**\n * 获取音频URL\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @returns 音频URL数组\n */\nexport async function getAudioUrl(type = 'bgm') {\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n  //@ts-ignore\n  const chatSpecificUrls = chat_metadata.variables?.[typeKey] || [];\n  return chatSpecificUrls;\n}\n\n/**\n * 添加缓存参数防止缓存\n * @param originalUrl 原始URL\n */\nexport function getAudioUrlWithCacheBusting(originalUrl: string) {\n  if (!originalUrl) return '';\n  const cacheBuster = new Date().getTime();\n  const separator = originalUrl.includes('?') ? '&' : '?';\n  return `${originalUrl}${separator}_=${cacheBuster}`;\n}\n\n/**\n * 根据播放模式获取下一个音频文件\n * @param mode 播放模式\n * @param playlist 播放列表\n * @param currentFile 当前文件\n */\nexport function getNextFileByMode(mode: string, playlist: string[], currentFile: string) {\n  if (!playlist || playlist.length === 0) {\n    return '';\n  }\n\n  switch (mode) {\n    case 'repeat':\n      return playlist[0];\n    case 'single':\n      return currentFile || playlist[0];\n    case 'random': {\n      const filteredPlaylist = playlist.filter(file => file !== currentFile);\n      if (filteredPlaylist.length === 0) {\n        return playlist[0];\n      }\n      const randomIndex = Math.floor(Math.random() * filteredPlaylist.length);\n      return filteredPlaylist[randomIndex];\n    }\n    case 'stop':\n      return '';\n    default:\n      return playlist[0];\n  }\n}\n\n/**\n * 切换音频控件状态\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @param status 是否启用\n */\nexport function toggleAudioControls(type: 'bgm' | 'ambient', status = 'enable') {\n  const isMainEnabled = $('#audio_enabled').prop('checked');\n\n  const shouldEnable = isMainEnabled && status === 'enable';\n\n  const controlIds = [\n    `#audio_${type}_play_pause`,\n    `#audio_${type}_mute`,\n    `#audio_${type}_mode`,\n    `#audio_${type}_select`,\n    `#audio_${type}_volume_slider`,\n  ];\n\n  controlIds.forEach(id => {\n    $(id).prop('disabled', !shouldEnable);\n  });\n}\n\n/**\n * 点击音频启用按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function onAudioEnabledClick(type = 'bgm') {\n  const enabled = $(`#enable_${type}`).prop('checked');\n  saveSettingValue(`audio.${type}_enabled`, enabled);\n\n  if (enabled) {\n    toggleAudioControls(type as 'bgm' | 'ambient', 'enable');\n    await updateAudio(type, false);\n  } else {\n    ($(`#audio_${type}`)[0] as HTMLAudioElement).pause();\n    toggleAudioControls(type as 'bgm' | 'ambient', 'disable');\n  }\n}\n\n/**\n * 初始化音频事件监听\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport function initAudioEventListeners(type: 'bgm' | 'ambient') {\n  ($(`#audio_${type}`) as HTMLAudioElement).on('ended', async function () {\n    if (type === 'bgm') {\n      bgmEnded = true;\n    } else {\n      ambientEnded = true;\n    }\n    const mode = getSettingValue(`audio.${type}_mode`);\n\n    if (mode === 'stop') {\n      return;\n    }\n\n    await updateAudio(type, false);\n  });\n}\n\n/**\n * 初始化进度条\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport function initializeProgressBar(type: 'bgm' | 'ambient') {\n  const $audioElement = $(`#audio_${type}`);\n  const $progressSlider = $(`#audio_${type}_progress_slider`);\n\n  $audioElement.on('timeupdate', function () {\n    if (!isNaN(this.duration)) {\n      const progressPercent = (this.currentTime / this.duration) * 100;\n      $progressSlider.val(progressPercent);\n    }\n    const cooldownBGM = getSettingValue('audio.audio_cooldown');\n    const remainingTime = this.duration - this.currentTime;\n\n    if (cooldownBGM > 0 && remainingTime <= cooldownBGM && !this.isFadingOut) {\n      const initialVolume = this.volume;\n      const fadeStep = initialVolume / (cooldownBGM * 10);\n      this.isFadingOut = true;\n\n      const fadeOutInterval = setInterval(() => {\n        if (this.volume > 0) {\n          this.volume = Math.max(0, this.volume - fadeStep);\n        } else {\n          clearInterval(fadeOutInterval);\n          this.isFadingOut = false;\n        }\n      }, 100);\n    }\n  });\n\n  $audioElement.on('play', function () {\n    const cooldownBGM = getSettingValue('audio.audio_cooldown');\n    const targetVolume = $(`#audio_${type}_volume_slider`).val() / 100;\n\n    if (cooldownBGM <= 0) {\n      this.volume = targetVolume;\n      return;\n    }\n\n    this.volume = 0;\n    const fadeStep = targetVolume / (cooldownBGM * 10);\n    let fadeInInterval = setInterval(() => {\n      if (this.volume < targetVolume) {\n        this.volume = Math.min(targetVolume, this.volume + fadeStep);\n      } else {\n        clearInterval(fadeInInterval);\n      }\n    }, 100);\n  });\n\n  $audioElement.on('loadedmetadata', function () {\n    if (!isNaN(this.duration)) {\n      $progressSlider.attr('max', 100);\n    }\n  });\n\n  $progressSlider.on('input', function () {\n    const value = $(this).val();\n    if (!isNaN($audioElement[0].duration)) {\n      $audioElement[0].currentTime = (value / 100) * $audioElement[0].duration;\n    }\n  });\n}\n\n/**\n * 音量滑块滚轮调节事件处理\n * @param e 事件对象\n */\nfunction onVolumeSliderWheelEvent(this: any, e: WheelEvent) {\n  const slider = $(this);\n  e.preventDefault();\n  e.stopPropagation();\n\n  const delta = e.deltaY / 20;\n  const sliderVal = Number(slider.val());\n\n  let newVal = sliderVal - delta;\n  if (newVal < 0) {\n    newVal = 0;\n  } else if (newVal > 100) {\n    newVal = 100;\n  }\n\n  slider.val(newVal).trigger('input');\n}\n\n/**\n * 长按音量控制按钮出现音量调节\n * @param volumeControlId 音量控制按钮ID\n * @param iconId 音量控制按钮图标ID\n */\nfunction handleLongPress(volumeControlId: string, iconId: string) {\n  const $volumeControl = $(`#${volumeControlId}`);\n  const $icon = $(`#${iconId}`);\n  let pressTimer: number | undefined;\n\n  if (isMobile()) {\n    $icon.on('touchstart', function (e) {\n      pressTimer = setTimeout(() => {\n        $volumeControl.css('display', 'block');\n      }, 500);\n    });\n\n    $icon.on('touchend', function (e) {\n      clearTimeout(pressTimer);\n    });\n\n    $(document).on('click', function (event) {\n      if (\n        !$icon.is(event.target) &&\n        $icon.has(event.target).length === 0 &&\n        !$volumeControl.is(event.target) &&\n        $volumeControl.has(event.target).length === 0\n      ) {\n        $volumeControl.css('display', 'none');\n      }\n    });\n  }\n}\n\n/**\n * 刷新音频资源\n */\nexport async function refreshAudioResources() {\n  updateAudioSelect('bgm');\n  updateAudioSelect('ambient');\n}\n\n/**\n * 打开音频资源管理弹窗\n * @param typeKey 音频类型 \"bgmurl\" 或 \"ambienturl\"\n */\n\nasync function openUrlManagerPopup(typeKey: 'bgmurl' | 'ambienturl') {\n  const urlManager = $(await renderExtensionTemplateAsync(`${templatePath}`, 'audio_url_manager'));\n  urlManager.prepend(`\n    <style>\n      #saved_audio_url.empty::after {\n        content: \"暂无音频\";\n        color: #999;\n        margin-top: 20px;\n        font-size: 12px;\n      }\n    </style>\n  `);\n  const savedAudioUrl = urlManager.find('#saved_audio_url').empty();\n  const urlTemplate = $(await renderExtensionTemplateAsync(`${templatePath}`, 'audio_url_template'));\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  let urlValue: string[] = chat_metadata.variables[typeKey];\n  if (!urlValue) {\n    urlValue = [];\n\n    savedAudioUrl.addClass('empty');\n  } else {\n    try {\n      if (urlValue.length === 0) {\n        savedAudioUrl.addClass('empty');\n      }\n    } catch (error) {\n      console.error(`[Audio] Failed to parse ${typeKey}:`, error);\n      return null;\n    }\n  }\n\n  const updatedUrls: Record<string, string> = {};\n  let newUrlOrder = [...urlValue];\n  function renderUrl(container: JQuery<HTMLElement>, url: string) {\n    const urlHtml = urlTemplate.clone();\n    let fileName;\n    if (url.includes('/')) {\n      const parts = url.split('/');\n      fileName = parts[parts.length - 1] || parts[parts.length - 2];\n    } else {\n      fileName = url;\n    }\n\n    const id = fileName.replace(/\\./g, '-');\n\n    urlHtml.attr('id', id);\n    urlHtml.find('.audio_url_name').text(fileName);\n\n    urlHtml.find('.audio_url_name').attr('data-url', url);\n\n    urlHtml.find('.edit_existing_url').on('click', async function () {\n      const currentUrl = urlHtml.find('.audio_url_name').attr('data-url');\n\n      if (!currentUrl) {\n        console.error('[Audio] No URL found for this element.');\n        return;\n      }\n\n      const inputUrl = await callGenericPopup('', POPUP_TYPE.INPUT, currentUrl);\n\n      if (!inputUrl) {\n        return;\n      }\n\n      const newFileName = inputUrl.split('/').pop();\n\n      const newId = newFileName.replace(/\\./g, '-');\n\n      urlHtml.attr('id', newId);\n      urlHtml.find('.audio_url_name').text(newFileName);\n      urlHtml.find('.audio_url_name').attr('data-url', inputUrl);\n\n      updatedUrls[currentUrl] = inputUrl;\n    });\n\n    urlHtml.find('.delete_url').on('click', async function () {\n      const confirmDelete = await callGenericPopup('确认要删除此链接?', POPUP_TYPE.CONFIRM);\n\n      if (!confirmDelete) {\n        return;\n      }\n\n      // 仅从DOM中移除元素\n      urlHtml.remove();\n\n      // 检查是否需要显示空状态提示\n      if (savedAudioUrl.find('.audio_url_name').length === 0) {\n        savedAudioUrl.addClass('empty');\n      }\n    });\n\n    container.append(urlHtml);\n  }\n\n  urlValue.forEach(url => {\n    renderUrl(savedAudioUrl, url);\n  });\n  urlManager.find('#import_button').on('click', async function () {\n    const newUrls = await openUrlImportPopup();\n\n    if (!newUrls) {\n      console.debug(`[Audio] ${typeKey} URL导入已取消`);\n      return;\n    }\n\n    savedAudioUrl.removeClass('empty');\n\n    newUrls.forEach(url => {\n      renderUrl(savedAudioUrl, url);\n    });\n  });\n  (savedAudioUrl as any).sortable({\n    delay: getSortableDelay(),\n    handle: '.drag-handle',\n    stop: function () {\n      newUrlOrder = [];\n      savedAudioUrl.find('.audio_url_name').each(function () {\n        const newUrl = $(this).attr('data-url');\n        if (newUrl) {\n          newUrlOrder.push(newUrl);\n        }\n      });\n    },\n  });\n  const result = await callGenericPopup(urlManager, POPUP_TYPE.CONFIRM, '', {\n    okButton: `确认`,\n    cancelButton: `取消`,\n  });\n\n  if (!result) {\n    return;\n  } else {\n    // 直接读取所有data-url属性，生成新的URL列表\n    const newUrlList: string[] = [];\n    savedAudioUrl.find('.audio_url_name').each(function () {\n      const url = $(this).attr('data-url');\n      if (url) {\n        newUrlList.push(url);\n      }\n    });\n\n    // 检查当前播放的音频是否在新的列表中\n    const currentBgmUrl = getSettingValue('audio.bgm_selected');\n    const currentAmbientUrl = getSettingValue('audio.ambient_selected');\n\n    // 如果当前播放的音频不在新的列表中，停止播放\n    if (typeKey === 'bgmurl' && currentBgmUrl && !newUrlList.includes(currentBgmUrl)) {\n      const bgmAudio = $('#audio_bgm')[0] as HTMLAudioElement;\n      bgmAudio.pause();\n      bgmEnded = true;\n    } else if (typeKey === 'ambienturl' && currentAmbientUrl && !newUrlList.includes(currentAmbientUrl)) {\n      const ambientAudio = $('#audio_ambient')[0] as HTMLAudioElement;\n      ambientAudio.pause();\n      ambientEnded = true;\n    }\n\n    // 更新并保存新的URL列表\n    chat_metadata.variables[typeKey] = newUrlList;\n    saveMetadataDebounced();\n    if (typeKey === 'bgmurl') {\n      updateAudioSelect('bgm');\n    } else if (typeKey === 'ambienturl') {\n      updateAudioSelect('ambient');\n    }\n  }\n}\n\n/**\n * 点击音频总开关时的处理函数\n */\nasync function onEnabledClick(userInput: boolean = true, enable: boolean = true) {\n  if (userInput) {\n    isAudioEnabled = enable;\n    saveSettingValue('audio_enabled', isAudioEnabled);\n  }\n\n  if (enable) {\n    $('#audio-player-content').css('opacity', '1');\n    if (!isExtensionEnabled) {\n      return;\n    }\n    toggleAudioControls('bgm', 'enable');\n    toggleAudioControls('ambient', 'enable');\n    const bgmUrl = await getAudioUrl('bgm');\n    const ambientUrl = await getAudioUrl('ambient');\n    if (bgmUrl.length > 0) {\n      const bgmAudioElement = $('#audio_bgm')[0] as HTMLAudioElement;\n      try {\n        await bgmAudioElement.play();\n      } catch (error) {\n        throw new Error('[Audio] 播放音乐失败：没有提供有效源');\n      }\n    }\n    if (ambientUrl.length > 0) {\n      const ambientAudioElement = $('#audio_ambient')[0] as HTMLAudioElement;\n      try {\n        await ambientAudioElement.play();\n      } catch (error) {\n        throw new Error('[Audio] 播放音效失败：没有提供有效源');\n      }\n    }\n  } else {\n    $('#audio-player-content').css('opacity', '0.5');\n    ($('#audio_bgm')[0] as HTMLAudioElement).pause();\n    ($('#audio_ambient')[0] as HTMLAudioElement).pause();\n    toggleAudioControls('bgm', 'disable');\n    toggleAudioControls('ambient', 'disable');\n  }\n}\n\n/**\n * 播放音频\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function playAudio(type: 'bgm' | 'ambient') {\n  if (\n    !getSettingValue('activate_setting') ||\n    !getSettingValue('audio.audio_setting') ||\n    !getSettingValue(`audio.${type}_enabled`)\n  ) {\n    return;\n  }\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement.error && audioElement.error.code === 4) {\n    console.warn(`The ${type} element has no supported sources. Trying to reload selected audio from dropdown...`);\n\n    const selectedAudio = $(`#audio_${type}_select`).val() as string;\n    if (!selectedAudio) {\n      console.error(`No audio selected for ${type}`);\n      return;\n    }\n\n    audioElement.src = selectedAudio;\n    audioElement.load();\n  }\n\n  try {\n    await audioElement.play();\n    playPauseIcon.removeClass('fa-play');\n    playPauseIcon.addClass('fa-pause');\n  } catch (error) {\n    console.error(`[Audio] 播放 ${type} 音频时出错:`, error);\n  }\n}\n\n/**\n * 点击各自音频模式按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioModeClick(type: 'bgm' | 'ambient') {\n  const modes = [\n    { mode: 'repeat', icon: 'fa-repeat' },\n    { mode: 'random', icon: 'fa-random' },\n    { mode: 'single', icon: 'fa-redo-alt' },\n    { mode: 'stop', icon: 'fa-cancel' },\n  ];\n\n  const currentModeIndex = modes.findIndex(m => m.mode === getSettingValue(`audio.${type}_mode`));\n\n  const nextModeIndex = (currentModeIndex + 1) % modes.length;\n\n  saveSettingValue(`audio.${type}_mode`, modes[nextModeIndex].mode);\n\n  $(`#audio_${type}_mode_icon`).removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n\n  $(`#audio_${type}_mode_icon`).addClass(modes[nextModeIndex].icon);\n}\n\n/**\n * 音频选择变化时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioSelectChange(type: 'bgm' | 'ambient') {\n  saveSettingValue(`audio.${type}_selected`, $(`#audio_${type}_select`).val());\n  await updateAudio(type, true);\n}\n\n/**\n * 输入冷却时间的处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioCooldownInput() {\n  saveSettingValue('audio.audio_cooldown', ~~($(`#audio_cooldown`).val() as string));\n}\n\n/**\n * 音频音量变化时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioVolumeChange(type: 'bgm' | 'ambient') {\n  saveSettingValue(`audio.${type}_volume`, ~~($(`#audio_${type}_volume_slider`).val() as string));\n  $(`#audio_${type}`).prop('volume', getSettingValue(`audio.${type}_volume`) * 0.01);\n  $(`#audio_${type}_volume`).text(getSettingValue(`audio.${type}_volume`));\n}\n\n/**\n * 点击音频静音按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioMuteClick(type: 'bgm' | 'ambient') {\n  saveSettingValue(`audio.${type}_muted`, !getSettingValue(`audio.${type}_muted`));\n  $(`#audio_${type}_mute_icon`).toggleClass('fa-volume-high');\n  $(`#audio_${type}_mute_icon`).toggleClass('fa-volume-mute');\n  $(`#audio_${type}`).prop('muted', !$(`#audio_${type}`).prop('muted'));\n  $(`#audio_${type}_mute`).toggleClass('redOverlayGlow');\n}\n\n/**\n * 切换播放/暂停状态\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function togglePlayPause(type: 'bgm' | 'ambient') {\n  if (!getSettingValue('audio.audio_setting')) {\n    return;\n  }\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement.paused) {\n    await playAudio(type);\n  } else {\n    audioElement.pause();\n    playPauseIcon.removeClass('fa-pause');\n    playPauseIcon.addClass('fa-play');\n  }\n}\n\n/**\n * 打开URL导入弹窗\n * @param type 音频类型\n */\nasync function openUrlImportPopup(): Promise<string[] | null> {\n  const input = await callGenericPopup('输入要导入的网络音频链接（每行一个）', POPUP_TYPE.INPUT, '') as string | null;\n\n  if (!input) {\n    console.debug('[Audio] URL import cancelled');\n    return null;\n  }\n\n  const urlArray = input\n    .trim()\n    .split('\\n')\n    .map((url: string) => url.trim())\n    .filter((url: string) => url !== '');\n\n  return Array.from(new Set(urlArray));\n}\n\n// 聊天更改时的事件处理\neventSource.on(event_types.CHAT_CHANGED, async () => {\n  const $bgmPlayer = $('#audio_bgm')[0] as HTMLAudioElement;\n  const $ambientPlayer = $('#audio_ambient')[0] as HTMLAudioElement;\n\n  if ($bgmPlayer && !$bgmPlayer.paused) {\n    $bgmPlayer.pause();\n  }\n\n  if ($ambientPlayer && !$ambientPlayer.paused) {\n    $ambientPlayer.pause();\n  }\n  await refreshAudioResources();\n  console.log('[Audio] 聊天已更改，音频资源刷新完成');\n});\n\n/** 初始化样式\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nfunction initAudioStyles(type: 'bgm' | 'ambient') {\n  // 隐藏默认播放器样式\n  $(`#audio_${type}`).hide();\n\n  if (getSettingValue(`audio.${type}_muted`)) {\n    $(`#audio_${type}_mute_icon`).removeClass('fa-volume-high');\n    $(`#audio_${type}_mute_icon`).addClass('fa-volume-mute');\n    $(`#audio_${type}_mute`).addClass('redOverlayGlow');\n    $(`#audio_${type}`).prop('muted', true);\n  } else {\n    $(`#audio_${type}_mute_icon`).addClass('fa-volume-high');\n    $(`#audio_${type}_mute_icon`).removeClass('fa-volume-mute');\n    $(`#audio_${type}_mute`).removeClass('redOverlayGlow');\n    $(`#audio_${type}`).prop('muted', false);\n  }\n\n  $(`#enable_${type}`).prop('checked', getSettingValue(`audio.${type}_enabled`));\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement && audioElement.paused) {\n    playPauseIcon.removeClass('fa-pause');\n    playPauseIcon.addClass('fa-play');\n  } else if (audioElement && !audioElement.paused) {\n    playPauseIcon.removeClass('fa-play');\n    playPauseIcon.addClass('fa-pause');\n  }\n  updateAudioSelect(type);\n  initializeProgressBar(type);\n}\n\n/**\n * 初始化所有音频相关组件和事件监听器\n */\nexport function initAudioComponents() {\n  isAudioEnabled = getSettingValue('audio_enabled');\n  if (isAudioEnabled) {\n    onEnabledClick(true, true);\n  }\n  $('#audio-enable-toggle')\n    .prop('checked', isAudioEnabled)\n    .on('click', (event: JQuery.ClickEvent) => onEnabledClick(true, event.target.checked));\n\n  // 初始化音乐和音效样式\n  initAudioStyles('bgm');\n  initAudioStyles('ambient');\n\n  const audioTypes = ['bgm', 'ambient'] as const;\n\n  const bindTypeEvents = (\n    type: 'bgm' | 'ambient',\n    events: Array<{\n      selector: string;\n      event: string;\n      // eslint-disable-next-line no-shadow\n      handler: (type: 'bgm' | 'ambient') => void; \n    }>,\n  ) => {\n    events.forEach(({ selector, event, handler }) => {\n      $(`#${selector}`).on(event, () => handler(type));\n    });\n  };\n\n  audioTypes.forEach(type => {\n    $(`#enable_${type}`).on('click', () => onAudioEnabledClick(type));\n\n    bindTypeEvents(type, [\n      {\n        selector: `enable_${type}`,\n        event: 'click',\n        handler: onAudioEnabledClick,\n      },\n      {\n        selector: `audio_${type}_mode`,\n        event: 'click',\n        handler: onAudioModeClick,\n      },\n      {\n        selector: `audio_${type}_mute`,\n        event: 'click',\n        handler: onAudioMuteClick,\n      },\n      {\n        selector: `audio_${type}_volume_slider`,\n        event: 'input',\n        handler: onAudioVolumeChange,\n      },\n      {\n        selector: `audio_${type}_select`,\n        event: 'change',\n        handler: onAudioSelectChange,\n      },\n      {\n        selector: `audio_${type}_play_pause`,\n        event: 'click',\n        handler: togglePlayPause,\n      },\n    ]);\n\n    $('#audio_cooldown').on('input', onAudioCooldownInput).val(getSettingValue('audio.audio_cooldown'));\n\n    // 监听音频结束事件\n    initAudioEventListeners('bgm');\n    initAudioEventListeners('ambient');\n\n    const volumeSlider = $(`#audio_${type}_volume_slider`).get(0);\n    if (volumeSlider) {\n      volumeSlider.addEventListener('wheel', onVolumeSliderWheelEvent, {\n        passive: false,\n      });\n    }\n  });\n\n  $('#audio_refresh_assets').on('click', async () => {\n    await refreshAudioResources();\n  });\n\n  handleLongPress('bgm-volume-control', 'audio_bgm_mute_icon');\n  handleLongPress('ambient-volume-control', 'audio_ambient_mute_icon');\n\n  const urlManagerMap = {\n    bgm: 'bgmurl',\n    ambient: 'ambienturl',\n  };\n\n  audioTypes.forEach(type => {\n    $(`#${type}_manager_button`).on('click', async () => {\n      await openUrlManagerPopup(urlManagerMap[type] as 'bgmurl' | 'ambienturl');\n      await refreshAudioResources();\n    });\n  });\n\n  const bgmAudio = $('#audio_bgm')[0] as HTMLAudioElement;\n  const ambientAudio = $('#audio_ambient')[0] as HTMLAudioElement;\n\n  const togglePlayPauseIcon = (audioElement: HTMLAudioElement, iconSelector: string) => {\n    const icon = $(iconSelector);\n    audioElement.addEventListener('play', () => icon.removeClass('fa-play').addClass('fa-pause'));\n    audioElement.addEventListener('pause', () => icon.removeClass('fa-pause').addClass('fa-play'));\n  };\n\n  togglePlayPauseIcon(bgmAudio, '#audio_bgm_play_pause_icon');\n  togglePlayPauseIcon(ambientAudio, '#audio_ambient_play_pause_icon');\n}\n","import {\n  destroyCharacterLevelOnExtension,\n  initializeCharacterLevelOnExtension,\n} from '@/component/character_level/index';\nimport {\n  destroyMacroOnExtension,\n  initializeMacroOnExtension,\n  registerAllMacros,\n  unregisterAllMacros,\n} from '@/component/macro';\nimport {\n  addCodeToggleButtonsToAllMessages,\n  addRenderingOptimizeSettings,\n  partialRenderEvents,\n  removeRenderingOptimizeSettings,\n  renderAllIframes,\n  renderMessageAfterDelete,\n  renderPartialIframes,\n  tampermonkey_script,\n  viewport_adjust_script,\n} from '@/component/message_iframe';\nimport { scriptRepo, ScriptType,checkEmbeddedScripts, purgeEmbeddedScripts, clearAllScriptsIframe } from '@/component/script_repository/index';\nimport { iframe_client } from '@/iframe_client/index';\nimport { handleIframe } from '@/iframe_server/index';\nimport { checkVariablesEvents, clearTempVariables, shouldUpdateVariables } from '@/iframe_server/variables';\nimport { script_url } from '@/script_url';\nimport { getSettingValue, saveSettingValue } from '@/util/extension_variables';\n\nimport { eventSource, event_types, reloadCurrentChat, saveSettingsDebounced, this_chid } from '@sillytavern/script';\n\nconst handleChatChanged = async () => {\n  await checkEmbeddedScripts();\n\n  await clearAllScriptsIframe();\n  await scriptRepo.loadScriptLibrary();\n  await scriptRepo.runScriptsByType(ScriptType.GLOBAL);\n  await scriptRepo.runScriptsByType(ScriptType.CHARACTER);\n\n  await renderAllIframes();\n  if (getSettingValue('render.rendering_optimize')) {\n    addCodeToggleButtonsToAllMessages();\n  }\n};\n\nconst handleCharacterDeleted = (character: Object) => {\n  purgeEmbeddedScripts({ character });\n};\n\nconst handlePartialRender = (mesId: string) => {\n  const mesIdNumber = parseInt(mesId, 10);\n  renderPartialIframes(mesIdNumber);\n};\n\nconst handleMessageDeleted = (mesId: string) => {\n  const mesIdNumber = parseInt(mesId, 10);\n  clearTempVariables();\n  renderMessageAfterDelete(mesIdNumber);\n  if (getSettingValue('render.rendering_optimize')) {\n    addCodeToggleButtonsToAllMessages();\n  }\n};\n\nconst handleVariableUpdated = (mesId: string) => {\n  const mesIdNumber = parseInt(mesId, 10);\n  shouldUpdateVariables(mesIdNumber);\n};\n\n/**\n * 初始化扩展主设置界面\n */\nexport function initExtensionMainPanel() {\n  const isEnabled = getSettingValue('enabled_extension');\n  if (isEnabled) {\n    handleExtensionToggle(false, true);\n  }\n  $('#extension-enable-toggle')\n    .prop('checked', isEnabled)\n    .on('change', function (event: JQuery.ChangeEvent) {\n      handleExtensionToggle(true, $(event.currentTarget).prop('checked'));\n    });\n}\n\nasync function handleExtensionToggle(userAction: boolean = true, enable: boolean = true) {\n  if (userAction) {\n    await saveSettingValue('enabled_extension', enable);\n  }\n  if (enable) {\n    // 指示器样式\n    $('#extension-status-icon').css('color', 'green').next().text('扩展已启用');\n\n    script_url.set('iframe_client', iframe_client);\n    script_url.set('viewport_adjust_script', viewport_adjust_script);\n    script_url.set('tampermonkey_script', tampermonkey_script);\n\n    registerAllMacros();\n    initializeMacroOnExtension();\n    initializeCharacterLevelOnExtension();\n\n    // 重新注入前端卡优化的样式和设置\n    if (userAction && getSettingValue('render.rendering_optimize')) {\n      addRenderingOptimizeSettings();\n    }\n\n    window.addEventListener('message', handleIframe);\n\n    eventSource.on(event_types.CHAT_CHANGED, handleChatChanged);\n    eventSource.on(event_types.CHARACTER_DELETED, handleCharacterDeleted);\n\n    partialRenderEvents.forEach(eventType => {\n      eventSource.on(eventType, handlePartialRender);\n    });\n\n    checkVariablesEvents.forEach(eventType => {\n      eventSource.on(eventType, handleVariableUpdated);\n    });\n    eventSource.on(event_types.MESSAGE_DELETED, handleMessageDeleted);\n\n    if (userAction && this_chid !== undefined) {\n      await reloadCurrentChat();\n    }\n  } else {\n    // 指示器样式\n    $('#extension-status-icon').css('color', 'red').next().text('扩展已禁用');\n\n    script_url.delete('iframe_client');\n    script_url.delete('viewport_adjust_script');\n    script_url.delete('tampermonkey_script');\n\n    unregisterAllMacros();\n    destroyMacroOnExtension();\n    destroyCharacterLevelOnExtension();\n\n    if (getSettingValue('render.rendering_optimize')) {\n      removeRenderingOptimizeSettings();\n    }\n\n    window.removeEventListener('message', handleIframe);\n\n    eventSource.removeListener(event_types.CHAT_CHANGED, handleChatChanged);\n    eventSource.removeListener(event_types.CHARACTER_DELETED, handleCharacterDeleted);\n\n    partialRenderEvents.forEach(eventType => {\n      eventSource.removeListener(eventType, handlePartialRender);\n    });\n    checkVariablesEvents.forEach(eventType => {\n      eventSource.removeListener(eventType, handleVariableUpdated);\n    });\n    eventSource.removeListener(event_types.MESSAGE_DELETED, handleMessageDeleted);\n    if (userAction && this_chid !== undefined) {\n      await reloadCurrentChat();\n    }\n  }\n  $('#js_slash_runner_text').text(getSettingValue('activate_setting') ? '关闭前端渲染' : '开启前端渲染');\n  saveSettingsDebounced();\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"MacrosParser\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__.MacrosParser), [\"getLastMessageId\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__.getLastMessageId) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"extension_settings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.extension_settings), [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.getContext), [\"renderExtensionTemplateAsync\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.renderExtensionTemplateAsync), [\"saveMetadataDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.saveMetadataDebounced), [\"writeExtensionField\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.writeExtensionField) });","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\nimport { partition } from '@/util/helper';\n\nimport { characters, reloadCurrentChat, saveChatConditional, saveSettings, this_chid } from '@sillytavern/script';\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\nimport { extension_settings, writeExtensionField } from '@sillytavern/scripts/extensions';\nimport { regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\n\ninterface IframeIsCharacterTavernRegexEnabled extends IframeMessage {\n  request: '[TavernRegex][isCharacterTavernRegexesEnabled]';\n}\n\ninterface IframeGetTavernRegexes extends IframeMessage {\n  request: '[TavernRegex][getTavernRegexes]';\n  option: Required<GetTavernRegexesOption>;\n}\n\ninterface IframeReplaceTavernRegexes extends IframeMessage {\n  request: '[TavernRegex][replaceTavernRegexes]';\n  regexes: TavernRegex[];\n  option: Required<ReplaceTavernRegexesOption>;\n}\n\nexport function isCharacterTavernRegexEnabled(): boolean {\n  // @ts-ignore 2345\n  return extension_settings?.character_allowed_regex?.includes(characters?.[this_chid]?.avatar);\n}\n\nexport function getGlobalRegexes(): RegexScriptData[] {\n  return extension_settings.regex ?? [];\n}\n\nexport function getCharacterRegexes(): RegexScriptData[] {\n  return characters[this_chid]?.data?.extensions?.regex_scripts ?? [];\n}\n\nfunction toTavernRegex(regex_script_data: RegexScriptData, scope: 'global' | 'character'): TavernRegex {\n  return {\n    id: regex_script_data.id,\n    script_name: regex_script_data.scriptName,\n    enabled: !regex_script_data.disabled,\n    run_on_edit: regex_script_data.runOnEdit,\n    scope: scope,\n\n    find_regex: regex_script_data.findRegex,\n    replace_string: regex_script_data.replaceString,\n\n    source: {\n      user_input: regex_script_data.placement.includes(regex_placement.USER_INPUT),\n      ai_output: regex_script_data.placement.includes(regex_placement.AI_OUTPUT),\n      slash_command: regex_script_data.placement.includes(regex_placement.SLASH_COMMAND),\n      world_info: regex_script_data.placement.includes(regex_placement.WORLD_INFO),\n    },\n\n    destination: {\n      display: regex_script_data.markdownOnly,\n      prompt: regex_script_data.promptOnly,\n    },\n\n    min_depth: typeof regex_script_data.minDepth === 'number' ? regex_script_data.minDepth : null,\n    max_depth: typeof regex_script_data.maxDepth === 'number' ? regex_script_data.maxDepth : null,\n  };\n}\n\nfunction fromTavernRegex(tavern_regex: TavernRegex): RegexScriptData {\n  return {\n    id: tavern_regex.id,\n    scriptName: tavern_regex.script_name,\n    disabled: !tavern_regex.enabled,\n    runOnEdit: tavern_regex.run_on_edit,\n\n    findRegex: tavern_regex.find_regex,\n    replaceString: tavern_regex.replace_string,\n    trimStrings: [], // TODO: handle this?\n\n    placement: [\n      ...(tavern_regex.source.user_input ? [regex_placement.USER_INPUT] : []),\n      ...(tavern_regex.source.ai_output ? [regex_placement.AI_OUTPUT] : []),\n      ...(tavern_regex.source.slash_command ? [regex_placement.SLASH_COMMAND] : []),\n      ...(tavern_regex.source.world_info ? [regex_placement.WORLD_INFO] : []),\n    ],\n\n    substituteRegex: 0, // TODO: handle this?\n\n    // @ts-ignore\n    minDepth: tavern_regex.min_depth,\n    // @ts-ignore\n    maxDepth: tavern_regex.max_depth,\n\n    markdownOnly: tavern_regex.destination.display,\n    promptOnly: tavern_regex.destination.prompt,\n  };\n}\n\nexport function registerIframeTavernRegexHandler() {\n  registerIframeHandler(\n    '[TavernRegex][isCharacterTavernRegexesEnabled]',\n    async (event: MessageEvent<IframeIsCharacterTavernRegexEnabled>): Promise<boolean> => {\n      const result = isCharacterTavernRegexEnabled();\n\n      console.info(`${getLogPrefix(event)}查询到局部正则${result ? '被启用' : '被禁用'}`);\n      return result;\n    },\n  );\n\n  registerIframeHandler(\n    '[TavernRegex][getTavernRegexes]',\n    async (event: MessageEvent<IframeGetTavernRegexes>): Promise<TavernRegex[]> => {\n      const option = event.data.option;\n\n      if (!['all', 'enabled', 'disabled'].includes(option.enable_state)) {\n        throw Error(\n          `提供的 enable_state 无效, 请提供 'all', 'enabled' 或 'disabled', 你提供的是: ${option.enable_state}`,\n        );\n      }\n      if (!['all', 'global', 'character'].includes(option.scope)) {\n        throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${option.scope}`);\n      }\n\n      let regexes: TavernRegex[] = [];\n      if (option.scope === 'all' || option.scope === 'global') {\n        regexes = [...regexes, ...getGlobalRegexes().map(regex => toTavernRegex(regex, 'global'))];\n      }\n      if (option.scope === 'all' || option.scope === 'character') {\n        regexes = [...regexes, ...getCharacterRegexes().map(regex => toTavernRegex(regex, 'character'))];\n      }\n      if (option.enable_state !== 'all') {\n        regexes = regexes.filter(regex => regex.enabled === (option.enable_state === 'enabled'));\n      }\n\n      console.info(`${getLogPrefix(event)}获取酒馆正则数据, 选项: ${JSON.stringify(option)}`);\n      return regexes;\n    },\n  );\n\n  registerIframeHandler(\n    '[TavernRegex][replaceTavernRegexes]',\n    async (event: MessageEvent<IframeReplaceTavernRegexes>): Promise<void> => {\n      const regexes = event.data.regexes;\n      const option = event.data.option;\n      if (!['all', 'global', 'character'].includes(option.scope)) {\n        throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${option.scope}`);\n      }\n\n      // FIXME: `trimStrings` and `substituteRegex` are not considered\n      const emptied_regexes = regexes.filter(regex => regex.script_name == '');\n      if (emptied_regexes.length > 0) {\n        throw Error(`不能将酒馆正则的名称设置为空字符串:\\n${JSON.stringify(emptied_regexes.map(regex => regex.id))}`);\n      }\n      const [global_regexes, character_regexes] = partition(regexes, regex => regex.scope === 'global').map(regexes =>\n        regexes.map(fromTavernRegex),\n      );\n\n      const character = characters[this_chid];\n      if (option.scope === 'all' || option.scope === 'global') {\n        extension_settings.regex = global_regexes;\n      }\n      if (option.scope === 'all' || option.scope === 'character') {\n        if (character) {\n          characters[this_chid].data.extensions.regex_scripts = character_regexes;\n          await writeExtensionField(this_chid, 'regex_scripts', character_regexes);\n        }\n      }\n      await saveSettings();\n      if (character) {\n        await saveChatConditional();\n      }\n      await reloadCurrentChat();\n\n      console.info(`${getLogPrefix(event)}替换酒馆正则\\\n${\n  option.scope === 'all' || option.scope === 'global'\n    ? `, 全局正则:\\n${JSON.stringify(global_regexes, undefined, 2)}`\n    : ``\n}\\\n${\n  option.scope === 'all' || option.scope === 'character'\n    ? `, 局部正则:\\n${JSON.stringify(character_regexes, undefined, 2)}`\n    : ``\n}`);\n    },\n  );\n}\n","import { extract } from '@/util/helper';\n\nfunction createObjectURLFromScript(code: string): string {\n  return URL.createObjectURL(new Blob([code], { type: 'application/javascript' }));\n}\n\nclass ScriptUrl {\n  private map: Map<string, string> = new Map();\n\n  public get(name: string): string | undefined {\n    return this.map.get(name);\n  }\n  public set(name: string, code: string): void {\n    this.map.set(name, createObjectURLFromScript(code));\n  }\n  public delete(name: string): string | undefined {\n    const url = extract(this.map, name);\n    if (!url) {\n      return url;\n    }\n    URL.revokeObjectURL(url);\n    return url;\n  }\n}\n\nexport let script_url = new ScriptUrl();\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\nimport { charsPath } from '@/util/extension_variables';\n\nimport { characters, getPastCharacterChats, getRequestHeaders, getThumbnailUrl, this_chid } from '@sillytavern/script';\n\ntype v1CharData = (typeof characters)[number];\n\ninterface IframeGetCharData extends IframeMessage {\n  request: '[Character][getCharData]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetAvatarPath extends IframeMessage {\n  request: '[Character][getCharAvatarPath]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetChatHistoryBrief extends IframeMessage {\n  request: '[Character][getChatHistoryBrief]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetChatHistoryDetail extends IframeMessage {\n  request: '[Character][getChatHistoryDetail]';\n  data: any[];\n  isGroupChat?: boolean;\n}\n\n/**\n * 角色卡管理类\n * 用于封装角色卡数据操作和提供便捷的访问方法\n */\nexport class Character {\n  /**\n   * v1CharData类型的角色卡数据\n   * @see char-data.js 中的 v1CharData 类型定义\n   */\n  private charData: v1CharData;\n\n  constructor(characterData: v1CharData) {\n    this.charData = characterData;\n  }\n\n  /**\n   * 根据名称或头像id查找角色卡数据\n   * @param options 查找选项\n   * @returns 找到的角色卡数据，找不到为null\n   */\n  static find({ name, allowAvatar = true }: { name?: string; allowAvatar?: boolean } = {}): any {\n    if (name === undefined) {\n      const currentChar = characters[this_chid];\n      if (currentChar) {\n        name = currentChar.avatar;\n        // 确保allowAvatar为true，以便可以通过avatar准确查找角色\n        allowAvatar = true;\n      }\n    }\n\n    const matches = (char: { avatar: string; name: string }) =>\n      !name || char.name === name || (allowAvatar && char.avatar === name);\n\n    let filteredCharacters = characters;\n\n    // 如果有确定的角色头像id提供，则返回该角色\n    if (allowAvatar && name) {\n      const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n      if (characterByAvatar) {\n        return characterByAvatar;\n      }\n    }\n\n    // 查找所有匹配的角色\n    const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n    if (matchingCharacters.length > 1) {\n      console.warn(`[Character] [findCharacter] 找到多个符合条件的角色，返回导入时间最早的角色: ${name}`);\n    }\n\n    if (matchingCharacters.length === 0) {\n      throw new Error(`[Character] [findCharacter] 提供的名称或头像ID为: ${name}，未找到符合条件的角色`);\n    }\n\n    return matchingCharacters[0];\n  }\n\n  /**\n   * 根据名称查找角色卡数据在characters数组中的索引（类似this_chid）\n   * @param name 角色名称\n   * @returns 角色卡数据在characters数组中的索引，未找到返回-1\n   */\n\n  static findCharacterIndex(name: string) {\n    const matchTypes = [\n      (a: string, b: string) => a === b,\n      (a: string, b: string) => a.startsWith(b),\n      (a: string, b: string) => a.includes(b),\n    ];\n\n    const exactAvatarMatch = characters.findIndex(x => x.avatar === name);\n\n    if (exactAvatarMatch !== -1) {\n      return exactAvatarMatch;\n    }\n\n    for (const matchType of matchTypes) {\n      const index = characters.findIndex(x => matchType(x.name.toLowerCase(), name.toLowerCase()));\n      if (index !== -1) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * 从服务器获取每个聊天文件的聊天内容，并将其编译成字典。\n   * 该函数遍历提供的聊天元数据列表，并请求每个聊天的实际聊天内容，\n   *\n   * @param {Array} data - 包含每个聊天的元数据的数组，例如文件名。\n   * @param {boolean} isGroupChat - 一个标志，指示聊天是否为群组聊天。\n   * @returns {Promise<Object>} chat_dict - 一个字典，其中每个键是文件名，值是\n   * 从服务器获取的相应聊天内容。\n   */\n  static async getChatsFromFiles(data: any[], isGroupChat: boolean) {\n    let chat_dict: Record<string, any> = {};\n    let chat_list = Object.values(data)\n      .sort((a, b) => a['file_name'].localeCompare(b['file_name']))\n      .reverse();\n\n    let chat_promise = chat_list.map(({ file_name }) => {\n      return new Promise<void>(async (res, _rej) => {\n        try {\n          // 从文件名中提取角色名称（破折号前的部分）\n          const ch_name = isGroupChat ? '' : file_name.split(' - ')[0];\n\n          // 使用Character.find方法查找角色，获取头像\n          let characterData = null;\n          let avatar_url = '';\n\n          if (!isGroupChat && ch_name) {\n            characterData = Character.find({ name: ch_name });\n            if (characterData) {\n              avatar_url = characterData.avatar;\n            }\n          }\n\n          const endpoint = isGroupChat ? '/api/chats/group/get' : '/api/chats/get';\n          const requestBody = isGroupChat\n            ? JSON.stringify({ id: file_name })\n            : JSON.stringify({\n                ch_name: ch_name,\n                file_name: file_name.replace('.jsonl', ''),\n                avatar_url: avatar_url,\n              });\n\n          const chatResponse = await fetch(endpoint, {\n            method: 'POST',\n            headers: getRequestHeaders(),\n            body: requestBody,\n            cache: 'no-cache',\n          });\n\n          if (!chatResponse.ok) {\n            return res();\n          }\n\n          const currentChat = await chatResponse.json();\n          if (!isGroupChat) {\n            // remove the first message, which is metadata, only for individual chats\n            currentChat.shift();\n          }\n          chat_dict[file_name] = currentChat;\n        } catch (error) {\n          console.error(error);\n        }\n\n        return res();\n      });\n    });\n\n    await Promise.all(chat_promise);\n\n    return chat_dict;\n  }\n\n  /**\n   * 获取角色管理内的数据\n   * @returns 完整的角色管理内的数据对象\n   */\n  getCardData(): v1CharData {\n    return this.charData;\n  }\n\n  /**\n   * 获取角色头像ID\n   * @returns 头像ID/文件名\n   */\n  getAvatarId(): string {\n    return this.charData.avatar || '';\n  }\n\n  /**\n   * 获取正则脚本\n   * @returns 正则脚本数组\n   */\n  getRegexScripts(): Array<{\n    id: string;\n    scriptName: string;\n    findRegex: string;\n    replaceString: string;\n    trimStrings: string[];\n    placement: number[];\n    disabled: boolean;\n    markdownOnly: boolean;\n    promptOnly: boolean;\n    runOnEdit: boolean;\n    substituteRegex: number | boolean;\n    minDepth: number;\n    maxDepth: number;\n  }> {\n    return this.charData.data?.extensions?.regex_scripts || [];\n  }\n\n  /**\n   * 获取角色书\n   * @returns 角色书数据对象或null\n   */\n  getCharacterBook(): {\n    name: string;\n    entries: Array<{\n      keys: string[];\n      secondary_keys?: string[];\n      comment: string;\n      content: string;\n      constant: boolean;\n      selective: boolean;\n      insertion_order: number;\n      enabled: boolean;\n      position: string;\n      extensions: any;\n      id: number;\n    }>;\n  } | null {\n    return this.charData.data?.character_book || null;\n  }\n\n  /**\n   * 获取角色世界名称\n   * @returns 世界名称\n   */\n  getWorldName(): string {\n    return this.charData.data?.extensions?.world || '';\n  }\n}\n\nexport function registerIframeCharacterHandler() {\n  function withCharacter<T>(\n    callback: (character: Character) => T,\n    defaultValue: T | null = null,\n    name?: string,\n    allowAvatar: boolean = true,\n  ): T | null {\n    const characterData = Character.find({ name, allowAvatar });\n    const character = characterData ? new Character(characterData) : null;\n    return character ? callback(character) : defaultValue;\n  }\n  // 通用包装函数，用于处理角色相关的iframe消息\n  function createCharacterHandler<T, E extends IframeMessage & { name?: string; allowAvatar?: boolean }>(\n    eventType: string,\n    handler: (character: Character, event: MessageEvent<E>) => T,\n    defaultValue: T | null = null,\n    logMessage?: (event: MessageEvent<E>, result: T | null, displayName?: string) => string,\n  ) {\n    registerIframeHandler(eventType, async (event: MessageEvent<E>): Promise<T | null> => {\n      const { name, allowAvatar = true } = event.data;\n\n      let displayName = name;\n      if (displayName === undefined) {\n        const currentChar = characters[this_chid];\n        if (currentChar) {\n          displayName = currentChar.name;\n        }\n      }\n\n      const result = withCharacter(character => handler(character, event), defaultValue, name, allowAvatar);\n\n      // 日志打印\n      if (logMessage) {\n        const logText = logMessage(event, null, displayName);\n        if (result instanceof Promise) {\n          result\n            .then(resolvedResult => {\n              console.info(`${getLogPrefix(event)}${logText}`, resolvedResult);\n            })\n            .catch(error => {\n              throw Error(`${getLogPrefix(event)}${logText} - 发生错误: ${error}`);\n            });\n        } else {\n          console.info(`${getLogPrefix(event)}${logText}`, result);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  createCharacterHandler<v1CharData, IframeGetCharData>(\n    '[Character][getCharData]',\n    character => character.getCardData(),\n    null,\n    (_event, _result, displayName) => `获取角色卡数据, 角色: ${displayName || '未知'}`,\n  );\n\n  createCharacterHandler<string, IframeGetAvatarPath>(\n    '[Character][getCharAvatarPath]',\n    character => {\n      const thumbnailPath = getThumbnailUrl('avatar', character.getAvatarId());\n      const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n      return charsPath + targetAvatarImg;\n    },\n    null,\n    (_event, _result, displayName) => `获取角色头像路径, 角色: ${displayName || '未知'}`,\n  );\n\n  createCharacterHandler<Promise<any[]>, IframeGetChatHistoryBrief>(\n    '[Character][getChatHistoryBrief]',\n    async character => {\n      const index = Character.findCharacterIndex(character.getAvatarId());\n      const chats = await getPastCharacterChats(index);\n      return chats;\n    },\n    null,\n    (_event, _result, displayName) => {\n      return `获取角色聊天历史摘要, 角色: ${displayName || '未知'}`;\n    },\n  );\n\n  registerIframeHandler(\n    '[Character][getChatHistoryDetail]',\n    async (event: MessageEvent<IframeGetChatHistoryDetail>) => {\n      const data = event.data.data;\n      const isGroupChat = event.data.isGroupChat || false;\n\n      try {\n        const result = await Character.getChatsFromFiles(data, isGroupChat);\n        console.info(`${getLogPrefix(event)}获取聊天文件详情`, result);\n        return result;\n      } catch (error) {\n        throw Error(`${getLogPrefix(event)}获取聊天文件详情 - 发生错误: ${error}`);\n      }\n    },\n  );\n}\n","import { IframeMessage, getIframeName, getLogPrefix, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  MAX_INJECTION_DEPTH,\n  activateSendButtons,\n  baseChatReplace,\n  characters,\n  chat,\n  chat_metadata,\n  cleanUpMessage,\n  countOccurrences,\n  deactivateSendButtons,\n  eventSource,\n  extension_prompt_roles,\n  extension_prompt_types,\n  getBiasStrings,\n  getCharacterCardFields,\n  getExtensionPromptRoleByName,\n  getMaxContextSize,\n  isOdd,\n  name1,\n  name2,\n  saveChatConditional,\n  saveSettingsDebounced,\n  setExtensionPrompt,\n  setGenerationProgress,\n  showSwipeButtons,\n  stopGeneration,\n  substituteParams,\n  this_chid,\n} from '@sillytavern/script';\nimport { NOTE_MODULE_NAME, metadata_keys, shouldWIAddPrompt } from '@sillytavern/scripts/authors-note';\nimport { extension_settings, getContext } from '@sillytavern/scripts/extensions';\nimport { getRegexedString, regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\nimport {\n  ChatCompletion,\n  Message,\n  MessageCollection,\n  isImageInliningSupported,\n  oai_settings,\n  prepareOpenAIMessages,\n  sendOpenAIRequest,\n  setOpenAIMessageExamples,\n  setOpenAIMessages,\n  setupChatCompletionPromptManager,\n} from '@sillytavern/scripts/openai';\nimport {\n  flushEphemeralStoppingStrings,\n  persona_description_positions,\n  power_user,\n} from '@sillytavern/scripts/power-user';\nimport { Prompt, PromptCollection } from '@sillytavern/scripts/PromptManager';\nimport { Stopwatch, getBase64Async } from '@sillytavern/scripts/utils';\nimport { getWorldInfoPrompt, wi_anchor_position, world_info_include_names } from '@sillytavern/scripts/world-info';\n\n// 在文件顶部添加 abortController 声明\nlet abortController = new AbortController();\n\ninterface IframeGenerate extends IframeMessage {\n  request: '[Generate][generate]';\n  config: GenerateConfig;\n}\n\ninterface IframeGenerateRaw extends IframeMessage {\n  request: '[Generate][generateRaw]';\n  config: GenerateRawConfig;\n}\n\nfunction fromOverrides(overrides: Overrides): detail.OverrideConfig {\n  return {\n    world_info_before: overrides.world_info_before,\n    persona_description: overrides.persona_description,\n    char_description: overrides.char_description,\n    char_personality: overrides.char_personality,\n    scenario: overrides.scenario,\n    world_info_after: overrides.world_info_after,\n    dialogue_examples: overrides.dialogue_examples,\n\n    with_depth_entries: overrides.chat_history?.with_depth_entries,\n    author_note: overrides.chat_history?.author_note,\n    chat_history: overrides.chat_history?.prompts,\n  };\n}\n\nfunction fromInjectionPrompt(inject: InjectionPrompt): detail.InjectionPrompt {\n  const position_map = {\n    before_prompt: 'BEFORE_PROMPT',\n    in_chat: 'IN_CHAT',\n    after_prompt: 'IN_PROMPT',\n    none: 'NONE',\n  } as const;\n  return {\n    role: inject.role,\n    content: inject.content,\n    position: position_map[inject.position],\n    depth: inject.depth,\n    scan: inject.should_scan,\n  };\n}\n\nfunction fromGenerateConfig(config: GenerateConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: true,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    overrides: config.overrides !== undefined ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects !== undefined ? config.injects.map(fromInjectionPrompt) : undefined,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n  };\n}\n\nfunction fromGenerateRawConfig(config: GenerateRawConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: false,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n    overrides: config.overrides ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects ? config.injects.map(fromInjectionPrompt) : undefined,\n    order: config.ordered_prompts,\n  };\n}\n\nnamespace detail {\n  export interface RolePrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n  }\n\n  export interface InjectionPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n    position?: 'IN_PROMPT' | 'IN_CHAT' | 'BEFORE_PROMPT' | 'NONE';\n    depth?: number;\n    scan?: boolean;\n  }\n\n  export interface CustomPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n  }\n\n  // 覆盖配置类型\n  export interface OverrideConfig {\n    world_info_before?: string; // 世界书（角色定义之前的部分）\n    persona_description?: string; // 用户描述\n    char_description?: string; // 角色描述\n    char_personality?: string; // 角色高级定义-性格\n    scenario?: string; // 场景\n    world_info_after?: string; // 世界书（角色定义之后的部分）\n    dialogue_examples?: string; // 角色高级定义-对话示例\n\n    with_depth_entries?: boolean; // 世界书深度\n    author_note?: string; // 作者注释\n    chat_history?: RolePrompt[]; // 聊天历史\n  }\n\n  // 内置提示词条目类型\n  export type BuiltinPromptEntry =\n    | 'world_info_before' // 世界书(角色定义前)\n    | 'persona_description' // 用户描述\n    | 'char_description' // 角色描述\n    | 'char_personality' // 角色性格\n    | 'scenario' // 场景\n    | 'world_info_after' // 世界书(角色定义后)\n    | 'dialogue_examples' // 对话示例\n    | 'chat_history' // 聊天历史\n    | 'user_input'; // 用户输入\n\n  // 生成参数类型\n  export interface GenerateParams {\n    user_input?: string;\n    use_preset?: boolean;\n    image?: File | string;\n    stream?: boolean;\n    overrides?: OverrideConfig;\n    max_chat_history?: number;\n    inject?: InjectionPrompt[];\n    order?: Array<BuiltinPromptEntry | CustomPrompt>;\n  }\n}\n\nconst type = 'quiet';\nconst dryRun = false;\n\nconst character_names_behavior = {\n  NONE: -1,\n  DEFAULT: 0,\n  COMPLETION: 1,\n  CONTENT: 2,\n};\n\nconst roleTypes: Record<\n  'system' | 'user' | 'assistant',\n  (typeof extension_prompt_roles)[keyof typeof extension_prompt_roles]\n> = {\n  system: extension_prompt_roles.SYSTEM,\n  user: extension_prompt_roles.USER,\n  assistant: extension_prompt_roles.ASSISTANT,\n};\nconst default_order: detail.BuiltinPromptEntry[] = [\n  'world_info_before',\n  'persona_description',\n  'char_description',\n  'char_personality',\n  'scenario',\n  'world_info_after',\n  'dialogue_examples',\n  'chat_history',\n  'user_input',\n];\n\nclass StreamingProcessor {\n  public generator: () => AsyncGenerator<{ text: string }, void, void>;\n  public stoppingStrings?: string[];\n  public result: string;\n  public isStopped: boolean;\n  public isFinished: boolean;\n  public abortController: AbortController;\n  private messageBuffer: string;\n\n  constructor() {\n    this.result = '';\n    this.messageBuffer = '';\n    this.isStopped = false;\n    this.isFinished = false;\n    this.generator = this.nullStreamingGeneration;\n    this.abortController = new AbortController();\n  }\n\n  onProgressStreaming(text: string, isFinal: boolean) {\n    // 计算增量文本\n    const newText = text.slice(this.messageBuffer.length);\n    this.messageBuffer = text;\n\n    let processedText = cleanUpMessage(newText, false, false, !isFinal, this.stoppingStrings);\n\n    const charsToBalance = ['*', '\"', '```'];\n    for (const char of charsToBalance) {\n      if (!isFinal && isOdd(countOccurrences(processedText, char))) {\n        const separator = char.length > 1 ? '\\n' : '';\n        processedText = processedText.trimEnd() + separator + char;\n      }\n    }\n\n    eventSource.emit('js_stream_token_received_fully', text);\n    eventSource.emit('js_stream_token_received_incrementally', processedText);\n\n    if (isFinal) {\n      const fullText = cleanUpMessage(text, false, false, false, this.stoppingStrings);\n      eventSource.emit('js_generation_ended', fullText);\n    }\n  }\n\n  onErrorStreaming() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n    this.isStopped = true;\n    unblockGeneration();\n    saveChatConditional();\n  }\n\n  async *nullStreamingGeneration(): AsyncGenerator<{ text: string }, void, void> {\n    throw Error('Generation function for streaming is not hooked up');\n  }\n\n  async generate() {\n    try {\n      const sw = new Stopwatch(1000 / power_user.streaming_fps);\n      const timestamps = [];\n\n      for await (const { text } of this.generator()) {\n        timestamps.push(Date.now());\n        if (this.isStopped) {\n          this.messageBuffer = '';\n          return;\n        }\n\n        this.result = text;\n        await sw.tick(() => this.onProgressStreaming(text, false));\n      }\n\n      if (!this.isStopped) {\n        this.onProgressStreaming(this.result, true);\n      } else {\n        this.messageBuffer = '';\n      }\n\n      const seconds = (timestamps[timestamps.length - 1] - timestamps[0]) / 1000;\n      console.warn(\n        `Stream stats: ${timestamps.length} tokens, ${seconds.toFixed(2)} seconds, rate: ${Number(\n          timestamps.length / seconds,\n        ).toFixed(2)} TPS`,\n      );\n    } catch (err) {\n      if (!this.isFinished) {\n        this.onErrorStreaming();\n        throw Error(`Generate method error: ${err}`);\n      }\n      this.messageBuffer = '';\n      return this.result;\n    }\n\n    this.isFinished = true;\n    return this.result;\n  }\n}\n\nasync function iframeGenerate({\n  user_input = '',\n  use_preset = true,\n  image = null,\n  overrides = undefined,\n  max_chat_history = undefined,\n  inject = [],\n  order = undefined,\n  stream = false,\n}: detail.GenerateParams = {}): Promise<string> {\n  //初始化\n  abortController = new AbortController();\n\n  // 1. 处理用户输入（正则，宏）\n  const processedUserInput = processUserInput(substituteParams(user_input), oai_settings) || '';\n\n  // 2. 准备过滤后的基础数据\n  const baseData = await prepareAndOverrideData(\n    {\n      overrides,\n      max_chat_history,\n      inject,\n      order,\n    },\n    processedUserInput,\n  );\n\n  // 3. 根据 use_preset 分流处理\n  const generate_data = use_preset\n    ? await handlePresetPath(baseData, processedUserInput, {\n        image,\n        overrides,\n        max_chat_history,\n        inject,\n        order,\n      })\n    : await handleCustomPath(\n        baseData,\n        {\n          image,\n          overrides,\n          max_chat_history,\n          inject,\n          order,\n        },\n        processedUserInput,\n      );\n  console.log('[Generate:发送提示词]', generate_data);\n  // 4. 根据 stream 参数决定生成方式\n  return await generateResponse(generate_data, stream);\n}\n\nasync function prepareAndOverrideData(\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const getOverrideContent = (identifier: string): string | detail.RolePrompt[] | undefined => {\n    if (!config.overrides) return undefined;\n    return config.overrides[identifier as keyof detail.OverrideConfig];\n  };\n\n  // 1. 处理角色卡高级定义角色备注 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config)) {\n    handleCharDepthPrompt();\n  }\n\n  // 2. 设置作者注释 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('author_note', config)) {\n    setAuthorNotePrompt(config);\n  }\n\n  // 3. 处理user角色描述 - 仅在chat_history和persona_description都未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('persona_description', config)) {\n    setPersonaDescriptionExtensionPrompt();\n  }\n\n  // 4. 获取角色卡基础字段\n  const {\n    description: rawDescription,\n    personality: rawPersonality,\n    persona: rawPersona,\n    scenario: rawScenario,\n    mesExamples: rawMesExamples,\n    system,\n    jailbreak,\n  } = getCharacterCardFields();\n\n  // 判断是否被过滤,如果被过滤返回空字符串,否则返回override的值或原始值\n  const description = isPromptFiltered('char_description', config)\n    ? ''\n    : getOverrideContent('char_description') ?? rawDescription;\n\n  const personality = isPromptFiltered('char_personality', config)\n    ? ''\n    : getOverrideContent('char_personality') ?? rawPersonality;\n\n  const persona = isPromptFiltered('persona_description', config)\n    ? ''\n    : getOverrideContent('persona_description') ?? rawPersona;\n\n  const scenario = isPromptFiltered('scenario', config) ? '' : getOverrideContent('scenario') ?? rawScenario;\n\n  const mesExamples = isPromptFiltered('dialogue_examples', config)\n    ? ''\n    : getOverrideContent('dialogue_examples') ?? rawMesExamples;\n\n  let mesExamplesArray = parseMesExamples(mesExamples);\n  let oaiMessageExamples = [];\n  oaiMessageExamples = setOpenAIMessageExamples(mesExamplesArray);\n\n  // 5. 获取偏置字符串\n  const { promptBias } = getBiasStrings(processedUserInput, type);\n\n  // 6. 处理自定义注入的提示词\n  if (config.inject) {\n    await handleInjectedPrompts(config);\n  }\n\n  // 7. 处理聊天记录\n  let oaiMessages = [];\n  if (config.overrides?.chat_history) {\n    oaiMessages = [...config.overrides.chat_history].reverse();\n  } else {\n    oaiMessages = setOpenAIMessages(await processChatHistory(chat));\n    if (config.max_chat_history !== undefined) {\n      oaiMessages = oaiMessages.slice(0, config.max_chat_history);\n    }\n  }\n\n  // 添加临时消息用于激活世界书\n  addTemporaryUserMessage(processedUserInput);\n  // 8. 处理世界信息\n  const worldInfo = await processWorldInfo(oaiMessages, config);\n\n  // 移除临时消息\n  removeTemporaryUserMessage();\n\n  // 9. 处理世界书消息示例\n  mesExamplesArray = !isPromptFiltered('dialogue_examples', config)\n    ? await processMessageExamples(mesExamplesArray, worldInfo.worldInfoExamples)\n    : [];\n\n  return {\n    characterInfo: {\n      description,\n      personality,\n      persona,\n      scenario,\n      system: system,\n      jailbreak: jailbreak,\n    },\n    chatContext: {\n      oaiMessages,\n      oaiMessageExamples,\n      promptBias,\n    },\n    worldInfo,\n  };\n}\n\n//处理角色卡中的深度提示词\nfunction handleCharDepthPrompt() {\n  const depthPromptText =\n    baseChatReplace(characters[this_chid]?.data?.extensions?.depth_prompt?.prompt?.trim(), name1, name2) || '';\n  const depthPromptDepth = characters[this_chid]?.data?.extensions?.depth_prompt?.depth ?? '4';\n  const depthPromptRole = getExtensionPromptRoleByName(\n    characters[this_chid]?.data?.extensions?.depth_prompt?.role ?? 'system',\n  );\n  setExtensionPrompt(\n    'DEPTH_PROMPT',\n    depthPromptText,\n    extension_prompt_types.IN_CHAT,\n    depthPromptDepth,\n    extension_settings.note.allowWIScan,\n    depthPromptRole,\n  );\n}\n//处理作者注释\nfunction setAuthorNotePrompt(config: detail.GenerateParams) {\n  const authorNoteOverride = config?.overrides?.author_note;\n  // @ts-ignore\n  let prompt = authorNoteOverride ?? $('#extension_floating_prompt').val();\n\n  setExtensionPrompt(\n    NOTE_MODULE_NAME,\n    prompt,\n    chat_metadata[metadata_keys.position],\n    chat_metadata[metadata_keys.depth],\n    extension_settings.note.allowWIScan,\n    chat_metadata[metadata_keys.role],\n  );\n}\n//用户角色描述提示词设置为提示词管理器之外的选项的情况\nfunction setPersonaDescriptionExtensionPrompt() {\n  const description = power_user.persona_description;\n  const INJECT_TAG = 'PERSONA_DESCRIPTION';\n  setExtensionPrompt(INJECT_TAG, '', extension_prompt_types.IN_PROMPT, 0);\n\n  if (!description || power_user.persona_description_position === persona_description_positions.NONE) {\n    return;\n  }\n\n  //当user信息在作者注释前后 - 仅在作者注释未被过滤时执行\n  const promptPositions = [persona_description_positions.BOTTOM_AN, persona_description_positions.TOP_AN];\n\n  if (promptPositions.includes(power_user.persona_description_position) && shouldWIAddPrompt) {\n    const originalAN = getContext().extensionPrompts[NOTE_MODULE_NAME].value;\n    const ANWithDesc =\n      power_user.persona_description_position === persona_description_positions.TOP_AN\n        ? `${description}\\n${originalAN}`\n        : `${originalAN}\\n${description}`;\n\n    setExtensionPrompt(\n      NOTE_MODULE_NAME,\n      ANWithDesc,\n      chat_metadata[metadata_keys.position],\n      chat_metadata[metadata_keys.depth],\n      extension_settings.note.allowWIScan,\n      chat_metadata[metadata_keys.role],\n    );\n  }\n\n  // user信息深度注入不依赖于作者注释的状态，直接应用\n  if (power_user.persona_description_position === persona_description_positions.AT_DEPTH) {\n    setExtensionPrompt(\n      INJECT_TAG,\n      description,\n      extension_prompt_types.IN_CHAT,\n      power_user.persona_description_depth,\n      true,\n      power_user.persona_description_role,\n    );\n  }\n}\nasync function handleInjectedPrompts(promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>) {\n  if (!promptConfig || !Array.isArray(promptConfig.inject)) return;\n\n  const injects = promptConfig.inject;\n\n  const positionMap = {\n    IN_PROMPT: extension_prompt_types.IN_PROMPT,\n    IN_CHAT: extension_prompt_types.IN_CHAT,\n    BEFORE_PROMPT: extension_prompt_types.BEFORE_PROMPT,\n    NONE: extension_prompt_types.NONE,\n  };\n\n  for (const inject of injects) {\n    const validatedInject = {\n      role: roleTypes[inject.role] ?? extension_prompt_roles.SYSTEM,\n      content: inject.content || '',\n      depth: Number(inject.depth) || 0,\n      scan: Boolean(inject.scan) || true,\n      position: positionMap[inject.position as keyof typeof positionMap] ?? extension_prompt_types.IN_CHAT,\n    };\n\n    // 设置用户自定义注入提示词\n    setExtensionPrompt(\n      `INJECTION-${inject.depth}-${inject.role}`,\n      validatedInject.content,\n      validatedInject.position,\n      validatedInject.depth,\n      validatedInject.scan,\n      validatedInject.role,\n    );\n  }\n}\n// 处理聊天记录\nasync function processChatHistory(chat: any[]) {\n  let coreChat = chat.filter(x => !x.is_system);\n\n  return await Promise.all(\n    coreChat.map(async (chatItem, index) => {\n      let message = chatItem.mes;\n      let regexType = chatItem.is_user ? regex_placement.USER_INPUT : regex_placement.AI_OUTPUT;\n\n      let regexedMessage = getRegexedString(message, regexType, {\n        isPrompt: true,\n        depth: coreChat.length - index - 1,\n      });\n\n      return {\n        ...chatItem,\n        mes: regexedMessage,\n        index,\n      };\n    }),\n  );\n}\n\n// 处理世界书\nasync function processWorldInfo(\n  oaiMessages: detail.RolePrompt[],\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const chatForWI = oaiMessages\n    .filter(x => x.role !== 'system')\n    .map(x => {\n      const name = x.role === 'user' ? name1 : name2;\n      return world_info_include_names ? `${name}: ${x.content}` : x.content;\n    })\n    .reverse();\n\n  const this_max_context = getMaxContextSize();\n  const { worldInfoString, worldInfoBefore, worldInfoAfter, worldInfoExamples, worldInfoDepth } =\n    await getWorldInfoPrompt(chatForWI, this_max_context, dryRun);\n\n  await clearInjectionPrompts(['customDepthWI']);\n\n  if (!isPromptFiltered('with_depth_entries', config)) {\n    processWorldInfoDepth(worldInfoDepth);\n  }\n\n  // 先检查是否被过滤，如果被过滤直接返回null\n  const finalWorldInfoBefore = isPromptFiltered('world_info_before', config)\n    ? null\n    : config.overrides?.world_info_before !== undefined\n    ? config.overrides.world_info_before\n    : worldInfoBefore;\n\n  const finalWorldInfoAfter = isPromptFiltered('world_info_after', config)\n    ? null\n    : config.overrides?.world_info_after !== undefined\n    ? config.overrides.world_info_after\n    : worldInfoAfter;\n\n  return {\n    worldInfoString,\n    worldInfoBefore: finalWorldInfoBefore,\n    worldInfoAfter: finalWorldInfoAfter,\n    worldInfoExamples,\n    worldInfoDepth: !isPromptFiltered('with_depth_entries', config) ? worldInfoDepth : null,\n  };\n}\n// 处理世界信息深度部分\nfunction processWorldInfoDepth(worldInfoDepth: any[]) {\n  if (Array.isArray(worldInfoDepth)) {\n    worldInfoDepth.forEach(entry => {\n      const joinedEntries = entry.entries.join('\\n');\n      setExtensionPrompt(\n        `customDepthWI-${entry.depth}-${entry.role}`,\n        joinedEntries,\n        extension_prompt_types.IN_CHAT,\n        entry.depth,\n        false,\n        entry.role,\n      );\n    });\n  }\n}\n// 处理世界书中示例前后\nasync function processMessageExamples(mesExamplesArray: string[], worldInfoExamples: any[]): Promise<string[]> {\n  // 处理世界信息中的示例\n  for (const example of worldInfoExamples) {\n    if (!example.content.length) continue;\n\n    const formattedExample = baseChatReplace(example.content, name1, name2);\n    const cleanedExample = parseMesExamples(formattedExample);\n\n    if (example.position === wi_anchor_position.before) {\n      mesExamplesArray.unshift(...cleanedExample);\n    } else {\n      mesExamplesArray.push(...cleanedExample);\n    }\n  }\n\n  return mesExamplesArray;\n}\n//处理对话示例格式\nfunction parseMesExamples(examplesStr: string) {\n  if (examplesStr.length === 0 || examplesStr === '<START>') {\n    return [];\n  }\n\n  if (!examplesStr.startsWith('<START>')) {\n    examplesStr = '<START>\\n' + examplesStr.trim();\n  }\n  const blockHeading = '<START>\\n';\n  const splitExamples = examplesStr\n    .split(/<START>/gi)\n    .slice(1)\n    .map(block => `${blockHeading}${block.trim()}\\n`);\n\n  return splitExamples;\n}\n//用户输入先正则处理\nfunction processUserInput(user_input: string, oai_settings: any) {\n  if (user_input === '') {\n    user_input = oai_settings.send_if_empty.trim();\n  }\n  return getRegexedString(user_input, regex_placement.USER_INPUT, {\n    isPrompt: true,\n    depth: 0,\n  });\n}\n//使用预设\nasync function handlePresetPath(\n  baseData: any,\n  processedUserInput: string,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  // prepareOpenAIMessages会从设置里读取场景因此临时覆盖\n  let originalScenario = null;\n\n  try {\n    const scenarioOverride = config?.overrides?.scenario;\n\n    if (scenarioOverride && characters && characters[this_chid]) {\n      // 保存原始场景\n      originalScenario = characters[this_chid].scenario || null;\n      characters[this_chid].scenario = scenarioOverride;\n    }\n    // 添加user消息(一次性)\n    const userMessageTemp = {\n      role: 'user',\n      content: processedUserInput,\n    };\n\n    if (config.image) {\n      userMessageTemp.image = await convertFileToBase64(config.image);\n    }\n\n    baseData.chatContext.oaiMessages.unshift(userMessageTemp);\n\n    const messageData = {\n      name2,\n      charDescription: baseData.characterInfo.description,\n      charPersonality: baseData.characterInfo.personality,\n      Scenario: baseData.characterInfo.scenario,\n      worldInfoBefore: baseData.worldInfo.worldInfoBefore,\n      worldInfoAfter: baseData.worldInfo.worldInfoAfter,\n      extensionPrompts: getContext().extensionPrompts,\n      bias: baseData.chatContext.promptBias,\n      type: 'normal',\n      quietPrompt: '',\n      quietImage: null,\n      cyclePrompt: '',\n      systemPromptOverride: baseData.characterInfo.system,\n      jailbreakPromptOverride: baseData.characterInfo.jailbreak,\n      personaDescription: baseData.characterInfo.persona,\n      messages: baseData.chatContext.oaiMessages,\n      messageExamples: baseData.chatContext.oaiMessageExamples,\n    };\n\n    const [prompt] = await prepareOpenAIMessages(messageData, dryRun);\n\n    return { prompt };\n  } finally {\n    // 恢复原始场景\n    if (originalScenario !== null && characters && characters[this_chid]) {\n      characters[this_chid].scenario = originalScenario;\n    }\n  }\n}\nasync function convertSystemPromptsToCollection(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const promptCollection = new PromptCollection();\n  const examplesCollection = new MessageCollection('dialogue_examples');\n  // 处理自定义注入\n  const customPrompts = (promptConfig.order || default_order)\n    .map((item, index) => {\n      if (typeof item === 'object' && item.role && item.content) {\n        const identifier = `custom_prompt_${index}`;\n        return {\n          identifier,\n          role: item.role as 'system' | 'user' | 'assistant',\n          content: item.content,\n        };\n      }\n      return null;\n    })\n    .filter((item): item is NonNullable<typeof item> => item !== null);\n\n  for (const prompt of customPrompts) {\n    promptCollection.add(\n      new Prompt({\n        identifier: prompt.identifier,\n        role: prompt.role,\n        content: prompt.content,\n        system_prompt: prompt.role === 'system',\n      }),\n    );\n  }\n\n  // 处理角色信息\n  const characterPrompts = [\n    {\n      id: 'char_description',\n      content: baseData.characterInfo.description,\n      role: 'system',\n    },\n    {\n      id: 'char_personality',\n      content: baseData.characterInfo.personality,\n      role: 'system',\n    },\n    {\n      id: 'scenario',\n      content: baseData.characterInfo.scenario,\n      role: 'system',\n    },\n  ];\n\n  // 添加角色相关提示词\n  characterPrompts.forEach(prompt => {\n    if (prompt.content) {\n      promptCollection.add(\n        new Prompt({\n          identifier: prompt.id,\n          role: prompt.role,\n          content: prompt.content,\n          system_prompt: true,\n        }),\n      );\n    }\n  });\n\n  //当user信息在提示词管理器中时\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.IN_PROMPT\n  ) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'persona_description',\n        role: 'system',\n        content: baseData.characterInfo.persona,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  // 处理世界信息\n  if (baseData.worldInfo.world_info_before) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'world_info_before',\n        role: 'system',\n        content: baseData.worldInfo.world_info_before,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.worldInfo.world_info_after) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'world_info_after',\n        role: 'system',\n        content: baseData.worldInfo.world_info_after,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.chatContext.oaiMessageExamples.length > 0) {\n    // 遍历所有对话示例\n    for (const dialogue of [...baseData.chatContext.oaiMessageExamples]) {\n      const dialogueIndex = baseData.chatContext.oaiMessageExamples.indexOf(dialogue);\n      const chatMessages = [];\n\n      for (let promptIndex = 0; promptIndex < dialogue.length; promptIndex++) {\n        const prompt = dialogue[promptIndex];\n        const role = 'system';\n        const content = prompt.content || '';\n        const identifier = `dialogue_examples ${dialogueIndex}-${promptIndex}`;\n\n        const chatMessage = await Message.createAsync(role, content, identifier);\n        await chatMessage.setName(prompt.name);\n        chatMessages.push(chatMessage);\n      }\n      for (const message of chatMessages) {\n        examplesCollection.add(message);\n      }\n    }\n  }\n  return {\n    systemPrompts: promptCollection,\n    dialogue_examples: examplesCollection,\n  };\n}\n//不使用预设\nasync function handleCustomPath(\n  baseData: any,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const chatCompletion = new ChatCompletion();\n  chatCompletion.setTokenBudget(oai_settings.openai_max_context, oai_settings.openai_max_tokens);\n  chatCompletion.reserveBudget(3);\n  const orderArray = config.order || default_order;\n  const positionMap: Record<string, number> = orderArray.reduce((acc: Record<string, number>, item, index) => {\n    if (typeof item === 'string') {\n      acc[item.toLowerCase()] = index;\n    } else if (typeof item === 'object') {\n      acc[`custom_prompt_${index}`] = index;\n    }\n    return acc;\n  }, {});\n\n  //转换为集合\n  const { systemPrompts, dialogue_examples } = await convertSystemPromptsToCollection(baseData, config);\n  const addToChatCompletionInOrder = async (source: any, index: number) => {\n    if (typeof source === 'object') {\n      // 处理自定义注入\n      const collection = new MessageCollection(`custom_prompt_${index}`);\n      const message = await Message.createAsync(source.role, source.content, `custom_prompt_${index}`);\n      collection.add(message);\n      chatCompletion.add(collection, index);\n    } else if (systemPrompts.has(source)) {\n      // 处理普通提示词\n      const prompt = systemPrompts.get(source);\n      const collection = new MessageCollection(source);\n      const message = await Message.fromPromptAsync(prompt);\n      collection.add(message);\n      chatCompletion.add(collection, positionMap[source]);\n    }\n  };\n\n  // 处理所有类型的提示词\n  for (const [index, item] of orderArray.entries()) {\n    if (typeof item === 'string') {\n      // 使用 isPromptFiltered 替代 promptFilter 判断\n      if (!isPromptFiltered(item, config)) {\n        await addToChatCompletionInOrder(item, index);\n      }\n    } else if (typeof item === 'object' && item.role && item.content) {\n      await addToChatCompletionInOrder(item, index);\n    }\n  }\n\n  const dialogue_examplesIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'dialogue_examples',\n  );\n\n  if (dialogue_examplesIndex !== -1 && !isPromptFiltered('dialogue_examples', config)) {\n    chatCompletion.add(dialogue_examples, dialogue_examplesIndex);\n  }\n  //给user输入预留token\n  const userInputMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n  chatCompletion.reserveBudget(userInputMessage);\n\n  await processChatHistoryAndInject(baseData, config, chatCompletion, processedUserInput);\n  chatCompletion.freeBudget(userInputMessage);\n\n  //根据当前预设决定是否合并连续系统role消息\n  if (oai_settings.squash_system_messages) {\n    await chatCompletion.squashSystemMessages();\n  }\n  const prompt = chatCompletion.getChat();\n  return { prompt };\n}\n\nasync function processChatHistoryAndInject(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  chatCompletion: ChatCompletion,\n  processedUserInput: string,\n) {\n  const orderArray = promptConfig.order || default_order;\n  const chatHistoryIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'chat_history',\n  );\n  const userInputIndex = orderArray.findIndex(item => typeof item === 'string' && item.toLowerCase() === 'user_input');\n\n  const hasUserInput = userInputIndex !== -1;\n  const hasChatHistory = chatHistoryIndex !== -1;\n  const isChatHistoryFiltered = isPromptFiltered('chat_history', promptConfig);\n\n  // 创建用户输入消息\n  const userMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n\n  // 仅在需要时添加图像\n  if (promptConfig.image && hasUserInput) {\n    await userMessage.addImage(await convertFileToBase64(promptConfig.image));\n  }\n\n  // 如果聊天记录被过滤或不在order中，只处理用户输入\n  if (isChatHistoryFiltered || !hasChatHistory) {\n    const insertIndex = hasUserInput ? userInputIndex : orderArray.length;\n    chatCompletion.add(new MessageCollection('user_input', userMessage), insertIndex);\n    return;\n  }\n\n  // 处理聊天记录\n  const chatCollection = new MessageCollection('chat_history');\n\n  // 为新聊天指示预留token\n  const newChat = oai_settings.new_chat_prompt;\n  const newChatMessage = await Message.createAsync('system', substituteParams(newChat), 'newMainChat');\n  chatCompletion.reserveBudget(newChatMessage);\n\n  // 添加新聊天提示词到集合的最前面\n  chatCollection.add(newChatMessage);\n\n  // 处理空消息替换\n  const lastChatPrompt = baseData.chatContext.oaiMessages[baseData.chatContext.oaiMessages.length - 1];\n  const emptyMessage = await Message.createAsync('user', oai_settings.send_if_empty, 'emptyUserMessageReplacement');\n\n  if (\n    lastChatPrompt &&\n    lastChatPrompt.role === 'assistant' &&\n    oai_settings.send_if_empty &&\n    chatCompletion.canAfford(emptyMessage)\n  ) {\n    chatCollection.add(emptyMessage);\n  }\n\n  // 将用户消息添加到消息数组中准备处理注入\n  if (!hasUserInput) {\n    const userPrompt = {\n      role: 'user',\n      content: processedUserInput,\n      identifier: 'user_input',\n      image: promptConfig.image ? await convertFileToBase64(promptConfig.image) : undefined,\n    };\n    baseData.chatContext.oaiMessages.unshift(userPrompt);\n  }\n\n  // 处理注入和添加消息\n  const messages = (await populationInjectionPrompts(baseData.chatContext.oaiMessages, promptConfig.inject)).reverse();\n  const imageInlining = isImageInliningSupported();\n  // 添加聊天记录\n  const chatPool = [...messages];\n  for (const chatPrompt of chatPool) {\n    const prompt = new Prompt(chatPrompt);\n    prompt.identifier = `chat_history-${messages.length - chatPool.indexOf(chatPrompt)}`;\n    prompt.content = substituteParams(prompt.content);\n\n    const chatMessage = await Message.fromPromptAsync(prompt);\n    const promptManager = setupChatCompletionPromptManager();\n    if (promptManager.serviceSettings.names_behavior === character_names_behavior.COMPLETION && prompt.name) {\n      const messageName = promptManager.isValidName(prompt.name)\n        ? prompt.name\n        : promptManager.sanitizeName(prompt.name);\n      await chatMessage.setName(messageName);\n    }\n    if (imageInlining && chatPrompt.image) {\n      await chatMessage.addImage(chatPrompt.image);\n    }\n    if (chatCompletion.canAfford(chatMessage)) {\n      chatCollection.add(chatMessage);\n    } else {\n      break;\n    }\n  }\n\n  // 释放新聊天提示词的预留token\n  chatCompletion.freeBudget(newChatMessage);\n\n  if (hasUserInput) {\n    // 按各自在order中的位置添加聊天记录和用户输入\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n    chatCompletion.add(new MessageCollection('user_input', userMessage), userInputIndex);\n  } else {\n    // 聊天记录中已包含用户输入，直接添加到chat_history位置\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n  }\n}\nasync function populationInjectionPrompts(messages: detail.RolePrompt[], customInjects: detail.InjectionPrompt[] = []) {\n  let processedMessages = [...messages];\n  let totalInsertedMessages = 0;\n  const injectionPrompts = [];\n\n  const authorsNote = getContext().extensionPrompts[NOTE_MODULE_NAME];\n  if (authorsNote && authorsNote.value) {\n    injectionPrompts.push({\n      role: getPromptRole(authorsNote.role),\n      content: authorsNote.value,\n      identifier: 'authorsNote',\n      injection_depth: authorsNote.depth,\n      injected: true,\n    });\n  }\n\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.AT_DEPTH\n  ) {\n    injectionPrompts.push({\n      role: 'system',\n      content: power_user.persona_description,\n      identifier: 'persona_description',\n      injection_depth: power_user.persona_description_depth,\n      injected: true,\n    });\n  }\n\n  // 处理自定义注入\n  if (Array.isArray(customInjects)) {\n    for (const inject of customInjects) {\n      injectionPrompts.push({\n        identifier: `INJECTION-${inject.role}-${inject.depth}`,\n        role: inject.role,\n        content: inject.content,\n        injection_depth: inject.depth || 0,\n        injected: true,\n      });\n    }\n  }\n\n  for (let i = 0; i <= MAX_INJECTION_DEPTH; i++) {\n    const depthPrompts = injectionPrompts.filter(prompt => prompt.injection_depth === i && prompt.content);\n\n    const roles = ['system', 'user', 'assistant'];\n    const roleMessages = [];\n    const separator = '\\n';\n\n    for (const role of roles) {\n      // 直接处理当前深度和角色的所有提示词\n      const rolePrompts = depthPrompts\n        .filter(prompt => prompt.role === role)\n        .map(x => x.content.trim())\n        .join(separator);\n\n      if (rolePrompts) {\n        roleMessages.push({\n          role: role,\n          content: rolePrompts,\n          injected: true,\n        });\n      }\n    }\n\n    if (roleMessages.length) {\n      const injectIdx = i + totalInsertedMessages;\n      processedMessages.splice(injectIdx, 0, ...roleMessages);\n      totalInsertedMessages += roleMessages.length;\n    }\n  }\n\n  return processedMessages;\n}\n\nfunction getPromptRole(role: number) {\n  switch (role) {\n    case extension_prompt_roles.SYSTEM:\n      return 'system';\n    case extension_prompt_roles.USER:\n      return 'user';\n    case extension_prompt_roles.ASSISTANT:\n      return 'assistant';\n    default:\n      return 'system';\n  }\n}\n\n//生成响应\nasync function generateResponse(generate_data: any, useStream = false): Promise<string> {\n  let result = '';\n  try {\n    deactivateSendButtons();\n\n    if (useStream) {\n      let originalStreamSetting = oai_settings.stream_openai;\n      if (!originalStreamSetting) {\n        oai_settings.stream_openai = true;\n        saveSettingsDebounced();\n      }\n      const streamingProcessor = new StreamingProcessor();\n      streamingProcessor.generator = await sendOpenAIRequest('normal', generate_data.prompt, abortController.signal);\n      result = (await streamingProcessor.generate()) as string;\n      // console.log(\"getMessage\", getMessage);\n      if (originalStreamSetting !== oai_settings.stream_openai) {\n        oai_settings.stream_openai = originalStreamSetting;\n        saveSettingsDebounced();\n      }\n    } else {\n      eventSource.emit('js_generation_started');\n      const response = await sendOpenAIRequest(type, generate_data.prompt, abortController.signal);\n      result = await handleResponse(response);\n    }\n  } catch (error) {\n    throw error;\n  } finally {\n    unblockGeneration();\n    await clearInjectionPrompts(['INJECTION']);\n  }\n  return result;\n}\n\n// 处理响应\nasync function handleResponse(response: any) {\n  if (!response) {\n    throw Error(`未得到响应`);\n  }\n  if (response.error) {\n    if (response?.response) {\n      // @ts-ignore\n      toastr.error(response.response, t`API Error`, {\n        preventDuplicates: true,\n      });\n    }\n    throw Error(response?.response);\n  }\n  const message: string = extractMessageFromData(response);\n  eventSource.emit('js_generation_ended', message);\n  return message;\n}\n\nfunction unblockGeneration() {\n  activateSendButtons();\n  showSwipeButtons();\n  setGenerationProgress(0);\n  flushEphemeralStoppingStrings();\n}\n\n// 清理注入\nasync function clearInjectionPrompts(prefixes: string[]) {\n  const prompts = getContext().extensionPrompts;\n  Object.keys(prompts)\n    .filter(key => prefixes.some(prefix => key.startsWith(prefix)))\n    .forEach(key => delete prompts[key]);\n\n  await saveChatConditional();\n}\nfunction extractMessageFromData(data: any) {\n  if (typeof data === 'string') {\n    return data;\n  }\n\n  return (\n    data?.choices?.[0]?.message?.content ??\n    data?.choices?.[0]?.text ??\n    data?.text ??\n    data?.message?.content?.[0]?.text ??\n    data?.message?.tool_plan ??\n    ''\n  );\n}\n\nasync function convertFileToBase64(image: File | string): Promise<string> {\n  if (image instanceof File) {\n    return await getBase64Async(image);\n  }\n  return image;\n}\n\nfunction addTemporaryUserMessage(userContent: string) {\n  setExtensionPrompt('TEMP_USER_MESSAGE', userContent, extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction removeTemporaryUserMessage() {\n  setExtensionPrompt('TEMP_USER_MESSAGE', '', extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction isPromptFiltered(promptId: string, config: { overrides?: detail.OverrideConfig }): boolean {\n  if (!config.overrides) {\n    return false;\n  }\n\n  if (promptId === 'with_depth_entries') {\n    return config.overrides.with_depth_entries === false;\n  }\n\n  // 特殊处理 chat_history\n  if (promptId === 'chat_history') {\n    const prompts = config.overrides.chat_history;\n    return prompts !== undefined && prompts.length === 0;\n  }\n\n  // 对于普通提示词，只有当它在 overrides 中存在且为空字符串时才被过滤\n  const override = config.overrides[promptId as keyof Omit<detail.OverrideConfig, 'chat_history'>];\n  return override !== undefined && override === '';\n}\n\nexport function registerIframeGenerateHandler() {\n  registerIframeHandler('[Generate][generate]', async (event: MessageEvent<IframeGenerate>): Promise<string> => {\n    const iframe_name = getIframeName(event);\n    const config = event.data.config;\n\n    console.info(`${getLogPrefix(event)}(${iframe_name}) 发送生成请求: ${config}`);\n\n    const converted_config = fromGenerateConfig(config);\n    return await iframeGenerate(converted_config);\n  });\n\n  registerIframeHandler('[Generate][generateRaw]', async (event: MessageEvent<IframeGenerateRaw>): Promise<string> => {\n    const iframe_name = getIframeName(event);\n    const config = event.data.config;\n\n    console.info(`${getLogPrefix(event)}(${iframe_name}) 发送生成请求: ${config}`);\n\n    const converted_config = fromGenerateRawConfig(config);\n    return await iframeGenerate(converted_config);\n  });\n}\n\n$(document).on('click', '#mes_stop', function () {\n  const wasStopped = stopGeneration();\n  if (wasStopped) {\n    if (abortController) {\n      abortController.abort('Clicked stop button');\n    }\n    unblockGeneration();\n  }\n});\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { debounce } from '@sillytavern/scripts/utils';\nimport {\n  createWorldInfoEntry,\n  deleteWIOriginalDataValue,\n  loadWorldInfo,\n  originalWIDataKeyMap,\n  saveWorldInfo,\n  setWIOriginalDataValue,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\ninterface IframeGetLorebookEntries extends IframeMessage {\n  request: '[LorebookEntry][getLorebookEntries]';\n  lorebook: string;\n  option: Required<GetLorebookEntriesOption>;\n}\n\ninterface IframeSetLorebookEntries extends IframeMessage {\n  request: '[LorebookEntry][setLorebookEntries]';\n  lorebook: string;\n  entries: (Pick<LorebookEntry, 'uid'> & Partial<Omit<LorebookEntry, 'uid'>>)[];\n}\n\ninterface IframeCreateLorebookEntry extends IframeMessage {\n  request: '[LorebookEntry][createLorebookEntry]';\n  lorebook: string;\n  field_values: Partial<Omit<LorebookEntry, 'uid'>>;\n}\n\ninterface IframeDeleteLorebookEntry extends IframeMessage {\n  request: '[LorebookEntry][deleteLorebookEntry]';\n  lorebook: string;\n  lorebook_uid: number;\n}\n\nfunction toLorebookEntry(entry: any): LorebookEntry {\n  return {\n    uid: entry.uid,\n    display_index: entry.displayIndex,\n    comment: entry.comment,\n    enabled: !entry.disable,\n    type: entry.constant ? 'constant' : entry.vectorized ? 'vectorized' : 'selective',\n    position:\n      // @ts-ignore\n      {\n        0: 'before_character_definition',\n        1: 'after_character_definition',\n        5: 'before_example_messages',\n        6: 'after_example_messages',\n        2: 'before_author_note',\n        3: 'after_author_note',\n      }[entry.position] ??\n      (entry.role === 0 ? 'at_depth_as_system' : entry.role === 1 ? 'at_depth_as_user' : 'at_depth_as_assistant'),\n    depth: entry.position === 4 ? entry.depth : null,\n    order: entry.order,\n    probability: entry.probability,\n\n    key: entry.key,\n    logic: {\n      0: 'and_any',\n      1: 'and_all',\n      2: 'not_any',\n      3: 'not_all',\n    }[entry.selectiveLogic as number] as 'and_any' | 'and_all' | 'not_any' | 'not_all',\n    filter: entry.keysecondary,\n\n    scan_depth: entry.scanDepth ?? 'same_as_global',\n    case_sensitive: entry.caseSensitive ?? 'same_as_global',\n    match_whole_words: entry.matchWholeWords ?? 'same_as_global',\n    use_group_scoring: entry.useGroupScoring ?? 'same_as_global',\n    automation_id: entry.automationId || null,\n\n    exclude_recursion: entry.excludeRecursion,\n    prevent_recursion: entry.preventRecursion,\n    delay_until_recursion: entry.delayUntilRecursion,\n\n    content: entry.content,\n\n    group: entry.group,\n    group_prioritized: entry.groupOverride,\n    group_weight: entry.groupWeight,\n    sticky: entry.sticky || null,\n    cooldown: entry.cooldown || null,\n    delay: entry.delay || null,\n  };\n}\n\nfunction fromPartialLorebookEntry(entry: Partial<LorebookEntry>): any {\n  const transformers = {\n    uid: (value: LorebookEntry['uid']) => ({ uid: value }),\n    display_index: (value: LorebookEntry['display_index']) => ({ displayIndex: value }),\n\n    comment: (value: LorebookEntry['comment']) => ({ comment: value }),\n    enabled: (value: LorebookEntry['enabled']) => ({ disable: !value }),\n    type: (value: LorebookEntry['type']) => ({\n      constant: value === 'constant',\n      vectorized: value === 'vectorized',\n    }),\n    position: (value: LorebookEntry['position']) => ({\n      position: {\n        before_character_definition: 0,\n        after_character_definition: 1,\n        before_example_messages: 5,\n        after_example_messages: 6,\n        before_author_note: 2,\n        after_author_note: 3,\n        at_depth_as_system: 4,\n        at_depth_as_user: 4,\n        at_depth_as_assistant: 4,\n      }[value],\n      role:\n        // @ts-ignore\n        {\n          at_depth_as_system: 0,\n          at_depth_as_user: 1,\n          at_depth_as_assistant: 2,\n        }[value] ?? null,\n    }),\n    depth: (value: LorebookEntry['depth']) => ({ depth: value === null ? 4 : value }),\n    order: (value: LorebookEntry['order']) => ({ order: value }),\n    probability: (value: LorebookEntry['probability']) => ({ probability: value }),\n\n    key: (value: LorebookEntry['key']) => ({ key: value }),\n    logic: (value: LorebookEntry['logic']) => ({\n      selectiveLogic: {\n        and_any: 0,\n        and_all: 1,\n        not_any: 2,\n        not_all: 3,\n      }[value],\n    }),\n    filter: (value: LorebookEntry['filter']) => ({ keysecondary: value }),\n\n    scan_depth: (value: LorebookEntry['scan_depth']) => ({ scanDepth: value === 'same_as_global' ? null : value }),\n    case_sensitive: (value: LorebookEntry['case_sensitive']) => ({\n      caseSensitive: value === 'same_as_global' ? null : value,\n    }),\n    match_whole_words: (value: LorebookEntry['match_whole_words']) => ({\n      matchWholeWords: value === 'same_as_global' ? null : value,\n    }),\n    use_group_scoring: (value: LorebookEntry['use_group_scoring']) => ({\n      useGroupScoring: value === 'same_as_global' ? null : value,\n    }),\n    automation_id: (value: LorebookEntry['automation_id']) => ({ automationId: value === null ? '' : value }),\n\n    exclude_recursion: (value: LorebookEntry['exclude_recursion']) => ({ excludeRecursion: value }),\n    prevent_recursion: (value: LorebookEntry['prevent_recursion']) => ({ preventRecursion: value }),\n    delay_until_recursion: (value: LorebookEntry['delay_until_recursion']) => ({ delayUntilRecursion: value }),\n\n    content: (value: LorebookEntry['content']) => ({ content: value }),\n\n    group: (value: LorebookEntry['group']) => ({ group: value }),\n    group_prioritized: (value: LorebookEntry['group_prioritized']) => ({ groupOverride: value }),\n    group_weight: (value: LorebookEntry['group_weight']) => ({ groupWeight: value }),\n    sticky: (value: LorebookEntry['sticky']) => ({ sticky: value === null ? 0 : value }),\n    cooldown: (value: LorebookEntry['cooldown']) => ({ cooldown: value === null ? 0 : value }),\n    delay: (value: LorebookEntry['delay']) => ({ delay: value === null ? 0 : value }),\n  };\n\n  return Object.entries(entry)\n    .filter(([_, value]) => value !== undefined)\n    .reduce(\n      (result, [field, value]) => ({\n        ...result,\n        // @ts-ignore\n        ...transformers[field]?.(value),\n      }),\n      {},\n    );\n}\n\nfunction assignFieldValuesToWiEntry(data: any, wi_entry: any, field_values: any) {\n  Object.entries(field_values).forEach(([field, value]) => {\n    wi_entry[field] = value;\n    // @ts-ignore\n    const original_wi_mapped_key = originalWIDataKeyMap[field];\n    if (original_wi_mapped_key) {\n      // @ts-ignore\n      setWIOriginalDataValue(data, wi_entry.uid, original_wi_mapped_key, value);\n    }\n  });\n}\n\nfunction reloadEditor(file: string): void {\n  const currentIndex = Number($('#world_editor_select').val());\n  const selectedIndex = world_names.indexOf(file);\n  if (selectedIndex !== -1 && currentIndex === selectedIndex) {\n    $('#world_editor_select').val(selectedIndex).trigger('change');\n  }\n}\n\nconst reloadEditorDebounced = debounce(reloadEditor);\n\nexport function registerIframeLorebookEntryHandler() {\n  registerIframeHandler(\n    '[LorebookEntry][getLorebookEntries]',\n    async (event: MessageEvent<IframeGetLorebookEntries>): Promise<LorebookEntry[]> => {\n      const lorebook = event.data.lorebook;\n      const option = event.data.option;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n\n      // @ts-ignore\n      let entries: LorebookEntry[] = Object.values((await loadWorldInfo(lorebook)).entries).map(toLorebookEntry);\n      if (option.filter !== 'none') {\n        entries = entries.filter(entry =>\n          Object.entries(option.filter).every(([field, expected_value]) => {\n            // @ts-ignore\n            const entry_value = entry[field];\n            if (Array.isArray(entry_value)) {\n              return (expected_value as string[]).every(value => entry_value.includes(value));\n            }\n            if (typeof entry_value === 'string') {\n              return entry_value.includes(expected_value as string);\n            }\n            return entry_value === expected_value;\n          }),\n        );\n      }\n\n      console.info(`${getLogPrefix(event)}获取世界书 '${lorebook}' 中的条目, 选项: ${JSON.stringify(option)}`);\n      return entries;\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][setLorebookEntries]',\n    async (event: MessageEvent<IframeSetLorebookEntries>): Promise<void> => {\n      const lorebook = event.data.lorebook;\n      const entries = event.data.entries;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n      const data = await loadWorldInfo(lorebook);\n\n      const process_entry = async (entry: (typeof entries)[0]): Promise<void> => {\n        // @ts-ignore\n        const wi_entry = data.entries[entry.uid];\n        if (!wi_entry) {\n          throw Error(`未能在世界书 '${lorebook}' 中找到 uid=${entry.uid} 的条目`);\n        }\n        assignFieldValuesToWiEntry(data, wi_entry, fromPartialLorebookEntry(entry));\n      };\n\n      await Promise.all(entries.map(process_entry));\n      await saveWorldInfo(lorebook, data);\n      reloadEditorDebounced(lorebook);\n\n      console.info(\n        `${getLogPrefix(event)}修改世界书 '${lorebook}' 中以下条目的以下字段:\\n${JSON.stringify(\n          entries,\n          undefined,\n          2,\n        )}`,\n      );\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][createLorebookEntry]',\n    async (event: MessageEvent<IframeCreateLorebookEntry>): Promise<number> => {\n      const lorebook = event.data.lorebook;\n      const field_values = event.data.field_values;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n      const data = await loadWorldInfo(lorebook);\n      const wi_entry = createWorldInfoEntry(lorebook, data) as any;\n      const partial_lorebook_entry = fromPartialLorebookEntry(field_values);\n      if (partial_lorebook_entry.uid) {\n        delete partial_lorebook_entry.uid;\n      }\n      assignFieldValuesToWiEntry(data, wi_entry, partial_lorebook_entry);\n\n      await saveWorldInfo(lorebook, data);\n      reloadEditorDebounced(lorebook);\n\n      console.info(\n        `${getLogPrefix(event)}在世界书 '${lorebook}' 中新建 uid='${wi_entry.uid}' 条目, 并设置内容:\\n${JSON.stringify(\n          field_values,\n          undefined,\n          2,\n        )}`,\n      );\n      return wi_entry.uid;\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][deleteLorebookEntry]',\n    async (event: MessageEvent<IframeDeleteLorebookEntry>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n      const lorebook_uid = event.data.lorebook_uid;\n\n      const data = await loadWorldInfo(lorebook);\n      // QUESTION: 好像没办法从 data 检测世界书是否存在?\n      let deleted = false;\n      // @ts-ignore 18046\n      if (data.entries[lorebook_uid]) {\n        // @ts-ignore 18046\n        delete data.entries[lorebook_uid];\n        deleted = true;\n      }\n      if (deleted) {\n        // @ts-ignore 2345\n        deleteWIOriginalDataValue(data, lorebook_uid);\n        await saveWorldInfo(lorebook, data);\n        reloadEditorDebounced(lorebook);\n      }\n\n      console.info(\n        `${getLogPrefix(event)}删除世界书 '${lorebook}' 中的 uid='${lorebook_uid}' 条目${deleted ? '成功' : '失败'}`,\n      );\n      return deleted;\n    },\n  );\n}\n","import { registerIframeAudioHandler } from '@/iframe_server/audio';\nimport { registerIframeCharacterHandler } from '@/iframe_server/character';\nimport { registerIframeChatMessageHandler } from '@/iframe_server/chat_message';\nimport { registerIframeDisplayedMessageHandler } from '@/iframe_server/displayed_message';\nimport { registerIframeFrontendVersionHandler } from '@/iframe_server/frontend_version';\nimport { registerIframeGenerateHandler } from '@/iframe_server/generate';\nimport { registerIframeLorebookHandler } from '@/iframe_server/lorebook';\nimport { registerIframeLorebookEntryHandler } from '@/iframe_server/lorebook_entry';\nimport { registerIframeSlashHandler } from '@/iframe_server/slash';\nimport { registerIframeTavernRegexHandler } from '@/iframe_server/tavern_regex';\nimport { registerIframeUtilHandler } from '@/iframe_server/util';\nimport { registerIframeVariableHandler } from '@/iframe_server/variables';\nimport { IframeMessage, getLogPrefix, iframe_handlers } from '@/iframe_server/_impl';\n\nimport { t } from '@sillytavern/scripts/i18n';\n\nexport async function handleIframe(event: MessageEvent<IframeMessage>): Promise<void> {\n  if (!event.data) return;\n\n  const handler = iframe_handlers[event.data.request];\n  if (!handler) {\n    return;\n  }\n\n  let result: any = undefined;\n  try {\n    result = await handler(event);\n  } catch (err) {\n    const error = err as Error;\n    toastr.error(t`${getLogPrefix(event)}${error.name + ': ' + error.message}${error.stack ? error.stack : ''}`);\n    console.error(getLogPrefix(event), error);\n  } finally {\n    (event.source as MessageEventSource).postMessage(\n      {\n        request: event.data.request + '_callback',\n        uid: event.data.uid,\n        result: result,\n      },\n      {\n        targetOrigin: '*',\n      },\n    );\n  }\n}\n\nregisterIframeChatMessageHandler();\nregisterIframeDisplayedMessageHandler();\nregisterIframeFrontendVersionHandler();\nregisterIframeGenerateHandler();\nregisterIframeLorebookEntryHandler();\nregisterIframeLorebookHandler();\nregisterIframeSlashHandler();\nregisterIframeTavernRegexHandler();\nregisterIframeUtilHandler();\nregisterIframeVariableHandler();\nregisterIframeCharacterHandler();\nregisterIframeAudioHandler();\n","import { handlePartialRender } from '@/component/message_iframe';\nimport { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  chat,\n  messageFormatting,\n  reloadCurrentChat,\n  saveChatConditional,\n  substituteParamsExtended,\n  system_message_types,\n} from '@sillytavern/script';\nimport { stringToRange } from '@sillytavern/scripts/utils';\n\ninterface IframeGetChatMessages extends IframeMessage {\n  request: '[ChatMessage][getChatMessages]';\n  range: string;\n  option: Required<GetChatMessagesOption>;\n}\n\ninterface IframeSetChatMessage extends IframeMessage {\n  request: '[ChatMessage][setChatMessage]';\n  field_values: ChatMessageToSet;\n  message_id: number;\n  option: Required<SetChatMessageOption>;\n}\n\nexport function registerIframeChatMessageHandler() {\n  registerIframeHandler(\n    '[ChatMessage][getChatMessages]',\n    async (event: MessageEvent<IframeGetChatMessages>): Promise<ChatMessage[]> => {\n      const range_demacroed = substituteParamsExtended(event.data.range);\n      const range = stringToRange(range_demacroed, 0, chat.length - 1);\n      const option = event.data.option;\n      if (!range) {\n        throw Error(`提供的消息范围 range 无效: ${range_demacroed}`);\n      }\n      if (!['all', 'system', 'assistant', 'user'].includes(option.role)) {\n        throw Error(`提供的 role 无效, 请提供 'all', 'system', 'assistant' 或 'user', 你提供的是: ${option.role}`);\n      }\n      if (!['all', 'hidden', 'unhidden'].includes(option.hide_state)) {\n        throw Error(`提供的 hide_state 无效, 请提供 'all', 'hidden' 或 'unhidden', 你提供的是: ${option.hide_state}`);\n      }\n\n      const { start, end } = range;\n\n      const getRole = (chat_message: any) => {\n        const is_narrator = chat_message.extra?.type === system_message_types.NARRATOR;\n        if (is_narrator) {\n          if (chat_message.is_user) {\n            return 'unknown';\n          }\n          return 'system';\n        }\n        if (chat_message.is_user) {\n          return 'user';\n        }\n        return 'assistant';\n      };\n\n      const process_message = async (message_id: number): Promise<ChatMessage | null> => {\n        const message = chat[message_id];\n        if (!message) {\n          console.warn(`${getLogPrefix(event)}没找到第 ${message_id} 楼的消息`);\n          return null;\n        }\n\n        const role = getRole(message);\n        if (option.role !== 'all' && role !== option.role) {\n          console.debug(`${getLogPrefix(event)}筛去了第 ${message_id} 楼的消息因为它的身份不是 ${option.role}`);\n          return null;\n        }\n\n        if (option.hide_state !== 'all' && (option.hide_state === 'hidden') !== message.is_system) {\n          console.debug(\n            `${getLogPrefix(event)}筛去了第 ${message_id} 楼的消息因为它${\n              option.hide_state === 'hidden' ? `` : `没`\n            } 被隐藏`,\n          );\n          return null;\n        }\n\n        const swipe_id = message?.swipe_id ?? 0;\n        const swipes = message?.swipes ?? [message.mes];\n        const swipes_data = message?.variables ?? [];\n        const data = swipes_data[swipe_id] ?? {};\n\n        return {\n          message_id: message_id,\n          name: message.name,\n          role: role as 'system' | 'assistant' | 'user',\n          is_hidden: message.is_system,\n          message: message.mes,\n          data: data,\n\n          swipe_id: swipe_id,\n          swipes: swipes,\n          swipes_data: swipes_data,\n\n          is_user: message.is_user,\n          is_system_or_hidden: message.is_system,\n        };\n      };\n\n      const promises: Promise<ChatMessage | null>[] = [];\n      for (let i: number = range.start; i <= range.end; ++i) {\n        promises.push(process_message(i));\n      }\n\n      const chat_messages: ChatMessage[] = (await Promise.all(promises)).filter(chat_message => chat_message !== null);\n\n      console.info(\n        `${getLogPrefix(event)}获取${\n          start == end ? `第 ${start} ` : ` ${start}-${end} `\n        }楼的消息, 选项: ${JSON.stringify(option)} `,\n      );\n      return chat_messages;\n    },\n  );\n\n  registerIframeHandler(\n    '[ChatMessage][setChatMessage]',\n    async (event: MessageEvent<IframeSetChatMessage>): Promise<void> => {\n      const field_values = event.data.field_values;\n      const message_id = event.data.message_id;\n      const option = event.data.option;\n      if (typeof option.swipe_id !== 'number' && option.swipe_id !== 'current') {\n        throw Error(`提供的 swipe_id 无效, 请提供 'current' 或序号, 你提供的是: ${option.swipe_id} `);\n      }\n      if (!['none', 'display_current', 'display_and_render_current', 'all'].includes(option.refresh)) {\n        throw Error(\n          `提供的 refresh 无效, 请提供 'none', 'display_current', 'display_and_render_current' 或 'all', 你提供的是: ${option.refresh} `,\n        );\n      }\n\n      const chat_message = chat[message_id];\n      if (!chat_message) {\n        console.warn(`${getLogPrefix(event)}未找到第 ${message_id} 楼的消息`);\n        return;\n      }\n\n      const add_swipes_if_required = (): boolean => {\n        if (option.swipe_id === 'current') {\n          return false;\n        }\n\n        // swipe_id 对应的消息页存在\n        if (option.swipe_id == 0 || (chat_message.swipes && option.swipe_id < chat_message.swipes.length)) {\n          return true;\n        }\n\n        if (!chat_message.swipes) {\n          chat_message.swipe_id = 0;\n          chat_message.swipes = [chat_message.mes];\n          chat_message.swipe_info = [{}];\n        }\n        for (let i = chat_message.swipes.length; i <= option.swipe_id; ++i) {\n          chat_message.swipes.push('');\n          chat_message.swipe_info.push({});\n        }\n        return true;\n      };\n\n      const swipe_id_previous_index: number = chat_message.swipe_id ?? 0;\n      const swipe_id_to_set_index: number = option.swipe_id == 'current' ? swipe_id_previous_index : option.swipe_id;\n      const swipe_id_to_use_index: number = option.refresh != 'none' ? swipe_id_to_set_index : swipe_id_previous_index;\n      const message: string =\n        field_values.message ??\n        (chat_message.swipes ? chat_message.swipes[swipe_id_to_set_index] : undefined) ??\n        chat_message.mes;\n\n      const update_chat_message = () => {\n        const message_demacroed = substituteParamsExtended(message);\n\n        if (field_values.data) {\n          if (!chat_message.variables) {\n            chat_message.variables = [];\n          }\n          chat_message.variables[swipe_id_to_set_index] = field_values.data;\n        }\n\n        if (chat_message.swipes) {\n          chat_message.swipes[swipe_id_to_set_index] = message_demacroed;\n          chat_message.swipe_id = swipe_id_to_use_index;\n        }\n\n        if (swipe_id_to_use_index === swipe_id_to_set_index) {\n          chat_message.mes = message_demacroed;\n        }\n      };\n\n      const update_partial_html = (should_update_swipe: boolean) => {\n        const mes_html = $(`div.mes[mesid = \"${message_id}\"]`);\n        if (!mes_html) {\n          return;\n        }\n\n        if (should_update_swipe) {\n          // FIXME: 只有一条消息时, swipes-counter 不会正常显示; 此外还要考虑 swipes-counter 的 \"Swipe # for All Messages\" 选项\n          mes_html\n            .find('.swipes-counter')\n            .text(`${swipe_id_to_use_index + 1}\\u200b/\\u200b${chat_message.swipes.length}`);\n        }\n        if (option.refresh != 'none') {\n          mes_html\n            .find('.mes_text')\n            .empty()\n            .append(\n              messageFormatting(message, chat_message.name, chat_message.is_system, chat_message.is_user, message_id),\n            );\n          if (option.refresh == 'display_and_render_current') {\n            handlePartialRender(`${message_id}`);\n          }\n        }\n      };\n\n      const should_update_swipe: boolean = add_swipes_if_required();\n      update_chat_message();\n      if (option.refresh == 'all') {\n        await reloadCurrentChat();\n      } else {\n        update_partial_html(should_update_swipe);\n        // QUESTION: saveChatDebounced 还是 await saveChatConditional?\n        await saveChatConditional();\n      }\n\n      console.info(\n        `${getLogPrefix(event)}设置第 ${message_id} 楼消息, 选项: ${JSON.stringify(\n          option,\n        )}, 设置前使用的消息页: ${swipe_id_previous_index}, 设置的消息页: ${swipe_id_to_set_index}, 现在使用的消息页: ${swipe_id_to_use_index} `,\n      );\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { chat, messageFormatting } from '@sillytavern/script';\nimport { getLastMessageId } from '@sillytavern/scripts/macros';\n\ninterface IframeFormatAsDisplayedMessage extends IframeMessage {\n  request: '[DisplayedMessage][formatAsDisplayedMessage]';\n  text: string;\n  option: Required<FormatAsDisplayedMessageOption>;\n}\n\nexport function registerIframeDisplayedMessageHandler() {\n  registerIframeHandler(\n    '[DisplayedMessage][formatAsDisplayedMessage]',\n    async (event: MessageEvent<IframeFormatAsDisplayedMessage>): Promise<string> => {\n      const text = event.data.text;\n      const option = event.data.option;\n      if (typeof option.message_id !== 'number' && !['last', 'last_user', 'last_char'].includes(option.message_id)) {\n        throw Error(\n          `提供的 message_id 无效, 请提供 'last', 'last_user', 'last_char' 或楼层消息号, 你提供的是: ${option.message_id}`,\n        );\n      }\n      const last_message_id = getLastMessageId();\n      if (last_message_id === null) {\n        throw Error(`未找到任何消息楼层, 你提供的是: ${option.message_id}`);\n      }\n      switch (option.message_id) {\n        case 'last':\n          option.message_id = last_message_id;\n          break;\n        case 'last_user':\n          const last_user_message_id = getLastMessageId({ filter: (m: any) => m.is_user && !m.is_system }) as number;\n          if (last_user_message_id === null) {\n            throw Error(`未找到任何 user 消息楼层, 你提供的是: ${option.message_id}`);\n          }\n          option.message_id = last_user_message_id;\n          break;\n        case 'last_char':\n          const last_char_message_id = getLastMessageId({ filter: (m: any) => !m.is_user && !m.is_system }) as number;\n          if (last_char_message_id === null) {\n            throw Error(`未找到任何 char 消息楼层, 你提供的是: ${option.message_id}`);\n          }\n          option.message_id = last_char_message_id;\n          break;\n      }\n      if (option.message_id < 0 || option.message_id > last_message_id) {\n        throw Error(`提供的 message_id 不在 [0, ${last_message_id}] 内, 你提供的是: ${option.message_id} `);\n      }\n\n      const chat_message = chat[option.message_id];\n      const result = messageFormatting(\n        text,\n        chat_message.name,\n        chat_message.is_system,\n        chat_message.is_user,\n        option.message_id,\n      );\n\n      console.info(\n        `${getLogPrefix(event)}将字符串处理为酒馆用于显示的 html 格式, 字符串: '${text}', 选项: '${JSON.stringify(\n          option,\n        )}', 结果: '${result}'`,\n      );\n      return result;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { getRequestHeaders } from '@sillytavern/script';\nimport { t } from '@sillytavern/scripts/i18n';\n\ninterface IframeUpdateFrontendVersion extends IframeMessage {\n  request: '[FrontendVersion][updateFrontendVersion]';\n  text: string;\n}\n\nexport function registerIframeFrontendVersionHandler() {\n  registerIframeHandler(\n    '[FrontendVersion][updateFrontendVersion]',\n    async (event: MessageEvent<IframeUpdateFrontendVersion>): Promise<boolean> => {\n      const extension_name = 'JS-Slash-Runner';\n\n      const response = await fetch('/api/extensions/update', {\n        method: 'POST',\n        headers: getRequestHeaders(),\n        body: JSON.stringify({ extensionName: extension_name }),\n      });\n\n      if (!response.ok) {\n        const text = await response.text();\n        toastr.error(text || response.statusText, t`更新前端助手失败`, { timeOut: 5000 });\n        console.error(`${getLogPrefix(event)}更新前端助手失败: ${text}`);\n        return false;\n      }\n\n      const data = await response.json();\n      if (data.isUpToDate) {\n        console.info(`${getLogPrefix(event)}前端助手已是最新版本, 无需更新`);\n      } else {\n        toastr.success(t`成功更新前端助手为 ${data.shortCommitHash}`, t`请刷新页面`);\n        console.info(`${getLogPrefix(event)}成功更新前端助手为  ${data.shortCommitHash}, 请刷新页面`);\n      }\n      return true;\n    },\n  );\n}\n","import { findChar } from '@/compatibility';\nimport { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  characters,\n  getOneCharacter,\n  getRequestHeaders,\n  saveCharacterDebounced,\n  saveSettings,\n  saveSettingsDebounced,\n  this_chid,\n} from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { ensureImageFormatSupported, getCharaFilename } from '@sillytavern/scripts/utils';\nimport {\n  createNewWorldInfo,\n  deleteWorldInfo,\n  getWorldInfoSettings,\n  selected_world_info,\n  setWorldInfoButtonClass,\n  world_info,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\ninterface IframeGetLorebookSettings extends IframeMessage {\n  request: '[Lorebook][getLorebookSettings]';\n}\n\ninterface IframeSetLorebookSettings extends IframeMessage {\n  request: '[Lorebook][setLorebookSettings]';\n  settings: Partial<LorebookSettings>;\n}\n\ninterface IframeGetCharLorebooks extends IframeMessage {\n  request: '[Lorebook][getCharLorebooks]';\n  option: GetCharLorebooksOption;\n}\n\ninterface IframesetCurrentCharLorebooks extends IframeMessage {\n  request: '[Lorebook][setCurrentCharLorebooks]';\n  lorebooks: Partial<CharLorebooks>;\n}\n\ninterface IframeGetLorebooks extends IframeMessage {\n  request: '[Lorebook][getLorebooks]';\n}\n\ninterface IframeDeleteLorebook extends IframeMessage {\n  request: '[Lorebook][deleteLorebook]';\n  lorebook: string;\n}\n\ninterface IframeCreateLorebook extends IframeMessage {\n  request: '[Lorebook][createLorebook]';\n  lorebook: string;\n}\n\nasync function editCurrentCharacter(): Promise<boolean> {\n  $('#rm_info_avatar').html('');\n  const form_data = new FormData(($('#form_create') as JQuery<HTMLFormElement>).get(0));\n\n  const raw_file = form_data.get('avatar');\n  if (raw_file instanceof File) {\n    const converted_file = await ensureImageFormatSupported(raw_file);\n    form_data.set('avatar', converted_file);\n  }\n\n  const headers = getRequestHeaders();\n  // @ts-ignore\n  delete headers['Content-Type'];\n\n  // TODO: 这里的代码可以用来修改第一条消息!\n  form_data.delete('alternate_greetings');\n  const chid = $('.open_alternate_greetings').data('chid');\n  if (chid && Array.isArray(characters[chid]?.data?.alternate_greetings)) {\n    for (const value of characters[chid].data.alternate_greetings) {\n      form_data.append('alternate_greetings', value);\n    }\n  }\n\n  const response = await fetch('/api/characters/edit', {\n    method: 'POST',\n    headers: headers,\n    body: form_data,\n    cache: 'no-cache',\n  });\n\n  if (!response.ok) {\n    return false;\n  }\n\n  await getOneCharacter(form_data.get('avatar_url'));\n\n  $('#add_avatar_button').replaceWith($('#add_avatar_button').val('').clone(true));\n  $('#create_button').attr('value', 'Save');\n\n  return true;\n}\n\nfunction toLorebookSettings(world_info_settings: ReturnType<typeof getWorldInfoSettings>): LorebookSettings {\n  return {\n    selected_global_lorebooks: (world_info_settings.world_info as { globalSelect: string[] }).globalSelect,\n\n    scan_depth: world_info_settings.world_info_depth,\n    context_percentage: world_info_settings.world_info_budget,\n    budget_cap: world_info_settings.world_info_budget_cap,\n    min_activations: world_info_settings.world_info_min_activations,\n    max_depth: world_info_settings.world_info_min_activations_depth_max,\n    max_recursion_steps: world_info_settings.world_info_max_recursion_steps,\n\n    insertion_strategy: { 0: 'evenly', 1: 'character_first', 2: 'global_first' }[\n      world_info_settings.world_info_character_strategy\n    ] as 'evenly' | 'character_first' | 'global_first',\n\n    include_names: world_info_settings.world_info_include_names,\n    recursive: world_info_settings.world_info_recursive,\n    case_sensitive: world_info_settings.world_info_case_sensitive,\n    match_whole_words: world_info_settings.world_info_match_whole_words,\n    use_group_scoring: world_info_settings.world_info_use_group_scoring,\n    overflow_alert: world_info_settings.world_info_overflow_alert,\n  };\n}\n\nfunction assignPartialLorebookSettings(settings: Partial<LorebookSettings>): void {\n  const for_eachs = {\n    selected_global_lorebooks: (value: LorebookSettings['selected_global_lorebooks']) => {\n      $('#world_info').find('option[value!=\"\"]').remove();\n      world_names.forEach((item, i) =>\n        $('#world_info').append(`<option value='${i}'${value.includes(item) ? ' selected' : ''}>${item}</option>`),\n      );\n\n      selected_world_info.length = 0;\n      selected_world_info.push(...value);\n      saveSettings();\n    },\n\n    scan_depth: (value: LorebookSettings['scan_depth']) => {\n      $('#world_info_depth').val(value).trigger('input');\n    },\n    context_percentage: (value: LorebookSettings['context_percentage']) => {\n      $('#world_info_budget').val(value).trigger('input');\n    },\n    budget_cap: (value: LorebookSettings['budget_cap']) => {\n      $('#world_info_budget_cap').val(value).trigger('input');\n    },\n    min_activations: (value: LorebookSettings['min_activations']) => {\n      $('#world_info_min_activations').val(value).trigger('input');\n    },\n    max_depth: (value: LorebookSettings['max_depth']) => {\n      $('#world_info_min_activations_depth_max').val(value).trigger('input');\n    },\n    max_recursion_steps: (value: LorebookSettings['max_recursion_steps']) => {\n      $('#world_info_max_recursion_steps').val(value).trigger('input');\n    },\n\n    insertion_strategy: (value: LorebookSettings['insertion_strategy']) => {\n      const converted_value = { evenly: 0, character_first: 1, global_first: 2 }[value];\n      $(`#world_info_character_strategy option[value='${converted_value}']`).prop('selected', true);\n      $('#world_info_character_strategy').val(converted_value).trigger('change');\n    },\n\n    include_names: (value: LorebookSettings['include_names']) => {\n      $('#world_info_include_names').prop('checked', value).trigger('input');\n    },\n    recursive: (value: LorebookSettings['recursive']) => {\n      $('#world_info_recursive').prop('checked', value).trigger('input');\n    },\n    case_sensitive: (value: LorebookSettings['case_sensitive']) => {\n      $('#world_info_case_sensitive').prop('checked', value).trigger('input');\n    },\n    match_whole_words: (value: LorebookSettings['match_whole_words']) => {\n      $('#world_info_match_whole_words').prop('checked', value).trigger('input');\n    },\n    use_group_scoring: (value: LorebookSettings['use_group_scoring']) => {\n      $('#world_info_use_group_scoring').prop('checked', value).trigger('change');\n    },\n    overflow_alert: (value: LorebookSettings['overflow_alert']) => {\n      $('#world_info_overflow_alert').prop('checked', value).trigger('change');\n    },\n  };\n\n  Object.entries(settings)\n    .filter(([_, value]) => value !== undefined)\n    .forEach(([field, value]) => {\n      // @ts-ignore\n      for_eachs[field]?.(value);\n    });\n}\n\nexport function registerIframeLorebookHandler() {\n  registerIframeHandler(\n    '[Lorebook][getLorebookSettings]',\n    async (event: MessageEvent<IframeGetLorebookSettings>): Promise<LorebookSettings> => {\n      const lorebook_settings = toLorebookSettings(getWorldInfoSettings());\n\n      console.info(`${getLogPrefix(event)}获取世界书全局设置:\\n${JSON.stringify(lorebook_settings, undefined, 2)}`);\n      return lorebook_settings;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][setLorebookSettings]',\n    async (event: MessageEvent<IframeSetLorebookSettings>): Promise<void> => {\n      const settings = event.data.settings;\n      if (settings.selected_global_lorebooks) {\n        const inexisting_lorebooks = settings.selected_global_lorebooks.filter(\n          lorebook => !world_names.includes(lorebook),\n        );\n        if (inexisting_lorebooks.length > 0) {\n          throw Error(`尝试修改要全局启用的世界书, 但未找到以下世界书: ${JSON.stringify(inexisting_lorebooks)}`);\n        }\n      }\n\n      assignPartialLorebookSettings(settings);\n\n      console.info(`${getLogPrefix(event)}修改世界书全局设置:\\n${JSON.stringify(settings, undefined, 2)}`);\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][getCharLorebooks]',\n    async (event: MessageEvent<IframeGetCharLorebooks>): Promise<CharLorebooks> => {\n      const option = event.data.option;\n\n      // @ts-ignore\n      if (selected_group && !option.name) {\n        throw Error(`不要在群组中调用这个功能`);\n      }\n      const filename = option.name ?? getCharaFilename(this_chid) ?? null;\n      // @ts-ignore\n      const character = findChar({ name: filename });\n      if (!character) {\n        throw Error(`未找到名为 '${filename}' 的角色卡`);\n      }\n\n      let books: CharLorebooks = { primary: null, additional: [] };\n\n      if (character.data?.extensions?.world) {\n        books.primary = character.data?.extensions?.world;\n      }\n\n      // @ts-ignore\n      const extraCharLore = world_info.charLore?.find(e => e.name === filename);\n      if (extraCharLore && Array.isArray(extraCharLore.extraBooks)) {\n        books.additional = extraCharLore.extraBooks;\n      }\n\n      console.info(\n        `${getLogPrefix(event)}获取角色卡绑定的世界书, 选项: ${JSON.stringify(option)}, 获取结果: ${JSON.stringify(\n          books,\n        )}`,\n      );\n      return books;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][setCurrentCharLorebooks]',\n    async (event: MessageEvent<IframesetCurrentCharLorebooks>): Promise<void> => {\n      const lorebooks = event.data.lorebooks;\n\n      // @ts-ignore\n      if (selected_group && !option.name) {\n        throw Error(`不要在群组中调用这个功能`);\n      }\n      const filename = getCharaFilename(this_chid);\n      if (!filename) {\n        throw Error(`未打开任何角色卡`);\n      }\n\n      const inexisting_lorebooks: string[] = [\n        ...(lorebooks.primary && !world_names.includes(lorebooks.primary) ? [lorebooks.primary] : []),\n        ...(lorebooks.additional ? lorebooks.additional.filter(lorebook => !world_names.includes(lorebook)) : []),\n      ];\n      if (inexisting_lorebooks.length > 0) {\n        throw Error(`尝试修改 '${filename}' 绑定的世界书, 但未找到以下世界书: ${inexisting_lorebooks}`);\n      }\n\n      if (lorebooks.primary !== undefined) {\n        const previous_primary = String($('#character_world').val());\n        $('#character_world').val(lorebooks.primary ? lorebooks.primary : '');\n\n        $('.character_world_info_selector')\n          .find('option:selected')\n          .val(lorebooks.primary ? world_names.indexOf(lorebooks.primary) : '');\n\n        if (previous_primary && !lorebooks.primary) {\n          const data = JSON.parse(String($('#character_json_data').val()));\n          if (data?.data?.character_book) {\n            data.data.character_book = undefined;\n          }\n          $('#character_json_data').val(JSON.stringify(data));\n        }\n\n        if (!(await editCurrentCharacter())) {\n          throw Error(`尝试为 '${filename}' 绑定主要世界书, 但在访问酒馆后端时出错`);\n        }\n\n        // @ts-ignore\n        setWorldInfoButtonClass(undefined, !!lorebooks.primary);\n      }\n\n      if (lorebooks.additional !== undefined) {\n        interface CharLoreEntry {\n          name: string;\n          extraBooks: string[];\n        }\n        let char_lore = (world_info as { charLore: CharLoreEntry[] }).charLore ?? [];\n\n        const existing_char_index = char_lore.findIndex(entry => entry.name === filename);\n        if (existing_char_index === -1) {\n          char_lore.push({ name: filename, extraBooks: lorebooks.additional });\n        } else if (lorebooks.additional.length === 0) {\n          char_lore.splice(existing_char_index, 1);\n        } else {\n          char_lore[existing_char_index].extraBooks = lorebooks.additional;\n        }\n\n        Object.assign(world_info, { charLore: char_lore });\n      }\n\n      saveCharacterDebounced();\n      saveSettingsDebounced();\n\n      console.info(\n        `${getLogPrefix(event)}修改角色卡绑定的世界书, 要修改的部分: ${JSON.stringify(lorebooks)}${\n          lorebooks.primary === undefined ? ', 主要世界书保持不变' : ''\n        }${lorebooks.additional === undefined ? ', 附加世界书保持不变' : ''}`,\n      );\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][getLorebooks]',\n    async (event: MessageEvent<IframeGetLorebooks>): Promise<string[]> => {\n      console.info(`${getLogPrefix(event)}获取世界书列表: ${JSON.stringify(world_names)}`);\n      return world_names;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][deleteLorebook]',\n    async (event: MessageEvent<IframeDeleteLorebook>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n\n      const success = await deleteWorldInfo(lorebook);\n\n      console.info(`${getLogPrefix(event)}移除世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n      return success;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][createLorebook]',\n    async (event: MessageEvent<IframeCreateLorebook>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n\n      const success = await createNewWorldInfo(lorebook, { interactive: false });\n\n      console.info(`${getLogPrefix(event)}新建世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n      return success;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { executeSlashCommandsWithOptions } from '@sillytavern/scripts/slash-commands';\n\ninterface IframeSlash extends IframeMessage {\n  request: '[Slash][triggerSlash]' | '[Slash][triggerSlashWithResult]';\n  command: string;\n}\n\nexport function registerIframeSlashHandler() {\n  registerIframeHandler('[Slash][triggerSlash]', async (event: MessageEvent<IframeSlash>): Promise<void> => {\n    const command = event.data.command;\n\n    const result = await executeSlashCommandsWithOptions(command);\n    if (result.isError) {\n      throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n    }\n\n    console.info(`${getLogPrefix(event)}运行 Slash 命令: ${command}`);\n  });\n\n  registerIframeHandler(\n    '[Slash][triggerSlashWithResult]',\n    async (event: MessageEvent<IframeSlash>): Promise<string | undefined> => {\n      const command = event.data.command;\n\n      const result = await executeSlashCommandsWithOptions(command);\n      if (result.isError) {\n        throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n      }\n\n      console.info(`${getLogPrefix(event)}运行 Slash 命令 '${command}', 结果: ${result.pipe}`);\n      return result.pipe;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { substituteParamsExtended } from '@sillytavern/script';\n\ninterface IframeSubstitudeMacros extends IframeMessage {\n  request: '[Utils][substitudeMacros]';\n  text: string;\n}\n\nexport function registerIframeUtilHandler() {\n  registerIframeHandler(\n    '[Utils][substitudeMacros]',\n    async (event: MessageEvent<IframeSubstitudeMacros>): Promise<string> => {\n      const text = event.data.text;\n\n      const text_demacroed = substituteParamsExtended(text);\n\n      console.info(`${getLogPrefix(event)}替换字符串中的宏, 字符串: '${text}', 结果: '${text_demacroed}'`);\n      return text_demacroed;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\nimport { audioEnable, audioImport, audioMode, audioPlay, audioSelect } from '@/slash_command/audio';\n\ninterface IframeAudioMode extends IframeMessage {\n  request: '[Audio][audioMode]';\n  type: string;\n  mode: string;\n}\n\ninterface IframeAudioEnable extends IframeMessage {\n  request: '[Audio][audioEnable]';\n  type: string;\n  state?: string;\n}\n\ninterface IframeAudioPlay extends IframeMessage {\n  request: '[Audio][audioPlay]';\n  type: string;\n  play?: string;\n}\n\ninterface IframeAudioImport extends IframeMessage {\n  request: '[Audio][audioImport]';\n  type: string;\n  url: string;\n  play?: string;\n}\n\ninterface IframeAudioSelect extends IframeMessage {\n  request: '[Audio][audioSelect]';\n  type: string;\n  url: string;\n}\n\nexport function registerIframeAudioHandler() {\n  registerIframeHandler('[Audio][audioMode]', async (event: MessageEvent<IframeAudioMode>): Promise<void> => {\n    const type = event.data.type;\n    const mode = event.data.mode;\n    await audioMode({ type, mode });\n    console.info(`${getLogPrefix(event)} 切换音频模式: ${type}-${mode}`);\n  });\n\n  registerIframeHandler('[Audio][audioEnable]', async (event: MessageEvent<IframeAudioEnable>): Promise<void> => {\n    const type = event.data.type;\n    const state = event.data.state;\n    await audioEnable({ type, state });\n    console.info(`${getLogPrefix(event)} 切换音频状态: ${type}-${state}`);\n  });\n\n  registerIframeHandler('[Audio][audioPlay]', async (event: MessageEvent<IframeAudioPlay>): Promise<void> => {\n    const type = event.data.type;\n    const play = event.data.play;\n    await audioPlay({ type, play });\n    console.info(`${getLogPrefix(event)} 切换音频播放状态: ${type}-${play}`);\n  });\n\n  registerIframeHandler('[Audio][audioImport]', async (event: MessageEvent<IframeAudioImport>): Promise<void> => {\n    const type = event.data.type;\n    const url = event.data.url;\n    const play = event.data.play;\n    await audioImport({ type, play }, url);\n    console.info(`${getLogPrefix(event)} 导入音频: ${type}-${url}-${play}`);\n  });\n\n  registerIframeHandler('[Audio][audioSelect]', async (event: MessageEvent<IframeAudioSelect>): Promise<void> => {\n    const type = event.data.type;\n    const url = event.data.url;\n    await audioSelect({ type }, url);\n    console.info(`${getLogPrefix(event)} 选择音频: ${type}-${url}`);\n  });\n}\n","import { libraries_text } from '@/component/character_level/library';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\nimport { getCharAvatarPath, getSettingValue, getUserAvatarPath, saveSettingValue } from '@/util/extension_variables';\n\nimport { eventSource, event_types, reloadCurrentChat, updateMessageBlock } from '@sillytavern/script';\nimport { getContext } from '@sillytavern/scripts/extensions';\n\nlet tampermonkeyMessageListener: ((event: MessageEvent) => void) | null = null;\nlet isRenderEnabled: boolean;\nlet isRenderingOptimizeEnabled: boolean;\nlet renderDepth: number;\n\nconst iframeResizeObservers = new Map();\nconst isExtensionEnabled = getSettingValue('enabled_extension');\n\n// 保存原始高亮方法\nconst originalHighlightElement = hljs.highlightElement;\n\nconst RENDER_MODES = {\n  FULL: 'FULL',\n  PARTIAL: 'PARTIAL',\n};\n\ninterface IFrameElement extends HTMLIFrameElement {\n  cleanup: () => void;\n  [prop: string]: any;\n}\n\nexport const partialRenderEvents = [\n  event_types.CHARACTER_MESSAGE_RENDERED,\n  event_types.USER_MESSAGE_RENDERED,\n  event_types.MESSAGE_UPDATED,\n  event_types.MESSAGE_SWIPED,\n];\n\nexport const defaultIframeSettings = {\n  render_enabled: true,\n  auto_enable_character_regex: true,\n  auto_disable_incompatible_options: true,\n  tampermonkey_compatibility: false,\n  render_depth: 3,\n  render_optimize: false,\n};\n\nexport async function handleRenderToggle(userInput: boolean = true, enable: boolean = true) {\n  if (enable) {\n    renderMessagesInIframes(RENDER_MODES.FULL);\n  }\n  if (userInput) {\n    await saveSettingValue('render.render_enabled', enable);\n  }\n}\n\n/**\n * 清理后，重新渲染所有iframe\n */\nexport async function clearAndRenderAllIframes() {\n  await clearAllIframes();\n  await reloadCurrentChat();\n  await renderAllIframes();\n}\n\n/**\n * 渲染所有iframe\n */\nexport async function renderAllIframes() {\n  await renderMessagesInIframes(RENDER_MODES.FULL);\n  console.log('[Render] 渲染所有iframe');\n}\n\n/**\n * 渲染部分iframe\n * @param mesId 消息ID\n */\nexport async function renderPartialIframes(mesId: number) {\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const context = getContext();\n  const totalMessages = context.chat.length;\n\n  if (processDepth > 0) {\n    const depthOffset = totalMessages - processDepth;\n\n    if (mesId < depthOffset) {\n      return;\n    }\n  }\n\n  await renderMessagesInIframes(RENDER_MODES.PARTIAL, mesId);\n\n  console.log('[Render] 渲染' + mesId + '号消息的iframe');\n}\n\n/**\n * 使用了min-height:vh时，自动调整iframe高度\n */\nexport const viewport_adjust_script = `\n$(window).on(\"message\", function (event) {\n    if (event.originalEvent.data.request === \"updateViewportHeight\") {\n        const newHeight = event.originalEvent.data.newHeight;\n        $(\"html\").css(\"--viewport-height\", newHeight + \"px\");\n    }\n});\n`;\n\n/**\n * 油猴脚本\n */\nexport const tampermonkey_script = `\nclass AudioManager {\n  constructor() {\n    this.currentlyPlaying = null;\n  }\n  handlePlay(audio) {\n    if (this.currentlyPlaying && this.currentlyPlaying !== audio) {\n      this.currentlyPlaying.pause();\n    }\n    window.parent.postMessage({\n      type: 'audioPlay',\n      iframeId: window.frameElement.id\n    }, '*');\n\n    this.currentlyPlaying = audio;\n  }\n  stopAll() {\n    if (this.currentlyPlaying) {\n      this.currentlyPlaying.pause();\n      this.currentlyPlaying = null;\n    }\n  }\n}\nconst audioManager = new AudioManager();\n$('.qr-button').on('click', function() {\n  const buttonName = $(this).text().trim();\n  window.parent.postMessage({ type: 'buttonClick', name: buttonName }, '*');\n});\n$('.st-text').each(function() {\n  $(this).on('input', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  $(this).on('change', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  const textarea = this;\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'value') {\n        window.parent.postMessage({ type: 'textInput', text: $(textarea).val() }, '*');\n      }\n    });\n  });\n  observer.observe(textarea, { attributes: true });\n});\n$('.st-send-button').on('click', function() {\n  window.parent.postMessage({ type: 'sendClick' }, '*');\n});\n$('.st-audio').on('play', function() {\n  audioManager.handlePlay(this);\n});\n$(window).on('message', function(event) {\n  if (event.originalEvent.data.type === 'stopAudio' &&\n    event.originalEvent.data.iframeId !== window.frameElement.id) {\n    audioManager.stopAll();\n  }\n});\n`;\n\n/**\n * 转换代码块中的min-height:vh\n * @param htmlContent 代码块内容\n * @returns 转换后的代码块内容\n */\nfunction processVhUnits(htmlContent: string) {\n  const hasMinVh = /min-height:\\s*[^;]*vh/.test(htmlContent);\n\n  if (!hasMinVh) {\n    return htmlContent;\n  }\n\n  const viewportHeight = window.innerHeight;\n  const processedContent = htmlContent.replace(/min-height:\\s*([^;]*vh[^;]*);/g, expression => {\n    const processedExpression = expression.replace(\n      /(\\d+)vh/g,\n      `calc(var(--viewport-height, ${viewportHeight}px) * $1 / 100)`,\n    );\n    return `${processedExpression};`;\n  });\n\n  return processedContent;\n}\n\n/**\n * 使用了min-height:vh时，更新iframe的viewport高度\n */\nfunction updateIframeViewportHeight() {\n  $(window).on('resize', function () {\n    if ($('iframe[data-needs-vh=\"true\"]').length) {\n      const viewportHeight = window.innerHeight;\n      $('iframe[data-needs-vh=\"true\"]').each(function () {\n        const iframe = this as HTMLIFrameElement;\n        if (iframe.contentWindow) {\n          iframe.contentWindow.postMessage(\n            {\n              request: 'updateViewportHeight',\n              newHeight: viewportHeight,\n            },\n            '*',\n          );\n        }\n      });\n    }\n  });\n}\n\n/**\n * 渲染消息到iframe\n * @param mode 渲染模式\n * @param specificMesId 指定消息ID\n */\nasync function renderMessagesInIframes(mode = RENDER_MODES.FULL, specificMesId: number | null = null) {\n  if (!isExtensionEnabled || !isRenderEnabled) {\n    return;\n  }\n\n  const context = getContext();\n  const totalMessages = context.chat.length;\n  const processDepth = renderDepth || 0;\n  const depthLimit = processDepth > 0 ? processDepth : totalMessages;\n  const depthLimitedMessageIds = [...Array(totalMessages).keys()].slice(-depthLimit);\n\n  let messagesToRenderIds: number[] = [];\n  const messagesToCancelIds: number[] = [...Array(totalMessages).keys()].filter(\n    id => !depthLimitedMessageIds.includes(id),\n  );\n\n  if (mode === RENDER_MODES.FULL) {\n    messagesToRenderIds = depthLimitedMessageIds;\n  } else if (mode === RENDER_MODES.PARTIAL && specificMesId !== null) {\n    if (depthLimitedMessageIds.includes(specificMesId)) {\n      messagesToRenderIds = [specificMesId];\n    } else {\n      return;\n    }\n  }\n\n  for (const messageId of messagesToCancelIds) {\n    const message = context.chat[messageId];\n    const $iframes = $(`[id^=\"message-iframe-${messageId}-\"]`);\n    if ($iframes.length > 0) {\n      await Promise.all(\n        $iframes.toArray().map(async iframe => {\n          await destroyIframe(iframe as IFrameElement);\n        }),\n      );\n      updateMessageBlock(messageId, message);\n    }\n    if (isRenderingOptimizeEnabled) {\n      const $mesText = $(`.mes[mesid=\"${messageId}\"] .mes_block .mes_text`);\n      addToggleButtonsToMessage($mesText);\n    }\n  }\n\n  const renderedMessages = [];\n  for (const messageId of messagesToRenderIds) {\n    const $messageElement = $(`.mes[mesid=\"${messageId}\"]`);\n    if (!$messageElement.length) {\n      console.debug(`未找到 mesid: ${messageId} 对应的消息元素。`);\n      continue;\n    }\n\n    const $codeElements = $messageElement.find('pre');\n    if (!$codeElements.length) {\n      continue;\n    }\n\n    let iframeCounter = 1;\n\n    $codeElements.each(function () {\n      let extractedText = extractTextFromCode(this);\n      if (!extractedText.includes('<body') || !extractedText.includes('</body>')) {\n        if (isRenderingOptimizeEnabled) {\n          addCodeToggleButtons(messageId);\n        }\n        return;\n      }\n      const disableLoading = /<!--\\s*disable-default-loading\\s*-->/.test(extractedText);\n      const hasMinVh = /min-height:\\s*[^;]*vh/.test(extractedText);\n      extractedText = hasMinVh ? processVhUnits(extractedText) : extractedText;\n\n      let $wrapper = $('<div>').css({\n        position: 'relative',\n        width: '100%',\n      });\n\n      const $iframe = $('<iframe>')\n        .attr({\n          id: `message-iframe-${messageId}-${iframeCounter}`,\n          srcdoc: '',\n          loading: 'lazy',\n        })\n        .css({\n          margin: '5px auto',\n          border: 'none',\n          width: '100%',\n        });\n\n      iframeCounter++;\n\n      if (hasMinVh) {\n        $iframe.attr('data-needs-vh', 'true');\n      }\n\n      let loadingTimeout: NodeJS.Timeout | null = null;\n      if (!disableLoading) {\n        const $loadingOverlay = $('<div>').addClass('iframe-loading-overlay').html(`\n            <div class=\"iframe-loading-content\">\n              <i class=\"fa-solid fa-spinner fa-spin\"></i>\n              <span class=\"loading-text\">Loading...</span>\n            </div>`);\n\n        loadingTimeout = setTimeout(() => {\n          const $loadingText = $loadingOverlay.find('.loading-text');\n          if ($loadingText.length) {\n            $loadingText.text('如加载时间过长，请检查网络');\n          }\n        }, 10000);\n\n        $wrapper.append($loadingOverlay);\n      }\n\n      $wrapper.append($iframe);\n\n      const srcdocContent = `\n        <html>\n        <head>\n          <style>\n          ${hasMinVh ? `:root{--viewport-height:${window.innerHeight}px;}` : ``}\n          html,body{margin:0;padding:0;overflow:hidden;max-width:100%!important;box-sizing:border-box}\n          .user_avatar,.user-avatar{background-image:url('${getUserAvatarPath()}')}\n          .char_avatar,.char-avatar{background-image:url('${getCharAvatarPath()}')}\n          </style>\n          ${third_party}\n          <script src=\"${script_url.get('iframe_client')}\"></script>\n          ${libraries_text}\n        </head>\n        <body>\n          ${extractedText}\n          ${hasMinVh ? `<script src=\"${script_url.get('viewport_adjust_script')}\"></script>` : ``}\n          ${\n            getSettingValue('render.tampermonkey_compatibility')\n              ? `<script src=\"${script_url.get('tampermonkey_script')}\"></script>`\n              : ``\n          }\n        </body>\n        </html>\n      `;\n      $iframe.attr('srcdoc', srcdocContent);\n\n      $iframe.on('load', function () {\n        observeIframeContent(this as IFrameElement);\n\n        $wrapper = $(this).parent();\n        if ($wrapper.length) {\n          const $loadingOverlay = $wrapper.find('.iframe-loading-overlay');\n          if ($loadingOverlay.length) {\n            $loadingOverlay.css('opacity', '0');\n            setTimeout(() => $loadingOverlay.remove(), 300);\n          }\n        }\n\n        if ($(this).attr('data-needs-vh') === 'true') {\n          const iframe = this as HTMLIFrameElement;\n          if (iframe.contentWindow) {\n            iframe.contentWindow.postMessage(\n              {\n                request: 'updateViewportHeight',\n                newHeight: window.innerHeight,\n              },\n              '*',\n            );\n          }\n        }\n\n        eventSource.emitAndWait('message_iframe_render_ended', this.id);\n\n        if (isRenderingOptimizeEnabled) {\n          removeCodeToggleButtonsByMesId(messageId);\n        }\n\n        if (loadingTimeout) {\n          clearTimeout(loadingTimeout);\n        }\n      });\n\n      eventSource.emitAndWait('message_iframe_render_started', $iframe.attr('id'));\n      $(this).replaceWith($wrapper);\n    });\n\n    renderedMessages.push(messageId);\n  }\n}\n\n/**\n * 观察iframe内容用于自动调整高度\n * @param iframe iframe元素\n */\nfunction observeIframeContent(iframe: IFrameElement) {\n  const $iframe = $(iframe);\n  if (!$iframe.length || !$iframe[0].contentWindow || !$iframe[0].contentWindow.document.body) {\n    return;\n  }\n  const docBody = $iframe[0].contentWindow.document.body;\n  const iframeId = $iframe.attr('id');\n\n  let resizeObserver = null;\n\n  adjustIframeHeight(iframe);\n\n  try {\n    if (window.ResizeObserver) {\n      resizeObserver = new ResizeObserver(() => {\n        adjustIframeHeight(iframe);\n      });\n      resizeObserver.observe(docBody);\n\n      if (iframeId) {\n        iframeResizeObservers.set(iframeId, resizeObserver);\n      }\n    }\n  } catch (e) {\n    console.error('ResizeObserver初始化错误:', e);\n  }\n\n  iframe.cleanup = () => {\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      if (iframeId) {\n        iframeResizeObservers.delete(iframeId);\n      }\n    }\n  };\n}\n\n/**\n * 销毁iframe\n * @param iframe iframe元素\n */\nexport function destroyIframe(iframe: IFrameElement): Promise<void> {\n  return new Promise(resolve => {\n    const $iframe = $(iframe);\n\n    if (!$iframe.length) {\n      resolve();\n      return;\n    }\n\n    const iframeId = $iframe.attr('id');\n\n    $iframe.off();\n\n    try {\n      if ($iframe[0].contentWindow) {\n        const iframeDoc = $iframe[0].contentWindow.document;\n        if (iframeDoc) {\n          $(iframeDoc).find('*').off();\n          $(iframeDoc).off();\n        }\n      }\n    } catch (e) {\n      console.debug('清理iframe内部事件时出错:', e);\n    }\n\n    try {\n      const $mediaElements = $iframe.contents().find('audio, video');\n      $mediaElements.each(function () {\n        if (this instanceof HTMLMediaElement) {\n          this.pause();\n          this.src = '';\n          this.load();\n          $(this).off();\n        }\n      });\n    } catch (e) {\n      console.debug('清理媒体元素时出错:', e);\n    }\n\n    if ($iframe[0].contentWindow && 'stop' in $iframe[0].contentWindow) {\n      $iframe[0].contentWindow.stop();\n    }\n\n    // 清空iframe内容\n    if ($iframe[0].contentWindow) {\n      try {\n        if (iframeId && typeof eventSource.removeListener === 'function') {\n          eventSource.removeListener('message_iframe_render_ended', iframeId as any);\n          eventSource.removeListener('message_iframe_render_started', iframeId as any);\n        }\n\n        $iframe.attr('src', 'about:blank');\n      } catch (e) {\n        console.debug('清空iframe内容时出错:', e);\n      }\n    }\n\n    // 断开ResizeObserver连接\n    if (iframe.cleanup && typeof iframe.cleanup === 'function') {\n      iframe.cleanup();\n    } else if (iframeId && iframeResizeObservers.has(iframeId)) {\n      const observer = iframeResizeObservers.get(iframeId);\n      observer.disconnect();\n      iframeResizeObservers.delete(iframeId);\n    }\n\n    // 从DOM中移除并清除引用\n    const $clone = $iframe.clone(false);\n    if ($iframe.parent().length) {\n      $iframe.replaceWith($clone);\n    }\n    if ($clone.parent().length) {\n      $clone.remove();\n    }\n\n    // 移除jQuery数据缓存\n    try {\n      $iframe.removeData();\n    } catch (e) {\n      console.debug('移除jQuery数据缓存时出错:', e);\n    }\n\n    // 清空iframe的属性\n    for (const prop in iframe) {\n      if (Object.prototype.hasOwnProperty.call(iframe, prop)) {\n        try {\n          iframe[prop] = null;\n        } catch (e) {\n          console.debug('清空iframe的属性时出错:', e);\n        }\n      }\n    }\n\n    // 确保所有清理操作都完成后再resolve\n    setTimeout(() => {\n      resolve();\n    }, 0);\n  });\n}\n\n/**\n * 清理所有iframe\n * @returns {Promise<void>}\n */\nexport async function clearAllIframes(): Promise<void> {\n  const $iframes = $('iframe[id^=\"message-iframe\"]');\n  await Promise.all(\n    $iframes.toArray().map(async iframe => {\n      await destroyIframe(iframe as IFrameElement);\n    }),\n  );\n\n  // 清理相关的事件监听器\n  try {\n    if (typeof eventSource.removeListener === 'function') {\n      eventSource.removeListener('message_iframe_render_started', null as any);\n      eventSource.removeListener('message_iframe_render_ended', null as any);\n    }\n  } catch (e) {\n    console.debug('清理事件监听器时出错:', e);\n  }\n\n  // 尝试主动触发垃圾回收\n  try {\n    let arr = [];\n    for (let i = 0; i < 10; i++) {\n      arr.push(new Array(1000000).fill(1));\n    }\n    arr = null as any;\n\n    if (window.gc) {\n      window.gc();\n    }\n  } catch (e) {\n    console.debug('尝试触发垃圾回收时出错:', e);\n  }\n}\n\n/**\n * 处理油猴脚本兼容模式传来的消息\n * @param event 消息事件\n */\nfunction handleTampermonkeyMessages(event: MessageEvent): void {\n  if (event.data.type === 'buttonClick') {\n    const buttonName = event.data.name;\n    $('.qr--button.menu_button').each(function () {\n      if ($(this).find('.qr--button-label').text().trim() === buttonName) {\n        $(this).trigger('click');\n      }\n    });\n  } else if (event.data.type === 'textInput') {\n    const $sendTextarea = jQuery('#send_textarea');\n    if ($sendTextarea.length) {\n      $sendTextarea.val(event.data.text).trigger('input').trigger('change');\n    }\n  } else if (event.data.type === 'sendClick') {\n    const $sendButton = jQuery('#send_but');\n    if ($sendButton.length) {\n      $sendButton.trigger('click');\n    }\n  }\n}\n\n/**\n * 油猴兼容模式-创建全局音频管理器\n */\nfunction createGlobalAudioManager() {\n  let currentPlayingIframeId: string | null = null;\n\n  window.addEventListener('message', function (event) {\n    if (event.data.type === 'audioPlay') {\n      const newIframeId = event.data.iframeId;\n\n      if (currentPlayingIframeId && currentPlayingIframeId !== newIframeId) {\n        $('iframe').each(function () {\n          const iframe = this as HTMLIFrameElement;\n          if (iframe.contentWindow) {\n            iframe.contentWindow.postMessage(\n              {\n                type: 'stopAudio',\n                iframeId: newIframeId,\n              },\n              '*',\n            );\n          }\n        });\n      }\n\n      currentPlayingIframeId = newIframeId;\n    }\n  });\n}\n\n/**\n * 调整iframe高度\n * @param iframe iframe元素\n */\nfunction adjustIframeHeight(iframe: IFrameElement) {\n  const $iframe = $(iframe);\n  if (!$iframe.length || !$iframe[0].contentWindow || !$iframe[0].contentWindow.document.body) {\n    return;\n  }\n\n  const doc = $iframe[0].contentWindow.document;\n\n  const bodyHeight = doc.body.offsetHeight;\n  const htmlHeight = doc.documentElement.offsetHeight;\n\n  const newHeight = Math.max(bodyHeight, htmlHeight);\n  const currentHeight = parseFloat($iframe.css('height')) || 0;\n\n  if (Math.abs(currentHeight - newHeight) > 5) {\n    $iframe.css('height', newHeight + 'px');\n\n    if ($iframe.attr('data-needs-vh') === 'true' && iframe.contentWindow) {\n      iframe.contentWindow.postMessage(\n        {\n          request: 'updateViewportHeight',\n          newHeight: window.innerHeight,\n        },\n        '*',\n      );\n    }\n  }\n}\n\n/**\n * 提取代码块中的文本\n * @param codeElement 代码块元素\n * @returns 提取的文本\n */\nfunction extractTextFromCode(codeElement: HTMLElement) {\n  let textContent = '';\n\n  $(codeElement)\n    .contents()\n    .each(function () {\n      if (this.nodeType === Node.TEXT_NODE) {\n        textContent += this.textContent;\n      } else if (this.nodeType === Node.ELEMENT_NODE) {\n        textContent += extractTextFromCode(this as HTMLElement);\n      }\n    });\n\n  return textContent;\n}\n\n/**\n * 删除消息后重新渲染\n * @param mesId 消息ID\n */\nexport async function renderMessageAfterDelete(mesId: number) {\n  const context = getContext();\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const totalMessages = context.chat.length;\n  const maxRemainId = mesId - 1;\n  // 考虑到高楼层的情况，深度为0时，只渲染最后一个消息\n  if (processDepth === 0) {\n    const message = context.chat[maxRemainId];\n\n    const hasCodeBlock = /```[\\s\\S]*?```/.test(message);\n    const $iframe = $('[id^=\"message-iframe-' + maxRemainId + '-\"]');\n\n    if (!hasCodeBlock && $iframe.length === 0) {\n      return;\n    }\n    await destroyIframe($iframe.get(0) as IFrameElement);\n    updateMessageBlock(maxRemainId, message);\n    renderPartialIframes(maxRemainId);\n  } else {\n    const startRenderIndex = totalMessages - processDepth;\n    for (let i = startRenderIndex; i <= maxRemainId; i++) {\n      const message = context.chat[i];\n      const hasCodeBlock = /```[\\s\\S]*?```/.test(message);\n      const $iframe = $('[id^=\"message-iframe-' + i + '-\"]');\n\n      if (!hasCodeBlock && $iframe.length === 0) {\n        continue;\n      }\n      await destroyIframe($iframe.get(0) as IFrameElement);\n      updateMessageBlock(i, message);\n      renderPartialIframes(i);\n    }\n  }\n}\n\n/**\n * 处理油猴兼容性设置改变\n */\nasync function onTampermonkeyCompatibilityChange() {\n  const isEnabled = Boolean($('#tampermonkey_compatibility').prop('checked'));\n  await saveSettingValue('render.tampermonkey_compatibility', isEnabled);\n\n  if (!getSettingValue('activate_setting')) {\n    return;\n  }\n\n  if (isEnabled) {\n    if (!tampermonkeyMessageListener) {\n      tampermonkeyMessageListener = handleTampermonkeyMessages;\n      window.addEventListener('message', tampermonkeyMessageListener);\n      createGlobalAudioManager();\n    }\n  } else if (tampermonkeyMessageListener) {\n    window.removeEventListener('message', tampermonkeyMessageListener);\n    tampermonkeyMessageListener = null;\n  }\n\n  await clearAndRenderAllIframes();\n}\n\n/**\n * 处理深度输入改变时\n */\nasync function onDepthInput(value: string) {\n  const processDepth = parseInt(value, 10);\n  renderDepth = processDepth;\n\n  if (processDepth < 0) {\n    toastr.warning('处理深度不能为负数');\n    $('#render-depth').val(getSettingValue('render.render_depth'));\n    return;\n  }\n\n  await saveSettingValue('render.render_depth', processDepth);\n\n  await clearAndRenderAllIframes();\n}\n\nexport const handlePartialRender = (mesId: number) => {\n  console.log('[Render] PARTIAL render event triggered for message ID:', mesId);\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const context = getContext();\n  const totalMessages = context.chat.length;\n\n  if (processDepth > 0) {\n    const depthOffset = totalMessages - processDepth;\n\n    if (mesId < depthOffset) {\n      return;\n    }\n  }\n\n  setTimeout(() => {\n    renderMessagesInIframes(RENDER_MODES.PARTIAL, mesId);\n  }, 100);\n};\n\n/**\n * 注入加载样式\n */\nexport function injectLoadingStyles() {\n  if ($('#iframe-loading-styles').length) return;\n\n  const styleSheet = $('<style>', {\n    id: 'iframe-loading-styles',\n    text: `\n      .iframe-loading-overlay{\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n        background:rgba(0,0,0,.7);\n        display:flex;\n        justify-content:center;\n        align-items:center;\n        z-index:1000;\n        transition:opacity .3s ease\n      }\n      .iframe-loading-content{\n        color:#fff;\n        display:flex;\n        align-items:center;\n        gap:10px;\n        font-size:16px\n      }\n      .iframe-loading-content i{\n        font-size:20px\n      }\n      .loading-text {\n        transition: opacity 0.3s ease;\n      }`,\n  });\n\n  $('head').append(styleSheet);\n}\n\n/**\n * 注入代码块隐藏样式\n */\nexport function injectCodeBlockHideStyles() {\n  const styleId = 'hidden-code-block-styles';\n  let style = document.getElementById(styleId);\n  if (!style) {\n    style = document.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.setAttribute('id', styleId);\n    document.head.appendChild(style);\n  }\n  style.innerHTML = `\n    pre {\n      display: none;\n    }\n    .code-toggle-button {\n      display: inline-block;\n      margin: 5px 0;\n      padding: 5px 10px;\n      background-color: rgba(0, 0, 0, 0.1);\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 0.9em;\n      user-select: none;\n      transition: background-color 0.3s;\n    }\n    .code-toggle-button:hover {\n      background-color: rgba(0, 0, 0, 0.2);\n    }\n  `;\n}\n\n/**\n * 移除代码块隐藏样式\n */\nfunction removeCodeBlockHideStyles() {\n  const styleId = 'hidden-code-block-styles';\n  const style = document.getElementById(styleId);\n  if (style) {\n    style.remove();\n  }\n}\n\n/**\n * 为消息添加折叠控件\n * @param $mesText 消息文本元素\n */\nfunction addToggleButtonsToMessage($mesText: JQuery<HTMLElement>) {\n  if ($mesText.find('.code-toggle-button').length > 0 || $mesText.find('pre').length === 0) {\n    return;\n  }\n\n  $mesText.find('pre').each(function () {\n    const $pre = $(this);\n    const $toggleButton = $(\n      '<div class=\"code-toggle-button\" title=\"取消选中‘前端卡渲染优化’关闭此折叠功能\">显示代码块</div>',\n    );\n\n    $toggleButton.on('click', function () {\n      const isVisible = $pre.is(':visible');\n\n      if (isVisible) {\n        $pre.hide();\n        $(this).text('显示代码块');\n      } else {\n        $pre.show();\n        $(this).text('隐藏代码块');\n      }\n    });\n\n    $pre.before($toggleButton);\n  });\n}\n\n/**\n * 给所有消息添加折叠控件\n */\nexport function addCodeToggleButtonsToAllMessages() {\n  const $chat = $('#chat');\n  if (!$chat.length) {\n    return;\n  }\n\n  $chat.find('.mes .mes_block .mes_text').each(function () {\n    const $mesText = $(this);\n    addToggleButtonsToMessage($mesText);\n  });\n}\n\n/**\n * 根据mesId为消息添加折叠控件\n * @param mesId 消息ID\n */\nfunction addCodeToggleButtons(mesId: number) {\n  const $chat = $('#chat');\n  if (!$chat.length) {\n    return;\n  }\n  const $mesText = $chat.find(`div[mesid=\"${mesId}\"] .mes_block .mes_text`);\n  addToggleButtonsToMessage($mesText);\n}\n\n/**\n * 根据mesId移除折叠控件\n * @param mesId 消息ID\n */\nfunction removeCodeToggleButtonsByMesId(mesId: number) {\n  $(`div[mesid=\"${mesId}\"] .code-toggle-button`).each(function () {\n    $(this).off('click').remove();\n  });\n}\n\n/**\n * 移除所有折叠控件\n */\nfunction removeAllCodeToggleButtons() {\n  $('.code-toggle-button').each(function () {\n    $(this).off('click').remove();\n  });\n  // 去掉所有pre的display:none\n  $('pre').css('display', 'block');\n}\n\n/**\n * 添加前端卡渲染优化设置\n */\nexport function addRenderingOptimizeSettings() {\n  injectCodeBlockHideStyles();\n  hljs.highlightElement = function () {\n    return;\n  };\n}\n\n/**\n * 移除前端卡渲染优化设置\n */\nexport function removeRenderingOptimizeSettings() {\n  hljs.highlightElement = originalHighlightElement;\n  removeCodeBlockHideStyles();\n  removeAllCodeToggleButtons();\n}\n\n/**\n * 处理重型前端卡渲染优化\n * @param userInput 是否由用户手动触发\n * @param enable 是否启用重型前端卡渲染优化\n */\nasync function handleRenderingOptimizationToggle(userInput: boolean = true, enable: boolean = true) {\n  if (userInput) {\n    await saveSettingValue('render.render_optimize', enable);\n    isRenderingOptimizeEnabled = enable;\n  }\n\n  if (!isRenderEnabled) {\n    return;\n  }\n\n  if (enable) {\n    addRenderingOptimizeSettings();\n    if (userInput) {\n      await clearAndRenderAllIframes();\n    }\n  } else {\n    removeRenderingOptimizeSettings();\n    if (userInput) {\n      await clearAndRenderAllIframes();\n    }\n  }\n}\n/**\n * 处理渲染器启用设置改变\n * @param enable 是否启用渲染器\n * @param userInput 是否由用户手动触发\n */\nasync function handleRenderEnableToggle(enable: boolean, userInput: boolean = true) {\n  if (userInput) {\n    await saveSettingValue('render.render_enabled', enable);\n    isRenderEnabled = enable;\n  }\n  if (enable) {\n    $('#render-settings-content .extension-content-item').not(':first').css('opacity', 1);\n    if (isRenderingOptimizeEnabled) {\n      addRenderingOptimizeSettings();\n    }\n    await renderAllIframes();\n  } else {\n    $('#render-settings-content .extension-content-item').not(':first').css('opacity', 0.5);\n    if (isRenderingOptimizeEnabled) {\n      removeRenderingOptimizeSettings();\n    }\n    await clearAllIframes();\n    await reloadCurrentChat();\n  }\n}\n\n/**\n * 添加前端渲染快速按钮\n */\nfunction addRenderQuickButton() {\n  const buttonHtml = $(`\n  <div id=\"tavern-helper-container\" class=\"list-group-item flex-container flexGap5 interactable\">\n      <div class=\"fa-solid fa-puzzle-piece extensionsMenuExtensionButton\" /></div>\n      <span id=\"tavern-helper-text\">${isRenderEnabled ? '关闭前端渲染' : '开启前端渲染'}</span>\n  </div>`);\n  buttonHtml.css('display', 'flex');\n  $('#extensionsMenu').append(buttonHtml);\n  $('#tavern-helper-container').on('click', async function () {\n    $('#tavern-helper-text').text(!isRenderEnabled ? '关闭前端渲染' : '开启前端渲染');\n    await handleRenderEnableToggle(!isRenderEnabled, true);\n    $('#render-enable-toggle').prop('checked', isRenderEnabled);\n  });\n}\n\n/**\n * 初始化iframe控制面板\n */\nexport const initIframePanel = () => {\n  // 处理处理深度设置\n  renderDepth = getSettingValue('render.render_depth');\n  $('#render-depth')\n    .val(renderDepth || defaultIframeSettings.render_depth)\n    .on('input', function (event) {\n      onDepthInput((event.target as HTMLInputElement).value);\n    });\n\n  isRenderEnabled = getSettingValue('render.render_enabled');\n  handleRenderEnableToggle(isRenderEnabled, false);\n  $('#render-enable-toggle')\n    .prop('checked', isRenderEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleRenderEnableToggle(event.target.checked, true));\n\n  addRenderQuickButton();\n\n  // 处理重型前端卡渲染优化\n  isRenderingOptimizeEnabled = getSettingValue('render.render_optimize');\n  if (isRenderingOptimizeEnabled) {\n    handleRenderingOptimizationToggle(false, true);\n  }\n  $('#render-optimize-toggle')\n    .prop('checked', isRenderingOptimizeEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleRenderingOptimizationToggle(true, event.target.checked));\n\n  // 处理油猴兼容性设置\n  const tampermonkeyEnabled = getSettingValue('render.tampermonkey_compatibility');\n  $('#tampermonkey_compatibility').prop('checked', tampermonkeyEnabled).on('click', onTampermonkeyCompatibilityChange);\n\n  if (tampermonkeyEnabled) {\n    onTampermonkeyCompatibilityChange();\n  }\n\n  $(window).on('resize', function () {\n    if ($('iframe[data-needs-vh=\"true\"]').length) {\n      updateIframeViewportHeight();\n    }\n  });\n  injectLoadingStyles();\n};\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getTagsList\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_tags_js_fe93ed66__.getTagsList) });","// for compatibility with old sillytavern versions\nimport { characters, this_chid } from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { getTagsList } from '@sillytavern/scripts/tags';\nimport { equalsIgnoreCaseAndAccents } from '@sillytavern/scripts/utils';\n\n// for 1.12.6\n/**\n * Finds a character by name, with optional filtering and precedence for avatars\n * @param {object} [options={}] - The options for the search\n * @param {string?} [options.name=null] - The name to search for\n * @param {boolean} [options.allowAvatar=true] - Whether to allow searching by avatar\n * @param {boolean} [options.insensitive=true] - Whether the search should be case insensitive\n * @param {string[]?} [options.filteredByTags=null] - Tags to filter characters by\n * @param {boolean} [options.preferCurrentChar=true] - Whether to prefer the current character(s)\n * @param {boolean} [options.quiet=false] - Whether to suppress warnings\n * @returns {any?} - The found character or null if not found\n */\nexport function findChar({\n  name = null,\n  allowAvatar = true,\n  insensitive = true,\n  filteredByTags = null,\n  preferCurrentChar = true,\n  quiet = false,\n} = {}) {\n  const matches = (char: any) =>\n    !name ||\n    (allowAvatar && char.avatar === name) ||\n    (insensitive ? equalsIgnoreCaseAndAccents(char.name, name) : char.name === name);\n\n  // Filter characters by tags if provided\n  let filteredCharacters = characters;\n  if (filteredByTags) {\n    filteredCharacters = characters.filter(char => {\n      const charTags = getTagsList(char.avatar, false);\n      // @ts-ignore\n      return filteredByTags.every(tagName => charTags.some(x => x.name == tagName));\n    });\n  }\n\n  // Get the current character(s)\n  /** @type {any[]} */\n  // @ts-ignore\n  const currentChars = (selected_group as any)\n    ? // @ts-ignore\n      groups\n        // @ts-ignore\n        .find(group => group.id === selected_group)\n        // @ts-ignore\n        ?.members.map(member => filteredCharacters.find(char => char.avatar === member))\n    : // @ts-ignore\n      filteredCharacters.filter(char => characters[this_chid]?.avatar === char.avatar);\n\n  // If we have a current char and prefer it, return that if it matches\n  if (preferCurrentChar) {\n    const preferredCharSearch = currentChars.filter(matches);\n    if (preferredCharSearch.length > 1) {\n      // @ts-ignore\n      if (!quiet) toastr.warning('Multiple characters found for given conditions.');\n      else console.warn('Multiple characters found for given conditions. Returning the first match.');\n    }\n    if (preferredCharSearch.length) {\n      return preferredCharSearch[0];\n    }\n  }\n\n  // If allowAvatar is true, search by avatar first\n  if (allowAvatar && name) {\n    const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n    if (characterByAvatar) {\n      return characterByAvatar;\n    }\n  }\n\n  // Search for matching characters by name\n  const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n  if (matchingCharacters.length > 1) {\n    // @ts-ignore\n    if (!quiet) toastr.warning('Multiple characters found for given conditions.');\n    else console.warn('Multiple characters found for given conditions. Returning the first match.');\n  }\n\n  return matchingCharacters[0] || null;\n}\n","export { SetMultimap, ArrayMultimap };\n\nabstract class Multimap<K, V, I extends Iterable<V>> implements Iterable<[K, V]> {\n  private size_ = 0;\n  private map: Map<K, I> = new Map();\n  private operator: CollectionOperator<V, I>;\n\n  constructor(operator: CollectionOperator<V, I>, iterable?: Iterable<[K, V]>) {\n    this.operator = operator;\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.put(key, value);\n      }\n    }\n    return this;\n  }\n\n  abstract get [Symbol.toStringTag](): string;\n\n  get size(): number {\n    return this.size_;\n  }\n\n  get(key: K): I {\n    const values = this.map.get(key);\n    if (values) {\n      return this.operator.clone(values);\n    } else {\n      return this.operator.create();\n    }\n  }\n\n  put(key: K, value: V): boolean {\n    let values = this.map.get(key);\n    if (!values) {\n      values = this.operator.create();\n    }\n    if (!this.operator.add(value, values)) {\n      return false;\n    }\n    this.map.set(key, values);\n    this.size_++;\n    return true;\n  }\n\n  putAll(key: K, values: I): boolean;\n  putAll(multimap: Multimap<K, V, I>): boolean;\n  putAll(arg1: K | Multimap<K, V, I>, arg2?: I): boolean {\n    let pushed = 0;\n    if (arg2) {\n      const key = arg1 as K;\n      const values = arg2;\n      for (const value of values) {\n        this.put(key, value);\n        pushed++;\n      }\n    } else if (arg1 instanceof Multimap) {\n      for (const [key, value] of arg1.entries()) {\n        this.put(key, value);\n        pushed++;\n      }\n    } else {\n      throw new TypeError('unexpected arguments');\n    }\n    return pushed > 0;\n  }\n\n  has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  hasEntry(key: K, value: V): boolean {\n    return this.operator.has(value, this.get(key));\n  }\n\n  delete(key: K): boolean {\n    this.size_ -= this.operator.size(this.get(key));\n    return this.map.delete(key);\n  }\n\n  deleteEntry(key: K, value: V): boolean {\n    const current = this.get(key);\n    if (!this.operator.delete(value, current)) {\n      return false;\n    }\n    this.map.set(key, current);\n    this.size_--;\n    return true;\n  }\n\n  clear(): void {\n    this.map.clear();\n    this.size_ = 0;\n  }\n\n  keys(): IterableIterator<K> {\n    return this.map.keys();\n  }\n\n  entries(): IterableIterator<[K, V]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    function* gen(): IterableIterator<[K, V]> {\n      for (const [key, values] of self.map.entries()) {\n        for (const value of values) {\n          yield [key, value];\n        }\n      }\n    }\n    return gen();\n  }\n\n  values(): IterableIterator<V> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    function* gen(): IterableIterator<V> {\n      for (const [, value] of self.entries()) {\n        yield value;\n      }\n    }\n    return gen();\n  }\n\n  forEach<T>(callback: (this: T | this, value: V, key: K, map: this) => void, thisArg?: T): void {\n    for (const [key, value] of this.entries()) {\n      callback.call(thisArg === undefined ? this : thisArg, value, key, this);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  asMap(): Map<K, I> {\n    const ret = new Map<K, I>();\n    for (const key of this.keys()) {\n      ret.set(key, this.operator.clone(this.get(key)));\n    }\n    return ret;\n  }\n}\n\ninterface CollectionOperator<V, I> {\n  create(): I;\n  clone(collection: I): I;\n  add(value: V, collection: I): boolean;\n  size(collection: I): number;\n  delete(value: V, collection: I): boolean;\n  has(value: V, collection: I): boolean;\n}\n\nclass ArrayMultimap<K, V> extends Multimap<K, V, V[]> {\n  constructor(iterable?: Iterable<[K, V]>) {\n    super(new ArrayOperator(), iterable);\n  }\n\n  get [Symbol.toStringTag](): string {\n    return 'ArrayMultimap';\n  }\n}\n\nclass ArrayOperator<V> implements CollectionOperator<V, V[]> {\n  create(): V[] {\n    return [];\n  }\n\n  clone(collection: V[]): V[] {\n    return collection.slice();\n  }\n\n  add(value: V, collection: V[]): boolean {\n    collection.push(value);\n    return true;\n  }\n\n  size(collection: V[]): number {\n    return collection.length;\n  }\n\n  delete(value: V, collection: V[]): boolean {\n    const index = collection.indexOf(value);\n    if (index > -1) {\n      collection.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n  has(value: V, collection: V[]): boolean {\n    return collection.includes(value);\n  }\n}\n\nclass SetMultimap<K, V> extends Multimap<K, V, Set<V>> {\n  constructor(iterable?: Iterable<[K, V]>) {\n    super(new SetOperator(), iterable);\n  }\n  get [Symbol.toStringTag](): string {\n    return 'SetMultimap';\n  }\n}\n\nclass SetOperator<V> implements CollectionOperator<V, Set<V>> {\n  create(): Set<V> {\n    return new Set();\n  }\n  clone(collection: Set<V>): Set<V> {\n    return new Set(collection);\n  }\n  add(value: V, collection: Set<V>): boolean {\n    const prev = collection.size;\n    collection.add(value);\n    return prev !== collection.size;\n  }\n  size(collection: Set<V>): number {\n    return collection.size;\n  }\n  delete(value: V, collection: Set<V>): boolean {\n    return collection.delete(value);\n  }\n  has(value: V, collection: Set<V>): boolean {\n    return collection.has(value);\n  }\n}\n","import { SetMultimap } from '@/util/multimap';\n\nexport function partition<T>(array: T[], predicate: (item: T) => boolean): [T[], T[]] {\n  return array.reduce(\n    ([pass, fail], item) => {\n      if (predicate(item)) {\n        pass.push(item);\n      } else {\n        fail.push(item);\n      }\n      return [pass, fail];\n    },\n    [[], []] as [T[], T[]],\n  );\n}\n\nexport function set_or_add<K1, K2, V>(map: Map<K1, SetMultimap<K2, V>>, k1: K1, k2: K2, v: V): boolean {\n  if (map.has(k1)) {\n    // @ts-ignore 2532\n    map.get(k1).put(k2, v);\n    return false;\n  }\n\n  map.set(k1, new SetMultimap([[k2, v]]));\n  return true;\n}\n\nexport function try_set<K, V>(map: Map<K, V>, key: K, value: V): boolean {\n  if (map.has(key)) {\n    return false;\n  }\n  map.set(key, value);\n  return true;\n}\n\nexport function get_or_set<K, V>(map: Map<K, V>, key: K, defaulter: () => V): V {\n  const existing_value = map.get(key);\n  if (existing_value) {\n    return existing_value;\n  }\n  const default_value = defaulter();\n  map.set(key, default_value);\n  return default_value;\n}\n\nexport function extract<K, V>(map: Map<K, V>, key: K): V | undefined {\n  const value = map.get(key);\n  if (!value) {\n    return undefined;\n  }\n  map.delete(key);\n  return value;\n}\n\nexport function with_fallback<T extends Object>(data: Partial<T>, fallback: T): T {\n  const result = { ...fallback };\n  for (const key in data) {\n    if (data[key] !== undefined) {\n      result[key] = data[key];\n    }\n  }\n  return result;\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { chat_metadata, event_types } from '@sillytavern/script';\nimport { getContext, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\n\n// for compatibility\ninterface IframeSetVariables extends IframeMessage {\n  request: '[Variables][setVariables]';\n  message_id: number;\n  variables: Record<string, any>;\n}\n\nlet latest_set_variables_message_id: number | null = null;\n\nexport function registerIframeVariableHandler() {\n  registerIframeHandler('[Variables][setVariables]', async (event: MessageEvent<IframeSetVariables>): Promise<void> => {\n    const variables = event.data.variables;\n    const message_id = event.data.message_id;\n\n    if (isNaN(message_id)) {\n      return;\n    }\n    const chat_length = getContext().chat.length;\n    const latest_message_id = chat_length - 1;\n\n    if (message_id !== latest_message_id) {\n      console.info(\n        `因为 ${message_id} 楼不是最新楼层 ${latest_message_id} 楼, 取消设置聊天变量. 原本要设置的变量:\\n${JSON.stringify(\n          variables,\n          undefined,\n          2,\n        )} `,\n      );\n      return;\n    }\n    latest_set_variables_message_id = message_id;\n    if (\n      // @ts-ignore\n      !chat_metadata.variables ||\n      // @ts-ignore\n      typeof chat_metadata.variables !== 'object'\n    ) {\n      // @ts-ignore\n      chat_metadata.variables = {};\n    }\n    if (\n      // @ts-ignore\n      !chat_metadata.variables.tempVariables ||\n      // @ts-ignore\n      typeof chat_metadata.variables.tempVariables !== 'object'\n    ) {\n      // @ts-ignore\n      chat_metadata.variables.tempVariables = {};\n    }\n    if (variables.hasOwnProperty('tempVariables')) {\n      // @ts-ignore\n      delete variables.tempVariables;\n    }\n    // @ts-ignore\n    const tempVariables = chat_metadata.variables.tempVariables;\n    // @ts-ignore\n    const currentVariables = chat_metadata.variables;\n    Object.keys(variables).forEach(key => {\n      // @ts-ignore\n      const newValue = variables[key];\n      const currentValue = currentVariables[key];\n      if (newValue !== currentValue) {\n        tempVariables[key] = newValue;\n      }\n    });\n    // @ts-ignore\n    chat_metadata.variables.tempVariables = tempVariables;\n    saveMetadataDebounced();\n\n    console.info(`${getLogPrefix(event)}设置聊天变量, 要设置的变量:\\n${JSON.stringify(variables, undefined, 2)} `);\n  });\n}\n\nexport function clearTempVariables() {\n  if (\n    chat_metadata.variables &&\n    chat_metadata.variables.tempVariables &&\n    Object.keys(chat_metadata.variables.tempVariables).length > 0\n  ) {\n    console.log('[Var]Clearing tempVariables.');\n    chat_metadata.variables.tempVariables = {};\n    saveMetadataDebounced();\n  }\n}\n\nexport function shouldUpdateVariables(eventMesId: number) {\n  if (\n    !chat_metadata.variables ||\n    !chat_metadata.variables.tempVariables ||\n    Object.keys(chat_metadata.variables.tempVariables).length === 0\n  ) {\n    return;\n  }\n  if (eventMesId === latest_set_variables_message_id) {\n    console.log('[Var]MesId matches the latest setVariables, skipping ST variable update.');\n    return;\n  } else if (latest_set_variables_message_id !== null && eventMesId > latest_set_variables_message_id) {\n    console.log('[Var]Event mesId is newer than setVariables mesId, updating ST variables.');\n    const newVariables = { ...chat_metadata.variables.tempVariables };\n    updateVariables(newVariables);\n\n    chat_metadata.variables.tempVariables = {};\n    console.log('[Var]TempVariables cleared.');\n  } else {\n    console.log('[Var]Event mesId is older than setVariables mesId, ignoring.');\n  }\n}\n\nfunction updateVariables(newVariables: Record<string, any>) {\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  const currentVariables = chat_metadata.variables;\n\n  for (let key in newVariables) {\n    if (newVariables.hasOwnProperty(key)) {\n      currentVariables[key] = newVariables[key];\n    }\n  }\n\n  chat_metadata.variables = currentVariables;\n\n  saveMetadataDebounced();\n}\n\nexport const checkVariablesEvents = [event_types.CHARACTER_MESSAGE_RENDERED, event_types.USER_MESSAGE_RENDERED];\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"getRegexedString\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__.getRegexedString), [\"regex_placement\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__.regex_placement) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"ChatCompletion\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.ChatCompletion), [\"Message\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.Message), [\"MessageCollection\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.MessageCollection), [\"isImageInliningSupported\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.isImageInliningSupported), [\"oai_settings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.oai_settings), [\"prepareOpenAIMessages\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.prepareOpenAIMessages), [\"sendOpenAIRequest\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.sendOpenAIRequest), [\"setOpenAIMessageExamples\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setOpenAIMessageExamples), [\"setOpenAIMessages\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setOpenAIMessages), [\"setupChatCompletionPromptManager\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setupChatCompletionPromptManager) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"createNewWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.createNewWorldInfo), [\"createWorldInfoEntry\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.createWorldInfoEntry), [\"deleteWIOriginalDataValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.deleteWIOriginalDataValue), [\"deleteWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.deleteWorldInfo), [\"getWorldInfoPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.getWorldInfoPrompt), [\"getWorldInfoSettings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.getWorldInfoSettings), [\"loadWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.loadWorldInfo), [\"originalWIDataKeyMap\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.originalWIDataKeyMap), [\"saveWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.saveWorldInfo), [\"selected_world_info\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.selected_world_info), [\"setWIOriginalDataValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.setWIOriginalDataValue), [\"setWorldInfoButtonClass\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.setWorldInfoButtonClass), [\"wi_anchor_position\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.wi_anchor_position), [\"world_info\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_info), [\"world_info_include_names\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_info_include_names), [\"world_names\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_names) });","import { libraries_text } from '@/component/character_level/library';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\nimport { loadScripts, Script } from '@/util/load_script';\n\nlet script_map: Map<string, HTMLIFrameElement> = new Map();\n\nfunction makeScriptIframe(script: Script): { iframe: HTMLIFrameElement; load_promise: Promise<void> } {\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.id = `script-iframe-${script.name}`;\n\n  const srcdocContent = `\n    <html>\n    <head>\n      ${third_party}\n      <script src=\"${script_url.get('iframe_client')}\"></script>\n      ${libraries_text}\n    </head>\n    <body>\n      ${script.code}\n    </body>\n    </html>\n  `;\n\n  iframe.srcdoc = srcdocContent;\n\n  const load_promise = new Promise<void>(resolve => {\n    iframe.onload = () => {\n      console.info(`[Script](${iframe.id}) 加载完毕`);\n      resolve();\n    };\n  });\n\n  document.body.appendChild(iframe);\n\n  return { iframe, load_promise };\n}\n\nexport function destroy(): void {\n  if (script_map.size !== 0) {\n    console.log(`[Script] 清理全局脚本...`);\n    script_map.forEach((iframe, _) => {\n      iframe.remove();\n    });\n    script_map.clear();\n    console.log(`[Script] 全局脚本清理完成!`);\n  }\n}\n\nexport async function initialize(): Promise<void> {\n  try {\n    destroy();\n\n    const scripts = loadScripts('脚本-');\n    console.info(`[Script] 加载全局脚本: ${JSON.stringify(scripts.map(script => script.name))}`);\n\n    const load_promises: Promise<void>[] = [];\n\n    scripts.forEach(script => {\n      const { iframe, load_promise } = makeScriptIframe(script);\n      script_map.set(script.name, iframe);\n      load_promises.push(load_promise);\n    });\n\n    await Promise.allSettled(load_promises);\n  } catch (error) {\n    console.error('[Script] 全局脚本加载失败:', error);\n    throw error;\n  }\n}\n","import { destroy as destroyLibrary, initialize as initializeLibrary } from '@/component/character_level/library';\nimport {\n  destroy as destroyScriptIframe,\n  initialize as initializeScriptIframe,\n} from '@/component/character_level/script_iframe';\n\nimport { event_types, eventSource } from '@sillytavern/script';\n\nconst load_events = [event_types.CHAT_CHANGED] as const;\n\nexport function initializeCharacterLevelOnExtension() {\n  // FIXME: 在无角色卡的情况下, 修改正则并不会触发 CHAT_CHANGED 事件, 因而不会加载这些内容\n  load_events.forEach(eventType => {\n    eventSource.makeFirst(eventType, initializeScriptIframe);\n    eventSource.makeFirst(eventType, initializeLibrary);\n  });\n}\n\nexport function destroyCharacterLevelOnExtension() {\n  load_events.forEach(eventType => {\n    eventSource.removeListener(eventType, initializeScriptIframe);\n    eventSource.removeListener(eventType, initializeLibrary);\n  });\n  destroyScriptIframe();\n  destroyLibrary();\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"commonEnumProviders\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__.commonEnumProviders), [\"enumIcons\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__.enumIcons) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"SlashCommandEnumValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__.SlashCommandEnumValue), [\"enumTypes\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__.enumTypes) });","import { extensionName } from '@/util/extension_variables';\n\nimport { chat_metadata, saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\nimport { SlashCommand } from '@sillytavern/scripts/slash-commands/SlashCommand';\nimport {\n  ARGUMENT_TYPE,\n  SlashCommandArgument,\n  SlashCommandNamedArgument,\n} from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { commonEnumProviders, enumIcons } from '@sillytavern/scripts/slash-commands/SlashCommandCommonEnumsProvider';\nimport { SlashCommandEnumValue, enumTypes } from '@sillytavern/scripts/slash-commands/SlashCommandEnumValue';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\nimport {\n  list_BGMS,\n  list_ambients,\n  onAudioEnabledClick,\n  playAudio,\n  updateAudio,\n  updateAudioSelect,\n} from '../component/audio';\n\ninterface AudioElement extends HTMLElement {\n  pause(): void;\n}\n\n/**\n * 切换音频播放模式\n */\nexport async function audioMode(args: { type: string; mode: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const mode = args.mode.toLowerCase();\n\n  if (!['bgm', 'ambient'].includes(type) || !['repeat', 'random', 'single', 'stop'].includes(mode)) {\n    console.warn('WARN: Invalid arguments for /audiomode command');\n    return '';\n  }\n\n  if (type === 'bgm') {\n    extension_settings[extensionName].audio.bgm_mode = mode;\n    const iconMap: Record<string, string> = {\n      repeat: 'fa-repeat',\n      random: 'fa-random',\n      single: 'fa-redo-alt',\n      stop: 'fa-cancel',\n    };\n    $('#audio_bgm_mode_icon').removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n    $('#audio_bgm_mode_icon').addClass(iconMap[mode]);\n  } else if (type === 'ambient') {\n    extension_settings[extensionName].audio.ambient_mode = mode;\n    const iconMap: Record<string, string> = {\n      repeat: 'fa-repeat',\n      random: 'fa-random',\n      single: 'fa-redo-alt',\n      stop: 'fa-cancel',\n    };\n    $('#audio_ambient_mode_icon').removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n    $('#audio_ambient_mode_icon').addClass(iconMap[mode]);\n  }\n\n  saveSettingsDebounced();\n  return '';\n}\n\n/**\n * 切换播放器开关状态\n */\nexport async function audioEnable(args: { type: string; state?: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const state = (args.state || 'true').toLowerCase();\n\n  if (!type) {\n    console.warn('WARN: Missing arguments for /audioenable command');\n    return '';\n  }\n\n  if (type === 'bgm') {\n    if (state === 'true') {\n      $('#enable_bgm').prop('checked', true);\n      await onAudioEnabledClick('bgm');\n    } else if (state === 'false') {\n      $('#enable_bgm').prop('checked', false);\n      await onAudioEnabledClick('bgm');\n    }\n  } else if (type === 'ambient') {\n    if (state === 'true') {\n      $('#enable_ambient').prop('checked', true);\n      await onAudioEnabledClick('ambient');\n    } else if (state === 'false') {\n      $('#enable_ambient').prop('checked', false);\n      await onAudioEnabledClick('ambient');\n    }\n  }\n\n  return '';\n}\n\n/**\n * 切换播放/暂停状态\n */\nexport async function audioPlay(args: { type: string; play?: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const play = (args.play || 'true').toLowerCase();\n\n  if (!type) {\n    console.warn('WARN: Missing arguments for /audioplaypause command');\n    return '';\n  }\n\n  if (type === 'bgm') {\n    if (play === 'true') {\n      await playAudio('bgm');\n    } else if (play === 'false') {\n      const audioElement = $('#audio_bgm')[0] as AudioElement;\n      audioElement.pause();\n    }\n  } else if (type === 'ambient') {\n    if (play === 'true') {\n      await playAudio('ambient');\n    } else if (play === 'false') {\n      const audioElement = $('#audio_ambient')[0] as AudioElement;\n      audioElement.pause();\n    }\n  }\n\n  return '';\n}\n\n/**\n * 导入音频链接\n */\nexport async function audioImport(args: { type: string; play?: string }, url: string): Promise<void> {\n  const type = args.type.toLowerCase();\n  const play = (args.play || 'true').toLowerCase();\n\n  if (!type || !url) {\n    console.warn('WARN: Missing arguments for /audioimport command');\n    return '';\n  }\n\n  const urlArray = url\n    .split(',')\n    .map((url: string) => url.trim())\n    .filter((url: string) => url !== '')\n    .filter((url: string, index: number, self: string[]) => self.indexOf(url) === index);\n  if (urlArray.length === 0) {\n    console.warn('WARN: Invalid or empty URLs provided.');\n    return '';\n  }\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n  const existingUrls = chat_metadata.variables[typeKey] || [];\n  const mergedUrls = [...new Set([...urlArray, ...existingUrls])];\n\n  chat_metadata.variables[typeKey] = mergedUrls;\n  saveMetadataDebounced();\n\n  if (type === 'bgm') {\n    updateAudioSelect('bgm');\n  } else if (type === 'ambient') {\n    updateAudioSelect('ambient');\n  }\n\n  if (play === 'true' && urlArray[0]) {\n    const selectedUrl = urlArray[0];\n    if (type === 'bgm') {\n      extension_settings[extensionName].audio.bgm_selected = selectedUrl;\n      await updateAudio('bgm', true);\n    } else if (type === 'ambient') {\n      extension_settings[extensionName].audio.ambient_selected = selectedUrl;\n      await updateAudio('ambient', true);\n    }\n  }\n\n  return '';\n}\n\n/**\n * 选择并播放音频\n */\nexport async function audioSelect(args: { type: string }, url: string): Promise<void> {\n  const type = args.type.toLowerCase();\n\n  if (!url) {\n    console.warn('WARN: Missing URL for /audioselect command');\n    return '';\n  }\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  let playlist = type === 'bgm' ? list_BGMS : list_ambients;\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n\n  if (playlist && playlist.includes(url)) {\n    if (type === 'bgm') {\n      extension_settings[extensionName].audio.bgm_selected = url;\n      await updateAudio('bgm', true);\n    } else if (type === 'ambient') {\n      extension_settings[extensionName].audio.ambient_selected = url;\n      await updateAudio('ambient', true);\n    }\n    return '';\n  }\n\n  const existingUrls = chat_metadata.variables[typeKey] || [];\n\n  const mergedUrls = [...new Set([url, ...existingUrls])];\n  chat_metadata.variables[typeKey] = mergedUrls;\n  saveMetadataDebounced();\n\n  if (type === 'bgm') {\n    updateAudioSelect('bgm');\n    extension_settings[extensionName].audio.bgm_selected = url;\n    await updateAudio('bgm', true);\n  } else if (type === 'ambient') {\n    updateAudioSelect('ambient');\n    extension_settings[extensionName].audio.ambient_selected = url;\n    await updateAudio('ambient', true);\n  }\n\n  return '';\n}\n\n/**\n * 初始化音频相关的 slash command\n */\nexport function initAudioSlashCommands() {\n  // 注册 audioselect 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioselect',\n      callback: audioSelect,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择播放器类型 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n      ],\n      unnamedArgumentList: [new SlashCommandArgument('url', [ARGUMENT_TYPE.STRING], true)],\n      helpString: `\n        <div>\n            选择并播放音频。如果音频链接不存在，则先导入再播放。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioselect type=bgm https://example.com/song.mp3</code></pre>\n                    选择并播放指定的音乐。\n                </li>\n                <li>\n                    <pre><code>/audioselect type=ambient https://example.com/sound.mp3</code></pre>\n                    选择并播放指定的音效。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioimport 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioimport',\n      callback: audioImport,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择导入类型 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'play',\n          description: '导入后是否立即播放第一个链接',\n          typeList: [ARGUMENT_TYPE.BOOLEAN],\n          defaultValue: 'true',\n          isRequired: false,\n        }),\n      ],\n      unnamedArgumentList: [new SlashCommandArgument('url', [ARGUMENT_TYPE.STRING], true)],\n      helpString: `\n        <div>\n            导入音频或音乐链接，并决定是否立即播放，默认为自动播放。可批量导入链接，使用英文逗号分隔。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioimport type=bgm https://example.com/song1.mp3,https://example.com/song2.mp3</code></pre>\n                    导入 BGM 音乐并立即播放第一个链接。\n                </li>\n                <li>\n                    <pre><code>/audioimport type=ambient play=false url=https://example.com/sound1.mp3,https://example.com/sound2.mp3 </code></pre>\n                    导入音效链接 (不自动播放)。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioplay 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioplay',\n      callback: audioPlay,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        new SlashCommandNamedArgument(\n          'play',\n          '播放或暂停',\n          [ARGUMENT_TYPE.STRING],\n          true,\n          false,\n          'true',\n          commonEnumProviders.boolean('trueFalse')(),\n        ),\n      ],\n      helpString: `\n        <div>\n            控制音乐播放器或音效播放器的播放与暂停。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioplay type=bgm</code></pre>\n                    播放当前音乐。\n                </li>\n                <li>\n                    <pre><code>/audioplay type=ambient play=false</code></pre>\n                    暂停当前音效。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioenable 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioenable',\n      callback: audioEnable,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        new SlashCommandNamedArgument(\n          'state',\n          '打开或关闭播放器',\n          [ARGUMENT_TYPE.STRING],\n          false,\n          false,\n          'true',\n          commonEnumProviders.boolean('trueFalse')(),\n        ),\n      ],\n      helpString: `\n        <div>\n            控制音乐播放器或音效播放器的开启与关闭。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioenable type=bgm state=true</code></pre>\n                    打开音乐播放器。\n                </li>\n                <li>\n                    <pre><code>/audioenable type=ambient state=false</code></pre>\n                    关闭音效播放器。\n                </li>\n            </ul>\n        </div>\n    `,\n    }),\n  );\n\n  // 注册 audiomode 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audiomode',\n      callback: audioMode,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'mode',\n          description: '选择播放模式',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('repeat', null, enumTypes.enum, enumIcons.loop),\n            new SlashCommandEnumValue('random', null, enumTypes.enum, enumIcons.shuffle),\n            new SlashCommandEnumValue('single', null, enumTypes.enum, enumIcons.redo),\n            new SlashCommandEnumValue('stop', null, enumTypes.enum, enumIcons.stop),\n          ],\n          isRequired: true,\n        }),\n      ],\n      helpString: `\n        <div>\n            设置音频播放模式。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=repeat</code></pre>\n                    设置音乐为循环播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=random</code></pre>\n                    设置音效为随机播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=single</code></pre>\n                    设置音乐为单曲循环模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=stop</code></pre>\n                    设置音效为停止播放模式。\n                </li>\n            </ul>\n        </div>\n    `,\n    }),\n  );\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"NOTE_MODULE_NAME\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.NOTE_MODULE_NAME), [\"metadata_keys\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.metadata_keys), [\"shouldWIAddPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.shouldWIAddPrompt) });","import { defaultAudioSettings, initAudioComponents } from '@/component/audio';\nimport { initExtensionMainPanel } from '@/component/main';\nimport { defaultIframeSettings, initIframePanel } from '@/component/message_iframe';\nimport { defaultScriptSettings, initScriptRepository } from '@/component/script_repository';\nimport { initTavernHelperObject } from '@/function';\nimport { initAudioSlashCommands } from '@/slash_command/audio';\nimport { initSlashEventEmit } from '@/slash_command/event';\nimport { extensionFolderPath, extensionName } from '@/util/extension_variables';\nimport { runCheckWithPath, addVersionUpdateElement, getFileContentByPath, parseVersionFromFile, VERSION_FILE_PATH } from '@/util/check_update';\n\nimport { saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, renderExtensionTemplateAsync } from '@sillytavern/scripts/extensions';\n\nconst defaultSettings = {\n  enabled_extension: true,\n  render: {\n    ...defaultIframeSettings,\n  },\n  script: {\n    ...defaultScriptSettings,\n  },\n  audio: {\n    ...defaultAudioSettings,\n  },\n};\n\n// function formatSlashCommands(): string {\n//   const cmdList = Object.keys(SlashCommandParser.commands)\n//     .filter(key => SlashCommandParser.commands[key].name === key) // exclude aliases\n//     .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n//     .map(key => SlashCommandParser.commands[key]);\n//   const transform_arg = (arg: SlashCommandNamedArgument) => {\n//     const transformers = {\n//       name: (value: SlashCommandNamedArgument['name']) => ({ name: value }),\n//       // description: (value: SlashCommandNamedArgument['description']) => ({ description: value }),\n//       isRequired: (value: SlashCommandNamedArgument['isRequired']) => ({\n//         is_required: value,\n//       }),\n//       defaultValue: (value: SlashCommandNamedArgument['defaultValue']) =>\n//         value !== null ? { default_value: value } : {},\n//       acceptsMultiple: (value: SlashCommandNamedArgument['acceptsMultiple']) => ({ accepts_multiple: value }),\n//       enumList: (value: SlashCommandNamedArgument['enumList']) =>\n//         value.length > 0 ? { enum_list: value.map(e => e.value) } : {},\n//       typeList: (value: SlashCommandNamedArgument['typeList']) => (value.length > 0 ? { type_list: value } : {}),\n//     };\n\n//     return Object.entries(arg)\n//       .filter(([_, value]) => value !== undefined)\n//       .reduce(\n//         (result, [key, value]) => ({\n//           ...result,\n//           // @ts-ignore\n//           ...transformers[key]?.(value),\n//         }),\n//         {},\n//       );\n//   };\n//   const transform_help_string = (help_string: string) => {\n//     const content = $('<span>').html(help_string);\n//     return content\n//       .text()\n//       .split('\\n')\n//       .map(line => line.trim())\n//       .filter(line => line !== '')\n//       .join(' ');\n//   };\n\n//   return cmdList\n//     .map(cmd => ({\n//       name: cmd.name,\n//       named_args: cmd.namedArgumentList.map(transform_arg) ?? [],\n//       unnamed_args: cmd.unnamedArgumentList.map(transform_arg) ?? [],\n//       return_type: cmd.returns ?? 'void',\n//       help_string: transform_help_string(cmd.helpString) ?? 'NO DETAILS',\n//     }))\n//     .map(\n//       cmd =>\n//         `/${cmd.name}${cmd.named_args.length > 0 ? ` ` : ``}${cmd.named_args\n//           .map(\n//             arg =>\n//               `[${arg.accepts_multiple ? `...` : ``}${arg.name}=${\n//                 arg.enum_list ? arg.enum_list.join('|') : arg.type_list.join('|')\n//               }]${arg.is_required ? `` : `?`}${arg.default_value ? `=${arg.default_value}` : ``}`,\n//           )\n//           .join(' ')}${cmd.unnamed_args.length > 0 ? ` ` : ``}${cmd.unnamed_args\n//           .map(\n//             arg =>\n//               `(${arg.accepts_multiple ? `...` : ``}${\n//                 arg.enum_list ? arg.enum_list.join('|') : arg.type_list.join('|')\n//               })${arg.is_required ? `` : `?`}${arg.default_value ? `=${arg.default_value}` : ``}`,\n//           )\n//           .join(' ')} // ${cmd.help_string}`,\n//     )\n//     .join('\\n');\n// }\n\n/**\n * 设置页面切换\n *  @param event 事件对象\n * */\nfunction handleSettingPageChange(event: JQuery.ClickEvent) {\n  const target = $(event.currentTarget);\n  let id = target.attr('id');\n  if (id === undefined) {\n    return;\n  }\n  id = id.replace('-settings-title', '');\n\n  function resetAllTitleClasses() {\n    $('#main-settings-title').removeClass('title-item-active');\n    $('#render-settings-title').removeClass('title-item-active');\n    $('#script-settings-title').removeClass('title-item-active');\n    $('#audio-settings-title').removeClass('title-item-active');\n  }\n\n  function hideAllContentPanels() {\n    $('#main-settings-content').hide();\n    $('#render-settings-content').hide();\n    $('#script-settings-content').hide();\n    $('#audio-settings-content').hide();\n  }\n\n  resetAllTitleClasses();\n  hideAllContentPanels();\n\n  switch (id) {\n    case 'main':\n      $('#main-settings-title').addClass('title-item-active');\n      $('#main-settings-content').show();\n      break;\n    case 'render':\n      $('#render-settings-title').addClass('title-item-active');\n      $('#render-settings-content').show();\n      break;\n    case 'script':\n      $('#script-settings-title').addClass('title-item-active');\n      $('#script-settings-content').show();\n      break;\n    case 'audio':\n      $('#audio-settings-title').addClass('title-item-active');\n      $('#audio-settings-content').show();\n      break;\n  }\n}\n\n/**\n * 版本控制\n */\nasync function handleVersionUpdate() {\n  const currentVersion = parseVersionFromFile(await getFileContentByPath(VERSION_FILE_PATH));\n  $('.version').text(`Ver ${currentVersion}`);\n  const isNeedUpdate = await runCheckWithPath();\n  if (isNeedUpdate) {\n    addVersionUpdateElement();\n  }\n}\n\n/**\n * 初始化扩展面板\n */\njQuery(async () => {\n  const getContainer = () => $('#extensions_settings');\n  const windowHtml = await renderExtensionTemplateAsync(`${extensionFolderPath}`, 'settings');\n  getContainer().append(windowHtml);\n  //@ts-ignore\n  if (!extension_settings[extensionName]) {\n    //@ts-ignore\n    extension_settings[extensionName] = defaultSettings;\n    saveSettingsDebounced();\n  }\n\n  initTavernHelperObject();\n\n  // 默认显示主设置界面\n  $('#main-settings-title').addClass('title-item-active');\n  $('#main-settings-content').show();\n  $('#render-settings-content').hide();\n  $('#script-settings-content').hide();\n  $('#audio-settings-content').hide();\n\n  // 监听设置选项卡切换\n  $('#main-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n  $('#render-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n  $('#script-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n  $('#audio-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n\n  handleVersionUpdate();\n\n  // $('#scriptLibraryButton')\n  //   .off('click')\n  //   .on('click', function () {\n  //     isScriptLibraryOpen = !isScriptLibraryOpen;\n  //     $('#scriptLibraryPopup').slideToggle(200, 'swing');\n  //   });\n\n  // $(document).on('mousedown touchstart', function (e) {\n  //   const clickTarget = $(e.target);\n\n  //   if (\n  //     isScriptLibraryOpen &&\n  //     clickTarget.closest('#scriptLibraryButton').length === 0 &&\n  //     clickTarget.closest('#scriptLibraryPopup').length === 0\n  //   ) {\n  //     $('#scriptLibraryPopup').slideUp(200, 'swing');\n  //     isScriptLibraryOpen = false;\n  //   }\n  // });\n  // $('#copy_third_party_installation').on('pointerup', function () {\n  //   navigator.clipboard.writeText(\n  //     'npm install --save-dev @types/file-saver @types/jquery @types/jqueryui @types/lodash @types/yamljs',\n  //   );\n  //   executeSlashCommandsWithOptions('/echo severity=success 已复制到剪贴板!');\n  // });\n  // $('#copy_third_party_tag').on('pointerup', function () {\n  //   navigator.clipboard.writeText(third_party);\n  //   executeSlashCommandsWithOptions('/echo severity=success 已复制到剪贴板!');\n  // });\n\n  // $('#download_slash_commands').on('click', function () {\n  //   const url = URL.createObjectURL(new Blob([formatSlashCommands()], { type: 'text/plain' }));\n  //   $(this).attr('href', url);\n  //   $(this).attr('download', 'slash_command.txt');\n  //   setTimeout(() => URL.revokeObjectURL(url), 0);\n  // });\n  initExtensionMainPanel();\n  initIframePanel();\n  initScriptRepository();\n  initAudioComponents();\n  initAudioSlashCommands();\n  initSlashEventEmit();\n});\n","import { libraries_text } from '@/component/character_level/library';\nimport { destroyIframe } from '@/component/message_iframe';\nimport third_party from '@/third_party.html';\nimport { extensionFolderPath, getSettingValue, saveSettingValue } from '@/util/extension_variables';\nimport { characters, this_chid } from '@sillytavern/script';\nimport { renderExtensionTemplateAsync, writeExtensionField } from '@sillytavern/scripts/extensions';\nimport { createDefaultScripts } from './default_scripts/index';\n//@ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { POPUP_TYPE, callGenericPopup } from '@sillytavern/scripts/popup';\nimport { download, getFileText, getSortableDelay, uuidv4 } from '@sillytavern/scripts/utils';\n\nimport { script_url } from '@/script_url';\n\ninterface IFrameElement extends HTMLIFrameElement {\n  cleanup: () => void;\n  [prop: string]: any;\n}\n\nexport const defaultScriptSettings = {\n  global_script_enabled: true,\n  scope_script_enabled: true,\n  scriptsRepository: [] as Script[],\n  characters_with_scripts: [] as string[],\n};\n\nconst templatePath = `${extensionFolderPath}/src/component/script_repository`;\nconst baseTemplate = $(\n  await renderExtensionTemplateAsync(`${templatePath}`, 'script_item_template', {\n    scriptName: '',\n    id: '',\n    moveTo: '',\n    faIcon: '',\n  }),\n);\n\nconst defaultScriptTemplate = $(\n  await renderExtensionTemplateAsync(`${templatePath}`, 'script_default_repository', {\n    scriptName: '',\n    id: '',\n  }),\n);\n\nlet isGlobalScriptEnabled: boolean;\nlet isScopedScriptEnabled: boolean;\n\nclass Script {\n  id: string;\n  name: string;\n  content: string;\n  info: string;\n  enabled: boolean;\n\n  constructor(data?: Partial<Script>) {\n    this.id = data?.id || uuidv4();\n    this.name = data?.name || '';\n    this.content = data?.content || '';\n    this.info = data?.info || '';\n    this.enabled = data?.enabled || false;\n  }\n\n  hasName(): boolean {\n    return Boolean(this.name);\n  }\n  getScript(): Script {\n    return getSettingValue('script.scriptsRepository').find((s: Script) => s.id === this.id);\n  }\n}\n\nexport enum ScriptType {\n  GLOBAL = 'global',\n  CHARACTER = 'scope',\n}\n\nclass ScriptRepository {\n  private static instance: ScriptRepository;\n  private globalScripts: Script[] = [];\n  private characterScripts: Script[] = [];\n  private activeScripts: Map<string, { script: Script; element: HTMLScriptElement }> = new Map();\n\n  private constructor() {\n    this.loadScripts();\n  }\n\n  public static getInstance(): ScriptRepository {\n    if (!ScriptRepository.instance) {\n      ScriptRepository.instance = new ScriptRepository();\n    }\n    return ScriptRepository.instance;\n  }\n\n  /**\n   * 脚本库原始数据\n   */\n  async loadScripts() {\n    this.globalScripts = getSettingValue('script.scriptsRepository') || [];\n    this.characterScripts = characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n  }\n  /**\n   * 获取脚本\n   * @param id 脚本id\n   * @returns 脚本\n   */\n  getScriptById(id: string) {\n    return (\n      this.globalScripts.find((s: Script) => s.id === id) || this.characterScripts.find((s: Script) => s.id === id)\n    );\n  }\n\n  /**\n   * 添加单个脚本到脚本库UI首位并保存到设置中\n   * @param script 脚本\n   * @param type 脚本类型\n   */\n  async addScript(script: Script, type: ScriptType) {\n    if (!script.hasName()) {\n      toastr.error('保存失败，脚本名称为空');\n    }\n\n    await scriptRepo.saveScript(script, type);\n    await scriptRepo.renderScript(script, type);\n  }\n\n  /**\n   * 加载脚本库\n   */\n  async loadScriptLibrary() {\n    $('#global-script-list').empty();\n    $('#scoped-script-list').empty();\n\n    const globalScriptArray = getSettingValue('script.scriptsRepository') ?? [];\n    const scopedScriptArray = characters[this_chid]?.data?.extensions?.TavernHelper_scripts ?? [];\n\n    if (globalScriptArray.length > 0) {\n      const globalScripts = globalScriptArray.map((scriptData: Script) => new Script(scriptData));\n      globalScripts.forEach(async (script: Script) => {\n        const scriptHtml = await cloneTemplate(script, ScriptType.GLOBAL);\n        $('#global-script-list').append(scriptHtml);\n      });\n    }\n    if (scopedScriptArray.length > 0) {\n      const scopedScripts = scopedScriptArray.map((scriptData: Script) => new Script(scriptData));\n      scopedScripts.forEach(async (script: Script) => {\n        const scriptHtml = await cloneTemplate(script, ScriptType.CHARACTER);\n        $('#scoped-script-list').append(scriptHtml);\n      });\n    }\n    scriptRepo.makeDraggable($(`#global-script-list`), ScriptType.GLOBAL);\n    scriptRepo.makeDraggable($(`#scoped-script-list`), ScriptType.CHARACTER);\n  }\n\n  /**\n   * 运行指定类型的脚本\n   * @param type 脚本类型\n   */\n  async runScriptsByType(type: ScriptType) {\n    if (!getSettingValue('enabled_extension')) {\n      toastr.error('酒馆助手未启用，无法运行脚本');\n      return;\n    }\n    if (type === ScriptType.GLOBAL && !isGlobalScriptEnabled) {\n      return;\n    }\n    if (type === ScriptType.CHARACTER && !isScopedScriptEnabled) {\n      return;\n    }\n\n    const scripts = type === ScriptType.GLOBAL ? this.globalScripts : this.characterScripts;\n    const enabledScripts = scripts.map((script, index) => ({ script, index })).filter(({ script }) => script.enabled);\n\n    for (const { script } of enabledScripts) {\n      // 不要保存设置\n      await scriptRepo.runScript(script, type, false);\n    }\n  }\n\n  /**\n   * 取消运行指定类型的脚本\n   * @param type 脚本类型\n   */\n  async cancelRunScriptsByType(type: ScriptType) {\n    const scripts = type === ScriptType.GLOBAL ? this.globalScripts : this.characterScripts;\n    const disabledScripts = scripts.map((script, index) => ({ script, index })).filter(({ script }) => !script.enabled);\n\n    for (const { script } of disabledScripts) {\n      // 不要保存设置\n      await scriptRepo.cancelRunScript(script, type, false);\n    }\n  }\n\n  /**\n   * 运行单个脚本\n   * @param script 脚本\n   * @param type 脚本类型\n   * @param userInput 是否由用户输入,为true时,会设置enabled为true,并保存设置\n   */\n  async runScript(script: Script, type: ScriptType, userInput: boolean = true) {\n    if (!getSettingValue('enabled_extension')) {\n      toastr.error('扩展未启用');\n      return;\n    }\n    const typeName = type === ScriptType.GLOBAL ? '全局' : '局部';\n    const index = script.id.startsWith('global')\n      ? this.globalScripts.findIndex(s => s.id === script.id)\n      : this.characterScripts.findIndex(s => s.id === script.id);\n    if (index !== -1) {\n      if (userInput) {\n        script.enabled = true;\n        await scriptRepo.saveScript(script, type);\n      }\n    }\n\n    if (type === ScriptType.GLOBAL && !isGlobalScriptEnabled) {\n      return;\n    }\n    if (type === ScriptType.CHARACTER && !isScopedScriptEnabled) {\n      return;\n    }\n\n    try {\n      if (this.activeScripts.has(script.id)) {\n        await this.cancelRunScript(script, type, false);\n      }\n\n      const htmlContent = `\n        <html>\n        <head>\n          ${third_party}\n          ${libraries_text}\n          <script>\n            (function($) {\n              var original$ = $;\n              window.$ = function(selector, context){\n                context = context || window.parent.document;\n                return original$(selector, context);\n              }\n            })(jQuery);\n            SillyTavern = window.parent.SillyTavern.getContext();\n            TavernHelper = window.parent.TavernHelper;\n            for (const key in TavernHelper) {\n              window[key] = TavernHelper[key];\n            }\n          </script>\n          <script src=\"${script_url.get('iframe_client')}\"></script>\n        </head>\n        <body>\n          <script type=\"module\">\n            $(async () => {\n              try {\n                ${script.content}\n              } catch (error) {\n                console.error('脚本执行错误:', error);\n              }\n            });\n          </script>\n        </body>\n        </html>\n      `;\n\n      const blob = new Blob([htmlContent], { type: 'text/html' });\n      const url = URL.createObjectURL(blob);\n\n      const $iframe = $('<iframe>', {\n        style: 'display: none;',\n        id: `tavern-helper-script-${script.id}`,\n        src: url,\n      });\n\n      $iframe.on('load', () => {\n        console.info(`[Script]启用${typeName}脚本[\"${script.name}\"]`);\n        URL.revokeObjectURL(url); // 释放URL\n      });\n\n      $('body').append($iframe);\n    } catch (error) {\n      console.error(`[Script]${typeName}脚本启用失败:[\"${script.name}\"]`, error);\n      toastr.error(`${typeName}脚本启用失败:[\"${script.name}\"]`);\n    }\n  }\n\n  /**\n   * 取消运行单个脚本\n   * @param script 脚本\n   */\n  async cancelRunScript(script: Script, type: ScriptType, userInput: boolean = true) {\n    const typeName = type === ScriptType.GLOBAL ? '全局' : '局部';\n    const index =\n      type === ScriptType.GLOBAL\n        ? this.globalScripts.findIndex(s => s.id === script.id)\n        : this.characterScripts.findIndex(s => s.id === script.id);\n    if (index !== -1) {\n      if (userInput) {\n        script.enabled = false;\n        await scriptRepo.saveScript(script, type);\n      }\n      const iframeElement = $(`#tavern-helper-script-${script.id}`)[0] as IFrameElement;\n      if (iframeElement) {\n        await destroyIframe(iframeElement);\n        console.info(`[Script]${typeName}脚本[\"${script.name}\"] 已禁用`);\n      }\n    }\n  }\n\n  /**\n   * 渲染单个脚本到界面\n   * @param script 脚本\n   * @param type 类型\n   */\n  async renderScript(script: Script, type: ScriptType) {\n    const scriptHtml = await cloneTemplate(script, type);\n    if (type === ScriptType.GLOBAL) {\n      $('#global-script-list').prepend(scriptHtml);\n    } else {\n      $('#scoped-script-list').prepend(scriptHtml);\n    }\n  }\n\n  /**\n   * 打开脚本编辑器\n   * @param type 类型\n   * @param scriptId 脚本ID\n   */\n  async openScriptEditor(type: ScriptType, scriptId?: string) {\n    const $editorHtml = $(await renderExtensionTemplateAsync(`${templatePath}`, 'script_editor'));\n\n    let script: Script | undefined;\n    if (scriptId) {\n      if (type === ScriptType.GLOBAL) {\n        script = getSettingValue('script.scriptsRepository').find((s: Script) => s.id === scriptId);\n      } else {\n        script = characters[this_chid]?.data?.extensions?.TavernHelper_scripts.find((s: Script) => s.id === scriptId);\n      }\n\n      if (script) {\n        $editorHtml.find('#script-name-input').val(script.name);\n        $editorHtml.find('#script-content-textarea').val(script.content);\n        $editorHtml.find('#script-info-textarea').val(script.info);\n      }\n    }\n\n    const popupResult = await callGenericPopup($editorHtml, POPUP_TYPE.CONFIRM, '', {\n      okButton: '确认',\n      cancelButton: '取消',\n    });\n\n    if (popupResult) {\n      const scriptName = $editorHtml.find('#script-name-input').val() as string;\n      const scriptContent = $editorHtml.find('#script-content-textarea').val() as string;\n      const scriptInfo = $editorHtml.find('#script-info-textarea').val() as string;\n\n      if (scriptId && script) {\n        script.name = scriptName;\n        script.content = scriptContent;\n        script.info = scriptInfo;\n        $(`#${script.id}`).find('.script-item-name').text(script.name);\n        await scriptRepo.saveScript(script, type);\n        if (script.enabled) {\n          await scriptRepo.runScript(script, type, false);\n        }\n      } else {\n        const newScript = new Script({\n          id: uuidv4(),\n          name: scriptName,\n          content: scriptContent,\n          info: scriptInfo,\n          enabled: false,\n        });\n        await scriptRepo.addScript(newScript, type);\n      }\n    }\n  }\n\n  /**\n   * 删除脚本\n   * @param id 脚本ID\n   * @param type 类型\n   */\n  async deleteScript(id: string, type: ScriptType): Promise<void> {\n    try {\n      const array =\n        type === ScriptType.GLOBAL\n          ? getSettingValue('script.scriptsRepository') || []\n          : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n      const existingScriptIndex = array.findIndex((script: Script) => script.id === id);\n      if (existingScriptIndex !== -1) {\n        array.splice(existingScriptIndex, 1);\n\n        if (type === ScriptType.GLOBAL) {\n          $('#global-script-list').find(`#${id}`).remove();\n          await scriptRepo.saveGlobalScripts(array);\n        } else {\n          $('#scoped-script-list').find(`#${id}`).remove();\n          await scriptRepo.saveCharacterScripts(array);\n        }\n      } else {\n        throw new Error('[ScriptRepository] 脚本不存在');\n      }\n    } catch (error) {\n      console.error('[ScriptRepository] 删除脚本时发生错误:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 保存单个脚本到设置中\n   * @param script 脚本\n   * @param type 脚本类型\n   */\n  async saveScript(script: Script, type: ScriptType) {\n    const array =\n      type === ScriptType.GLOBAL\n        ? getSettingValue('script.scriptsRepository') || []\n        : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n    const index = array.findIndex((s: Script) => s.id === script.id);\n    if (index === -1) {\n      array.unshift(script);\n    } else {\n      array[index] = script;\n    }\n    if (type === ScriptType.GLOBAL) {\n      await saveSettingValue('script.scriptsRepository', array);\n    } else {\n      await scriptRepo.saveCharacterScripts(array);\n    }\n  }\n\n  /**\n   * 保存脚本数组到扩展数据\n   * @param array 脚本数组\n   */\n  async saveGlobalScripts(array: Script[]) {\n    await saveSettingValue('script.scriptsRepository', array);\n  }\n\n  /**\n   * 保存脚本数组到角色卡数据\n   * @param array 脚本数组\n   */\n  async saveCharacterScripts(array: Script[]) {\n    if (this_chid) {\n      await writeExtensionField(this_chid, 'TavernHelper_scripts', array);\n    } else {\n      toastr.error('保存失败，当前角色为空');\n    }\n  }\n  /**\n   * 使脚本库可拖拽调整顺序\n   * @param list 脚本库列表\n   * @param type 脚本类型\n   */\n  makeDraggable(list: JQuery<HTMLElement>, type: ScriptType) {\n    list.sortable({\n      delay: getSortableDelay(),\n      handle: '.drag-handle',\n      items: '.script-item',\n      stop: async () => {\n        const newOrder: string[] = [];\n\n        list.find('> .script-item').each(function (this: HTMLElement) {\n          const id = $(this).attr('id');\n          if (id) {\n            newOrder.push(id);\n          }\n        });\n\n        const array =\n          type === ScriptType.GLOBAL\n            ? getSettingValue('script.scriptsRepository') || []\n            : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n        const updatedScripts = newOrder\n          .map(id => {\n            return array.find((script: Script) => script.id === id);\n          })\n          .filter(Boolean);\n\n        if (type === ScriptType.GLOBAL) {\n          await scriptRepo.saveGlobalScripts(updatedScripts);\n        } else {\n          await scriptRepo.saveCharacterScripts(updatedScripts);\n        }\n      },\n    });\n  }\n  /**\n   * 移动到另一类仓库\n   */\n  async moveScriptToOtherType(script: Script, type: ScriptType) {\n    try {\n      const sourceArray =\n        type === ScriptType.GLOBAL\n          ? getSettingValue('script.scriptsRepository') || []\n          : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n      const sourceIndex = sourceArray.findIndex((s: Script) => s.id === script.id);\n      if (sourceIndex !== -1) {\n        sourceArray.splice(sourceIndex, 1);\n\n        if (type === ScriptType.GLOBAL) {\n          await scriptRepo.saveGlobalScripts(sourceArray);\n          $('#global-script-list').find(`#${script.id}`).remove();\n        } else {\n          await scriptRepo.saveCharacterScripts(sourceArray);\n          $('#scoped-script-list').find(`#${script.id}`).remove();\n        }\n\n        const targetType = type === ScriptType.GLOBAL ? ScriptType.CHARACTER : ScriptType.GLOBAL;\n        const targetArray =\n          targetType === ScriptType.GLOBAL\n            ? getSettingValue('script.scriptsRepository') || []\n            : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n        targetArray.unshift(script);\n\n        if (targetType === ScriptType.GLOBAL) {\n          await scriptRepo.saveGlobalScripts(targetArray);\n          await scriptRepo.renderScript(script, targetType);\n        } else {\n          await scriptRepo.saveCharacterScripts(targetArray);\n          await scriptRepo.renderScript(script, targetType);\n        }\n      } else {\n        throw new Error('[ScriptRepository] 脚本不存在');\n      }\n    } catch (error) {\n      console.error('[ScriptRepository] 移动脚本时发生错误:', error);\n      toastr.error('移动脚本失败');\n      throw error;\n    }\n  }\n}\n\nexport const scriptRepo = ScriptRepository.getInstance();\n\n/**\n * 克隆模板\n * @param script 脚本\n * @param type 类型,global 全局,scope 局部\n */\nexport async function cloneTemplate(script: Script, type: ScriptType.GLOBAL | ScriptType.CHARACTER) {\n  const scriptHtml = baseTemplate.clone();\n\n  scriptHtml.attr('id', script.id);\n\n  scriptHtml.find('.script-item-name').text(script.name);\n  scriptHtml.find('.script-storage-location').addClass(type === 'global' ? 'move-to-scoped' : 'move-to-global');\n  scriptHtml.find('.script-storage-location i').addClass(type === 'global' ? 'fa-arrow-down' : 'fa-arrow-up');\n\n  const toggleId = `toggle-script-${script.id}`;\n  scriptHtml.find('label').attr('for', toggleId);\n\n  scriptHtml\n    .find('.toggle-script')\n    .attr('id', toggleId)\n    .prop('checked', script.enabled)\n    .on('change', async function () {\n      const isChecked = !!$(this).prop('checked');\n\n      scriptHtml.find('.script-toggle-on').toggle(isChecked);\n      scriptHtml.find('.script-toggle-off').toggle(!isChecked);\n      script.enabled = isChecked;\n      await scriptRepo.saveScript(script, type);\n      // 不需要再保存一次\n      if (isChecked) {\n        await scriptRepo.runScript(script, type, false);\n      } else {\n        await scriptRepo.cancelRunScript(script, type, false);\n      }\n    });\n\n  scriptHtml\n    .find('.script-toggle-on')\n    .toggle(script.enabled)\n    .on('click', async function () {\n      $(this).hide();\n      scriptHtml.find('.script-toggle-off').show();\n    });\n\n  scriptHtml\n    .find('.script-toggle-off')\n    .toggle(!script.enabled)\n    .on('click', async function () {\n      $(this).hide();\n      scriptHtml.find('.script-toggle-on').show();\n    });\n\n  scriptHtml.find('.script-info').on('click', async function () {\n    const info = script.getScript().info;\n    await callGenericPopup(info, POPUP_TYPE.DISPLAY);\n  });\n\n  scriptHtml.find('.edit-script').on('click', () => scriptRepo.openScriptEditor(type, script.id));\n  scriptHtml.find('.script-storage-location').on('click', () => scriptRepo.moveScriptToOtherType(script, type));\n  scriptHtml.find('.export-script').on('click', async function () {\n    // eslint-disable-next-line no-control-regex\n    const fileName = `${script.name.replace(/[\\s.<>:\"/\\\\|?*\\x00-\\x1F\\x7F]/g, '_').toLowerCase()}.json`;\n    const { id, enabled, ...scriptData } = script;\n    const fileData = JSON.stringify(scriptData, null, 4);\n    download(fileData, fileName, 'application/json');\n  });\n  scriptHtml.find('.delete-script').on('click', async () => {\n    const confirm = await callGenericPopup('确定要删除这个脚本吗？', POPUP_TYPE.CONFIRM);\n\n    if (!confirm) {\n      return;\n    }\n\n    await scriptRepo.deleteScript(script.id, type);\n\n    scriptHtml.remove();\n  });\n  return scriptHtml;\n}\n\n/**\n * 克隆默认脚本模板\n * @param script 脚本\n * @param type 类型,global 全局,scope 局部\n */\nexport async function cloneDefaultScriptTemplate(script: Script) {\n  const scriptHtml = defaultScriptTemplate.clone();\n\n  scriptHtml.attr('id', script.id);\n\n  scriptHtml.find('.script-item-name').text(script.name);\n  scriptHtml.find('.script-info').on('click', () => callGenericPopup(script.info, POPUP_TYPE.DISPLAY));\n  scriptHtml.find('.add-script').on('click', async () => {\n    let target = 'global';\n    const template = $(await renderExtensionTemplateAsync(`${templatePath}`, 'script_import_target'));\n    template.find('#script-import-target-global').on('input', () => (target = 'global'));\n    template.find('#script-import-target-scoped').on('input', () => (target = 'scoped'));\n    await callGenericPopup(template, POPUP_TYPE.TEXT);\n\n    const convertedScript = new Script({\n      id: script.id,\n      name: script.name,\n      content: script.content,\n      info: script.info,\n      enabled: script.enabled,\n    });\n\n    const type = target === 'global' ? ScriptType.GLOBAL : ScriptType.CHARACTER;\n    // 检查是否已存在相同id的脚本\n    const existingScript = scriptRepo.getScriptById(convertedScript.id);\n    if (existingScript) {\n      const confirm = await callGenericPopup(`脚本 ${existingScript.name} 已存在，是否要覆盖？`, POPUP_TYPE.CONFIRM);\n      if (!confirm) {\n        return;\n      } else {\n        await scriptRepo.saveScript(convertedScript, type);\n      }\n    } else {\n      await scriptRepo.addScript(convertedScript, type);\n    }\n  });\n  return scriptHtml;\n}\n\n/**\n * 加载默认脚本库\n */\nasync function loadDefaultScriptsRepository() {\n  const defaultScriptList = $('<div id=\"default-script-list\" class=\"flex-container flexFlowColumn\"></div>');\n  const defaultScripts = await createDefaultScripts();\n  for (const script of defaultScripts) {\n    const template = await cloneDefaultScriptTemplate(script);\n    defaultScriptList.append(template);\n  }\n  await callGenericPopup(defaultScriptList, POPUP_TYPE.TEXT);\n}\n\n/**\n * 处理脚本启用开关的点击事件\n * @param type 类型,global 全局,scope 局部\n * @param enable 是否启用\n * @param userInput 是否由用户输入\n */\nasync function handleScriptToggle(type: ScriptType, enable: boolean, userInput: boolean = true) {\n  if (type === ScriptType.GLOBAL) {\n    if (userInput) {\n      await saveSettingValue('script.global_script_enabled', enable);\n    }\n    isGlobalScriptEnabled = enable;\n    if (enable) {\n      scriptRepo.runScriptsByType(ScriptType.GLOBAL);\n    } else {\n      scriptRepo.cancelRunScriptsByType(ScriptType.GLOBAL);\n    }\n  } else {\n    if (userInput) {\n      await saveSettingValue('script.scope_script_enabled', enable);\n    }\n    isScopedScriptEnabled = enable;\n    if (enable) {\n      scriptRepo.runScriptsByType(ScriptType.CHARACTER);\n    } else {\n      scriptRepo.cancelRunScriptsByType(ScriptType.CHARACTER);\n    }\n  }\n}\n\n/**\n * 导入脚本文件\n * @param {File} file 文件\n * @param {boolean} type 脚本类型\n */\nasync function onScriptImportFileChange(file: File, type: ScriptType) {\n  if (!file) {\n    toastr.error('未提供文件。');\n    return;\n  }\n\n  try {\n    const fileText = await getFileText(file);\n    const script = JSON.parse(fileText);\n    if (!script.name) {\n      throw new Error('未提供脚本名称。');\n    }\n\n    const newScript = new Script(script);\n    // 分配一个新的id\n    newScript.id = uuidv4();\n    newScript.enabled = false;\n\n    await scriptRepo.saveScript(newScript, type);\n    await scriptRepo.renderScript(newScript, type);\n    toastr.success(`脚本 \"${newScript.name}\" 导入成功。`);\n  } catch (error) {\n    console.error(error);\n    toastr.error('无效的JSON文件。');\n    return;\n  }\n}\n\n/**\n * 从脚本允许列表中删除角色\n * @param param0\n */\n\nexport async function purgeEmbeddedScripts({ character }) {\n  const avatar = character?.avatar;\n  const charactersWithScripts = getSettingValue('script.characters_with_scripts');\n  if (avatar && charactersWithScripts?.includes(avatar)) {\n    const index = charactersWithScripts.indexOf(avatar);\n    if (index !== -1) {\n      charactersWithScripts.splice(index, 1);\n      await saveSettingValue('script.characters_with_scripts', charactersWithScripts);\n    }\n  }\n}\n\n/**\n * 检查角色中的嵌入式脚本\n */\nexport async function checkEmbeddedScripts() {\n  const chid = this_chid;\n\n  if (chid !== undefined && !selected_group) {\n    const avatar = characters[chid]?.avatar;\n    const scripts = characters[chid]?.data?.extensions?.TavernHelper_scripts;\n\n    if (Array.isArray(scripts) && scripts.length > 0) {\n      const charactersWithScripts = getSettingValue('script.characters_with_scripts');\n      if (avatar && !charactersWithScripts.includes(avatar)) {\n        const characterScripts = characters[chid]?.data?.extensions?.TavernHelper_scripts;\n        if (Array.isArray(characterScripts) && characterScripts.length > 0) {\n          const scopedScripts = characterScripts.map((scriptData: Script) => new Script(scriptData));\n          scopedScripts.forEach(async (script: Script) => {\n            const scriptHtml = await cloneTemplate(script, ScriptType.CHARACTER);\n            $('#scoped-script-list').append(scriptHtml);\n          });\n\n          const template = await renderExtensionTemplateAsync(`${templatePath}`, 'script_allow_popup');\n          const result = await callGenericPopup(template, POPUP_TYPE.CONFIRM, '', { okButton: 'Yes' });\n\n          if (result) {\n            $('#scoped-script-list')\n              .find('.toggle-script')\n              .each(function () {\n                $(this).prop('checked', !$(this).prop('checked')).trigger('change');\n              });\n          }\n          charactersWithScripts.push(avatar);\n          await saveSettingValue('script.characters_with_scripts', charactersWithScripts);\n        }\n      }\n    }\n  }\n}\n\n/**\n * 清理所有脚本iframe\n */\nexport async function clearAllScriptsIframe() {\n  const $iframes = $('iframe[id^=\"tavern-helper-script-\"]');\n  for (const iframe of $iframes) {\n    await destroyIframe(iframe as IFrameElement);\n  }\n}\n\nexport async function initScriptRepository() {\n\n  isGlobalScriptEnabled = getSettingValue('script.global_script_enabled');\n  isScopedScriptEnabled = getSettingValue('script.scope_script_enabled');\n\n  handleScriptToggle(ScriptType.GLOBAL, isGlobalScriptEnabled, false);\n  handleScriptToggle(ScriptType.CHARACTER, isScopedScriptEnabled, false);\n\n  $('#global-script-enable-toggle')\n    .prop('checked', isGlobalScriptEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleScriptToggle(ScriptType.GLOBAL, event.target.checked, true));\n  $('#scoped-script-enable-toggle')\n    .prop('checked', isScopedScriptEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleScriptToggle(ScriptType.CHARACTER, event.target.checked, true));\n\n  $('#open-global-script-editor').on('click', () => scriptRepo.openScriptEditor(ScriptType.GLOBAL, undefined));\n  $('#open-scoped-script-editor').on('click', () => scriptRepo.openScriptEditor(ScriptType.CHARACTER, undefined));\n\n  $('#import-script-file').on('change', async function () {\n    let target = 'global';\n    const template = $(await renderExtensionTemplateAsync(`${templatePath}`, 'script_import_target'));\n    template.find('#script-import-target-global').on('input', () => (target = 'global'));\n    template.find('#script-import-target-scoped').on('input', () => (target = 'scoped'));\n    await callGenericPopup(template, POPUP_TYPE.TEXT);\n    const inputElement = this instanceof HTMLInputElement && this;\n    if (inputElement && inputElement.files) {\n      for (const file of inputElement.files) {\n        await onScriptImportFileChange(file, target === 'global' ? ScriptType.GLOBAL : ScriptType.CHARACTER);\n      }\n\n      inputElement.value = '';\n    }\n  });\n\n  $('#import-script').on('click', function () {\n    $('#import-script-file').trigger('click');\n  });\n\n  $('#default-script').on('click', loadDefaultScriptsRepository);\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"SlashCommandParser\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandParser_js_585e5f4d__.SlashCommandParser) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"Prompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__.Prompt), [\"PromptCollection\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__.PromptCollection) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"Stopwatch\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.Stopwatch), [\"debounce\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.debounce), [\"download\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.download), [\"ensureImageFormatSupported\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.ensureImageFormatSupported), [\"equalsIgnoreCaseAndAccents\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.equalsIgnoreCaseAndAccents), [\"getBase64Async\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getBase64Async), [\"getCharaFilename\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getCharaFilename), [\"getFileText\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getFileText), [\"getSortableDelay\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getSortableDelay), [\"setValueByPath\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.setValueByPath), [\"stringToRange\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.stringToRange), [\"uuidv4\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.uuidv4) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"selected_group\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_group_chats_js_79178f54__.selected_group) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"t\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_i18n_js_b4bbac2e__.t) });","// TODO: 导入 index 时使用 raw, 而不是分别使用 raw\nimport _impl from \"@/iframe_client/_impl?raw\"\nimport _multimap from \"@/iframe_client/_multimap?raw\"\nimport audio from \"@/iframe_client/audio?raw\"\nimport character from \"@/iframe_client/character?raw\"\nimport chat_message from \"@/iframe_client/chat_message?raw\"\nimport displayed_message from \"@/iframe_client/displayed_message?raw\"\nimport event from \"@/iframe_client/event?raw\"\nimport exported from \"@/iframe_client/exported?raw\"\nimport frontend_version from \"@/iframe_client/frontend_version?raw\"\nimport generate from \"@/iframe_client/generate?raw\"\nimport lorebook from \"@/iframe_client/lorebook?raw\"\nimport lorebook_entry from \"@/iframe_client/lorebook_entry?raw\"\nimport slash from \"@/iframe_client/slash?raw\"\nimport tavern_regex from \"@/iframe_client/tavern_regex?raw\"\nimport util from \"@/iframe_client/util?raw\"\nimport variables from \"@/iframe_client/variables?raw\"\n\nexport const iframe_client = [\n  _impl,\n  _multimap,\n  // audio,\n  // character,\n  // chat_message,\n  // displayed_message,\n  event,\n  // exported,\n  // frontend_version,\n  // generate,\n  // lorebook,\n  // lorebook_entry,\n  // slash,\n  // tavern_regex,\n  util,\n  // variables,\n].join('\\n');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(799);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","module","exports","y","x","__webpack_require__","d","__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__","DEFAULT_SCRIPT_IDS","AUTO_FIX_OPTIONS","AUTO_OPEN_SCOPE_REGEX","DEFAULT_SCRIPT_CONFIGS","name","scriptId","async","loadScriptContent","response","fetch","ok","Error","statusText","text","error","console","loadScriptInfo","createDefaultScript","config","id","content","info","enabled","createDefaultScripts","scripts","Object","values","script","push","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_js_aacea5c1__","libraries_text","initialize","libraries","JSON","stringify","map","library","code","join","destroy","getIframeName","event","window","source","frameElement","getLogPrefix","data","request","iframe_handlers","registerIframeHandler","handler","loadScripts","prefix","filterScriptFromRegex","scriptName","replace","startsWith","isEnabled","disabled","toName","enabled_global_regexes","filter","enabled_character_regexes","runOnEdit","replaceString","slashEventEmit","named_args","eventSource","emit","initSlashEventEmit","SlashCommandParser","addCommandObject","SlashCommand","fromProps","callback","returns","namedArgumentList","SlashCommandNamedArgument","description","typeList","ARGUMENT_TYPE","STRING","isRequired","acceptsMultiple","unnamedArgumentList","helpString","extensionName","extensionFolderPath","charsPath","getUserAvatarPath","user_avatar","getCharAvatarPath","thumbnailPath","getThumbnailUrl","characters","this_chid","avatar","targetAvatarImg","substring","lastIndexOf","getSettingValue","key","keys","split","value","extension_settings","k","saveSettingValue","setValueByPath","saveSettingsDebounced","__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__","fetchRawFileContentFromGitLab","filePath","encodedFilePath","encodeURIComponent","url","GITLAB_INSTANCE_URL","GITLAB_PROJECT_PATH","GITLAB_BRANCH","headers","method","errorBody","e","status","trim","parseVersionFromFile","parse","version","SyntaxError","message","String","compareSemVer","versionA","versionB","cleanVersionA","cleanVersionB","partsA","Number","partsB","i","numA","numB","isNaN","warn","getFileContentByPath","VERSION_FILE_PATH_GITLAB","VERSION_FILE_PATH","CURRENT_VERSION","LATEST_VERSION","runCheckWithPath","latestVersion","currentVersion","comparisonResult","addVersionUpdateElement","$","append","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommand_js_7714abe5__","predefinedMacros","Map","registerAllMacros","entries","MacrosParser","registerMacro","log","unregisterAllMacros","unregisterMacro","demacro","event_data","get_global_variable","variables","global","get_chat_variable","chat_metadata","get_message_variable","chat","undefined","swipe_id","at","forEach","messages","replaceAll","_substring","type","path","object","default_value","result","get_property_from_path","initializeMacroOnExtension","on","event_types","CHAT_COMPLETION_PROMPT_READY","destroyMacroOnExtension","removeListener","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__","Character","charData","constructor","characterData","this","find","allowAvatar","currentChar","filteredCharacters","characterByAvatar","char","matchingCharacters","length","findCharacterIndex","matchTypes","a","b","includes","exactAvatarMatch","findIndex","matchType","index","toLowerCase","getChatsFromFiles","isGroupChat","chat_dict","chat_promise","sort","localeCompare","reverse","file_name","Promise","res","_rej","ch_name","avatar_url","endpoint","requestBody","chatResponse","getRequestHeaders","body","cache","currentChat","json","shift","all","getCardData","getAvatarId","getRegexScripts","extensions","regex_scripts","getCharacterBook","character_book","getWorldName","world","getCharData","character","avatarId","getChatHistoryBrief","chats","getPastCharacterChats","getChatHistoryDetail","getChatMessages","range","option","range_demacroed","substituteParamsExtended","toString","rangeNumber","stringToRange","role","hide_state","start","end","process_message","message_id","chat_message","extra","system_message_types","NARRATOR","is_user","debug","is_system","swipes","mes","swipes_data","is_hidden","is_system_or_hidden","promises","chat_messages","setChatMessage","field_values","required_option","refresh","swipe_id_previous_index","swipe_id_to_set_index","swipe_id_to_use_index","should_update_swipe","swipe_info","add_swipes_if_required","message_demacroed","update_chat_message","reloadCurrentChat","mes_html","empty","messageFormatting","update_partial_html","saveChatConditional","formatAsDisplayedMessage","last_message_id","getLastMessageId","last_user_message_id","m","last_char_message_id","updateFrontendVersion","toastr","t","timeOut","isUpToDate","success","shortCommitHash","abortController","AbortController","fromOverrides","overrides","world_info_before","persona_description","char_description","char_personality","scenario","world_info_after","dialogue_examples","with_depth_entries","chat_history","author_note","prompts","fromInjectionPrompt","inject","position","before_prompt","in_chat","after_prompt","none","depth","scan","should_scan","dryRun","character_names_behavior","NONE","DEFAULT","COMPLETION","CONTENT","roleTypes","system","extension_prompt_roles","SYSTEM","user","USER","assistant","ASSISTANT","default_order","StreamingProcessor","generator","stoppingStrings","isStopped","isFinished","messageBuffer","nullStreamingGeneration","onProgressStreaming","isFinal","newText","slice","processedText","cleanUpMessage","charsToBalance","isOdd","countOccurrences","separator","trimEnd","fullText","onErrorStreaming","abort","unblockGeneration","generate","sw","Stopwatch","power_user","streaming_fps","timestamps","Date","now","tick","seconds","toFixed","err","iframeGenerate","user_input","use_preset","image","max_chat_history","order","stream","processedUserInput","oai_settings","send_if_empty","getRegexedString","regex_placement","USER_INPUT","isPrompt","processUserInput","substituteParams","baseData","getOverrideContent","identifier","isPromptFiltered","depthPromptText","baseChatReplace","depth_prompt","prompt","name1","name2","depthPromptDepth","depthPromptRole","getExtensionPromptRoleByName","setExtensionPrompt","extension_prompt_types","IN_CHAT","note","allowWIScan","handleCharDepthPrompt","authorNoteOverride","val","NOTE_MODULE_NAME","metadata_keys","setAuthorNotePrompt","INJECT_TAG","IN_PROMPT","persona_description_position","persona_description_positions","BOTTOM_AN","TOP_AN","shouldWIAddPrompt","originalAN","getContext","extensionPrompts","ANWithDesc","AT_DEPTH","persona_description_depth","persona_description_role","setPersonaDescriptionExtensionPrompt","rawDescription","personality","rawPersonality","persona","rawPersona","rawScenario","mesExamples","rawMesExamples","jailbreak","getCharacterCardFields","mesExamplesArray","parseMesExamples","oaiMessageExamples","setOpenAIMessageExamples","promptBias","getBiasStrings","promptConfig","Array","isArray","injects","positionMap","BEFORE_PROMPT","validatedInject","Boolean","handleInjectedPrompts","oaiMessages","setOpenAIMessages","coreChat","chatItem","regexType","AI_OUTPUT","regexedMessage","processChatHistory","userContent","worldInfo","chatForWI","world_info_include_names","this_max_context","getMaxContextSize","worldInfoString","worldInfoBefore","worldInfoAfter","worldInfoExamples","worldInfoDepth","getWorldInfoPrompt","clearInjectionPrompts","entry","joinedEntries","processWorldInfoDepth","finalWorldInfoBefore","finalWorldInfoAfter","processWorldInfo","removeTemporaryUserMessage","example","cleanedExample","wi_anchor_position","before","unshift","processMessageExamples","characterInfo","chatContext","prepareAndOverrideData","generate_data","originalScenario","scenarioOverride","userMessageTemp","convertFileToBase64","messageData","charDescription","charPersonality","Scenario","bias","quietPrompt","quietImage","cyclePrompt","systemPromptOverride","jailbreakPromptOverride","personaDescription","messageExamples","prepareOpenAIMessages","handlePresetPath","chatCompletion","ChatCompletion","setTokenBudget","openai_max_context","openai_max_tokens","reserveBudget","orderArray","reduce","acc","item","systemPrompts","promptCollection","PromptCollection","examplesCollection","MessageCollection","customPrompts","add","Prompt","system_prompt","characterPrompts","dialogue","dialogueIndex","indexOf","chatMessages","promptIndex","chatMessage","Message","createAsync","setName","convertSystemPromptsToCollection","addToChatCompletionInOrder","collection","has","get","fromPromptAsync","dialogue_examplesIndex","userInputMessage","chatHistoryIndex","userInputIndex","hasUserInput","hasChatHistory","isChatHistoryFiltered","userMessage","addImage","insertIndex","chatCollection","newChat","new_chat_prompt","newChatMessage","lastChatPrompt","emptyMessage","canAfford","userPrompt","customInjects","processedMessages","totalInsertedMessages","injectionPrompts","authorsNote","getPromptRole","injection_depth","injected","MAX_INJECTION_DEPTH","depthPrompts","roles","roleMessages","rolePrompts","injectIdx","splice","populationInjectionPrompts","imageInlining","isImageInliningSupported","chatPool","chatPrompt","promptManager","setupChatCompletionPromptManager","serviceSettings","names_behavior","messageName","isValidName","sanitizeName","freeBudget","processChatHistoryAndInject","squash_system_messages","squashSystemMessages","getChat","handleCustomPath","useStream","deactivateSendButtons","originalStreamSetting","stream_openai","streamingProcessor","sendOpenAIRequest","signal","preventDuplicates","choices","tool_plan","extractMessageFromData","handleResponse","generateResponse","examplesStr","block","activateSendButtons","showSwipeButtons","setGenerationProgress","flushEphemeralStoppingStrings","prefixes","some","File","getBase64Async","promptId","override","converted_config","should_stream","fromGenerateConfig","generateRaw","ordered_prompts","fromGenerateRawConfig","document","stopGeneration","getLorebookSettings","lorebook_settings","selected_global_lorebooks","world_info_settings","getWorldInfoSettings","world_info","globalSelect","scan_depth","world_info_depth","context_percentage","world_info_budget","budget_cap","world_info_budget_cap","min_activations","world_info_min_activations","max_depth","world_info_min_activations_depth_max","max_recursion_steps","world_info_max_recursion_steps","insertion_strategy","world_info_character_strategy","include_names","recursive","world_info_recursive","case_sensitive","world_info_case_sensitive","match_whole_words","world_info_match_whole_words","use_group_scoring","world_info_use_group_scoring","overflow_alert","world_info_overflow_alert","setLorebookSettings","settings","inexisting_lorebooks","lorebook","world_names","for_eachs","remove","selected_world_info","saveSettings","trigger","converted_value","evenly","character_first","global_first","prop","_","field","assignPartialLorebookSettings","getCharLorebooks","selected_group","filename","books","primary","additional","extraCharLore","charLore","extraBooks","setCurrentCharLorebooks","lorebooks","getCharaFilename","previous_primary","html","form_data","FormData","raw_file","converted_file","ensureImageFormatSupported","set","delete","chid","alternate_greetings","getOneCharacter","replaceWith","clone","attr","editCurrentCharacter","setWorldInfoButtonClass","char_lore","existing_char_index","assign","saveCharacterDebounced","getLorebooks","deleteLorebook","deleteWorldInfo","createLorebook","createNewWorldInfo","interactive","toLorebookEntry","uid","display_index","displayIndex","comment","disable","constant","vectorized","probability","logic","selectiveLogic","keysecondary","scanDepth","caseSensitive","matchWholeWords","useGroupScoring","automation_id","automationId","exclude_recursion","excludeRecursion","prevent_recursion","preventRecursion","delay_until_recursion","delayUntilRecursion","group","group_prioritized","groupOverride","group_weight","groupWeight","sticky","cooldown","delay","fromPartialLorebookEntry","transformers","before_character_definition","after_character_definition","before_example_messages","after_example_messages","before_author_note","after_author_note","at_depth_as_system","at_depth_as_user","at_depth_as_assistant","and_any","and_all","not_any","not_all","assignFieldValuesToWiEntry","wi_entry","original_wi_mapped_key","originalWIDataKeyMap","setWIOriginalDataValue","reloadEditorDebounced","debounce","file","currentIndex","selectedIndex","getLorebookEntries","loadWorldInfo","every","expected_value","entry_value","setLorebookEntries","saveWorldInfo","createLorebookEntry","createWorldInfoEntry","partial_lorebook_entry","deleteLorebookEntry","lorebook_uid","deleted","deleteWIOriginalDataValue","triggerSlash","command","executeSlashCommandsWithOptions","isError","errorMessage","pipe","triggerSlashWithResult","getCharacterRegexes","toTavernRegex","regex_script_data","scope","script_name","run_on_edit","find_regex","findRegex","replace_string","placement","ai_output","slash_command","SLASH_COMMAND","WORLD_INFO","destination","display","markdownOnly","promptOnly","min_depth","minDepth","maxDepth","fromTavernRegex","tavern_regex","trimStrings","substituteRegex","isCharacterTavernRegexesEnabled","character_allowed_regex","getTavernRegexes","enable_state","regexes","regex","replaceTavernRegexes","emptied_regexes","global_regexes","character_regexes","writeExtensionField","substitudeMacros","text_demacroed","getVariables","metadata","getVariablesByType","replaceVariables","saveMetadataDebounced","initTavernHelperObject","globalThis","TavernHelper","audioEnable","audioImport","audioMode","audioPlay","audioSelect","__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__","__WEBPACK_EXTERNAL_MODULE__scripts_RossAscends_mods_js_224b6398__","isAudioEnabled","list_BGMS","list_ambients","bgmEnded","ambientEnded","isExtensionEnabled","templatePath","defaultAudioSettings","audio_enabled","bgm_enabled","ambient_enabled","bgm_mode","bgm_muted","bgm_volume","bgm_selected","bgm_current_time","ambient_mode","ambient_muted","ambient_volume","ambient_selected","ambient_current_time","audio_cooldown","updateAudio","isUserInput","audioEnded","audioSelector","audio_url","playlist","getAudioUrl","mode","currentFile","filteredPlaylist","Math","floor","random","getNextFileByMode","audio","cleanAudioSrc","src","cleanAudioUrl","decodeURIComponent","load","resolve","canPlayHandler","removeEventListener","readyState","HTMLMediaElement","HAVE_ENOUGH_DATA","addEventListener","playAudio","audioUrlWithCacheBusting","originalUrl","cacheBuster","getTime","getAudioUrlWithCacheBusting","selectElement","updateAudioSelect","audioList","selectedSetting","fileLabel","Option","toUpperCase","typeKey","toggleAudioControls","shouldEnable","onAudioEnabledClick","pause","initAudioEventListeners","onVolumeSliderWheelEvent","slider","preventDefault","stopPropagation","delta","deltaY","newVal","handleLongPress","volumeControlId","iconId","$volumeControl","$icon","pressTimer","isMobile","setTimeout","css","clearTimeout","is","target","refreshAudioResources","openUrlManagerPopup","urlManager","renderExtensionTemplateAsync","prepend","savedAudioUrl","urlTemplate","urlValue","addClass","updatedUrls","newUrlOrder","renderUrl","container","urlHtml","fileName","parts","currentUrl","inputUrl","callGenericPopup","POPUP_TYPE","INPUT","newFileName","pop","newId","CONFIRM","newUrls","input","urlArray","from","Set","openUrlImportPopup","removeClass","sortable","getSortableDelay","handle","stop","each","newUrl","okButton","cancelButton","newUrlList","currentBgmUrl","currentAmbientUrl","onEnabledClick","userInput","enable","bgmUrl","ambientUrl","bgmAudioElement","play","ambientAudioElement","audioElement","playPauseIcon","selectedAudio","onAudioModeClick","modes","icon","nextModeIndex","onAudioSelectChange","onAudioCooldownInput","onAudioVolumeChange","onAudioMuteClick","toggleClass","togglePlayPause","paused","initAudioStyles","hide","$audioElement","$progressSlider","duration","progressPercent","currentTime","cooldownBGM","remainingTime","isFadingOut","fadeStep","volume","fadeOutInterval","setInterval","max","clearInterval","targetVolume","fadeInInterval","min","initializeProgressBar","initAudioComponents","checked","audioTypes","events","selector","bindTypeEvents","volumeSlider","passive","urlManagerMap","bgm","ambient","bgmAudio","ambientAudio","togglePlayPauseIcon","iconSelector","CHAT_CHANGED","$bgmPlayer","$ambientPlayer","handleChatChanged","loadScriptLibrary","runScriptsByType","GLOBAL","CHARACTER","handleCharacterDeleted","handlePartialRender","mesId","mesIdNumber","parseInt","handleMessageDeleted","handleVariableUpdated","initExtensionMainPanel","handleExtensionToggle","currentTarget","userAction","next","CHARACTER_DELETED","eventType","MESSAGE_DELETED","__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__","__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__","isCharacterTavernRegexEnabled","getGlobalRegexes","registerIframeTavernRegexHandler","script_url","URL","createObjectURL","Blob","createObjectURLFromScript","revokeObjectURL","handleIframe","stack","postMessage","targetOrigin","iframe_name","createCharacterHandler","defaultValue","logMessage","displayName","withCharacter","logText","then","resolvedResult","catch","_event","_result","registerIframeCharacterHandler","state","isRenderEnabled","isRenderingOptimizeEnabled","renderDepth","tampermonkeyMessageListener","iframeResizeObservers","originalHighlightElement","hljs","highlightElement","RENDER_MODES","FULL","PARTIAL","partialRenderEvents","CHARACTER_MESSAGE_RENDERED","USER_MESSAGE_RENDERED","MESSAGE_UPDATED","MESSAGE_SWIPED","defaultIframeSettings","render_enabled","auto_enable_character_regex","auto_disable_incompatible_options","tampermonkey_compatibility","render_depth","render_optimize","clearAndRenderAllIframes","clearAllIframes","renderAllIframes","renderMessagesInIframes","renderPartialIframes","processDepth","totalMessages","viewport_adjust_script","tampermonkey_script","processVhUnits","htmlContent","test","viewportHeight","innerHeight","expression","specificMesId","context","depthLimit","depthLimitedMessageIds","messagesToRenderIds","messagesToCancelIds","messageId","$iframes","toArray","iframe","destroyIframe","updateMessageBlock","addToggleButtonsToMessage","renderedMessages","$messageElement","$codeElements","iframeCounter","extractedText","extractTextFromCode","addCodeToggleButtons","disableLoading","hasMinVh","$wrapper","width","$iframe","srcdoc","loading","margin","border","loadingTimeout","$loadingOverlay","$loadingText","srcdocContent","observeIframeContent","parent","contentWindow","newHeight","emitAndWait","off","docBody","iframeId","resizeObserver","adjustIframeHeight","ResizeObserver","observe","cleanup","disconnect","iframeDoc","contents","$clone","removeData","prototype","hasOwnProperty","call","arr","fill","gc","handleTampermonkeyMessages","buttonName","$sendTextarea","jQuery","$sendButton","doc","bodyHeight","offsetHeight","htmlHeight","documentElement","currentHeight","parseFloat","abs","codeElement","textContent","nodeType","Node","TEXT_NODE","ELEMENT_NODE","renderMessageAfterDelete","maxRemainId","hasCodeBlock","onTampermonkeyCompatibilityChange","currentPlayingIframeId","newIframeId","createGlobalAudioManager","$mesText","$pre","$toggleButton","show","addCodeToggleButtonsToAllMessages","$chat","addRenderingOptimizeSettings","styleId","style","getElementById","createElement","setAttribute","head","appendChild","innerHTML","injectCodeBlockHideStyles","removeRenderingOptimizeSettings","removeCodeBlockHideStyles","handleRenderingOptimizationToggle","handleRenderEnableToggle","not","initIframePanel","warning","onDepthInput","buttonHtml","addRenderQuickButton","tampermonkeyEnabled","styleSheet","injectLoadingStyles","__WEBPACK_EXTERNAL_MODULE__scripts_tags_js_fe93ed66__","findChar","insensitive","filteredByTags","preferCurrentChar","quiet","matches","equalsIgnoreCaseAndAccents","charTags","getTagsList","tagName","currentChars","groups","members","member","preferredCharSearch","Multimap","size_","operator","iterable","put","size","create","putAll","arg1","arg2","pushed","TypeError","hasEntry","deleteEntry","current","clear","self","gen","thisArg","Symbol","iterator","asMap","ret","toStringTag","partition","array","predicate","pass","fail","extract","latest_set_variables_message_id","registerIframeVariableHandler","latest_message_id","tempVariables","currentVariables","newValue","clearTempVariables","shouldUpdateVariables","eventMesId","newVariables","updateVariables","checkVariablesEvents","__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__","__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__","__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__","script_map","load_promises","load_promise","third_party","onload","makeScriptIframe","allSettled","load_events","initializeCharacterLevelOnExtension","makeFirst","destroyCharacterLevelOnExtension","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__","args","iconMap","repeat","single","existingUrls","mergedUrls","selectedUrl","initAudioSlashCommands","enumList","SlashCommandEnumValue","enumTypes","enum","enumIcons","SlashCommandArgument","BOOLEAN","commonEnumProviders","boolean","loop","shuffle","redo","__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__","defaultSettings","enabled_extension","render","handleSettingPageChange","handleVersionUpdate","windowHtml","defaultScriptSettings","global_script_enabled","scope_script_enabled","scriptsRepository","characters_with_scripts","baseTemplate","moveTo","faIcon","defaultScriptTemplate","isGlobalScriptEnabled","isScopedScriptEnabled","Script","uuidv4","hasName","getScript","s","ScriptType","ScriptRepository","static","globalScripts","characterScripts","activeScripts","getInstance","instance","TavernHelper_scripts","getScriptById","addScript","scriptRepo","saveScript","renderScript","globalScriptArray","scopedScriptArray","scriptData","scriptHtml","cloneTemplate","makeDraggable","enabledScripts","runScript","cancelRunScriptsByType","disabledScripts","cancelRunScript","typeName","blob","iframeElement","openScriptEditor","$editorHtml","scriptContent","scriptInfo","newScript","deleteScript","existingScriptIndex","saveGlobalScripts","saveCharacterScripts","list","items","newOrder","updatedScripts","moveScriptToOtherType","sourceArray","sourceIndex","targetType","targetArray","toggleId","isChecked","toggle","DISPLAY","fileData","download","cloneDefaultScriptTemplate","template","TEXT","convertedScript","existingScript","loadDefaultScriptsRepository","defaultScriptList","defaultScripts","handleScriptToggle","onScriptImportFileChange","fileText","getFileText","purgeEmbeddedScripts","charactersWithScripts","checkEmbeddedScripts","clearAllScriptsIframe","initScriptRepository","inputElement","HTMLInputElement","files","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandParser_js_585e5f4d__","__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__","__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__","__WEBPACK_EXTERNAL_MODULE__scripts_group_chats_js_79178f54__","__WEBPACK_EXTERNAL_MODULE__scripts_i18n_js_b4bbac2e__","iframe_client","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","queue","fn","r","hasAwait","currentDeps","outerResolve","reject","depQueues","promise","rej","deps","dep","obj","wrapDeps","getResult","fnQueue","q","definition","o","defineProperty","enumerable","__webpack_exports__"],"sourceRoot":""}