{"version":3,"file":"index.js","mappings":"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","sources":["webpack://JS-Slash-Runner/webpack/runtime/async module","webpack://JS-Slash-Runner/external module \"../../../../../scripts/power-user.js\"","webpack://JS-Slash-Runner/./src/component/script_repository/default_scripts/index.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands.js\"","webpack://JS-Slash-Runner/./src/component/character_level/library.ts","webpack://JS-Slash-Runner/./src/util/render_markdown.ts","webpack://JS-Slash-Runner/./src/iframe_server/_impl.ts","webpack://JS-Slash-Runner/./src/util/load_script.ts","webpack://JS-Slash-Runner/./src/slash_command/event.ts","webpack://JS-Slash-Runner/./src/function/frontend_version.ts","webpack://JS-Slash-Runner/./src/util/extension_variables.ts","webpack://JS-Slash-Runner/./src/third_party.html","webpack://JS-Slash-Runner/external module \"../../../../../scripts/popup.js\"","webpack://JS-Slash-Runner/./src/util/check_update.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommand.js\"","webpack://JS-Slash-Runner/./src/component/macro.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandArgument.js\"","webpack://JS-Slash-Runner/external module \"../../../../../script.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/RossAscends-mods.js\"","webpack://JS-Slash-Runner/./src/component/audio/index.ts","webpack://JS-Slash-Runner/./src/component/main.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/macros.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/extensions.js\"","webpack://JS-Slash-Runner/./src/iframe_server/tavern_regex.ts","webpack://JS-Slash-Runner/./src/script_url.ts","webpack://JS-Slash-Runner/./src/iframe_server/character.ts","webpack://JS-Slash-Runner/./src/iframe_server/generate.ts","webpack://JS-Slash-Runner/./src/iframe_server/lorebook_entry.ts","webpack://JS-Slash-Runner/./src/iframe_server/index.ts","webpack://JS-Slash-Runner/./src/iframe_server/chat_message.ts","webpack://JS-Slash-Runner/./src/iframe_server/displayed_message.ts","webpack://JS-Slash-Runner/./src/iframe_server/frontend_version.ts","webpack://JS-Slash-Runner/./src/iframe_server/lorebook.ts","webpack://JS-Slash-Runner/./src/iframe_server/slash.ts","webpack://JS-Slash-Runner/./src/iframe_server/util.ts","webpack://JS-Slash-Runner/./src/iframe_server/audio.ts","webpack://JS-Slash-Runner/./src/function/character.ts","webpack://JS-Slash-Runner/./src/function/chat_message.ts","webpack://JS-Slash-Runner/./src/function/displayed_message.ts","webpack://JS-Slash-Runner/./src/function/generate.ts","webpack://JS-Slash-Runner/./src/function/lorebook.ts","webpack://JS-Slash-Runner/./src/function/lorebook_entry.ts","webpack://JS-Slash-Runner/./src/function/slash.ts","webpack://JS-Slash-Runner/./src/function/tavern_regex.ts","webpack://JS-Slash-Runner/./src/function/util.ts","webpack://JS-Slash-Runner/./src/function/variables.ts","webpack://JS-Slash-Runner/./src/function/index.ts","webpack://JS-Slash-Runner/./src/component/message_iframe.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/tags.js\"","webpack://JS-Slash-Runner/./src/compatibility.ts","webpack://JS-Slash-Runner/./src/util/multimap.ts","webpack://JS-Slash-Runner/./src/util/helper.ts","webpack://JS-Slash-Runner/./src/iframe_server/variables.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/extensions/regex/engine.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/openai.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/world-info.js\"","webpack://JS-Slash-Runner/./src/component/character_level/script_iframe.ts","webpack://JS-Slash-Runner/./src/component/character_level/index.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandCommonEnumsProvider.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandEnumValue.js\"","webpack://JS-Slash-Runner/./src/slash_command/audio.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/authors-note.js\"","webpack://JS-Slash-Runner/./src/index.ts","webpack://JS-Slash-Runner/./src/component/script_repository/index.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandParser.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/PromptManager.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/utils.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/group-chats.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/i18n.js\"","webpack://JS-Slash-Runner/./src/iframe_client/index.ts","webpack://JS-Slash-Runner/webpack/bootstrap","webpack://JS-Slash-Runner/webpack/runtime/define property getters","webpack://JS-Slash-Runner/webpack/runtime/hasOwnProperty shorthand","webpack://JS-Slash-Runner/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"flushEphemeralStoppingStrings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.flushEphemeralStoppingStrings), [\"persona_description_positions\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.persona_description_positions), [\"power_user\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.power_user) });","/**\n * 默认脚本ID常量\n */\nexport const DEFAULT_SCRIPT_IDS = {\n  AUTO_FIX_OPTIONS: 'default_auto_fix_options',\n  AUTO_OPEN_SCOPE_REGEX: 'default_auto_open_scope_regex',\n};\n\n/**\n * 默认脚本配置\n * 包含每个默认脚本的基本信息\n */\nexport const DEFAULT_SCRIPT_CONFIGS = {\n  [DEFAULT_SCRIPT_IDS.AUTO_FIX_OPTIONS]: {\n    name: '自动关闭前端卡不兼容选项',\n    scriptId: 'auto_fix_options',\n  },\n  [DEFAULT_SCRIPT_IDS.AUTO_OPEN_SCOPE_REGEX]: {\n    name: '自动开启角色卡局部正则',\n    scriptId: 'auto_open_scope_regex',\n  },\n};\n\n/**\n * 加载脚本内容\n * @param scriptId 脚本ID\n * @returns 脚本内容\n */\nexport async function loadScriptContent(scriptId: string): Promise<string> {\n  try {\n    const response = await fetch(\n      `/scripts/extensions/third-party/JS-Slash-Runner/src/component/script_repository/default_scripts/${scriptId}.js`,\n    );\n    if (!response.ok) {\n      throw new Error(`加载默认脚本内容失败: ${response.statusText}`);\n    }\n    return await response.text();\n  } catch (error) {\n    console.error(`加载默认脚本内容失败: ${scriptId}:`, error);\n    return '';\n  }\n}\n\n/**\n * 加载脚本信息\n * @param scriptId 脚本ID\n * @returns 脚本信息HTML\n */\nexport async function loadScriptInfo(scriptId: string): Promise<string> {\n  try {\n    const response = await fetch(\n      `/scripts/extensions/third-party/JS-Slash-Runner/src/component/script_repository/default_scripts/${scriptId}.html`,\n    );\n    if (!response.ok) {\n      throw new Error(`加载默认脚本信息失败: ${response.statusText}`);\n    }\n    return await response.text();\n  } catch (error) {\n    console.error(`加载默认脚本信息失败: ${scriptId}:`, error);\n    return '';\n  }\n}\n\n/**\n * 创建单个默认脚本\n * @param scriptId 脚本ID\n * @returns 脚本对象\n */\nexport async function createDefaultScript(scriptId: string): Promise<any> {\n  const config = DEFAULT_SCRIPT_CONFIGS[scriptId];\n  if (!config) {\n    console.error(`未找到脚本配置: ${scriptId}`);\n    return null;\n  }\n\n  try {\n    return {\n      id: scriptId,\n      name: config.name,\n      content: await loadScriptContent(config.scriptId),\n      info: await loadScriptInfo(config.scriptId),\n      enabled: false,\n    };\n  } catch (error) {\n    console.error(`创建默认脚本失败: ${scriptId}:`, error);\n    return null;\n  }\n}\n\n/**\n * 创建自动关闭前端卡不兼容选项脚本\n * @returns 脚本对象\n */\nexport async function createAutoFixOptionsScript(): Promise<any> {\n  return (await createDefaultScript(DEFAULT_SCRIPT_IDS.AUTO_FIX_OPTIONS)) || {};\n}\n\n/**\n * 创建自动开启角色卡局部正则脚本\n * @returns 脚本对象\n */\nexport async function createAutoOpenScopeRegexScript(): Promise<any> {\n  return (await createDefaultScript(DEFAULT_SCRIPT_IDS.AUTO_OPEN_SCOPE_REGEX)) || {};\n}\n\n/**\n * 创建所有默认脚本\n * @returns 默认脚本数组\n */\nexport async function createDefaultScripts(): Promise<any[]> {\n  const scripts: any[] = [];\n\n  for (const scriptId of Object.values(DEFAULT_SCRIPT_IDS)) {\n    const script = await createDefaultScript(scriptId);\n    if (script) {\n      scripts.push(script);\n    }\n  }\n\n  return scripts;\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"executeSlashCommandsWithOptions\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_js_aacea5c1__.executeSlashCommandsWithOptions) });","import { loadScripts } from '@/util/load_script';\n\nexport let libraries_text: string = '';\n\nexport function initialize(): void {\n  const libraries = loadScripts('库-');\n  console.info(`[Library] 加载库: ${JSON.stringify(libraries.map(library => library.name))}`);\n\n  libraries_text = libraries.map(script => script.code).join('\\n');\n}\n\nexport function destroy(): void {\n  libraries_text = '';\n}\n","import { reloadMarkdownProcessor } from '@sillytavern/script';\r\n\r\nexport function renderMarkdown(markdown: string) {\r\n  const converter = reloadMarkdownProcessor();\r\n  let htmlText = converter.makeHtml(markdown);\r\n  htmlText = `<div style=\"text-align: left;\">${htmlText}</div>`;\r\n  return htmlText;\r\n}\r\n","export interface IframeMessage {\n  request: string;\n  uid: number;\n}\n\nexport function getIframeName<T extends IframeMessage>(event: MessageEvent<T>): string {\n  const window = event.source as Window;\n  return window.frameElement?.id as string;\n}\n\nexport function getLogPrefix<T extends IframeMessage>(event: MessageEvent<T>): string {\n  return `${event.data.request}(${getIframeName(event)}) `;\n}\n\ntype IframeHandlers = {\n  [request: string]: (event: MessageEvent<any>) => Promise<any | void>;\n};\n\nexport const iframe_handlers: IframeHandlers = {};\n\nexport function registerIframeHandler<T extends IframeMessage>(\n  request: string,\n  handler: (event: MessageEvent<T>) => Promise<any | void>,\n) {\n  iframe_handlers[request] = handler;\n}","import { getCharacterRegexes, getGlobalRegexes, isCharacterTavernRegexEnabled } from '@/iframe_server/tavern_regex';\n\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\n\nexport interface Script {\n  name: string;\n  code: string;\n}\n\nexport function loadScripts(prefix: string): Script[] {\n  const filterScriptFromRegex = (script: RegexScriptData) =>\n    script.scriptName.replace(/^【.*】/, '').startsWith(prefix);\n  const isEnabled = (script: RegexScriptData) => !script.disabled;\n  const toName = (script: RegexScriptData) => script.scriptName.replace(/^【.*】/, '').replace(prefix, '');\n\n  let scripts: RegexScriptData[] = [];\n\n  const enabled_global_regexes = getGlobalRegexes().filter(filterScriptFromRegex).filter(isEnabled);\n  scripts.push(...enabled_global_regexes);\n\n  const enabled_character_regexes = getCharacterRegexes()\n    .filter(filterScriptFromRegex)\n    .filter(isEnabled)\n    .filter(script => (isCharacterTavernRegexEnabled() ? true : script.runOnEdit));\n  scripts.push(...enabled_character_regexes);\n\n  const to_script = (script: RegexScriptData) => ({ name: toName(script), code: script.replaceString });\n  return scripts.map(to_script);\n}\n\nexport function is_equal_scripts(lhs: Script[], rhs: Script[]): boolean {\n  if (lhs === rhs) {\n    return true;\n  }\n  if (lhs == null || rhs == null) {\n    return false;\n  }\n  if (lhs.length !== rhs.length) {\n    return false;\n  }\n\n  for (let i = 0; i < lhs.length; i++) {\n    if (lhs[i].name !== rhs[i].name && lhs[i].code !== rhs[i].code) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { eventSource } from '@sillytavern/script';\nimport { SlashCommand } from '@sillytavern/scripts/slash-commands/SlashCommand';\nimport { ARGUMENT_TYPE, SlashCommandNamedArgument } from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\nexport async function slashEventEmit(named_args: any): Promise<any> {\n  const event: string = named_args.event;\n  const data: string[] = named_args.data ?? [];\n\n  eventSource.emit(event, ...data);\n\n  console.info(`[Event][/event-emit] 发送 '${event}' 事件, 携带数据: ${JSON.stringify(data)}`);\n\n  return event;\n}\n\nexport function initSlashEventEmit() {\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'event-emit',\n      callback: slashEventEmit,\n      returns: '发送的事件名称',\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'event',\n          description: '事件名称',\n          typeList: [ARGUMENT_TYPE.STRING],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'data',\n          description: '要传输的数据',\n          typeList: [ARGUMENT_TYPE.STRING],\n          isRequired: false,\n          acceptsMultiple: true,\n        }),\n      ],\n      unnamedArgumentList: [],\n      helpString: `\n    <div>\n        发送 \\`event\\` 事件, 同时可以发送一些数据.\n        所有正在监听该消息频道的 listener 函数都会自动运行, 并能用函数参数接收发送来的数据.\n        由于酒馆 STScript 输入方式的局限性, 所有数据将会以字符串 string 类型接收; 如果需要 number 等类型, 请自行转换.\n    </div>\n    <div>\n        <strong>Example:</strong>\n        <ul>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"读档\"</code></pre>\n            </li>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"存档\" data={{getvar::数据}} data=8 data=你好 {{user}}</code></pre>\n            </li>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"随便什么名称\" data=\"这是一个 数据\" data={{user}}</code></pre>\n            </li>\n        </ul>\n    </div>\n  `,\n    }),\n  );\n}\n","import { getRequestHeaders } from '@sillytavern/script';\nimport { t } from '@sillytavern/scripts/i18n';\n\nimport { extensionName } from '@/util/extension_variables';\n\n\n/**\n * 更新前端助手\n */\nexport async function updateFrontendVersion() {\n  const response = await fetch('/api/extensions/update', {\n    method: 'POST',\n    headers: getRequestHeaders(),\n    body: JSON.stringify({ extensionName: extensionName }),\n  });\n  if (!response.ok) {\n    const text = await response.text();\n    // @ts-ignore\n    toastr.error(text || response.statusText, t`更新前端助手失败`, { timeOut: 5000 });\n    console.error(`更新前端助手失败: ${text}`);\n    return false;\n  }\n\n  const data = await response.json();\n  if (data.isUpToDate) {\n    console.info(`前端助手已是最新版本, 无需更新`);\n  } else {\n    // @ts-ignore\n    toastr.success(t`成功更新前端助手为 ${data.shortCommitHash}`, t`请刷新页面`);\n    console.info(`成功更新前端助手为  ${data.shortCommitHash}, 请刷新页面`);\n  }\n  return true;\n}\n","import {\n  characters,\n  getThumbnailUrl,\n  this_chid,\n  user_avatar,\n  saveSettingsDebounced,\n} from '@sillytavern/script';\nimport { extension_settings } from '@sillytavern/scripts/extensions';\nimport { setValueByPath } from '@sillytavern/scripts/utils';\n\nexport const extensionName = 'JS-Slash-Runner';\n//TODO: 修改名称\nexport const extensionFolderPath = `third-party/${extensionName}`;\n\n// 获取头像原图\nexport const charsPath = '/characters/';\nexport const getUserAvatarPath = () => `./User Avatars/${user_avatar}`;\nexport const getCharAvatarPath = () => {\n  //@ts-ignore\n  const thumbnailPath = getThumbnailUrl('avatar', characters[this_chid].avatar);\n  const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n  return charsPath + targetAvatarImg;\n};\n\n/**\n * 获取扩展设置变量的值\n * @returns 设置变量的值\n */\nexport function getSettingValue(key: string) {\n  const keys = key.split('.');\n  //@ts-ignore\n  let value = extension_settings[extensionName];\n\n  for (const k of keys) {\n    if (value === undefined || value === null) {\n      return undefined;\n    }\n    value = value[k];\n  }\n\n  return value;\n}\n\n/**\n * 保存扩展设置变量的值\n * @param key 设置变量的键\n * @param value 设置变量的值\n */\nexport async function saveSettingValue(key: string, value: any) {\n  //@ts-ignore\n  setValueByPath(extension_settings[extensionName], key, value);\n  await saveSettingsDebounced();\n}\n","// Module\nvar code = `<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css\" integrity=\"sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"/> <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/themes/base/jquery-ui.min.css\" integrity=\"sha512-TFee0335YRJoyiqz8hA8KV3P0tXa5CpRBSoM0Wnkn7JoJx1kaq1yXL/rb8YFpWXkMOjRcv5txv+C6UluttluCQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"/> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js\" integrity=\"sha512-Qlv6VSKh1gDKGoJbnyA5RMXYcvnpIqhO++MhIM2fStMcGT9i2T//tSwYFlcyoRRDcDZ+TYHpH8azBBCyhpSeqw==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\" integrity=\"sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js\" integrity=\"sha512-MSOo1aY+3pXCOCdGAYoBZ6YGI0aragoQsg1mKKBHXCYPIWxamwOE7Drh+N5CPgGI5SA9IEKJiPjdfqWFWmZtRA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js\" integrity=\"sha512-WFN04846sdKMIP5LKNphMaWzU7YpMyCU245etK3g/2ARYbPK9Ub18eG+ljU96qKRCWh+quCY7yefSmlkQw1ANQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/yamljs/0.3.0/yaml.min.js\" integrity=\"sha512-f/K0Q5lZ1SrdNdjc2BO2I5kTx8E5Uw1EU3PhSUB9fYPohap5rPWEmQRCjtpDxNmQB4/+MMI/Cf+nvh1VSiwrTA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> `;\n// Exports\nexport default code;","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"POPUP_TYPE\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__.POPUP_TYPE), [\"callGenericPopup\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__.callGenericPopup) });","import { POPUP_TYPE, callGenericPopup } from '@sillytavern/scripts/popup';\r\n\r\nimport { updateFrontendVersion } from '../function/frontend_version';\r\nimport { extensionFolderPath } from './extension_variables';\r\nimport { renderMarkdown } from './render_markdown';\r\n\r\nconst GITLAB_INSTANCE_URL = 'gitlab.com';\r\nconst GITLAB_PROJECT_PATH = 'novi028/JS-Slash-Runner';\r\nconst GITLAB_BRANCH = '3.0.0';\r\nconst VERSION_FILE_PATH_GITLAB = 'manifest.json';\r\nconst CHANGELOG_FILE_PATH_GITLAB = 'doc/CHANGELOG.md';\r\nexport const VERSION_FILE_PATH = `/scripts/extensions/${extensionFolderPath}/manifest.json`;\r\nlet CURRENT_VERSION: string;\r\nlet LATEST_VERSION: string;\r\nlet CHANGELOG_CONTENT: string;\r\n\r\n/**\r\n * 从 GitLab 仓库获取指定文件的原始内容 (支持项目 ID 或项目路径)\r\n * @param filePath 文件在仓库中的路径 (会被自动 URL 编码)\r\n * @returns 返回文件内容的 Promise<string>\r\n */\r\nasync function fetchRawFileContentFromGitLab(filePath: string): Promise<string> {\r\n  const idOrPathForUrl =\r\n    typeof GITLAB_PROJECT_PATH === 'string' && GITLAB_PROJECT_PATH.includes('/')\r\n      ? encodeURIComponent(GITLAB_PROJECT_PATH)\r\n      : GITLAB_PROJECT_PATH;\r\n  const encodedFilePath = encodeURIComponent(filePath);\r\n  const url = `https://${GITLAB_INSTANCE_URL}/api/v4/projects/${idOrPathForUrl}/repository/files/${encodedFilePath}/raw?ref=${GITLAB_BRANCH}`;\r\n\r\n  const headers: HeadersInit = {\r\n    'Cache-Control': 'no-cache',\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, { method: 'GET', headers: headers });\r\n    if (!response.ok) {\r\n      let errorBody = '';\r\n      try {\r\n        errorBody = await response.text();\r\n      } catch (e) {\r\n        /* ignore */\r\n      }\r\n      throw new Error(\r\n        `[TavernHelper] 无法获取 GitLab 文件: ${response.status} ${response.statusText}. URL: ${url}. Response: ${errorBody}`,\r\n      );\r\n    }\r\n    const content = await response.text();\r\n    return content.trim();\r\n  } catch (error) {\r\n    console.error('[TavernHelper] 获取 GitLab 文件内容时出错:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * 从 JSON 文件内容中解析 'version' 字段的值\r\n * @param content 文件内容字符串\r\n * @returns 解析出的版本号字符串 (例如 \"2.5.5\")\r\n * @throws 如果内容不是有效的 JSON，或者 'version' 字段不存在或不是字符串，则抛出错误\r\n */\r\nexport function parseVersionFromFile(content: string): string {\r\n  try {\r\n    const data = JSON.parse(content);\r\n\r\n    if (data && typeof data.version === 'string') {\r\n      return data.version;\r\n    } else {\r\n      throw new Error(\"[TavernHelper] 在 JSON 数据中未找到有效的 'version' 字段 (必须是字符串类型)\");\r\n    }\r\n  } catch (error) {\r\n    console.error('[TavernHelper] 解析版本文件内容时出错:', error);\r\n\r\n    if (error instanceof SyntaxError) {\r\n      throw new Error(`[TavernHelper] 无法将文件内容解析为 JSON: ${error.message}`);\r\n    }\r\n\r\n    throw new Error(\r\n      `[TavernHelper] 无法从文件内容中解析版本号: ${error instanceof Error ? error.message : String(error)}`,\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 比较两个语义化版本号 (Semantic Versioning - Major.Minor.Patch)\r\n * @param versionA 版本号字符串 A (例如 \"2.5.5\")\r\n * @param versionB 版本号字符串 B (例如 \"1.0.0\")\r\n * @returns\r\n * - 正数 (> 0): 如果 versionA > versionB (A 更新)\r\n * - 负数 (< 0): 如果 versionA < versionB (B 更新)\r\n * - 0:        如果 versionA == versionB (版本相同)\r\n * 注意: 这个基础比较器不处理预发布标签 (-beta) 或构建元数据 (+build)。\r\n * 它会将 \"2.5.5-beta\" 和 \"2.5.5\" 在此比较中视为相等。\r\n */\r\nfunction compareSemVer(versionA: string, versionB: string): number {\r\n  const cleanVersionA = versionA.split('-')[0].split('+')[0];\r\n  const cleanVersionB = versionB.split('-')[0].split('+')[0];\r\n\r\n  const partsA = cleanVersionA.split('.').map(Number);\r\n  const partsB = cleanVersionB.split('.').map(Number);\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    // 如果某个版本号部分缺失 (例如 \"1.2\" vs \"1.2.3\")，则视为 0\r\n    const numA = partsA[i] || 0;\r\n    const numB = partsB[i] || 0;\r\n\r\n    if (isNaN(numA) || isNaN(numB)) {\r\n      console.warn(`[TavernHelper] 版本号 \"${versionA}\" 或 \"${versionB}\" 包含非数字部分，可能导致比较不准确。`);\r\n      return 0;\r\n    }\r\n\r\n    if (numA > numB) {\r\n      return 1;\r\n    }\r\n    if (numA < numB) {\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nexport async function getFileContentByPath(filePath: string) {\r\n  try {\r\n    const response = await fetch(filePath);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const content = await response.text();\r\n    return content;\r\n  } catch (error) {\r\n    console.error(`读取文件 ${filePath} 失败:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function runCheckWithPath() {\r\n  try {\r\n    LATEST_VERSION = parseVersionFromFile(await fetchRawFileContentFromGitLab(VERSION_FILE_PATH_GITLAB));\r\n    CURRENT_VERSION = parseVersionFromFile(await getFileContentByPath(VERSION_FILE_PATH));\r\n\r\n    const comparisonResult = compareSemVer(LATEST_VERSION, CURRENT_VERSION);\r\n\r\n    if (comparisonResult > 0) {\r\n      console.info(`[TavernHelper] 需要更新！最新版本 ${LATEST_VERSION} > 当前版本 ${CURRENT_VERSION}`);\r\n      return true;\r\n    } else if (comparisonResult === 0) {\r\n      console.info(`[TavernHelper] 当前版本 ${CURRENT_VERSION} 已是最新。`);\r\n      return false;\r\n    } else {\r\n      console.warn(`[TavernHelper] 当前版本 ${CURRENT_VERSION} 比远程版本 ${LATEST_VERSION} 还新？`);\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.error('[TavernHelper] 版本检查失败:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 添加版本更新提示元素\r\n */\r\nexport function addVersionUpdateElement() {\r\n  const container = $('#tavern-helper-extension-container .inline-drawer-header b');\r\n  container.append(`\r\n    <span style=\"color: red; font-size: 12px; font-weight: bold;\">\r\n      New!\r\n    </span>\r\n  `);\r\n}\r\n\r\n/**\r\n * 解析变更日志内容，提取两个版本之间的日志\r\n * @param changelogContent 变更日志的完整内容\r\n * @param currentVersion 当前版本号\r\n * @param latestVersion 最新版本号\r\n * @returns 两个版本之间的日志内容\r\n */\r\nfunction parseChangelogBetweenVersions(\r\n  changelogContent: string,\r\n  currentVersion: string,\r\n  latestVersion: string,\r\n): string | undefined {\r\n  // 查找所有版本标题\r\n  const versionRegex = /##\\s*([0-9]+\\.[0-9]+\\.[0-9]+)/g;\r\n  const matches = [...changelogContent.matchAll(versionRegex)];\r\n\r\n  if (matches.length === 0) {\r\n    toastr.error('无法找到版本日志。');\r\n    return;\r\n  }\r\n\r\n  // 比较当前版本和最新版本\r\n  const comparisonResult = compareSemVer(latestVersion, currentVersion);\r\n\r\n  if (comparisonResult <= 0) {\r\n    // 当前版本大于或等于最新版本，只返回最新版本的日志\r\n    const latestVersionMatch = matches.find(match => match[1] === latestVersion);\r\n    if (!latestVersionMatch) {\r\n      toastr.error('获取更新日志失败');\r\n      return;\r\n    }\r\n\r\n    const startIndex = latestVersionMatch.index;\r\n    const nextVersionMatch = matches.find(match => match.index > startIndex);\r\n    const endIndex = nextVersionMatch ? nextVersionMatch.index : changelogContent.length;\r\n\r\n    return changelogContent.substring(startIndex, endIndex).trim();\r\n  } else {\r\n    const currentVersionMatch = matches.find(match => match[1] === currentVersion);\r\n    if (!currentVersionMatch) {\r\n      toastr.error(`无法找到版本 ${currentVersion} 的日志。`);\r\n      return;\r\n    }\r\n\r\n    const latestVersionMatch = matches.find(match => match[1] === latestVersion);\r\n    if (!latestVersionMatch) {\r\n      toastr.error(`无法找到版本 ${latestVersion} 的日志。`);\r\n      return;\r\n    }\r\n\r\n    const startIndex = currentVersionMatch.index;\r\n    const endIndex = latestVersionMatch.index;\r\n\r\n    changelogContent = changelogContent.substring(startIndex, endIndex).trim();\r\n\r\n    return renderMarkdown(changelogContent);\r\n  }\r\n}\r\n\r\n/**\r\n * 弹出changeLog的popup\r\n */\r\nexport async function handleUpdateButton() {\r\n  if (!CHANGELOG_CONTENT) {\r\n    await getChangelog();\r\n  }\r\n  const result = await callGenericPopup(CHANGELOG_CONTENT, POPUP_TYPE.CONFIRM, '', { okButton: '更新', cancelButton: '取消' });\r\n  if (result) {\r\n    await updateFrontendVersion();\r\n  }\r\n}\r\n\r\nexport async function getChangelog() {\r\n  const changelogContent = await fetchRawFileContentFromGitLab(CHANGELOG_FILE_PATH_GITLAB);\r\n  if (LATEST_VERSION === undefined) {\r\n    LATEST_VERSION = parseVersionFromFile(await fetchRawFileContentFromGitLab(VERSION_FILE_PATH_GITLAB));\r\n  }\r\n\r\n  if (CURRENT_VERSION === undefined) {\r\n    CURRENT_VERSION = parseVersionFromFile(await getFileContentByPath(VERSION_FILE_PATH));\r\n  }\r\n\r\n  const logs = parseChangelogBetweenVersions(changelogContent, CURRENT_VERSION, LATEST_VERSION);\r\n  if (!logs) {\r\n    toastr.error('无法获取更新日志');\r\n    return;\r\n  } else {\r\n    CHANGELOG_CONTENT = logs;\r\n  }\r\n}\r\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"SlashCommand\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommand_js_7714abe5__.SlashCommand) });","import { getCharAvatarPath, getUserAvatarPath } from '@/util/extension_variables';\n\nimport { chat, chat_metadata, event_types, eventSource } from '@sillytavern/script';\nimport { extension_settings } from '@sillytavern/scripts/extensions';\nimport { MacroFunction, MacrosParser } from '@sillytavern/scripts/macros';\n\nconst predefinedMacros = new Map<string, string | MacroFunction>([\n  ['userAvatarPath', getUserAvatarPath],\n  ['charAvatarPath', getCharAvatarPath],\n]);\n\n/**\n * 注册一个宏\n * @param {string} key - 宏的名称\n * @param {MacroFunction|string} value - 字符串或返回字符串的函数\n */\nexport function registerMacro(key: string, value: string | MacroFunction) {\n  MacrosParser.registerMacro(key, value);\n  console.log(`[Macro] 宏 \"${key}\" 注册成功`);\n}\n\n/**\n * 注册所有预定义的宏\n */\nexport function registerAllMacros() {\n  for (const [key, value] of predefinedMacros.entries()) {\n    MacrosParser.registerMacro(key, value);\n    console.log(`[Macro] 宏 \"${key}\" 注册成功`);\n  }\n}\n\n/**\n * 注销指定的宏\n * @param {string} key - 要注销的宏名称\n */\nexport function unregisterMacro(key: string) {\n  MacrosParser.unregisterMacro(key);\n  console.log(`[Macro] 宏 \"${key}\" 注销成功`);\n}\n\n/**\n * 注销所有预定义的宏\n */\nexport function unregisterAllMacros() {\n  for (const key of predefinedMacros.keys()) {\n    MacrosParser.unregisterMacro(key);\n    console.log(`[Macro] 宏 \"${key}\" 注销成功`);\n  }\n}\n\nfunction get_property_from_path(object: Record<string, any>, path: string, default_value: any) {\n  let result: Record<string, any> | undefined = object;\n  for (const key of path.split('.')) {\n    if (result === undefined) {\n      return default_value;\n    }\n    result = result[key];\n  }\n  return result ?? default_value;\n}\n\nfunction demacro(event_data: Parameters<ListenerType['chat_completion_prompt_ready']>[0]) {\n  const map = {\n    get_global_variable: extension_settings.variables.global,\n    get_chat_variable: (chat_metadata as { variables: Object }).variables,\n    get_message_variable:\n      chat\n        .filter(message => message.variables?.[message.swipe_id ?? 0] !== undefined)\n        .map(message => message.variables[message.swipe_id ?? 0])\n        .at(-1) ?? {},\n  };\n  event_data.chat.forEach(messages => {\n    messages.content = messages.content.replaceAll(\n      /\\{\\{(get_global_variable|get_chat_variable|get_message_variable)::(.*?)\\}\\}/g,\n      (_substring, type: keyof typeof map, path: string) => {\n        return JSON.stringify(get_property_from_path(map[type], path, null));\n      },\n    );\n  });\n}\n\nexport function initializeMacroOnExtension() {\n  eventSource.on(event_types.CHAT_COMPLETION_PROMPT_READY, demacro);\n}\n\nexport function destroyMacroOnExtension() {\n  eventSource.removeListener(event_types.CHAT_COMPLETION_PROMPT_READY, demacro);\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"ARGUMENT_TYPE\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.ARGUMENT_TYPE), [\"SlashCommandArgument\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.SlashCommandArgument), [\"SlashCommandNamedArgument\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.SlashCommandNamedArgument) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"MAX_INJECTION_DEPTH\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.MAX_INJECTION_DEPTH), [\"activateSendButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.activateSendButtons), [\"baseChatReplace\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.baseChatReplace), [\"characters\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.characters), [\"chat\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.chat), [\"chat_metadata\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.chat_metadata), [\"cleanUpMessage\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.cleanUpMessage), [\"countOccurrences\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.countOccurrences), [\"deactivateSendButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.deactivateSendButtons), [\"eventSource\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.eventSource), [\"event_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.event_types), [\"extension_prompt_roles\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.extension_prompt_roles), [\"extension_prompt_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.extension_prompt_types), [\"getBiasStrings\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getBiasStrings), [\"getCharacterCardFields\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getCharacterCardFields), [\"getExtensionPromptRoleByName\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getExtensionPromptRoleByName), [\"getMaxContextSize\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getMaxContextSize), [\"getOneCharacter\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getOneCharacter), [\"getPastCharacterChats\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getPastCharacterChats), [\"getRequestHeaders\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getRequestHeaders), [\"getThumbnailUrl\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getThumbnailUrl), [\"isOdd\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.isOdd), [\"messageFormatting\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.messageFormatting), [\"name1\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.name1), [\"name2\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.name2), [\"reloadCurrentChat\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.reloadCurrentChat), [\"reloadMarkdownProcessor\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.reloadMarkdownProcessor), [\"saveCharacterDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveCharacterDebounced), [\"saveChatConditional\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveChatConditional), [\"saveSettings\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveSettings), [\"saveSettingsDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveSettingsDebounced), [\"setExtensionPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.setExtensionPrompt), [\"setGenerationProgress\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.setGenerationProgress), [\"showSwipeButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.showSwipeButtons), [\"stopGeneration\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.stopGeneration), [\"substituteParams\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.substituteParams), [\"substituteParamsExtended\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.substituteParamsExtended), [\"system_message_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.system_message_types), [\"this_chid\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.this_chid), [\"updateMessageBlock\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.updateMessageBlock), [\"user_avatar\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.user_avatar) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"isMobile\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_RossAscends_mods_js_224b6398__.isMobile) });","import { getSettingValue, saveSettingValue, extensionFolderPath } from '@/util/extension_variables';\n\nimport { chat_metadata, eventSource, event_types, saveSettingsDebounced } from '@sillytavern/script';\nimport {\n  renderExtensionTemplateAsync,\n  saveMetadataDebounced,\n} from '@sillytavern/scripts/extensions';\nimport { POPUP_TYPE, callGenericPopup } from '@sillytavern/scripts/popup';\nimport { isMobile } from '@sillytavern/scripts/RossAscends-mods';\nimport { getSortableDelay } from '@sillytavern/scripts/utils';\n\nlet isAudioEnabled: boolean;\nexport let list_BGMS: string[] = [];\nexport let list_ambients: string[] = [];\nlet bgmEnded = true;\nlet ambientEnded = true;\n\nconst isExtensionEnabled = getSettingValue('enabled_extension');\nconst templatePath = `${extensionFolderPath}/src/component/audio`;\n// 定义默认音频设置\nexport const defaultAudioSettings = {\n  audio_enabled: true,\n  bgm_enabled: true,\n  ambient_enabled: true,\n  bgm_mode: 'repeat',\n  bgm_muted: false,\n  bgm_volume: 50,\n  bgm_selected: null,\n  bgm_current_time: 0,\n  ambient_mode: 'stop',\n  ambient_muted: false,\n  ambient_volume: 50,\n  ambient_selected: null,\n  ambient_current_time: 0,\n  audio_cooldown: 0,\n};\n\n/**\n * 更新音频\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @param isUserInput 是否由用户操作触发-将导致音频中断\n */\nexport async function updateAudio(type = 'bgm', isUserInput = false) {\n  if (!getSettingValue('audio.audio_setting')) {\n    return;\n  }\n\n  const isTypeEnabled =\n    type === 'bgm'\n      ? getSettingValue('audio.bgm_enabled')\n      : getSettingValue('audio.ambient_enabled');\n\n  if (!isTypeEnabled) {\n    return;\n  }\n  const audioEnded = type === 'bgm' ? bgmEnded : ambientEnded;\n  const audioSelector = `#audio_${type}`;\n\n  if (!isUserInput && $(audioSelector).attr('src') != '' && !audioEnded) {\n    return;\n  }\n\n  let audio_url = '';\n  const playlist = await getAudioUrl(type as 'bgm' | 'ambient');\n\n  if (isUserInput) {\n    audio_url =\n      type === 'bgm'\n        ? getSettingValue('audio.bgm_selected') || playlist[0]\n        : getSettingValue('audio.ambient_selected') || playlist[0];\n  } else {\n    const mode =\n      type === 'bgm'\n        ? getSettingValue('audio.bgm_mode')\n        : getSettingValue('audio.ambient_mode');\n\n    const selected =\n      type === 'bgm'\n        ? getSettingValue('audio.bgm_selected')\n        : getSettingValue('audio.ambient_selected');\n\n    audio_url = getNextFileByMode(mode, playlist, selected);\n  }\n\n  if (!audio_url) {\n    return;\n  }\n\n  const audio = $(audioSelector)[0] as HTMLAudioElement;\n\n  // 对于ambient类型，处理掉防缓存后缀\n  if (type === 'ambient') {\n    const cleanAudioSrc = audio.src.split('?')[0];\n    const cleanAudioUrl = audio_url.split('?')[0];\n    if (decodeURIComponent(cleanAudioSrc) === decodeURIComponent(cleanAudioUrl) && !audioEnded) {\n      return;\n    }\n  } else if (decodeURIComponent(audio.src) === decodeURIComponent(audio_url) && !audioEnded) {\n      return;\n    }\n\n  // 设置audioEnded状态\n  if (type === 'bgm') {\n    bgmEnded = false;\n  } else {\n    ambientEnded = false;\n  }\n\n  if (type === 'bgm') {\n    audio.src = audio_url;\n    audio.load();\n\n    await new Promise<void>(resolve => {\n      const canPlayHandler = () => {\n        audio.removeEventListener('canplaythrough', canPlayHandler);\n        resolve();\n      };\n\n      if (audio.readyState >= HTMLMediaElement.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener('canplaythrough', canPlayHandler);\n      }\n    });\n\n    await playAudio(type);\n  } else {\n    // 对于ambient类型，使用缓存破坏\n    const audioUrlWithCacheBusting = getAudioUrlWithCacheBusting(audio_url);\n    audio.src = audioUrlWithCacheBusting;\n    audio.load();\n\n    await new Promise<void>(resolve => {\n      const canPlayHandler = () => {\n        audio.removeEventListener('canplaythrough', canPlayHandler);\n        resolve();\n      };\n\n      if (audio.readyState >= HTMLMediaElement.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener('canplaythrough', canPlayHandler);\n      }\n    });\n\n    await playAudio(type as 'bgm' | 'ambient');\n  }\n\n  // 更新选中的音频\n  if (type === 'bgm') {\n    saveSettingValue('audio.bgm_selected', audio_url);\n  } else {\n    saveSettingValue('audio.ambient_selected', audio_url);\n  }\n\n  // 更新选择器\n  const selectElement = $(`#audio_${type}_select`);\n  if (selectElement.val() !== audio_url) {\n    selectElement.val(audio_url);\n  }\n\n  saveSettingsDebounced();\n}\n\n/**\n * 更新音频下拉选择菜单\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function updateAudioSelect(type = 'bgm') {\n  if (!getSettingValue(`audio.${type}_enabled`)) {\n    return;\n  }\n\n  const selectElement = $(`#audio_${type}_select`);\n  selectElement.empty();\n\n  if (type === 'bgm') {\n    list_BGMS = await getAudioUrl('bgm');\n  } else {\n    list_ambients = await getAudioUrl('ambient');\n  }\n\n  const audioList = type === 'bgm' ? list_BGMS : list_ambients;\n  let selectedSetting =\n    type === 'bgm'\n      ? getSettingValue('audio.bgm_selected')\n      : getSettingValue('audio.ambient_selected');\n\n  if (audioList && audioList.length > 0) {\n    // 检查当前选择的音频是否在列表中，如果不在则选择第一个\n    if (!audioList.includes(selectedSetting)) {\n      console.warn(`[Audio] 当前选择的音频 ${selectedSetting} 不在列表中，自动选择列表第一个音频`);\n      selectedSetting = audioList[0];\n      if (type === 'bgm') {\n        saveSettingValue('audio.bgm_selected', selectedSetting);\n      } else {\n        saveSettingValue('audio.ambient_selected', selectedSetting);\n      }\n      saveSettingsDebounced();\n    }\n\n    const audioFiles = Array.isArray(audioList) ? audioList : audioList.split(',').map(file => file.trim());\n    audioFiles.forEach((file: string) => {\n      const fileLabel = file.replace(/^.*[\\\\\\/]/, '').replace(/\\.[^/.]+$/, '');\n      selectElement.append(new Option(fileLabel, file));\n    });\n\n    selectElement.val(selectedSetting);\n  } else {\n    console.log(`[Audio] 暂无可用的 ${type.toUpperCase()} 资源`);\n  }\n}\n\n/**\n * 获取音频URL\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @returns 音频URL数组\n */\nexport async function getAudioUrl(type = 'bgm') {\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n  //@ts-ignore\n  const chatSpecificUrls = chat_metadata.variables?.[typeKey] || [];\n  return chatSpecificUrls;\n}\n\n/**\n * 添加缓存参数防止缓存\n * @param originalUrl 原始URL\n */\nexport function getAudioUrlWithCacheBusting(originalUrl: string) {\n  if (!originalUrl) return '';\n  const cacheBuster = new Date().getTime();\n  const separator = originalUrl.includes('?') ? '&' : '?';\n  return `${originalUrl}${separator}_=${cacheBuster}`;\n}\n\n/**\n * 根据播放模式获取下一个音频文件\n * @param mode 播放模式\n * @param playlist 播放列表\n * @param currentFile 当前文件\n */\nexport function getNextFileByMode(mode: string, playlist: string[], currentFile: string) {\n  if (!playlist || playlist.length === 0) {\n    return '';\n  }\n\n  switch (mode) {\n    case 'repeat':\n      return playlist[0];\n    case 'single':\n      return currentFile || playlist[0];\n    case 'random': {\n      const filteredPlaylist = playlist.filter(file => file !== currentFile);\n      if (filteredPlaylist.length === 0) {\n        return playlist[0];\n      }\n      const randomIndex = Math.floor(Math.random() * filteredPlaylist.length);\n      return filteredPlaylist[randomIndex];\n    }\n    case 'stop':\n      return '';\n    default:\n      return playlist[0];\n  }\n}\n\n/**\n * 切换音频控件状态\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @param status 是否启用\n */\nexport function toggleAudioControls(type: 'bgm' | 'ambient', status = 'enable') {\n  const isMainEnabled = $('#audio_enabled').prop('checked');\n\n  const shouldEnable = isMainEnabled && status === 'enable';\n\n  const controlIds = [\n    `#audio_${type}_play_pause`,\n    `#audio_${type}_mute`,\n    `#audio_${type}_mode`,\n    `#audio_${type}_select`,\n    `#audio_${type}_volume_slider`,\n  ];\n\n  controlIds.forEach(id => {\n    $(id).prop('disabled', !shouldEnable);\n  });\n}\n\n/**\n * 点击音频启用按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function onAudioEnabledClick(type = 'bgm') {\n  const enabled = $(`#enable_${type}`).prop('checked');\n  saveSettingValue(`audio.${type}_enabled`, enabled);\n\n  if (enabled) {\n    toggleAudioControls(type as 'bgm' | 'ambient', 'enable');\n    await updateAudio(type, false);\n  } else {\n    ($(`#audio_${type}`)[0] as HTMLAudioElement).pause();\n    toggleAudioControls(type as 'bgm' | 'ambient', 'disable');\n  }\n}\n\n/**\n * 初始化音频事件监听\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport function initAudioEventListeners(type: 'bgm' | 'ambient') {\n  ($(`#audio_${type}`) as HTMLAudioElement).on('ended', async function () {\n    if (type === 'bgm') {\n      bgmEnded = true;\n    } else {\n      ambientEnded = true;\n    }\n    const mode = getSettingValue(`audio.${type}_mode`);\n\n    if (mode === 'stop') {\n      return;\n    }\n\n    await updateAudio(type, false);\n  });\n}\n\n/**\n * 初始化进度条\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport function initializeProgressBar(type: 'bgm' | 'ambient') {\n  const $audioElement = $(`#audio_${type}`);\n  const $progressSlider = $(`#audio_${type}_progress_slider`);\n\n  $audioElement.on('timeupdate', function () {\n    if (!isNaN(this.duration)) {\n      const progressPercent = (this.currentTime / this.duration) * 100;\n      $progressSlider.val(progressPercent);\n    }\n    const cooldownBGM = getSettingValue('audio.audio_cooldown');\n    const remainingTime = this.duration - this.currentTime;\n\n    if (cooldownBGM > 0 && remainingTime <= cooldownBGM && !this.isFadingOut) {\n      const initialVolume = this.volume;\n      const fadeStep = initialVolume / (cooldownBGM * 10);\n      this.isFadingOut = true;\n\n      const fadeOutInterval = setInterval(() => {\n        if (this.volume > 0) {\n          this.volume = Math.max(0, this.volume - fadeStep);\n        } else {\n          clearInterval(fadeOutInterval);\n          this.isFadingOut = false;\n        }\n      }, 100);\n    }\n  });\n\n  $audioElement.on('play', function () {\n    const cooldownBGM = getSettingValue('audio.audio_cooldown');\n    const targetVolume = $(`#audio_${type}_volume_slider`).val() / 100;\n\n    if (cooldownBGM <= 0) {\n      this.volume = targetVolume;\n      return;\n    }\n\n    this.volume = 0;\n    const fadeStep = targetVolume / (cooldownBGM * 10);\n    let fadeInInterval = setInterval(() => {\n      if (this.volume < targetVolume) {\n        this.volume = Math.min(targetVolume, this.volume + fadeStep);\n      } else {\n        clearInterval(fadeInInterval);\n      }\n    }, 100);\n  });\n\n  $audioElement.on('loadedmetadata', function () {\n    if (!isNaN(this.duration)) {\n      $progressSlider.attr('max', 100);\n    }\n  });\n\n  $progressSlider.on('input', function () {\n    const value = $(this).val();\n    if (!isNaN($audioElement[0].duration)) {\n      $audioElement[0].currentTime = (value / 100) * $audioElement[0].duration;\n    }\n  });\n}\n\n/**\n * 音量滑块滚轮调节事件处理\n * @param e 事件对象\n */\nfunction onVolumeSliderWheelEvent(this: any, e: WheelEvent) {\n  const slider = $(this);\n  e.preventDefault();\n  e.stopPropagation();\n\n  const delta = e.deltaY / 20;\n  const sliderVal = Number(slider.val());\n\n  let newVal = sliderVal - delta;\n  if (newVal < 0) {\n    newVal = 0;\n  } else if (newVal > 100) {\n    newVal = 100;\n  }\n\n  slider.val(newVal).trigger('input');\n}\n\n/**\n * 长按音量控制按钮出现音量调节\n * @param volumeControlId 音量控制按钮ID\n * @param iconId 音量控制按钮图标ID\n */\nfunction handleLongPress(volumeControlId: string, iconId: string) {\n  const $volumeControl = $(`#${volumeControlId}`);\n  const $icon = $(`#${iconId}`);\n  let pressTimer: number | undefined;\n\n  if (isMobile()) {\n    $icon.on('touchstart', function (e) {\n      pressTimer = setTimeout(() => {\n        $volumeControl.css('display', 'block');\n      }, 500);\n    });\n\n    $icon.on('touchend', function (e) {\n      clearTimeout(pressTimer);\n    });\n\n    $(document).on('click', function (event) {\n      if (\n        !$icon.is(event.target) &&\n        $icon.has(event.target).length === 0 &&\n        !$volumeControl.is(event.target) &&\n        $volumeControl.has(event.target).length === 0\n      ) {\n        $volumeControl.css('display', 'none');\n      }\n    });\n  }\n}\n\n/**\n * 刷新音频资源\n */\nexport async function refreshAudioResources() {\n  updateAudioSelect('bgm');\n  updateAudioSelect('ambient');\n}\n\n/**\n * 打开音频资源管理弹窗\n * @param typeKey 音频类型 \"bgmurl\" 或 \"ambienturl\"\n */\n\nasync function openUrlManagerPopup(typeKey: 'bgmurl' | 'ambienturl') {\n  const urlManager = $(await renderExtensionTemplateAsync(`${templatePath}`, 'audio_url_manager'));\n  urlManager.prepend(`\n    <style>\n      #saved_audio_url.empty::after {\n        content: \"暂无音频\";\n        color: #999;\n        margin-top: 20px;\n        font-size: 12px;\n      }\n    </style>\n  `);\n  const savedAudioUrl = urlManager.find('#saved_audio_url').empty();\n  const urlTemplate = $(await renderExtensionTemplateAsync(`${templatePath}`, 'audio_url_template'));\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  let urlValue: string[] = chat_metadata.variables[typeKey];\n  if (!urlValue) {\n    urlValue = [];\n\n    savedAudioUrl.addClass('empty');\n  } else {\n    try {\n      if (urlValue.length === 0) {\n        savedAudioUrl.addClass('empty');\n      }\n    } catch (error) {\n      console.error(`[Audio] Failed to parse ${typeKey}:`, error);\n      return null;\n    }\n  }\n\n  const updatedUrls: Record<string, string> = {};\n  let newUrlOrder = [...urlValue];\n  function renderUrl(container: JQuery<HTMLElement>, url: string) {\n    const urlHtml = urlTemplate.clone();\n    let fileName;\n    if (url.includes('/')) {\n      const parts = url.split('/');\n      fileName = parts[parts.length - 1] || parts[parts.length - 2];\n    } else {\n      fileName = url;\n    }\n\n    const id = fileName.replace(/\\./g, '-');\n\n    urlHtml.attr('id', id);\n    urlHtml.find('.audio_url_name').text(fileName);\n\n    urlHtml.find('.audio_url_name').attr('data-url', url);\n\n    urlHtml.find('.edit_existing_url').on('click', async function () {\n      const currentUrl = urlHtml.find('.audio_url_name').attr('data-url');\n\n      if (!currentUrl) {\n        console.error('[Audio] No URL found for this element.');\n        return;\n      }\n\n      const inputUrl = await callGenericPopup('', POPUP_TYPE.INPUT, currentUrl);\n\n      if (!inputUrl) {\n        return;\n      }\n\n      const newFileName = inputUrl.split('/').pop();\n\n      const newId = newFileName.replace(/\\./g, '-');\n\n      urlHtml.attr('id', newId);\n      urlHtml.find('.audio_url_name').text(newFileName);\n      urlHtml.find('.audio_url_name').attr('data-url', inputUrl);\n\n      updatedUrls[currentUrl] = inputUrl;\n    });\n\n    urlHtml.find('.delete_url').on('click', async function () {\n      const confirmDelete = await callGenericPopup('确认要删除此链接?', POPUP_TYPE.CONFIRM);\n\n      if (!confirmDelete) {\n        return;\n      }\n\n      // 仅从DOM中移除元素\n      urlHtml.remove();\n\n      // 检查是否需要显示空状态提示\n      if (savedAudioUrl.find('.audio_url_name').length === 0) {\n        savedAudioUrl.addClass('empty');\n      }\n    });\n\n    container.append(urlHtml);\n  }\n\n  urlValue.forEach(url => {\n    renderUrl(savedAudioUrl, url);\n  });\n  urlManager.find('#import_button').on('click', async function () {\n    const newUrls = await openUrlImportPopup();\n\n    if (!newUrls) {\n      console.debug(`[Audio] ${typeKey} URL导入已取消`);\n      return;\n    }\n\n    savedAudioUrl.removeClass('empty');\n\n    newUrls.forEach(url => {\n      renderUrl(savedAudioUrl, url);\n    });\n  });\n  (savedAudioUrl as any).sortable({\n    delay: getSortableDelay(),\n    handle: '.drag-handle',\n    stop: function () {\n      newUrlOrder = [];\n      savedAudioUrl.find('.audio_url_name').each(function () {\n        const newUrl = $(this).attr('data-url');\n        if (newUrl) {\n          newUrlOrder.push(newUrl);\n        }\n      });\n    },\n  });\n  const result = await callGenericPopup(urlManager, POPUP_TYPE.CONFIRM, '', {\n    okButton: `确认`,\n    cancelButton: `取消`,\n  });\n\n  if (!result) {\n    return;\n  } else {\n    // 直接读取所有data-url属性，生成新的URL列表\n    const newUrlList: string[] = [];\n    savedAudioUrl.find('.audio_url_name').each(function () {\n      const url = $(this).attr('data-url');\n      if (url) {\n        newUrlList.push(url);\n      }\n    });\n\n    // 检查当前播放的音频是否在新的列表中\n    const currentBgmUrl = getSettingValue('audio.bgm_selected');\n    const currentAmbientUrl = getSettingValue('audio.ambient_selected');\n\n    // 如果当前播放的音频不在新的列表中，停止播放\n    if (typeKey === 'bgmurl' && currentBgmUrl && !newUrlList.includes(currentBgmUrl)) {\n      const bgmAudio = $('#audio_bgm')[0] as HTMLAudioElement;\n      bgmAudio.pause();\n      bgmEnded = true;\n    } else if (typeKey === 'ambienturl' && currentAmbientUrl && !newUrlList.includes(currentAmbientUrl)) {\n      const ambientAudio = $('#audio_ambient')[0] as HTMLAudioElement;\n      ambientAudio.pause();\n      ambientEnded = true;\n    }\n\n    // 更新并保存新的URL列表\n    chat_metadata.variables[typeKey] = newUrlList;\n    saveMetadataDebounced();\n    if (typeKey === 'bgmurl') {\n      updateAudioSelect('bgm');\n    } else if (typeKey === 'ambienturl') {\n      updateAudioSelect('ambient');\n    }\n  }\n}\n\n/**\n * 点击音频总开关时的处理函数\n */\nasync function handleAudioToggle(enable: boolean = true, userInput: boolean = true) {\n  if (userInput) {\n    isAudioEnabled = enable;\n    saveSettingValue('audio.audio_enabled', isAudioEnabled);\n  }\n\n  if (enable) {\n    $('#audio-player-content').css('opacity', '1');\n    if (!isExtensionEnabled) {\n      return;\n    }\n    toggleAudioControls('bgm', 'enable');\n    toggleAudioControls('ambient', 'enable');\n    const bgmUrl = await getAudioUrl('bgm');\n    const ambientUrl = await getAudioUrl('ambient');\n    if (bgmUrl.length > 0) {\n      const bgmAudioElement = $('#audio_bgm')[0] as HTMLAudioElement;\n      try {\n        await bgmAudioElement.play();\n      } catch (error) {\n        throw new Error('[Audio] 播放音乐失败：没有提供有效源');\n      }\n    }\n    if (ambientUrl.length > 0) {\n      const ambientAudioElement = $('#audio_ambient')[0] as HTMLAudioElement;\n      try {\n        await ambientAudioElement.play();\n      } catch (error) {\n        throw new Error('[Audio] 播放音效失败：没有提供有效源');\n      }\n    }\n  } else {\n    $('#audio-player-content').css('opacity', '0.5');\n    ($('#audio_bgm')[0] as HTMLAudioElement).pause();\n    ($('#audio_ambient')[0] as HTMLAudioElement).pause();\n    toggleAudioControls('bgm', 'disable');\n    toggleAudioControls('ambient', 'disable');\n  }\n}\n\n/**\n * 播放音频\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function playAudio(type: 'bgm' | 'ambient') {\n  if (\n    !getSettingValue('activate_setting') ||\n    !getSettingValue('audio.audio_setting') ||\n    !getSettingValue(`audio.${type}_enabled`)\n  ) {\n    return;\n  }\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement.error && audioElement.error.code === 4) {\n    console.warn(`The ${type} element has no supported sources. Trying to reload selected audio from dropdown...`);\n\n    const selectedAudio = $(`#audio_${type}_select`).val() as string;\n    if (!selectedAudio) {\n      console.error(`No audio selected for ${type}`);\n      return;\n    }\n\n    audioElement.src = selectedAudio;\n    audioElement.load();\n  }\n\n  try {\n    await audioElement.play();\n    playPauseIcon.removeClass('fa-play');\n    playPauseIcon.addClass('fa-pause');\n  } catch (error) {\n    console.error(`[Audio] 播放 ${type} 音频时出错:`, error);\n  }\n}\n\n/**\n * 点击各自音频模式按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioModeClick(type: 'bgm' | 'ambient') {\n  const modes = [\n    { mode: 'repeat', icon: 'fa-repeat' },\n    { mode: 'random', icon: 'fa-random' },\n    { mode: 'single', icon: 'fa-redo-alt' },\n    { mode: 'stop', icon: 'fa-cancel' },\n  ];\n\n  const currentModeIndex = modes.findIndex(m => m.mode === getSettingValue(`audio.${type}_mode`));\n\n  const nextModeIndex = (currentModeIndex + 1) % modes.length;\n\n  saveSettingValue(`audio.${type}_mode`, modes[nextModeIndex].mode);\n\n  $(`#audio_${type}_mode_icon`).removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n\n  $(`#audio_${type}_mode_icon`).addClass(modes[nextModeIndex].icon);\n}\n\n/**\n * 音频选择变化时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioSelectChange(type: 'bgm' | 'ambient') {\n  saveSettingValue(`audio.${type}_selected`, $(`#audio_${type}_select`).val());\n  await updateAudio(type, true);\n}\n\n/**\n * 输入冷却时间的处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioCooldownInput() {\n  saveSettingValue('audio.audio_cooldown', ~~($(`#audio_cooldown`).val() as string));\n}\n\n/**\n * 音频音量变化时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioVolumeChange(type: 'bgm' | 'ambient') {\n  saveSettingValue(`audio.${type}_volume`, ~~($(`#audio_${type}_volume_slider`).val() as string));\n  $(`#audio_${type}`).prop('volume', getSettingValue(`audio.${type}_volume`) * 0.01);\n  $(`#audio_${type}_volume`).text(getSettingValue(`audio.${type}_volume`));\n}\n\n/**\n * 点击音频静音按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioMuteClick(type: 'bgm' | 'ambient') {\n  saveSettingValue(`audio.${type}_muted`, !getSettingValue(`audio.${type}_muted`));\n  $(`#audio_${type}_mute_icon`).toggleClass('fa-volume-high');\n  $(`#audio_${type}_mute_icon`).toggleClass('fa-volume-mute');\n  $(`#audio_${type}`).prop('muted', !$(`#audio_${type}`).prop('muted'));\n  $(`#audio_${type}_mute`).toggleClass('redOverlayGlow');\n}\n\n/**\n * 切换播放/暂停状态\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function togglePlayPause(type: 'bgm' | 'ambient') {\n  if (!getSettingValue('audio.audio_setting')) {\n    return;\n  }\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement.paused) {\n    await playAudio(type);\n  } else {\n    audioElement.pause();\n    playPauseIcon.removeClass('fa-pause');\n    playPauseIcon.addClass('fa-play');\n  }\n}\n\n/**\n * 打开URL导入弹窗\n * @param type 音频类型\n */\nasync function openUrlImportPopup(): Promise<string[] | null> {\n  const input = await callGenericPopup('输入要导入的网络音频链接（每行一个）', POPUP_TYPE.INPUT, '') as string | null;\n\n  if (!input) {\n    console.debug('[Audio] URL import cancelled');\n    return null;\n  }\n\n  const urlArray = input\n    .trim()\n    .split('\\n')\n    .map((url: string) => url.trim())\n    .filter((url: string) => url !== '');\n\n  return Array.from(new Set(urlArray));\n}\n\n// 聊天更改时的事件处理\neventSource.on(event_types.CHAT_CHANGED, async () => {\n  const $bgmPlayer = $('#audio_bgm')[0] as HTMLAudioElement;\n  const $ambientPlayer = $('#audio_ambient')[0] as HTMLAudioElement;\n\n  if ($bgmPlayer && !$bgmPlayer.paused) {\n    $bgmPlayer.pause();\n  }\n\n  if ($ambientPlayer && !$ambientPlayer.paused) {\n    $ambientPlayer.pause();\n  }\n  await refreshAudioResources();\n  console.log('[Audio] 聊天已更改，音频资源刷新完成');\n});\n\n/** 初始化样式\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nfunction initAudioStyles(type: 'bgm' | 'ambient') {\n  // 隐藏默认播放器样式\n  $(`#audio_${type}`).hide();\n\n  if (getSettingValue(`audio.${type}_muted`)) {\n    $(`#audio_${type}_mute_icon`).removeClass('fa-volume-high');\n    $(`#audio_${type}_mute_icon`).addClass('fa-volume-mute');\n    $(`#audio_${type}_mute`).addClass('redOverlayGlow');\n    $(`#audio_${type}`).prop('muted', true);\n  } else {\n    $(`#audio_${type}_mute_icon`).addClass('fa-volume-high');\n    $(`#audio_${type}_mute_icon`).removeClass('fa-volume-mute');\n    $(`#audio_${type}_mute`).removeClass('redOverlayGlow');\n    $(`#audio_${type}`).prop('muted', false);\n  }\n\n  $(`#enable_${type}`).prop('checked', getSettingValue(`audio.${type}_enabled`));\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement && audioElement.paused) {\n    playPauseIcon.removeClass('fa-pause');\n    playPauseIcon.addClass('fa-play');\n  } else if (audioElement && !audioElement.paused) {\n    playPauseIcon.removeClass('fa-play');\n    playPauseIcon.addClass('fa-pause');\n  }\n  updateAudioSelect(type);\n  initializeProgressBar(type);\n}\n\n/**\n * 初始化所有音频相关组件和事件监听器\n */\nexport function initAudioComponents() {\n  isAudioEnabled = getSettingValue('audio_enabled');\n  handleAudioToggle(isAudioEnabled, false);\n  $('#audio-enable-toggle')\n    .prop('checked', isAudioEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleAudioToggle(event.target.checked, true));\n\n  // 初始化音乐和音效样式\n  initAudioStyles('bgm');\n  initAudioStyles('ambient');\n\n  const audioTypes = ['bgm', 'ambient'] as const;\n\n  const bindTypeEvents = (\n    type: 'bgm' | 'ambient',\n    events: Array<{\n      selector: string;\n      event: string;\n      // eslint-disable-next-line no-shadow\n      handler: (type: 'bgm' | 'ambient') => void; \n    }>,\n  ) => {\n    events.forEach(({ selector, event, handler }) => {\n      $(`#${selector}`).on(event, () => handler(type));\n    });\n  };\n\n  audioTypes.forEach(type => {\n    $(`#enable_${type}`).on('click', () => onAudioEnabledClick(type));\n\n    bindTypeEvents(type, [\n      {\n        selector: `enable_${type}`,\n        event: 'click',\n        handler: onAudioEnabledClick,\n      },\n      {\n        selector: `audio_${type}_mode`,\n        event: 'click',\n        handler: onAudioModeClick,\n      },\n      {\n        selector: `audio_${type}_mute`,\n        event: 'click',\n        handler: onAudioMuteClick,\n      },\n      {\n        selector: `audio_${type}_volume_slider`,\n        event: 'input',\n        handler: onAudioVolumeChange,\n      },\n      {\n        selector: `audio_${type}_select`,\n        event: 'change',\n        handler: onAudioSelectChange,\n      },\n      {\n        selector: `audio_${type}_play_pause`,\n        event: 'click',\n        handler: togglePlayPause,\n      },\n    ]);\n\n    $('#audio_cooldown').on('input', onAudioCooldownInput).val(getSettingValue('audio.audio_cooldown'));\n\n    // 监听音频结束事件\n    initAudioEventListeners('bgm');\n    initAudioEventListeners('ambient');\n\n    const volumeSlider = $(`#audio_${type}_volume_slider`).get(0);\n    if (volumeSlider) {\n      volumeSlider.addEventListener('wheel', onVolumeSliderWheelEvent, {\n        passive: false,\n      });\n    }\n  });\n\n  $('#audio_refresh_assets').on('click', async () => {\n    await refreshAudioResources();\n  });\n\n  handleLongPress('bgm-volume-control', 'audio_bgm_mute_icon');\n  handleLongPress('ambient-volume-control', 'audio_ambient_mute_icon');\n\n  const urlManagerMap = {\n    bgm: 'bgmurl',\n    ambient: 'ambienturl',\n  };\n\n  audioTypes.forEach(type => {\n    $(`#${type}_manager_button`).on('click', async () => {\n      await openUrlManagerPopup(urlManagerMap[type] as 'bgmurl' | 'ambienturl');\n      await refreshAudioResources();\n    });\n  });\n\n  const bgmAudio = $('#audio_bgm')[0] as HTMLAudioElement;\n  const ambientAudio = $('#audio_ambient')[0] as HTMLAudioElement;\n\n  const togglePlayPauseIcon = (audioElement: HTMLAudioElement, iconSelector: string) => {\n    const icon = $(iconSelector);\n    audioElement.addEventListener('play', () => icon.removeClass('fa-play').addClass('fa-pause'));\n    audioElement.addEventListener('pause', () => icon.removeClass('fa-pause').addClass('fa-play'));\n  };\n\n  togglePlayPauseIcon(bgmAudio, '#audio_bgm_play_pause_icon');\n  togglePlayPauseIcon(ambientAudio, '#audio_ambient_play_pause_icon');\n}\n","import {\n  destroyCharacterLevelOnExtension,\n  initializeCharacterLevelOnExtension,\n} from '@/component/character_level/index';\nimport {\n  destroyMacroOnExtension,\n  initializeMacroOnExtension,\n  registerAllMacros,\n  unregisterAllMacros,\n} from '@/component/macro';\nimport {\n  addCodeToggleButtonsToAllMessages,\n  addRenderingOptimizeSettings,\n  partialRenderEvents,\n  removeRenderingOptimizeSettings,\n  renderAllIframes,\n  renderMessageAfterDelete,\n  renderPartialIframes,\n  tampermonkey_script,\n  viewport_adjust_script,\n} from '@/component/message_iframe';\nimport {\n  scriptRepo,\n  ScriptType,\n  checkEmbeddedScripts,\n  purgeEmbeddedScripts,\n  clearAllScriptsIframe,\n  scriptButtonUi,\n} from '@/component/script_repository/index';\nimport { iframe_client } from '@/iframe_client/index';\nimport { handleIframe } from '@/iframe_server/index';\nimport { checkVariablesEvents, clearTempVariables, shouldUpdateVariables } from '@/iframe_server/variables';\nimport { script_url } from '@/script_url';\nimport { getSettingValue, saveSettingValue } from '@/util/extension_variables';\n\nimport { eventSource, event_types, reloadCurrentChat, saveSettingsDebounced, this_chid } from '@sillytavern/script';\n\nconst handleChatChanged = async () => {\n  await checkEmbeddedScripts();\n\n  await clearAllScriptsIframe();\n  scriptButtonUi.clear();\n  await scriptRepo.loadScriptLibrary();\n  await scriptRepo.runScriptsByType(ScriptType.GLOBAL);\n  await scriptRepo.runScriptsByType(ScriptType.CHARACTER);\n\n  await renderAllIframes();\n  if (getSettingValue('render.rendering_optimize')) {\n    addCodeToggleButtonsToAllMessages();\n  }\n};\n\nconst handleCharacterDeleted = (character: Object) => {\n  purgeEmbeddedScripts({ character });\n};\n\nconst handlePartialRender = (mesId: string) => {\n  const mesIdNumber = parseInt(mesId, 10);\n  renderPartialIframes(mesIdNumber);\n};\n\nconst handleMessageDeleted = (mesId: string) => {\n  const mesIdNumber = parseInt(mesId, 10);\n  clearTempVariables();\n  renderMessageAfterDelete(mesIdNumber);\n  if (getSettingValue('render.rendering_optimize')) {\n    addCodeToggleButtonsToAllMessages();\n  }\n};\n\nconst handleVariableUpdated = (mesId: string) => {\n  const mesIdNumber = parseInt(mesId, 10);\n  shouldUpdateVariables(mesIdNumber);\n};\n\n/**\n * 初始化扩展主设置界面\n */\nexport function initExtensionMainPanel() {\n  const isEnabled = getSettingValue('enabled_extension');\n  if (isEnabled) {\n    handleExtensionToggle(false, true);\n  }\n  $('#extension-enable-toggle')\n    .prop('checked', isEnabled)\n    .on('change', function (event: JQuery.ChangeEvent) {\n      handleExtensionToggle(true, $(event.currentTarget).prop('checked'));\n    });\n}\n\nasync function handleExtensionToggle(userAction: boolean = true, enable: boolean = true) {\n  if (userAction) {\n    await saveSettingValue('enabled_extension', enable);\n  }\n  if (enable) {\n    // 指示器样式\n    $('#extension-status-icon').css('color', 'green').next().text('扩展已启用');\n\n    script_url.set('iframe_client', iframe_client);\n    script_url.set('viewport_adjust_script', viewport_adjust_script);\n    script_url.set('tampermonkey_script', tampermonkey_script);\n\n    registerAllMacros();\n    initializeMacroOnExtension();\n    initializeCharacterLevelOnExtension();\n\n    // 重新注入前端卡优化的样式和设置\n    if (userAction && getSettingValue('render.rendering_optimize')) {\n      addRenderingOptimizeSettings();\n    }\n\n    window.addEventListener('message', handleIframe);\n\n    eventSource.on(event_types.CHAT_CHANGED, handleChatChanged);\n    eventSource.on(event_types.CHARACTER_DELETED, handleCharacterDeleted);\n\n    partialRenderEvents.forEach(eventType => {\n      eventSource.on(eventType, handlePartialRender);\n    });\n\n    checkVariablesEvents.forEach(eventType => {\n      eventSource.on(eventType, handleVariableUpdated);\n    });\n    eventSource.on(event_types.MESSAGE_DELETED, handleMessageDeleted);\n\n    if (userAction && this_chid !== undefined) {\n      await reloadCurrentChat();\n    }\n  } else {\n    // 指示器样式\n    $('#extension-status-icon').css('color', 'red').next().text('扩展已禁用');\n\n    script_url.delete('iframe_client');\n    script_url.delete('viewport_adjust_script');\n    script_url.delete('tampermonkey_script');\n\n    unregisterAllMacros();\n    destroyMacroOnExtension();\n    destroyCharacterLevelOnExtension();\n\n    if (getSettingValue('render.rendering_optimize')) {\n      removeRenderingOptimizeSettings();\n    }\n\n    window.removeEventListener('message', handleIframe);\n\n    eventSource.removeListener(event_types.CHAT_CHANGED, handleChatChanged);\n    eventSource.removeListener(event_types.CHARACTER_DELETED, handleCharacterDeleted);\n\n    partialRenderEvents.forEach(eventType => {\n      eventSource.removeListener(eventType, handlePartialRender);\n    });\n    checkVariablesEvents.forEach(eventType => {\n      eventSource.removeListener(eventType, handleVariableUpdated);\n    });\n    eventSource.removeListener(event_types.MESSAGE_DELETED, handleMessageDeleted);\n    if (userAction && this_chid !== undefined) {\n      await reloadCurrentChat();\n    }\n  }\n  $('#js_slash_runner_text').text(getSettingValue('activate_setting') ? '关闭前端渲染' : '开启前端渲染');\n  saveSettingsDebounced();\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"MacrosParser\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__.MacrosParser), [\"getLastMessageId\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__.getLastMessageId) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"extension_settings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.extension_settings), [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.getContext), [\"renderExtensionTemplateAsync\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.renderExtensionTemplateAsync), [\"saveMetadataDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.saveMetadataDebounced), [\"writeExtensionField\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.writeExtensionField) });","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\nimport { partition } from '@/util/helper';\n\nimport { characters, reloadCurrentChat, saveChatConditional, saveSettings, this_chid } from '@sillytavern/script';\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\nimport { extension_settings, writeExtensionField } from '@sillytavern/scripts/extensions';\nimport { regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\n\ninterface IframeIsCharacterTavernRegexEnabled extends IframeMessage {\n  request: '[TavernRegex][isCharacterTavernRegexesEnabled]';\n}\n\ninterface IframeGetTavernRegexes extends IframeMessage {\n  request: '[TavernRegex][getTavernRegexes]';\n  option: Required<GetTavernRegexesOption>;\n}\n\ninterface IframeReplaceTavernRegexes extends IframeMessage {\n  request: '[TavernRegex][replaceTavernRegexes]';\n  regexes: TavernRegex[];\n  option: Required<ReplaceTavernRegexesOption>;\n}\n\nexport function isCharacterTavernRegexEnabled(): boolean {\n  // @ts-ignore 2345\n  return extension_settings?.character_allowed_regex?.includes(characters?.[this_chid]?.avatar);\n}\n\nexport function getGlobalRegexes(): RegexScriptData[] {\n  return extension_settings.regex ?? [];\n}\n\nexport function getCharacterRegexes(): RegexScriptData[] {\n  return characters[this_chid]?.data?.extensions?.regex_scripts ?? [];\n}\n\nfunction toTavernRegex(regex_script_data: RegexScriptData, scope: 'global' | 'character'): TavernRegex {\n  return {\n    id: regex_script_data.id,\n    script_name: regex_script_data.scriptName,\n    enabled: !regex_script_data.disabled,\n    run_on_edit: regex_script_data.runOnEdit,\n    scope: scope,\n\n    find_regex: regex_script_data.findRegex,\n    replace_string: regex_script_data.replaceString,\n\n    source: {\n      user_input: regex_script_data.placement.includes(regex_placement.USER_INPUT),\n      ai_output: regex_script_data.placement.includes(regex_placement.AI_OUTPUT),\n      slash_command: regex_script_data.placement.includes(regex_placement.SLASH_COMMAND),\n      world_info: regex_script_data.placement.includes(regex_placement.WORLD_INFO),\n    },\n\n    destination: {\n      display: regex_script_data.markdownOnly,\n      prompt: regex_script_data.promptOnly,\n    },\n\n    min_depth: typeof regex_script_data.minDepth === 'number' ? regex_script_data.minDepth : null,\n    max_depth: typeof regex_script_data.maxDepth === 'number' ? regex_script_data.maxDepth : null,\n  };\n}\n\nfunction fromTavernRegex(tavern_regex: TavernRegex): RegexScriptData {\n  return {\n    id: tavern_regex.id,\n    scriptName: tavern_regex.script_name,\n    disabled: !tavern_regex.enabled,\n    runOnEdit: tavern_regex.run_on_edit,\n\n    findRegex: tavern_regex.find_regex,\n    replaceString: tavern_regex.replace_string,\n    trimStrings: [], // TODO: handle this?\n\n    placement: [\n      ...(tavern_regex.source.user_input ? [regex_placement.USER_INPUT] : []),\n      ...(tavern_regex.source.ai_output ? [regex_placement.AI_OUTPUT] : []),\n      ...(tavern_regex.source.slash_command ? [regex_placement.SLASH_COMMAND] : []),\n      ...(tavern_regex.source.world_info ? [regex_placement.WORLD_INFO] : []),\n    ],\n\n    substituteRegex: 0, // TODO: handle this?\n\n    // @ts-ignore\n    minDepth: tavern_regex.min_depth,\n    // @ts-ignore\n    maxDepth: tavern_regex.max_depth,\n\n    markdownOnly: tavern_regex.destination.display,\n    promptOnly: tavern_regex.destination.prompt,\n  };\n}\n\nexport function registerIframeTavernRegexHandler() {\n  registerIframeHandler(\n    '[TavernRegex][isCharacterTavernRegexesEnabled]',\n    async (event: MessageEvent<IframeIsCharacterTavernRegexEnabled>): Promise<boolean> => {\n      const result = isCharacterTavernRegexEnabled();\n\n      console.info(`${getLogPrefix(event)}查询到局部正则${result ? '被启用' : '被禁用'}`);\n      return result;\n    },\n  );\n\n  registerIframeHandler(\n    '[TavernRegex][getTavernRegexes]',\n    async (event: MessageEvent<IframeGetTavernRegexes>): Promise<TavernRegex[]> => {\n      const option = event.data.option;\n\n      if (!['all', 'enabled', 'disabled'].includes(option.enable_state)) {\n        throw Error(\n          `提供的 enable_state 无效, 请提供 'all', 'enabled' 或 'disabled', 你提供的是: ${option.enable_state}`,\n        );\n      }\n      if (!['all', 'global', 'character'].includes(option.scope)) {\n        throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${option.scope}`);\n      }\n\n      let regexes: TavernRegex[] = [];\n      if (option.scope === 'all' || option.scope === 'global') {\n        regexes = [...regexes, ...getGlobalRegexes().map(regex => toTavernRegex(regex, 'global'))];\n      }\n      if (option.scope === 'all' || option.scope === 'character') {\n        regexes = [...regexes, ...getCharacterRegexes().map(regex => toTavernRegex(regex, 'character'))];\n      }\n      if (option.enable_state !== 'all') {\n        regexes = regexes.filter(regex => regex.enabled === (option.enable_state === 'enabled'));\n      }\n\n      console.info(`${getLogPrefix(event)}获取酒馆正则数据, 选项: ${JSON.stringify(option)}`);\n      return regexes;\n    },\n  );\n\n  registerIframeHandler(\n    '[TavernRegex][replaceTavernRegexes]',\n    async (event: MessageEvent<IframeReplaceTavernRegexes>): Promise<void> => {\n      const regexes = event.data.regexes;\n      const option = event.data.option;\n      if (!['all', 'global', 'character'].includes(option.scope)) {\n        throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${option.scope}`);\n      }\n\n      // FIXME: `trimStrings` and `substituteRegex` are not considered\n      const emptied_regexes = regexes.filter(regex => regex.script_name == '');\n      if (emptied_regexes.length > 0) {\n        throw Error(`不能将酒馆正则的名称设置为空字符串:\\n${JSON.stringify(emptied_regexes.map(regex => regex.id))}`);\n      }\n      const [global_regexes, character_regexes] = partition(regexes, regex => regex.scope === 'global').map(regexes =>\n        regexes.map(fromTavernRegex),\n      );\n\n      const character = characters[this_chid];\n      if (option.scope === 'all' || option.scope === 'global') {\n        extension_settings.regex = global_regexes;\n      }\n      if (option.scope === 'all' || option.scope === 'character') {\n        if (character) {\n          characters[this_chid].data.extensions.regex_scripts = character_regexes;\n          await writeExtensionField(this_chid, 'regex_scripts', character_regexes);\n        }\n      }\n      await saveSettings();\n      if (character) {\n        await saveChatConditional();\n      }\n      await reloadCurrentChat();\n\n      console.info(`${getLogPrefix(event)}替换酒馆正则\\\n${\n  option.scope === 'all' || option.scope === 'global'\n    ? `, 全局正则:\\n${JSON.stringify(global_regexes, undefined, 2)}`\n    : ``\n}\\\n${\n  option.scope === 'all' || option.scope === 'character'\n    ? `, 局部正则:\\n${JSON.stringify(character_regexes, undefined, 2)}`\n    : ``\n}`);\n    },\n  );\n}\n","import { extract } from '@/util/helper';\n\nfunction createObjectURLFromScript(code: string): string {\n  return URL.createObjectURL(new Blob([code], { type: 'application/javascript' }));\n}\n\nclass ScriptUrl {\n  private map: Map<string, string> = new Map();\n\n  public get(name: string): string | undefined {\n    return this.map.get(name);\n  }\n  public set(name: string, code: string): void {\n    this.map.set(name, createObjectURLFromScript(code));\n  }\n  public delete(name: string): string | undefined {\n    const url = extract(this.map, name);\n    if (!url) {\n      return url;\n    }\n    URL.revokeObjectURL(url);\n    return url;\n  }\n}\n\nexport let script_url = new ScriptUrl();\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\nimport { charsPath } from '@/util/extension_variables';\n\nimport { characters, getPastCharacterChats, getRequestHeaders, getThumbnailUrl, this_chid } from '@sillytavern/script';\n\ntype v1CharData = (typeof characters)[number];\n\ninterface IframeGetCharData extends IframeMessage {\n  request: '[Character][getCharData]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetAvatarPath extends IframeMessage {\n  request: '[Character][getCharAvatarPath]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetChatHistoryBrief extends IframeMessage {\n  request: '[Character][getChatHistoryBrief]';\n  name?: string;\n  allowAvatar?: boolean;\n}\n\ninterface IframeGetChatHistoryDetail extends IframeMessage {\n  request: '[Character][getChatHistoryDetail]';\n  data: any[];\n  isGroupChat?: boolean;\n}\n\n/**\n * 角色卡管理类\n * 用于封装角色卡数据操作和提供便捷的访问方法\n */\nexport class Character {\n  /**\n   * v1CharData类型的角色卡数据\n   * @see char-data.js 中的 v1CharData 类型定义\n   */\n  private charData: v1CharData;\n\n  constructor(characterData: v1CharData) {\n    this.charData = characterData;\n  }\n\n  /**\n   * 根据名称或头像id查找角色卡数据\n   * @param options 查找选项\n   * @returns 找到的角色卡数据，找不到为null\n   */\n  static find({ name, allowAvatar = true }: { name?: string; allowAvatar?: boolean } = {}): any {\n    if (name === undefined) {\n      const currentChar = characters[this_chid];\n      if (currentChar) {\n        name = currentChar.avatar;\n        // 确保allowAvatar为true，以便可以通过avatar准确查找角色\n        allowAvatar = true;\n      }\n    }\n\n    const matches = (char: { avatar: string; name: string }) =>\n      !name || char.name === name || (allowAvatar && char.avatar === name);\n\n    let filteredCharacters = characters;\n\n    // 如果有确定的角色头像id提供，则返回该角色\n    if (allowAvatar && name) {\n      const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n      if (characterByAvatar) {\n        return characterByAvatar;\n      }\n    }\n\n    // 查找所有匹配的角色\n    const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n    if (matchingCharacters.length > 1) {\n      console.warn(`[Character] [findCharacter] 找到多个符合条件的角色，返回导入时间最早的角色: ${name}`);\n    }\n\n    if (matchingCharacters.length === 0) {\n      throw new Error(`[Character] [findCharacter] 提供的名称或头像ID为: ${name}，未找到符合条件的角色`);\n    }\n\n    return matchingCharacters[0];\n  }\n\n  /**\n   * 根据名称查找角色卡数据在characters数组中的索引（类似this_chid）\n   * @param name 角色名称\n   * @returns 角色卡数据在characters数组中的索引，未找到返回-1\n   */\n\n  static findCharacterIndex(name: string) {\n    const matchTypes = [\n      (a: string, b: string) => a === b,\n      (a: string, b: string) => a.startsWith(b),\n      (a: string, b: string) => a.includes(b),\n    ];\n\n    const exactAvatarMatch = characters.findIndex(x => x.avatar === name);\n\n    if (exactAvatarMatch !== -1) {\n      return exactAvatarMatch;\n    }\n\n    for (const matchType of matchTypes) {\n      const index = characters.findIndex(x => matchType(x.name.toLowerCase(), name.toLowerCase()));\n      if (index !== -1) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * 从服务器获取每个聊天文件的聊天内容，并将其编译成字典。\n   * 该函数遍历提供的聊天元数据列表，并请求每个聊天的实际聊天内容，\n   *\n   * @param {Array} data - 包含每个聊天的元数据的数组，例如文件名。\n   * @param {boolean} isGroupChat - 一个标志，指示聊天是否为群组聊天。\n   * @returns {Promise<Object>} chat_dict - 一个字典，其中每个键是文件名，值是\n   * 从服务器获取的相应聊天内容。\n   */\n  static async getChatsFromFiles(data: any[], isGroupChat: boolean) {\n    let chat_dict: Record<string, any> = {};\n    let chat_list = Object.values(data)\n      .sort((a, b) => a['file_name'].localeCompare(b['file_name']))\n      .reverse();\n\n    let chat_promise = chat_list.map(({ file_name }) => {\n      return new Promise<void>(async (res, _rej) => {\n        try {\n          // 从文件名中提取角色名称（破折号前的部分）\n          const ch_name = isGroupChat ? '' : file_name.split(' - ')[0];\n\n          // 使用Character.find方法查找角色，获取头像\n          let characterData = null;\n          let avatar_url = '';\n\n          if (!isGroupChat && ch_name) {\n            characterData = Character.find({ name: ch_name });\n            if (characterData) {\n              avatar_url = characterData.avatar;\n            }\n          }\n\n          const endpoint = isGroupChat ? '/api/chats/group/get' : '/api/chats/get';\n          const requestBody = isGroupChat\n            ? JSON.stringify({ id: file_name })\n            : JSON.stringify({\n                ch_name: ch_name,\n                file_name: file_name.replace('.jsonl', ''),\n                avatar_url: avatar_url,\n              });\n\n          const chatResponse = await fetch(endpoint, {\n            method: 'POST',\n            headers: getRequestHeaders(),\n            body: requestBody,\n            cache: 'no-cache',\n          });\n\n          if (!chatResponse.ok) {\n            return res();\n          }\n\n          const currentChat = await chatResponse.json();\n          if (!isGroupChat) {\n            // remove the first message, which is metadata, only for individual chats\n            currentChat.shift();\n          }\n          chat_dict[file_name] = currentChat;\n        } catch (error) {\n          console.error(error);\n        }\n\n        return res();\n      });\n    });\n\n    await Promise.all(chat_promise);\n\n    return chat_dict;\n  }\n\n  /**\n   * 获取角色管理内的数据\n   * @returns 完整的角色管理内的数据对象\n   */\n  getCardData(): v1CharData {\n    return this.charData;\n  }\n\n  /**\n   * 获取角色头像ID\n   * @returns 头像ID/文件名\n   */\n  getAvatarId(): string {\n    return this.charData.avatar || '';\n  }\n\n  /**\n   * 获取正则脚本\n   * @returns 正则脚本数组\n   */\n  getRegexScripts(): Array<{\n    id: string;\n    scriptName: string;\n    findRegex: string;\n    replaceString: string;\n    trimStrings: string[];\n    placement: number[];\n    disabled: boolean;\n    markdownOnly: boolean;\n    promptOnly: boolean;\n    runOnEdit: boolean;\n    substituteRegex: number | boolean;\n    minDepth: number;\n    maxDepth: number;\n  }> {\n    return this.charData.data?.extensions?.regex_scripts || [];\n  }\n\n  /**\n   * 获取角色书\n   * @returns 角色书数据对象或null\n   */\n  getCharacterBook(): {\n    name: string;\n    entries: Array<{\n      keys: string[];\n      secondary_keys?: string[];\n      comment: string;\n      content: string;\n      constant: boolean;\n      selective: boolean;\n      insertion_order: number;\n      enabled: boolean;\n      position: string;\n      extensions: any;\n      id: number;\n    }>;\n  } | null {\n    return this.charData.data?.character_book || null;\n  }\n\n  /**\n   * 获取角色世界名称\n   * @returns 世界名称\n   */\n  getWorldName(): string {\n    return this.charData.data?.extensions?.world || '';\n  }\n}\n\nexport function registerIframeCharacterHandler() {\n  function withCharacter<T>(\n    callback: (character: Character) => T,\n    defaultValue: T | null = null,\n    name?: string,\n    allowAvatar: boolean = true,\n  ): T | null {\n    const characterData = Character.find({ name, allowAvatar });\n    const character = characterData ? new Character(characterData) : null;\n    return character ? callback(character) : defaultValue;\n  }\n  // 通用包装函数，用于处理角色相关的iframe消息\n  function createCharacterHandler<T, E extends IframeMessage & { name?: string; allowAvatar?: boolean }>(\n    eventType: string,\n    handler: (character: Character, event: MessageEvent<E>) => T,\n    defaultValue: T | null = null,\n    logMessage?: (event: MessageEvent<E>, result: T | null, displayName?: string) => string,\n  ) {\n    registerIframeHandler(eventType, async (event: MessageEvent<E>): Promise<T | null> => {\n      const { name, allowAvatar = true } = event.data;\n\n      let displayName = name;\n      if (displayName === undefined) {\n        const currentChar = characters[this_chid];\n        if (currentChar) {\n          displayName = currentChar.name;\n        }\n      }\n\n      const result = withCharacter(character => handler(character, event), defaultValue, name, allowAvatar);\n\n      // 日志打印\n      if (logMessage) {\n        const logText = logMessage(event, null, displayName);\n        if (result instanceof Promise) {\n          result\n            .then(resolvedResult => {\n              console.info(`${getLogPrefix(event)}${logText}`, resolvedResult);\n            })\n            .catch(error => {\n              throw Error(`${getLogPrefix(event)}${logText} - 发生错误: ${error}`);\n            });\n        } else {\n          console.info(`${getLogPrefix(event)}${logText}`, result);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  createCharacterHandler<v1CharData, IframeGetCharData>(\n    '[Character][getCharData]',\n    character => character.getCardData(),\n    null,\n    (_event, _result, displayName) => `获取角色卡数据, 角色: ${displayName || '未知'}`,\n  );\n\n  createCharacterHandler<string, IframeGetAvatarPath>(\n    '[Character][getCharAvatarPath]',\n    character => {\n      const thumbnailPath = getThumbnailUrl('avatar', character.getAvatarId());\n      const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n      return charsPath + targetAvatarImg;\n    },\n    null,\n    (_event, _result, displayName) => `获取角色头像路径, 角色: ${displayName || '未知'}`,\n  );\n\n  createCharacterHandler<Promise<any[]>, IframeGetChatHistoryBrief>(\n    '[Character][getChatHistoryBrief]',\n    async character => {\n      const index = Character.findCharacterIndex(character.getAvatarId());\n      const chats = await getPastCharacterChats(index);\n      return chats;\n    },\n    null,\n    (_event, _result, displayName) => {\n      return `获取角色聊天历史摘要, 角色: ${displayName || '未知'}`;\n    },\n  );\n\n  registerIframeHandler(\n    '[Character][getChatHistoryDetail]',\n    async (event: MessageEvent<IframeGetChatHistoryDetail>) => {\n      const data = event.data.data;\n      const isGroupChat = event.data.isGroupChat || false;\n\n      try {\n        const result = await Character.getChatsFromFiles(data, isGroupChat);\n        console.info(`${getLogPrefix(event)}获取聊天文件详情`, result);\n        return result;\n      } catch (error) {\n        throw Error(`${getLogPrefix(event)}获取聊天文件详情 - 发生错误: ${error}`);\n      }\n    },\n  );\n}\n","import { IframeMessage, getIframeName, getLogPrefix, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  MAX_INJECTION_DEPTH,\n  activateSendButtons,\n  baseChatReplace,\n  characters,\n  chat,\n  chat_metadata,\n  cleanUpMessage,\n  countOccurrences,\n  deactivateSendButtons,\n  eventSource,\n  extension_prompt_roles,\n  extension_prompt_types,\n  getBiasStrings,\n  getCharacterCardFields,\n  getExtensionPromptRoleByName,\n  getMaxContextSize,\n  isOdd,\n  name1,\n  name2,\n  saveChatConditional,\n  saveSettingsDebounced,\n  setExtensionPrompt,\n  setGenerationProgress,\n  showSwipeButtons,\n  stopGeneration,\n  substituteParams,\n  this_chid,\n} from '@sillytavern/script';\nimport { NOTE_MODULE_NAME, metadata_keys, shouldWIAddPrompt } from '@sillytavern/scripts/authors-note';\nimport { extension_settings, getContext } from '@sillytavern/scripts/extensions';\nimport { getRegexedString, regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\nimport {\n  ChatCompletion,\n  Message,\n  MessageCollection,\n  isImageInliningSupported,\n  oai_settings,\n  prepareOpenAIMessages,\n  sendOpenAIRequest,\n  setOpenAIMessageExamples,\n  setOpenAIMessages,\n  setupChatCompletionPromptManager,\n} from '@sillytavern/scripts/openai';\nimport {\n  flushEphemeralStoppingStrings,\n  persona_description_positions,\n  power_user,\n} from '@sillytavern/scripts/power-user';\nimport { Prompt, PromptCollection } from '@sillytavern/scripts/PromptManager';\nimport { Stopwatch, getBase64Async } from '@sillytavern/scripts/utils';\nimport { getWorldInfoPrompt, wi_anchor_position, world_info_include_names } from '@sillytavern/scripts/world-info';\n\n// 在文件顶部添加 abortController 声明\nlet abortController = new AbortController();\n\ninterface IframeGenerate extends IframeMessage {\n  request: '[Generate][generate]';\n  config: GenerateConfig;\n}\n\ninterface IframeGenerateRaw extends IframeMessage {\n  request: '[Generate][generateRaw]';\n  config: GenerateRawConfig;\n}\n\nfunction fromOverrides(overrides: Overrides): detail.OverrideConfig {\n  return {\n    world_info_before: overrides.world_info_before,\n    persona_description: overrides.persona_description,\n    char_description: overrides.char_description,\n    char_personality: overrides.char_personality,\n    scenario: overrides.scenario,\n    world_info_after: overrides.world_info_after,\n    dialogue_examples: overrides.dialogue_examples,\n\n    with_depth_entries: overrides.chat_history?.with_depth_entries,\n    author_note: overrides.chat_history?.author_note,\n    chat_history: overrides.chat_history?.prompts,\n  };\n}\n\nfunction fromInjectionPrompt(inject: InjectionPrompt): detail.InjectionPrompt {\n  const position_map = {\n    before_prompt: 'BEFORE_PROMPT',\n    in_chat: 'IN_CHAT',\n    after_prompt: 'IN_PROMPT',\n    none: 'NONE',\n  } as const;\n  return {\n    role: inject.role,\n    content: inject.content,\n    position: position_map[inject.position],\n    depth: inject.depth,\n    scan: inject.should_scan,\n  };\n}\n\nfunction fromGenerateConfig(config: GenerateConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: true,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    overrides: config.overrides !== undefined ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects !== undefined ? config.injects.map(fromInjectionPrompt) : undefined,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n  };\n}\n\nfunction fromGenerateRawConfig(config: GenerateRawConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: false,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n    overrides: config.overrides ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects ? config.injects.map(fromInjectionPrompt) : undefined,\n    order: config.ordered_prompts,\n  };\n}\n\nnamespace detail {\n  export interface RolePrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n  }\n\n  export interface InjectionPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n    position?: 'IN_PROMPT' | 'IN_CHAT' | 'BEFORE_PROMPT' | 'NONE';\n    depth?: number;\n    scan?: boolean;\n  }\n\n  export interface CustomPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n  }\n\n  // 覆盖配置类型\n  export interface OverrideConfig {\n    world_info_before?: string; // 世界书（角色定义之前的部分）\n    persona_description?: string; // 用户描述\n    char_description?: string; // 角色描述\n    char_personality?: string; // 角色高级定义-性格\n    scenario?: string; // 场景\n    world_info_after?: string; // 世界书（角色定义之后的部分）\n    dialogue_examples?: string; // 角色高级定义-对话示例\n\n    with_depth_entries?: boolean; // 世界书深度\n    author_note?: string; // 作者注释\n    chat_history?: RolePrompt[]; // 聊天历史\n  }\n\n  // 内置提示词条目类型\n  export type BuiltinPromptEntry =\n    | 'world_info_before' // 世界书(角色定义前)\n    | 'persona_description' // 用户描述\n    | 'char_description' // 角色描述\n    | 'char_personality' // 角色性格\n    | 'scenario' // 场景\n    | 'world_info_after' // 世界书(角色定义后)\n    | 'dialogue_examples' // 对话示例\n    | 'chat_history' // 聊天历史\n    | 'user_input'; // 用户输入\n\n  // 生成参数类型\n  export interface GenerateParams {\n    user_input?: string;\n    use_preset?: boolean;\n    image?: File | string;\n    stream?: boolean;\n    overrides?: OverrideConfig;\n    max_chat_history?: number;\n    inject?: InjectionPrompt[];\n    order?: Array<BuiltinPromptEntry | CustomPrompt>;\n  }\n}\n\nconst type = 'quiet';\nconst dryRun = false;\n\nconst character_names_behavior = {\n  NONE: -1,\n  DEFAULT: 0,\n  COMPLETION: 1,\n  CONTENT: 2,\n};\n\nconst roleTypes: Record<\n  'system' | 'user' | 'assistant',\n  (typeof extension_prompt_roles)[keyof typeof extension_prompt_roles]\n> = {\n  system: extension_prompt_roles.SYSTEM,\n  user: extension_prompt_roles.USER,\n  assistant: extension_prompt_roles.ASSISTANT,\n};\nconst default_order: detail.BuiltinPromptEntry[] = [\n  'world_info_before',\n  'persona_description',\n  'char_description',\n  'char_personality',\n  'scenario',\n  'world_info_after',\n  'dialogue_examples',\n  'chat_history',\n  'user_input',\n];\n\nclass StreamingProcessor {\n  public generator: () => AsyncGenerator<{ text: string }, void, void>;\n  public stoppingStrings?: string[];\n  public result: string;\n  public isStopped: boolean;\n  public isFinished: boolean;\n  public abortController: AbortController;\n  private messageBuffer: string;\n\n  constructor() {\n    this.result = '';\n    this.messageBuffer = '';\n    this.isStopped = false;\n    this.isFinished = false;\n    this.generator = this.nullStreamingGeneration;\n    this.abortController = new AbortController();\n  }\n\n  onProgressStreaming(text: string, isFinal: boolean) {\n    // 计算增量文本\n    const newText = text.slice(this.messageBuffer.length);\n    this.messageBuffer = text;\n\n    let processedText = cleanUpMessage(newText, false, false, !isFinal, this.stoppingStrings);\n\n    const charsToBalance = ['*', '\"', '```'];\n    for (const char of charsToBalance) {\n      if (!isFinal && isOdd(countOccurrences(processedText, char))) {\n        const separator = char.length > 1 ? '\\n' : '';\n        processedText = processedText.trimEnd() + separator + char;\n      }\n    }\n\n    eventSource.emit('js_stream_token_received_fully', text);\n    eventSource.emit('js_stream_token_received_incrementally', processedText);\n\n    if (isFinal) {\n      const fullText = cleanUpMessage(text, false, false, false, this.stoppingStrings);\n      eventSource.emit('js_generation_ended', fullText);\n    }\n  }\n\n  onErrorStreaming() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n    this.isStopped = true;\n    unblockGeneration();\n    saveChatConditional();\n  }\n\n  async *nullStreamingGeneration(): AsyncGenerator<{ text: string }, void, void> {\n    throw Error('Generation function for streaming is not hooked up');\n  }\n\n  async generate() {\n    try {\n      const sw = new Stopwatch(1000 / power_user.streaming_fps);\n      const timestamps = [];\n\n      for await (const { text } of this.generator()) {\n        timestamps.push(Date.now());\n        if (this.isStopped) {\n          this.messageBuffer = '';\n          return;\n        }\n\n        this.result = text;\n        await sw.tick(() => this.onProgressStreaming(text, false));\n      }\n\n      if (!this.isStopped) {\n        this.onProgressStreaming(this.result, true);\n      } else {\n        this.messageBuffer = '';\n      }\n\n      const seconds = (timestamps[timestamps.length - 1] - timestamps[0]) / 1000;\n      console.warn(\n        `Stream stats: ${timestamps.length} tokens, ${seconds.toFixed(2)} seconds, rate: ${Number(\n          timestamps.length / seconds,\n        ).toFixed(2)} TPS`,\n      );\n    } catch (err) {\n      if (!this.isFinished) {\n        this.onErrorStreaming();\n        throw Error(`Generate method error: ${err}`);\n      }\n      this.messageBuffer = '';\n      return this.result;\n    }\n\n    this.isFinished = true;\n    return this.result;\n  }\n}\n\nasync function iframeGenerate({\n  user_input = '',\n  use_preset = true,\n  image = null,\n  overrides = undefined,\n  max_chat_history = undefined,\n  inject = [],\n  order = undefined,\n  stream = false,\n}: detail.GenerateParams = {}): Promise<string> {\n  //初始化\n  abortController = new AbortController();\n\n  // 1. 处理用户输入（正则，宏）\n  const processedUserInput = processUserInput(substituteParams(user_input), oai_settings) || '';\n\n  // 2. 准备过滤后的基础数据\n  const baseData = await prepareAndOverrideData(\n    {\n      overrides,\n      max_chat_history,\n      inject,\n      order,\n    },\n    processedUserInput,\n  );\n\n  // 3. 根据 use_preset 分流处理\n  const generate_data = use_preset\n    ? await handlePresetPath(baseData, processedUserInput, {\n        image,\n        overrides,\n        max_chat_history,\n        inject,\n        order,\n      })\n    : await handleCustomPath(\n        baseData,\n        {\n          image,\n          overrides,\n          max_chat_history,\n          inject,\n          order,\n        },\n        processedUserInput,\n      );\n  console.log('[Generate:发送提示词]', generate_data);\n  // 4. 根据 stream 参数决定生成方式\n  return await generateResponse(generate_data, stream);\n}\n\nasync function prepareAndOverrideData(\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const getOverrideContent = (identifier: string): string | detail.RolePrompt[] | undefined => {\n    if (!config.overrides) return undefined;\n    return config.overrides[identifier as keyof detail.OverrideConfig];\n  };\n\n  // 1. 处理角色卡高级定义角色备注 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config)) {\n    handleCharDepthPrompt();\n  }\n\n  // 2. 设置作者注释 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('author_note', config)) {\n    setAuthorNotePrompt(config);\n  }\n\n  // 3. 处理user角色描述 - 仅在chat_history和persona_description都未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('persona_description', config)) {\n    setPersonaDescriptionExtensionPrompt();\n  }\n\n  // 4. 获取角色卡基础字段\n  const {\n    description: rawDescription,\n    personality: rawPersonality,\n    persona: rawPersona,\n    scenario: rawScenario,\n    mesExamples: rawMesExamples,\n    system,\n    jailbreak,\n  } = getCharacterCardFields();\n\n  // 判断是否被过滤,如果被过滤返回空字符串,否则返回override的值或原始值\n  const description = isPromptFiltered('char_description', config)\n    ? ''\n    : getOverrideContent('char_description') ?? rawDescription;\n\n  const personality = isPromptFiltered('char_personality', config)\n    ? ''\n    : getOverrideContent('char_personality') ?? rawPersonality;\n\n  const persona = isPromptFiltered('persona_description', config)\n    ? ''\n    : getOverrideContent('persona_description') ?? rawPersona;\n\n  const scenario = isPromptFiltered('scenario', config) ? '' : getOverrideContent('scenario') ?? rawScenario;\n\n  const mesExamples = isPromptFiltered('dialogue_examples', config)\n    ? ''\n    : getOverrideContent('dialogue_examples') ?? rawMesExamples;\n\n  let mesExamplesArray = parseMesExamples(mesExamples);\n  let oaiMessageExamples = [];\n  oaiMessageExamples = setOpenAIMessageExamples(mesExamplesArray);\n\n  // 5. 获取偏置字符串\n  const { promptBias } = getBiasStrings(processedUserInput, type);\n\n  // 6. 处理自定义注入的提示词\n  if (config.inject) {\n    await handleInjectedPrompts(config);\n  }\n\n  // 7. 处理聊天记录\n  let oaiMessages = [];\n  if (config.overrides?.chat_history) {\n    oaiMessages = [...config.overrides.chat_history].reverse();\n  } else {\n    oaiMessages = setOpenAIMessages(await processChatHistory(chat));\n    if (config.max_chat_history !== undefined) {\n      oaiMessages = oaiMessages.slice(0, config.max_chat_history);\n    }\n  }\n\n  // 添加临时消息用于激活世界书\n  addTemporaryUserMessage(processedUserInput);\n  // 8. 处理世界信息\n  const worldInfo = await processWorldInfo(oaiMessages, config);\n\n  // 移除临时消息\n  removeTemporaryUserMessage();\n\n  // 9. 处理世界书消息示例\n  mesExamplesArray = !isPromptFiltered('dialogue_examples', config)\n    ? await processMessageExamples(mesExamplesArray, worldInfo.worldInfoExamples)\n    : [];\n\n  return {\n    characterInfo: {\n      description,\n      personality,\n      persona,\n      scenario,\n      system: system,\n      jailbreak: jailbreak,\n    },\n    chatContext: {\n      oaiMessages,\n      oaiMessageExamples,\n      promptBias,\n    },\n    worldInfo,\n  };\n}\n\n//处理角色卡中的深度提示词\nfunction handleCharDepthPrompt() {\n  const depthPromptText =\n    baseChatReplace(characters[this_chid]?.data?.extensions?.depth_prompt?.prompt?.trim(), name1, name2) || '';\n  const depthPromptDepth = characters[this_chid]?.data?.extensions?.depth_prompt?.depth ?? '4';\n  const depthPromptRole = getExtensionPromptRoleByName(\n    characters[this_chid]?.data?.extensions?.depth_prompt?.role ?? 'system',\n  );\n  setExtensionPrompt(\n    'DEPTH_PROMPT',\n    depthPromptText,\n    extension_prompt_types.IN_CHAT,\n    depthPromptDepth,\n    extension_settings.note.allowWIScan,\n    depthPromptRole,\n  );\n}\n//处理作者注释\nfunction setAuthorNotePrompt(config: detail.GenerateParams) {\n  const authorNoteOverride = config?.overrides?.author_note;\n  // @ts-ignore\n  let prompt = authorNoteOverride ?? $('#extension_floating_prompt').val();\n\n  setExtensionPrompt(\n    NOTE_MODULE_NAME,\n    prompt,\n    chat_metadata[metadata_keys.position],\n    chat_metadata[metadata_keys.depth],\n    extension_settings.note.allowWIScan,\n    chat_metadata[metadata_keys.role],\n  );\n}\n//用户角色描述提示词设置为提示词管理器之外的选项的情况\nfunction setPersonaDescriptionExtensionPrompt() {\n  const description = power_user.persona_description;\n  const INJECT_TAG = 'PERSONA_DESCRIPTION';\n  setExtensionPrompt(INJECT_TAG, '', extension_prompt_types.IN_PROMPT, 0);\n\n  if (!description || power_user.persona_description_position === persona_description_positions.NONE) {\n    return;\n  }\n\n  //当user信息在作者注释前后 - 仅在作者注释未被过滤时执行\n  const promptPositions = [persona_description_positions.BOTTOM_AN, persona_description_positions.TOP_AN];\n\n  if (promptPositions.includes(power_user.persona_description_position) && shouldWIAddPrompt) {\n    const originalAN = getContext().extensionPrompts[NOTE_MODULE_NAME].value;\n    const ANWithDesc =\n      power_user.persona_description_position === persona_description_positions.TOP_AN\n        ? `${description}\\n${originalAN}`\n        : `${originalAN}\\n${description}`;\n\n    setExtensionPrompt(\n      NOTE_MODULE_NAME,\n      ANWithDesc,\n      chat_metadata[metadata_keys.position],\n      chat_metadata[metadata_keys.depth],\n      extension_settings.note.allowWIScan,\n      chat_metadata[metadata_keys.role],\n    );\n  }\n\n  // user信息深度注入不依赖于作者注释的状态，直接应用\n  if (power_user.persona_description_position === persona_description_positions.AT_DEPTH) {\n    setExtensionPrompt(\n      INJECT_TAG,\n      description,\n      extension_prompt_types.IN_CHAT,\n      power_user.persona_description_depth,\n      true,\n      power_user.persona_description_role,\n    );\n  }\n}\nasync function handleInjectedPrompts(promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>) {\n  if (!promptConfig || !Array.isArray(promptConfig.inject)) return;\n\n  const injects = promptConfig.inject;\n\n  const positionMap = {\n    IN_PROMPT: extension_prompt_types.IN_PROMPT,\n    IN_CHAT: extension_prompt_types.IN_CHAT,\n    BEFORE_PROMPT: extension_prompt_types.BEFORE_PROMPT,\n    NONE: extension_prompt_types.NONE,\n  };\n\n  for (const inject of injects) {\n    const validatedInject = {\n      role: roleTypes[inject.role] ?? extension_prompt_roles.SYSTEM,\n      content: inject.content || '',\n      depth: Number(inject.depth) || 0,\n      scan: Boolean(inject.scan) || true,\n      position: positionMap[inject.position as keyof typeof positionMap] ?? extension_prompt_types.IN_CHAT,\n    };\n\n    // 设置用户自定义注入提示词\n    setExtensionPrompt(\n      `INJECTION-${inject.depth}-${inject.role}`,\n      validatedInject.content,\n      validatedInject.position,\n      validatedInject.depth,\n      validatedInject.scan,\n      validatedInject.role,\n    );\n  }\n}\n// 处理聊天记录\nasync function processChatHistory(chat: any[]) {\n  let coreChat = chat.filter(x => !x.is_system);\n\n  return await Promise.all(\n    coreChat.map(async (chatItem, index) => {\n      let message = chatItem.mes;\n      let regexType = chatItem.is_user ? regex_placement.USER_INPUT : regex_placement.AI_OUTPUT;\n\n      let regexedMessage = getRegexedString(message, regexType, {\n        isPrompt: true,\n        depth: coreChat.length - index - 1,\n      });\n\n      return {\n        ...chatItem,\n        mes: regexedMessage,\n        index,\n      };\n    }),\n  );\n}\n\n// 处理世界书\nasync function processWorldInfo(\n  oaiMessages: detail.RolePrompt[],\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const chatForWI = oaiMessages\n    .filter(x => x.role !== 'system')\n    .map(x => {\n      const name = x.role === 'user' ? name1 : name2;\n      return world_info_include_names ? `${name}: ${x.content}` : x.content;\n    })\n    .reverse();\n\n  const this_max_context = getMaxContextSize();\n  const { worldInfoString, worldInfoBefore, worldInfoAfter, worldInfoExamples, worldInfoDepth } =\n    await getWorldInfoPrompt(chatForWI, this_max_context, dryRun);\n\n  await clearInjectionPrompts(['customDepthWI']);\n\n  if (!isPromptFiltered('with_depth_entries', config)) {\n    processWorldInfoDepth(worldInfoDepth);\n  }\n\n  // 先检查是否被过滤，如果被过滤直接返回null\n  const finalWorldInfoBefore = isPromptFiltered('world_info_before', config)\n    ? null\n    : config.overrides?.world_info_before !== undefined\n    ? config.overrides.world_info_before\n    : worldInfoBefore;\n\n  const finalWorldInfoAfter = isPromptFiltered('world_info_after', config)\n    ? null\n    : config.overrides?.world_info_after !== undefined\n    ? config.overrides.world_info_after\n    : worldInfoAfter;\n\n  return {\n    worldInfoString,\n    worldInfoBefore: finalWorldInfoBefore,\n    worldInfoAfter: finalWorldInfoAfter,\n    worldInfoExamples,\n    worldInfoDepth: !isPromptFiltered('with_depth_entries', config) ? worldInfoDepth : null,\n  };\n}\n// 处理世界信息深度部分\nfunction processWorldInfoDepth(worldInfoDepth: any[]) {\n  if (Array.isArray(worldInfoDepth)) {\n    worldInfoDepth.forEach(entry => {\n      const joinedEntries = entry.entries.join('\\n');\n      setExtensionPrompt(\n        `customDepthWI-${entry.depth}-${entry.role}`,\n        joinedEntries,\n        extension_prompt_types.IN_CHAT,\n        entry.depth,\n        false,\n        entry.role,\n      );\n    });\n  }\n}\n// 处理世界书中示例前后\nasync function processMessageExamples(mesExamplesArray: string[], worldInfoExamples: any[]): Promise<string[]> {\n  // 处理世界信息中的示例\n  for (const example of worldInfoExamples) {\n    if (!example.content.length) continue;\n\n    const formattedExample = baseChatReplace(example.content, name1, name2);\n    const cleanedExample = parseMesExamples(formattedExample);\n\n    if (example.position === wi_anchor_position.before) {\n      mesExamplesArray.unshift(...cleanedExample);\n    } else {\n      mesExamplesArray.push(...cleanedExample);\n    }\n  }\n\n  return mesExamplesArray;\n}\n//处理对话示例格式\nfunction parseMesExamples(examplesStr: string) {\n  if (examplesStr.length === 0 || examplesStr === '<START>') {\n    return [];\n  }\n\n  if (!examplesStr.startsWith('<START>')) {\n    examplesStr = '<START>\\n' + examplesStr.trim();\n  }\n  const blockHeading = '<START>\\n';\n  const splitExamples = examplesStr\n    .split(/<START>/gi)\n    .slice(1)\n    .map(block => `${blockHeading}${block.trim()}\\n`);\n\n  return splitExamples;\n}\n//用户输入先正则处理\nfunction processUserInput(user_input: string, oai_settings: any) {\n  if (user_input === '') {\n    user_input = oai_settings.send_if_empty.trim();\n  }\n  return getRegexedString(user_input, regex_placement.USER_INPUT, {\n    isPrompt: true,\n    depth: 0,\n  });\n}\n//使用预设\nasync function handlePresetPath(\n  baseData: any,\n  processedUserInput: string,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  // prepareOpenAIMessages会从设置里读取场景因此临时覆盖\n  let originalScenario = null;\n\n  try {\n    const scenarioOverride = config?.overrides?.scenario;\n\n    if (scenarioOverride && characters && characters[this_chid]) {\n      // 保存原始场景\n      originalScenario = characters[this_chid].scenario || null;\n      characters[this_chid].scenario = scenarioOverride;\n    }\n    // 添加user消息(一次性)\n    const userMessageTemp = {\n      role: 'user',\n      content: processedUserInput,\n    };\n\n    if (config.image) {\n      userMessageTemp.image = await convertFileToBase64(config.image);\n    }\n\n    baseData.chatContext.oaiMessages.unshift(userMessageTemp);\n\n    const messageData = {\n      name2,\n      charDescription: baseData.characterInfo.description,\n      charPersonality: baseData.characterInfo.personality,\n      Scenario: baseData.characterInfo.scenario,\n      worldInfoBefore: baseData.worldInfo.worldInfoBefore,\n      worldInfoAfter: baseData.worldInfo.worldInfoAfter,\n      extensionPrompts: getContext().extensionPrompts,\n      bias: baseData.chatContext.promptBias,\n      type: 'normal',\n      quietPrompt: '',\n      quietImage: null,\n      cyclePrompt: '',\n      systemPromptOverride: baseData.characterInfo.system,\n      jailbreakPromptOverride: baseData.characterInfo.jailbreak,\n      personaDescription: baseData.characterInfo.persona,\n      messages: baseData.chatContext.oaiMessages,\n      messageExamples: baseData.chatContext.oaiMessageExamples,\n    };\n\n    const [prompt] = await prepareOpenAIMessages(messageData, dryRun);\n\n    return { prompt };\n  } finally {\n    // 恢复原始场景\n    if (originalScenario !== null && characters && characters[this_chid]) {\n      characters[this_chid].scenario = originalScenario;\n    }\n  }\n}\nasync function convertSystemPromptsToCollection(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const promptCollection = new PromptCollection();\n  const examplesCollection = new MessageCollection('dialogue_examples');\n  // 处理自定义注入\n  const customPrompts = (promptConfig.order || default_order)\n    .map((item, index) => {\n      if (typeof item === 'object' && item.role && item.content) {\n        const identifier = `custom_prompt_${index}`;\n        return {\n          identifier,\n          role: item.role as 'system' | 'user' | 'assistant',\n          content: item.content,\n        };\n      }\n      return null;\n    })\n    .filter((item): item is NonNullable<typeof item> => item !== null);\n\n  for (const prompt of customPrompts) {\n    promptCollection.add(\n      new Prompt({\n        identifier: prompt.identifier,\n        role: prompt.role,\n        content: prompt.content,\n        system_prompt: prompt.role === 'system',\n      }),\n    );\n  }\n\n  // 处理角色信息\n  const characterPrompts = [\n    {\n      id: 'char_description',\n      content: baseData.characterInfo.description,\n      role: 'system',\n    },\n    {\n      id: 'char_personality',\n      content: baseData.characterInfo.personality,\n      role: 'system',\n    },\n    {\n      id: 'scenario',\n      content: baseData.characterInfo.scenario,\n      role: 'system',\n    },\n  ];\n\n  // 添加角色相关提示词\n  characterPrompts.forEach(prompt => {\n    if (prompt.content) {\n      promptCollection.add(\n        new Prompt({\n          identifier: prompt.id,\n          role: prompt.role,\n          content: prompt.content,\n          system_prompt: true,\n        }),\n      );\n    }\n  });\n\n  //当user信息在提示词管理器中时\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.IN_PROMPT\n  ) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'persona_description',\n        role: 'system',\n        content: baseData.characterInfo.persona,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  // 处理世界信息\n  if (baseData.worldInfo.world_info_before) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'world_info_before',\n        role: 'system',\n        content: baseData.worldInfo.world_info_before,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.worldInfo.world_info_after) {\n    promptCollection.add(\n      new Prompt({\n        identifier: 'world_info_after',\n        role: 'system',\n        content: baseData.worldInfo.world_info_after,\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.chatContext.oaiMessageExamples.length > 0) {\n    // 遍历所有对话示例\n    for (const dialogue of [...baseData.chatContext.oaiMessageExamples]) {\n      const dialogueIndex = baseData.chatContext.oaiMessageExamples.indexOf(dialogue);\n      const chatMessages = [];\n\n      for (let promptIndex = 0; promptIndex < dialogue.length; promptIndex++) {\n        const prompt = dialogue[promptIndex];\n        const role = 'system';\n        const content = prompt.content || '';\n        const identifier = `dialogue_examples ${dialogueIndex}-${promptIndex}`;\n\n        const chatMessage = await Message.createAsync(role, content, identifier);\n        await chatMessage.setName(prompt.name);\n        chatMessages.push(chatMessage);\n      }\n      for (const message of chatMessages) {\n        examplesCollection.add(message);\n      }\n    }\n  }\n  return {\n    systemPrompts: promptCollection,\n    dialogue_examples: examplesCollection,\n  };\n}\n//不使用预设\nasync function handleCustomPath(\n  baseData: any,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const chatCompletion = new ChatCompletion();\n  chatCompletion.setTokenBudget(oai_settings.openai_max_context, oai_settings.openai_max_tokens);\n  chatCompletion.reserveBudget(3);\n  const orderArray = config.order || default_order;\n  const positionMap: Record<string, number> = orderArray.reduce((acc: Record<string, number>, item, index) => {\n    if (typeof item === 'string') {\n      acc[item.toLowerCase()] = index;\n    } else if (typeof item === 'object') {\n      acc[`custom_prompt_${index}`] = index;\n    }\n    return acc;\n  }, {});\n\n  //转换为集合\n  const { systemPrompts, dialogue_examples } = await convertSystemPromptsToCollection(baseData, config);\n  const addToChatCompletionInOrder = async (source: any, index: number) => {\n    if (typeof source === 'object') {\n      // 处理自定义注入\n      const collection = new MessageCollection(`custom_prompt_${index}`);\n      const message = await Message.createAsync(source.role, source.content, `custom_prompt_${index}`);\n      collection.add(message);\n      chatCompletion.add(collection, index);\n    } else if (systemPrompts.has(source)) {\n      // 处理普通提示词\n      const prompt = systemPrompts.get(source);\n      const collection = new MessageCollection(source);\n      const message = await Message.fromPromptAsync(prompt);\n      collection.add(message);\n      chatCompletion.add(collection, positionMap[source]);\n    }\n  };\n\n  // 处理所有类型的提示词\n  for (const [index, item] of orderArray.entries()) {\n    if (typeof item === 'string') {\n      // 使用 isPromptFiltered 替代 promptFilter 判断\n      if (!isPromptFiltered(item, config)) {\n        await addToChatCompletionInOrder(item, index);\n      }\n    } else if (typeof item === 'object' && item.role && item.content) {\n      await addToChatCompletionInOrder(item, index);\n    }\n  }\n\n  const dialogue_examplesIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'dialogue_examples',\n  );\n\n  if (dialogue_examplesIndex !== -1 && !isPromptFiltered('dialogue_examples', config)) {\n    chatCompletion.add(dialogue_examples, dialogue_examplesIndex);\n  }\n  //给user输入预留token\n  const userInputMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n  chatCompletion.reserveBudget(userInputMessage);\n\n  await processChatHistoryAndInject(baseData, config, chatCompletion, processedUserInput);\n  chatCompletion.freeBudget(userInputMessage);\n\n  //根据当前预设决定是否合并连续系统role消息\n  if (oai_settings.squash_system_messages) {\n    await chatCompletion.squashSystemMessages();\n  }\n  const prompt = chatCompletion.getChat();\n  return { prompt };\n}\n\nasync function processChatHistoryAndInject(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  chatCompletion: ChatCompletion,\n  processedUserInput: string,\n) {\n  const orderArray = promptConfig.order || default_order;\n  const chatHistoryIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'chat_history',\n  );\n  const userInputIndex = orderArray.findIndex(item => typeof item === 'string' && item.toLowerCase() === 'user_input');\n\n  const hasUserInput = userInputIndex !== -1;\n  const hasChatHistory = chatHistoryIndex !== -1;\n  const isChatHistoryFiltered = isPromptFiltered('chat_history', promptConfig);\n\n  // 创建用户输入消息\n  const userMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n\n  // 仅在需要时添加图像\n  if (promptConfig.image && hasUserInput) {\n    await userMessage.addImage(await convertFileToBase64(promptConfig.image));\n  }\n\n  // 如果聊天记录被过滤或不在order中，只处理用户输入\n  if (isChatHistoryFiltered || !hasChatHistory) {\n    const insertIndex = hasUserInput ? userInputIndex : orderArray.length;\n    chatCompletion.add(new MessageCollection('user_input', userMessage), insertIndex);\n    return;\n  }\n\n  // 处理聊天记录\n  const chatCollection = new MessageCollection('chat_history');\n\n  // 为新聊天指示预留token\n  const newChat = oai_settings.new_chat_prompt;\n  const newChatMessage = await Message.createAsync('system', substituteParams(newChat), 'newMainChat');\n  chatCompletion.reserveBudget(newChatMessage);\n\n  // 添加新聊天提示词到集合的最前面\n  chatCollection.add(newChatMessage);\n\n  // 处理空消息替换\n  const lastChatPrompt = baseData.chatContext.oaiMessages[baseData.chatContext.oaiMessages.length - 1];\n  const emptyMessage = await Message.createAsync('user', oai_settings.send_if_empty, 'emptyUserMessageReplacement');\n\n  if (\n    lastChatPrompt &&\n    lastChatPrompt.role === 'assistant' &&\n    oai_settings.send_if_empty &&\n    chatCompletion.canAfford(emptyMessage)\n  ) {\n    chatCollection.add(emptyMessage);\n  }\n\n  // 将用户消息添加到消息数组中准备处理注入\n  if (!hasUserInput) {\n    const userPrompt = {\n      role: 'user',\n      content: processedUserInput,\n      identifier: 'user_input',\n      image: promptConfig.image ? await convertFileToBase64(promptConfig.image) : undefined,\n    };\n    baseData.chatContext.oaiMessages.unshift(userPrompt);\n  }\n\n  // 处理注入和添加消息\n  const messages = (await populationInjectionPrompts(baseData.chatContext.oaiMessages, promptConfig.inject)).reverse();\n  const imageInlining = isImageInliningSupported();\n  // 添加聊天记录\n  const chatPool = [...messages];\n  for (const chatPrompt of chatPool) {\n    const prompt = new Prompt(chatPrompt);\n    prompt.identifier = `chat_history-${messages.length - chatPool.indexOf(chatPrompt)}`;\n    prompt.content = substituteParams(prompt.content);\n\n    const chatMessage = await Message.fromPromptAsync(prompt);\n    const promptManager = setupChatCompletionPromptManager();\n    if (promptManager.serviceSettings.names_behavior === character_names_behavior.COMPLETION && prompt.name) {\n      const messageName = promptManager.isValidName(prompt.name)\n        ? prompt.name\n        : promptManager.sanitizeName(prompt.name);\n      await chatMessage.setName(messageName);\n    }\n    if (imageInlining && chatPrompt.image) {\n      await chatMessage.addImage(chatPrompt.image);\n    }\n    if (chatCompletion.canAfford(chatMessage)) {\n      chatCollection.add(chatMessage);\n    } else {\n      break;\n    }\n  }\n\n  // 释放新聊天提示词的预留token\n  chatCompletion.freeBudget(newChatMessage);\n\n  if (hasUserInput) {\n    // 按各自在order中的位置添加聊天记录和用户输入\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n    chatCompletion.add(new MessageCollection('user_input', userMessage), userInputIndex);\n  } else {\n    // 聊天记录中已包含用户输入，直接添加到chat_history位置\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n  }\n}\nasync function populationInjectionPrompts(messages: detail.RolePrompt[], customInjects: detail.InjectionPrompt[] = []) {\n  let processedMessages = [...messages];\n  let totalInsertedMessages = 0;\n  const injectionPrompts = [];\n\n  const authorsNote = getContext().extensionPrompts[NOTE_MODULE_NAME];\n  if (authorsNote && authorsNote.value) {\n    injectionPrompts.push({\n      role: getPromptRole(authorsNote.role),\n      content: authorsNote.value,\n      identifier: 'authorsNote',\n      injection_depth: authorsNote.depth,\n      injected: true,\n    });\n  }\n\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.AT_DEPTH\n  ) {\n    injectionPrompts.push({\n      role: 'system',\n      content: power_user.persona_description,\n      identifier: 'persona_description',\n      injection_depth: power_user.persona_description_depth,\n      injected: true,\n    });\n  }\n\n  // 处理自定义注入\n  if (Array.isArray(customInjects)) {\n    for (const inject of customInjects) {\n      injectionPrompts.push({\n        identifier: `INJECTION-${inject.role}-${inject.depth}`,\n        role: inject.role,\n        content: inject.content,\n        injection_depth: inject.depth || 0,\n        injected: true,\n      });\n    }\n  }\n\n  for (let i = 0; i <= MAX_INJECTION_DEPTH; i++) {\n    const depthPrompts = injectionPrompts.filter(prompt => prompt.injection_depth === i && prompt.content);\n\n    const roles = ['system', 'user', 'assistant'];\n    const roleMessages = [];\n    const separator = '\\n';\n\n    for (const role of roles) {\n      // 直接处理当前深度和角色的所有提示词\n      const rolePrompts = depthPrompts\n        .filter(prompt => prompt.role === role)\n        .map(x => x.content.trim())\n        .join(separator);\n\n      if (rolePrompts) {\n        roleMessages.push({\n          role: role,\n          content: rolePrompts,\n          injected: true,\n        });\n      }\n    }\n\n    if (roleMessages.length) {\n      const injectIdx = i + totalInsertedMessages;\n      processedMessages.splice(injectIdx, 0, ...roleMessages);\n      totalInsertedMessages += roleMessages.length;\n    }\n  }\n\n  return processedMessages;\n}\n\nfunction getPromptRole(role: number) {\n  switch (role) {\n    case extension_prompt_roles.SYSTEM:\n      return 'system';\n    case extension_prompt_roles.USER:\n      return 'user';\n    case extension_prompt_roles.ASSISTANT:\n      return 'assistant';\n    default:\n      return 'system';\n  }\n}\n\n//生成响应\nasync function generateResponse(generate_data: any, useStream = false): Promise<string> {\n  let result = '';\n  try {\n    deactivateSendButtons();\n\n    if (useStream) {\n      let originalStreamSetting = oai_settings.stream_openai;\n      if (!originalStreamSetting) {\n        oai_settings.stream_openai = true;\n        saveSettingsDebounced();\n      }\n      const streamingProcessor = new StreamingProcessor();\n      streamingProcessor.generator = await sendOpenAIRequest('normal', generate_data.prompt, abortController.signal);\n      result = (await streamingProcessor.generate()) as string;\n      // console.log(\"getMessage\", getMessage);\n      if (originalStreamSetting !== oai_settings.stream_openai) {\n        oai_settings.stream_openai = originalStreamSetting;\n        saveSettingsDebounced();\n      }\n    } else {\n      eventSource.emit('js_generation_started');\n      const response = await sendOpenAIRequest(type, generate_data.prompt, abortController.signal);\n      result = await handleResponse(response);\n    }\n  } catch (error) {\n    throw error;\n  } finally {\n    unblockGeneration();\n    await clearInjectionPrompts(['INJECTION']);\n  }\n  return result;\n}\n\n// 处理响应\nasync function handleResponse(response: any) {\n  if (!response) {\n    throw Error(`未得到响应`);\n  }\n  if (response.error) {\n    if (response?.response) {\n      // @ts-ignore\n      toastr.error(response.response, t`API Error`, {\n        preventDuplicates: true,\n      });\n    }\n    throw Error(response?.response);\n  }\n  const message: string = extractMessageFromData(response);\n  eventSource.emit('js_generation_ended', message);\n  return message;\n}\n\nfunction unblockGeneration() {\n  activateSendButtons();\n  showSwipeButtons();\n  setGenerationProgress(0);\n  flushEphemeralStoppingStrings();\n}\n\n// 清理注入\nasync function clearInjectionPrompts(prefixes: string[]) {\n  const prompts = getContext().extensionPrompts;\n  Object.keys(prompts)\n    .filter(key => prefixes.some(prefix => key.startsWith(prefix)))\n    .forEach(key => delete prompts[key]);\n\n  await saveChatConditional();\n}\nfunction extractMessageFromData(data: any) {\n  if (typeof data === 'string') {\n    return data;\n  }\n\n  return (\n    data?.choices?.[0]?.message?.content ??\n    data?.choices?.[0]?.text ??\n    data?.text ??\n    data?.message?.content?.[0]?.text ??\n    data?.message?.tool_plan ??\n    ''\n  );\n}\n\nasync function convertFileToBase64(image: File | string): Promise<string> {\n  if (image instanceof File) {\n    return await getBase64Async(image);\n  }\n  return image;\n}\n\nfunction addTemporaryUserMessage(userContent: string) {\n  setExtensionPrompt('TEMP_USER_MESSAGE', userContent, extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction removeTemporaryUserMessage() {\n  setExtensionPrompt('TEMP_USER_MESSAGE', '', extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction isPromptFiltered(promptId: string, config: { overrides?: detail.OverrideConfig }): boolean {\n  if (!config.overrides) {\n    return false;\n  }\n\n  if (promptId === 'with_depth_entries') {\n    return config.overrides.with_depth_entries === false;\n  }\n\n  // 特殊处理 chat_history\n  if (promptId === 'chat_history') {\n    const prompts = config.overrides.chat_history;\n    return prompts !== undefined && prompts.length === 0;\n  }\n\n  // 对于普通提示词，只有当它在 overrides 中存在且为空字符串时才被过滤\n  const override = config.overrides[promptId as keyof Omit<detail.OverrideConfig, 'chat_history'>];\n  return override !== undefined && override === '';\n}\n\nexport function registerIframeGenerateHandler() {\n  registerIframeHandler('[Generate][generate]', async (event: MessageEvent<IframeGenerate>): Promise<string> => {\n    const iframe_name = getIframeName(event);\n    const config = event.data.config;\n\n    console.info(`${getLogPrefix(event)}(${iframe_name}) 发送生成请求: ${config}`);\n\n    const converted_config = fromGenerateConfig(config);\n    return await iframeGenerate(converted_config);\n  });\n\n  registerIframeHandler('[Generate][generateRaw]', async (event: MessageEvent<IframeGenerateRaw>): Promise<string> => {\n    const iframe_name = getIframeName(event);\n    const config = event.data.config;\n\n    console.info(`${getLogPrefix(event)}(${iframe_name}) 发送生成请求: ${config}`);\n\n    const converted_config = fromGenerateRawConfig(config);\n    return await iframeGenerate(converted_config);\n  });\n}\n\n$(document).on('click', '#mes_stop', function () {\n  const wasStopped = stopGeneration();\n  if (wasStopped) {\n    if (abortController) {\n      abortController.abort('Clicked stop button');\n    }\n    unblockGeneration();\n  }\n});\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { debounce } from '@sillytavern/scripts/utils';\nimport {\n  createWorldInfoEntry,\n  deleteWIOriginalDataValue,\n  loadWorldInfo,\n  originalWIDataKeyMap,\n  saveWorldInfo,\n  setWIOriginalDataValue,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\ninterface IframeGetLorebookEntries extends IframeMessage {\n  request: '[LorebookEntry][getLorebookEntries]';\n  lorebook: string;\n  option: Required<GetLorebookEntriesOption>;\n}\n\ninterface IframeSetLorebookEntries extends IframeMessage {\n  request: '[LorebookEntry][setLorebookEntries]';\n  lorebook: string;\n  entries: (Pick<LorebookEntry, 'uid'> & Partial<Omit<LorebookEntry, 'uid'>>)[];\n}\n\ninterface IframeCreateLorebookEntry extends IframeMessage {\n  request: '[LorebookEntry][createLorebookEntry]';\n  lorebook: string;\n  field_values: Partial<Omit<LorebookEntry, 'uid'>>;\n}\n\ninterface IframeDeleteLorebookEntry extends IframeMessage {\n  request: '[LorebookEntry][deleteLorebookEntry]';\n  lorebook: string;\n  lorebook_uid: number;\n}\n\nfunction toLorebookEntry(entry: any): LorebookEntry {\n  return {\n    uid: entry.uid,\n    display_index: entry.displayIndex,\n    comment: entry.comment,\n    enabled: !entry.disable,\n    type: entry.constant ? 'constant' : entry.vectorized ? 'vectorized' : 'selective',\n    position:\n      // @ts-ignore\n      {\n        0: 'before_character_definition',\n        1: 'after_character_definition',\n        5: 'before_example_messages',\n        6: 'after_example_messages',\n        2: 'before_author_note',\n        3: 'after_author_note',\n      }[entry.position] ??\n      (entry.role === 0 ? 'at_depth_as_system' : entry.role === 1 ? 'at_depth_as_user' : 'at_depth_as_assistant'),\n    depth: entry.position === 4 ? entry.depth : null,\n    order: entry.order,\n    probability: entry.probability,\n\n    key: entry.key,\n    logic: {\n      0: 'and_any',\n      1: 'and_all',\n      2: 'not_any',\n      3: 'not_all',\n    }[entry.selectiveLogic as number] as 'and_any' | 'and_all' | 'not_any' | 'not_all',\n    filter: entry.keysecondary,\n\n    scan_depth: entry.scanDepth ?? 'same_as_global',\n    case_sensitive: entry.caseSensitive ?? 'same_as_global',\n    match_whole_words: entry.matchWholeWords ?? 'same_as_global',\n    use_group_scoring: entry.useGroupScoring ?? 'same_as_global',\n    automation_id: entry.automationId || null,\n\n    exclude_recursion: entry.excludeRecursion,\n    prevent_recursion: entry.preventRecursion,\n    delay_until_recursion: entry.delayUntilRecursion,\n\n    content: entry.content,\n\n    group: entry.group,\n    group_prioritized: entry.groupOverride,\n    group_weight: entry.groupWeight,\n    sticky: entry.sticky || null,\n    cooldown: entry.cooldown || null,\n    delay: entry.delay || null,\n  };\n}\n\nfunction fromPartialLorebookEntry(entry: Partial<LorebookEntry>): any {\n  const transformers = {\n    uid: (value: LorebookEntry['uid']) => ({ uid: value }),\n    display_index: (value: LorebookEntry['display_index']) => ({ displayIndex: value }),\n\n    comment: (value: LorebookEntry['comment']) => ({ comment: value }),\n    enabled: (value: LorebookEntry['enabled']) => ({ disable: !value }),\n    type: (value: LorebookEntry['type']) => ({\n      constant: value === 'constant',\n      vectorized: value === 'vectorized',\n    }),\n    position: (value: LorebookEntry['position']) => ({\n      position: {\n        before_character_definition: 0,\n        after_character_definition: 1,\n        before_example_messages: 5,\n        after_example_messages: 6,\n        before_author_note: 2,\n        after_author_note: 3,\n        at_depth_as_system: 4,\n        at_depth_as_user: 4,\n        at_depth_as_assistant: 4,\n      }[value],\n      role:\n        // @ts-ignore\n        {\n          at_depth_as_system: 0,\n          at_depth_as_user: 1,\n          at_depth_as_assistant: 2,\n        }[value] ?? null,\n    }),\n    depth: (value: LorebookEntry['depth']) => ({ depth: value === null ? 4 : value }),\n    order: (value: LorebookEntry['order']) => ({ order: value }),\n    probability: (value: LorebookEntry['probability']) => ({ probability: value }),\n\n    key: (value: LorebookEntry['key']) => ({ key: value }),\n    logic: (value: LorebookEntry['logic']) => ({\n      selectiveLogic: {\n        and_any: 0,\n        and_all: 1,\n        not_any: 2,\n        not_all: 3,\n      }[value],\n    }),\n    filter: (value: LorebookEntry['filter']) => ({ keysecondary: value }),\n\n    scan_depth: (value: LorebookEntry['scan_depth']) => ({ scanDepth: value === 'same_as_global' ? null : value }),\n    case_sensitive: (value: LorebookEntry['case_sensitive']) => ({\n      caseSensitive: value === 'same_as_global' ? null : value,\n    }),\n    match_whole_words: (value: LorebookEntry['match_whole_words']) => ({\n      matchWholeWords: value === 'same_as_global' ? null : value,\n    }),\n    use_group_scoring: (value: LorebookEntry['use_group_scoring']) => ({\n      useGroupScoring: value === 'same_as_global' ? null : value,\n    }),\n    automation_id: (value: LorebookEntry['automation_id']) => ({ automationId: value === null ? '' : value }),\n\n    exclude_recursion: (value: LorebookEntry['exclude_recursion']) => ({ excludeRecursion: value }),\n    prevent_recursion: (value: LorebookEntry['prevent_recursion']) => ({ preventRecursion: value }),\n    delay_until_recursion: (value: LorebookEntry['delay_until_recursion']) => ({ delayUntilRecursion: value }),\n\n    content: (value: LorebookEntry['content']) => ({ content: value }),\n\n    group: (value: LorebookEntry['group']) => ({ group: value }),\n    group_prioritized: (value: LorebookEntry['group_prioritized']) => ({ groupOverride: value }),\n    group_weight: (value: LorebookEntry['group_weight']) => ({ groupWeight: value }),\n    sticky: (value: LorebookEntry['sticky']) => ({ sticky: value === null ? 0 : value }),\n    cooldown: (value: LorebookEntry['cooldown']) => ({ cooldown: value === null ? 0 : value }),\n    delay: (value: LorebookEntry['delay']) => ({ delay: value === null ? 0 : value }),\n  };\n\n  return Object.entries(entry)\n    .filter(([_, value]) => value !== undefined)\n    .reduce(\n      (result, [field, value]) => ({\n        ...result,\n        // @ts-ignore\n        ...transformers[field]?.(value),\n      }),\n      {},\n    );\n}\n\nfunction assignFieldValuesToWiEntry(data: any, wi_entry: any, field_values: any) {\n  Object.entries(field_values).forEach(([field, value]) => {\n    wi_entry[field] = value;\n    // @ts-ignore\n    const original_wi_mapped_key = originalWIDataKeyMap[field];\n    if (original_wi_mapped_key) {\n      // @ts-ignore\n      setWIOriginalDataValue(data, wi_entry.uid, original_wi_mapped_key, value);\n    }\n  });\n}\n\nfunction reloadEditor(file: string): void {\n  const currentIndex = Number($('#world_editor_select').val());\n  const selectedIndex = world_names.indexOf(file);\n  if (selectedIndex !== -1 && currentIndex === selectedIndex) {\n    $('#world_editor_select').val(selectedIndex).trigger('change');\n  }\n}\n\nconst reloadEditorDebounced = debounce(reloadEditor);\n\nexport function registerIframeLorebookEntryHandler() {\n  registerIframeHandler(\n    '[LorebookEntry][getLorebookEntries]',\n    async (event: MessageEvent<IframeGetLorebookEntries>): Promise<LorebookEntry[]> => {\n      const lorebook = event.data.lorebook;\n      const option = event.data.option;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n\n      // @ts-ignore\n      let entries: LorebookEntry[] = Object.values((await loadWorldInfo(lorebook)).entries).map(toLorebookEntry);\n      if (option.filter !== 'none') {\n        entries = entries.filter(entry =>\n          Object.entries(option.filter).every(([field, expected_value]) => {\n            // @ts-ignore\n            const entry_value = entry[field];\n            if (Array.isArray(entry_value)) {\n              return (expected_value as string[]).every(value => entry_value.includes(value));\n            }\n            if (typeof entry_value === 'string') {\n              return entry_value.includes(expected_value as string);\n            }\n            return entry_value === expected_value;\n          }),\n        );\n      }\n\n      console.info(`${getLogPrefix(event)}获取世界书 '${lorebook}' 中的条目, 选项: ${JSON.stringify(option)}`);\n      return entries;\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][setLorebookEntries]',\n    async (event: MessageEvent<IframeSetLorebookEntries>): Promise<void> => {\n      const lorebook = event.data.lorebook;\n      const entries = event.data.entries;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n      const data = await loadWorldInfo(lorebook);\n\n      const process_entry = async (entry: (typeof entries)[0]): Promise<void> => {\n        // @ts-ignore\n        const wi_entry = data.entries[entry.uid];\n        if (!wi_entry) {\n          throw Error(`未能在世界书 '${lorebook}' 中找到 uid=${entry.uid} 的条目`);\n        }\n        assignFieldValuesToWiEntry(data, wi_entry, fromPartialLorebookEntry(entry));\n      };\n\n      await Promise.all(entries.map(process_entry));\n      await saveWorldInfo(lorebook, data);\n      reloadEditorDebounced(lorebook);\n\n      console.info(\n        `${getLogPrefix(event)}修改世界书 '${lorebook}' 中以下条目的以下字段:\\n${JSON.stringify(\n          entries,\n          undefined,\n          2,\n        )}`,\n      );\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][createLorebookEntry]',\n    async (event: MessageEvent<IframeCreateLorebookEntry>): Promise<number> => {\n      const lorebook = event.data.lorebook;\n      const field_values = event.data.field_values;\n\n      if (!world_names.includes(lorebook)) {\n        throw Error(`未能找到世界书 '${lorebook}'`);\n      }\n      const data = await loadWorldInfo(lorebook);\n      const wi_entry = createWorldInfoEntry(lorebook, data) as any;\n      const partial_lorebook_entry = fromPartialLorebookEntry(field_values);\n      if (partial_lorebook_entry.uid) {\n        delete partial_lorebook_entry.uid;\n      }\n      assignFieldValuesToWiEntry(data, wi_entry, partial_lorebook_entry);\n\n      await saveWorldInfo(lorebook, data);\n      reloadEditorDebounced(lorebook);\n\n      console.info(\n        `${getLogPrefix(event)}在世界书 '${lorebook}' 中新建 uid='${wi_entry.uid}' 条目, 并设置内容:\\n${JSON.stringify(\n          field_values,\n          undefined,\n          2,\n        )}`,\n      );\n      return wi_entry.uid;\n    },\n  );\n\n  registerIframeHandler(\n    '[LorebookEntry][deleteLorebookEntry]',\n    async (event: MessageEvent<IframeDeleteLorebookEntry>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n      const lorebook_uid = event.data.lorebook_uid;\n\n      const data = await loadWorldInfo(lorebook);\n      // QUESTION: 好像没办法从 data 检测世界书是否存在?\n      let deleted = false;\n      // @ts-ignore 18046\n      if (data.entries[lorebook_uid]) {\n        // @ts-ignore 18046\n        delete data.entries[lorebook_uid];\n        deleted = true;\n      }\n      if (deleted) {\n        // @ts-ignore 2345\n        deleteWIOriginalDataValue(data, lorebook_uid);\n        await saveWorldInfo(lorebook, data);\n        reloadEditorDebounced(lorebook);\n      }\n\n      console.info(\n        `${getLogPrefix(event)}删除世界书 '${lorebook}' 中的 uid='${lorebook_uid}' 条目${deleted ? '成功' : '失败'}`,\n      );\n      return deleted;\n    },\n  );\n}\n","import { registerIframeAudioHandler } from '@/iframe_server/audio';\nimport { registerIframeCharacterHandler } from '@/iframe_server/character';\nimport { registerIframeChatMessageHandler } from '@/iframe_server/chat_message';\nimport { registerIframeDisplayedMessageHandler } from '@/iframe_server/displayed_message';\nimport { registerIframeFrontendVersionHandler } from '@/iframe_server/frontend_version';\nimport { registerIframeGenerateHandler } from '@/iframe_server/generate';\nimport { registerIframeLorebookHandler } from '@/iframe_server/lorebook';\nimport { registerIframeLorebookEntryHandler } from '@/iframe_server/lorebook_entry';\nimport { registerIframeSlashHandler } from '@/iframe_server/slash';\nimport { registerIframeTavernRegexHandler } from '@/iframe_server/tavern_regex';\nimport { registerIframeUtilHandler } from '@/iframe_server/util';\nimport { registerIframeVariableHandler } from '@/iframe_server/variables';\nimport { IframeMessage, getLogPrefix, iframe_handlers } from '@/iframe_server/_impl';\n\nimport { t } from '@sillytavern/scripts/i18n';\n\nexport async function handleIframe(event: MessageEvent<IframeMessage>): Promise<void> {\n  if (!event.data) return;\n\n  const handler = iframe_handlers[event.data.request];\n  if (!handler) {\n    return;\n  }\n\n  let result: any = undefined;\n  try {\n    result = await handler(event);\n  } catch (err) {\n    const error = err as Error;\n    toastr.error(t`${getLogPrefix(event)}${error.name + ': ' + error.message}${error.stack ? error.stack : ''}`);\n    console.error(getLogPrefix(event), error);\n  } finally {\n    (event.source as MessageEventSource).postMessage(\n      {\n        request: event.data.request + '_callback',\n        uid: event.data.uid,\n        result: result,\n      },\n      {\n        targetOrigin: '*',\n      },\n    );\n  }\n}\n\nregisterIframeChatMessageHandler();\nregisterIframeDisplayedMessageHandler();\nregisterIframeFrontendVersionHandler();\nregisterIframeGenerateHandler();\nregisterIframeLorebookEntryHandler();\nregisterIframeLorebookHandler();\nregisterIframeSlashHandler();\nregisterIframeTavernRegexHandler();\nregisterIframeUtilHandler();\nregisterIframeVariableHandler();\nregisterIframeCharacterHandler();\nregisterIframeAudioHandler();\n","import { handlePartialRender } from '@/component/message_iframe';\nimport { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  chat,\n  messageFormatting,\n  reloadCurrentChat,\n  saveChatConditional,\n  substituteParamsExtended,\n  system_message_types,\n} from '@sillytavern/script';\nimport { stringToRange } from '@sillytavern/scripts/utils';\n\ninterface IframeGetChatMessages extends IframeMessage {\n  request: '[ChatMessage][getChatMessages]';\n  range: string;\n  option: Required<GetChatMessagesOption>;\n}\n\ninterface IframeSetChatMessage extends IframeMessage {\n  request: '[ChatMessage][setChatMessage]';\n  field_values: ChatMessageToSet;\n  message_id: number;\n  option: Required<SetChatMessageOption>;\n}\n\nexport function registerIframeChatMessageHandler() {\n  registerIframeHandler(\n    '[ChatMessage][getChatMessages]',\n    async (event: MessageEvent<IframeGetChatMessages>): Promise<ChatMessage[]> => {\n      const range_demacroed = substituteParamsExtended(event.data.range);\n      const range = stringToRange(range_demacroed, 0, chat.length - 1);\n      const option = event.data.option;\n      if (!range) {\n        throw Error(`提供的消息范围 range 无效: ${range_demacroed}`);\n      }\n      if (!['all', 'system', 'assistant', 'user'].includes(option.role)) {\n        throw Error(`提供的 role 无效, 请提供 'all', 'system', 'assistant' 或 'user', 你提供的是: ${option.role}`);\n      }\n      if (!['all', 'hidden', 'unhidden'].includes(option.hide_state)) {\n        throw Error(`提供的 hide_state 无效, 请提供 'all', 'hidden' 或 'unhidden', 你提供的是: ${option.hide_state}`);\n      }\n\n      const { start, end } = range;\n\n      const getRole = (chat_message: any) => {\n        const is_narrator = chat_message.extra?.type === system_message_types.NARRATOR;\n        if (is_narrator) {\n          if (chat_message.is_user) {\n            return 'unknown';\n          }\n          return 'system';\n        }\n        if (chat_message.is_user) {\n          return 'user';\n        }\n        return 'assistant';\n      };\n\n      const process_message = async (message_id: number): Promise<ChatMessage | null> => {\n        const message = chat[message_id];\n        if (!message) {\n          console.warn(`${getLogPrefix(event)}没找到第 ${message_id} 楼的消息`);\n          return null;\n        }\n\n        const role = getRole(message);\n        if (option.role !== 'all' && role !== option.role) {\n          console.debug(`${getLogPrefix(event)}筛去了第 ${message_id} 楼的消息因为它的身份不是 ${option.role}`);\n          return null;\n        }\n\n        if (option.hide_state !== 'all' && (option.hide_state === 'hidden') !== message.is_system) {\n          console.debug(\n            `${getLogPrefix(event)}筛去了第 ${message_id} 楼的消息因为它${\n              option.hide_state === 'hidden' ? `` : `没`\n            } 被隐藏`,\n          );\n          return null;\n        }\n\n        const swipe_id = message?.swipe_id ?? 0;\n        const swipes = message?.swipes ?? [message.mes];\n        const swipes_data = message?.variables ?? [];\n        const data = swipes_data[swipe_id] ?? {};\n\n        return {\n          message_id: message_id,\n          name: message.name,\n          role: role as 'system' | 'assistant' | 'user',\n          is_hidden: message.is_system,\n          message: message.mes,\n          data: data,\n\n          swipe_id: swipe_id,\n          swipes: swipes,\n          swipes_data: swipes_data,\n\n          is_user: message.is_user,\n          is_system_or_hidden: message.is_system,\n        };\n      };\n\n      const promises: Promise<ChatMessage | null>[] = [];\n      for (let i: number = range.start; i <= range.end; ++i) {\n        promises.push(process_message(i));\n      }\n\n      const chat_messages: ChatMessage[] = (await Promise.all(promises)).filter(chat_message => chat_message !== null);\n\n      console.info(\n        `${getLogPrefix(event)}获取${\n          start == end ? `第 ${start} ` : ` ${start}-${end} `\n        }楼的消息, 选项: ${JSON.stringify(option)} `,\n      );\n      return chat_messages;\n    },\n  );\n\n  registerIframeHandler(\n    '[ChatMessage][setChatMessage]',\n    async (event: MessageEvent<IframeSetChatMessage>): Promise<void> => {\n      const field_values = event.data.field_values;\n      const message_id = event.data.message_id;\n      const option = event.data.option;\n      if (typeof option.swipe_id !== 'number' && option.swipe_id !== 'current') {\n        throw Error(`提供的 swipe_id 无效, 请提供 'current' 或序号, 你提供的是: ${option.swipe_id} `);\n      }\n      if (!['none', 'display_current', 'display_and_render_current', 'all'].includes(option.refresh)) {\n        throw Error(\n          `提供的 refresh 无效, 请提供 'none', 'display_current', 'display_and_render_current' 或 'all', 你提供的是: ${option.refresh} `,\n        );\n      }\n\n      const chat_message = chat[message_id];\n      if (!chat_message) {\n        console.warn(`${getLogPrefix(event)}未找到第 ${message_id} 楼的消息`);\n        return;\n      }\n\n      const add_swipes_if_required = (): boolean => {\n        if (option.swipe_id === 'current') {\n          return false;\n        }\n\n        // swipe_id 对应的消息页存在\n        if (option.swipe_id == 0 || (chat_message.swipes && option.swipe_id < chat_message.swipes.length)) {\n          return true;\n        }\n\n        if (!chat_message.swipes) {\n          chat_message.swipe_id = 0;\n          chat_message.swipes = [chat_message.mes];\n          chat_message.swipe_info = [{}];\n        }\n        for (let i = chat_message.swipes.length; i <= option.swipe_id; ++i) {\n          chat_message.swipes.push('');\n          chat_message.swipe_info.push({});\n        }\n        return true;\n      };\n\n      const swipe_id_previous_index: number = chat_message.swipe_id ?? 0;\n      const swipe_id_to_set_index: number = option.swipe_id == 'current' ? swipe_id_previous_index : option.swipe_id;\n      const swipe_id_to_use_index: number = option.refresh != 'none' ? swipe_id_to_set_index : swipe_id_previous_index;\n      const message: string =\n        field_values.message ??\n        (chat_message.swipes ? chat_message.swipes[swipe_id_to_set_index] : undefined) ??\n        chat_message.mes;\n\n      const update_chat_message = () => {\n        const message_demacroed = substituteParamsExtended(message);\n\n        if (field_values.data) {\n          if (!chat_message.variables) {\n            chat_message.variables = [];\n          }\n          chat_message.variables[swipe_id_to_set_index] = field_values.data;\n        }\n\n        if (chat_message.swipes) {\n          chat_message.swipes[swipe_id_to_set_index] = message_demacroed;\n          chat_message.swipe_id = swipe_id_to_use_index;\n        }\n\n        if (swipe_id_to_use_index === swipe_id_to_set_index) {\n          chat_message.mes = message_demacroed;\n        }\n      };\n\n      const update_partial_html = (should_update_swipe: boolean) => {\n        const mes_html = $(`div.mes[mesid = \"${message_id}\"]`);\n        if (!mes_html) {\n          return;\n        }\n\n        if (should_update_swipe) {\n          // FIXME: 只有一条消息时, swipes-counter 不会正常显示; 此外还要考虑 swipes-counter 的 \"Swipe # for All Messages\" 选项\n          mes_html\n            .find('.swipes-counter')\n            .text(`${swipe_id_to_use_index + 1}\\u200b/\\u200b${chat_message.swipes.length}`);\n        }\n        if (option.refresh != 'none') {\n          mes_html\n            .find('.mes_text')\n            .empty()\n            .append(\n              messageFormatting(message, chat_message.name, chat_message.is_system, chat_message.is_user, message_id),\n            );\n          if (option.refresh == 'display_and_render_current') {\n            handlePartialRender(`${message_id}`);\n          }\n        }\n      };\n\n      const should_update_swipe: boolean = add_swipes_if_required();\n      update_chat_message();\n      if (option.refresh == 'all') {\n        await reloadCurrentChat();\n      } else {\n        update_partial_html(should_update_swipe);\n        // QUESTION: saveChatDebounced 还是 await saveChatConditional?\n        await saveChatConditional();\n      }\n\n      console.info(\n        `${getLogPrefix(event)}设置第 ${message_id} 楼消息, 选项: ${JSON.stringify(\n          option,\n        )}, 设置前使用的消息页: ${swipe_id_previous_index}, 设置的消息页: ${swipe_id_to_set_index}, 现在使用的消息页: ${swipe_id_to_use_index} `,\n      );\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { chat, messageFormatting } from '@sillytavern/script';\nimport { getLastMessageId } from '@sillytavern/scripts/macros';\n\ninterface IframeFormatAsDisplayedMessage extends IframeMessage {\n  request: '[DisplayedMessage][formatAsDisplayedMessage]';\n  text: string;\n  option: Required<FormatAsDisplayedMessageOption>;\n}\n\nexport function registerIframeDisplayedMessageHandler() {\n  registerIframeHandler(\n    '[DisplayedMessage][formatAsDisplayedMessage]',\n    async (event: MessageEvent<IframeFormatAsDisplayedMessage>): Promise<string> => {\n      const text = event.data.text;\n      const option = event.data.option;\n      if (typeof option.message_id !== 'number' && !['last', 'last_user', 'last_char'].includes(option.message_id)) {\n        throw Error(\n          `提供的 message_id 无效, 请提供 'last', 'last_user', 'last_char' 或楼层消息号, 你提供的是: ${option.message_id}`,\n        );\n      }\n      const last_message_id = getLastMessageId();\n      if (last_message_id === null) {\n        throw Error(`未找到任何消息楼层, 你提供的是: ${option.message_id}`);\n      }\n      switch (option.message_id) {\n        case 'last':\n          option.message_id = last_message_id;\n          break;\n        case 'last_user':\n          const last_user_message_id = getLastMessageId({ filter: (m: any) => m.is_user && !m.is_system }) as number;\n          if (last_user_message_id === null) {\n            throw Error(`未找到任何 user 消息楼层, 你提供的是: ${option.message_id}`);\n          }\n          option.message_id = last_user_message_id;\n          break;\n        case 'last_char':\n          const last_char_message_id = getLastMessageId({ filter: (m: any) => !m.is_user && !m.is_system }) as number;\n          if (last_char_message_id === null) {\n            throw Error(`未找到任何 char 消息楼层, 你提供的是: ${option.message_id}`);\n          }\n          option.message_id = last_char_message_id;\n          break;\n      }\n      if (option.message_id < 0 || option.message_id > last_message_id) {\n        throw Error(`提供的 message_id 不在 [0, ${last_message_id}] 内, 你提供的是: ${option.message_id} `);\n      }\n\n      const chat_message = chat[option.message_id];\n      const result = messageFormatting(\n        text,\n        chat_message.name,\n        chat_message.is_system,\n        chat_message.is_user,\n        option.message_id,\n      );\n\n      console.info(\n        `${getLogPrefix(event)}将字符串处理为酒馆用于显示的 html 格式, 字符串: '${text}', 选项: '${JSON.stringify(\n          option,\n        )}', 结果: '${result}'`,\n      );\n      return result;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { getRequestHeaders } from '@sillytavern/script';\nimport { t } from '@sillytavern/scripts/i18n';\n\ninterface IframeUpdateFrontendVersion extends IframeMessage {\n  request: '[FrontendVersion][updateFrontendVersion]';\n  text: string;\n}\n\nexport function registerIframeFrontendVersionHandler() {\n  registerIframeHandler(\n    '[FrontendVersion][updateFrontendVersion]',\n    async (event: MessageEvent<IframeUpdateFrontendVersion>): Promise<boolean> => {\n      const extension_name = 'JS-Slash-Runner';\n\n      const response = await fetch('/api/extensions/update', {\n        method: 'POST',\n        headers: getRequestHeaders(),\n        body: JSON.stringify({ extensionName: extension_name }),\n      });\n\n      if (!response.ok) {\n        const text = await response.text();\n        toastr.error(text || response.statusText, t`更新前端助手失败`, { timeOut: 5000 });\n        console.error(`${getLogPrefix(event)}更新前端助手失败: ${text}`);\n        return false;\n      }\n\n      const data = await response.json();\n      if (data.isUpToDate) {\n        console.info(`${getLogPrefix(event)}前端助手已是最新版本, 无需更新`);\n      } else {\n        toastr.success(t`成功更新前端助手为 ${data.shortCommitHash}`, t`请刷新页面`);\n        console.info(`${getLogPrefix(event)}成功更新前端助手为  ${data.shortCommitHash}, 请刷新页面`);\n      }\n      return true;\n    },\n  );\n}\n","import { findChar } from '@/compatibility';\nimport { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport {\n  characters,\n  getOneCharacter,\n  getRequestHeaders,\n  saveCharacterDebounced,\n  saveSettings,\n  saveSettingsDebounced,\n  this_chid,\n} from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { ensureImageFormatSupported, getCharaFilename } from '@sillytavern/scripts/utils';\nimport {\n  createNewWorldInfo,\n  deleteWorldInfo,\n  getWorldInfoSettings,\n  selected_world_info,\n  setWorldInfoButtonClass,\n  world_info,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\ninterface IframeGetLorebookSettings extends IframeMessage {\n  request: '[Lorebook][getLorebookSettings]';\n}\n\ninterface IframeSetLorebookSettings extends IframeMessage {\n  request: '[Lorebook][setLorebookSettings]';\n  settings: Partial<LorebookSettings>;\n}\n\ninterface IframeGetCharLorebooks extends IframeMessage {\n  request: '[Lorebook][getCharLorebooks]';\n  option: GetCharLorebooksOption;\n}\n\ninterface IframesetCurrentCharLorebooks extends IframeMessage {\n  request: '[Lorebook][setCurrentCharLorebooks]';\n  lorebooks: Partial<CharLorebooks>;\n}\n\ninterface IframeGetLorebooks extends IframeMessage {\n  request: '[Lorebook][getLorebooks]';\n}\n\ninterface IframeDeleteLorebook extends IframeMessage {\n  request: '[Lorebook][deleteLorebook]';\n  lorebook: string;\n}\n\ninterface IframeCreateLorebook extends IframeMessage {\n  request: '[Lorebook][createLorebook]';\n  lorebook: string;\n}\n\nasync function editCurrentCharacter(): Promise<boolean> {\n  $('#rm_info_avatar').html('');\n  const form_data = new FormData(($('#form_create') as JQuery<HTMLFormElement>).get(0));\n\n  const raw_file = form_data.get('avatar');\n  if (raw_file instanceof File) {\n    const converted_file = await ensureImageFormatSupported(raw_file);\n    form_data.set('avatar', converted_file);\n  }\n\n  const headers = getRequestHeaders();\n  // @ts-ignore\n  delete headers['Content-Type'];\n\n  // TODO: 这里的代码可以用来修改第一条消息!\n  form_data.delete('alternate_greetings');\n  const chid = $('.open_alternate_greetings').data('chid');\n  if (chid && Array.isArray(characters[chid]?.data?.alternate_greetings)) {\n    for (const value of characters[chid].data.alternate_greetings) {\n      form_data.append('alternate_greetings', value);\n    }\n  }\n\n  const response = await fetch('/api/characters/edit', {\n    method: 'POST',\n    headers: headers,\n    body: form_data,\n    cache: 'no-cache',\n  });\n\n  if (!response.ok) {\n    return false;\n  }\n\n  await getOneCharacter(form_data.get('avatar_url'));\n\n  $('#add_avatar_button').replaceWith($('#add_avatar_button').val('').clone(true));\n  $('#create_button').attr('value', 'Save');\n\n  return true;\n}\n\nfunction toLorebookSettings(world_info_settings: ReturnType<typeof getWorldInfoSettings>): LorebookSettings {\n  return {\n    selected_global_lorebooks: (world_info_settings.world_info as { globalSelect: string[] }).globalSelect,\n\n    scan_depth: world_info_settings.world_info_depth,\n    context_percentage: world_info_settings.world_info_budget,\n    budget_cap: world_info_settings.world_info_budget_cap,\n    min_activations: world_info_settings.world_info_min_activations,\n    max_depth: world_info_settings.world_info_min_activations_depth_max,\n    max_recursion_steps: world_info_settings.world_info_max_recursion_steps,\n\n    insertion_strategy: { 0: 'evenly', 1: 'character_first', 2: 'global_first' }[\n      world_info_settings.world_info_character_strategy\n    ] as 'evenly' | 'character_first' | 'global_first',\n\n    include_names: world_info_settings.world_info_include_names,\n    recursive: world_info_settings.world_info_recursive,\n    case_sensitive: world_info_settings.world_info_case_sensitive,\n    match_whole_words: world_info_settings.world_info_match_whole_words,\n    use_group_scoring: world_info_settings.world_info_use_group_scoring,\n    overflow_alert: world_info_settings.world_info_overflow_alert,\n  };\n}\n\nfunction assignPartialLorebookSettings(settings: Partial<LorebookSettings>): void {\n  const for_eachs = {\n    selected_global_lorebooks: (value: LorebookSettings['selected_global_lorebooks']) => {\n      $('#world_info').find('option[value!=\"\"]').remove();\n      world_names.forEach((item, i) =>\n        $('#world_info').append(`<option value='${i}'${value.includes(item) ? ' selected' : ''}>${item}</option>`),\n      );\n\n      selected_world_info.length = 0;\n      selected_world_info.push(...value);\n      saveSettings();\n    },\n\n    scan_depth: (value: LorebookSettings['scan_depth']) => {\n      $('#world_info_depth').val(value).trigger('input');\n    },\n    context_percentage: (value: LorebookSettings['context_percentage']) => {\n      $('#world_info_budget').val(value).trigger('input');\n    },\n    budget_cap: (value: LorebookSettings['budget_cap']) => {\n      $('#world_info_budget_cap').val(value).trigger('input');\n    },\n    min_activations: (value: LorebookSettings['min_activations']) => {\n      $('#world_info_min_activations').val(value).trigger('input');\n    },\n    max_depth: (value: LorebookSettings['max_depth']) => {\n      $('#world_info_min_activations_depth_max').val(value).trigger('input');\n    },\n    max_recursion_steps: (value: LorebookSettings['max_recursion_steps']) => {\n      $('#world_info_max_recursion_steps').val(value).trigger('input');\n    },\n\n    insertion_strategy: (value: LorebookSettings['insertion_strategy']) => {\n      const converted_value = { evenly: 0, character_first: 1, global_first: 2 }[value];\n      $(`#world_info_character_strategy option[value='${converted_value}']`).prop('selected', true);\n      $('#world_info_character_strategy').val(converted_value).trigger('change');\n    },\n\n    include_names: (value: LorebookSettings['include_names']) => {\n      $('#world_info_include_names').prop('checked', value).trigger('input');\n    },\n    recursive: (value: LorebookSettings['recursive']) => {\n      $('#world_info_recursive').prop('checked', value).trigger('input');\n    },\n    case_sensitive: (value: LorebookSettings['case_sensitive']) => {\n      $('#world_info_case_sensitive').prop('checked', value).trigger('input');\n    },\n    match_whole_words: (value: LorebookSettings['match_whole_words']) => {\n      $('#world_info_match_whole_words').prop('checked', value).trigger('input');\n    },\n    use_group_scoring: (value: LorebookSettings['use_group_scoring']) => {\n      $('#world_info_use_group_scoring').prop('checked', value).trigger('change');\n    },\n    overflow_alert: (value: LorebookSettings['overflow_alert']) => {\n      $('#world_info_overflow_alert').prop('checked', value).trigger('change');\n    },\n  };\n\n  Object.entries(settings)\n    .filter(([_, value]) => value !== undefined)\n    .forEach(([field, value]) => {\n      // @ts-ignore\n      for_eachs[field]?.(value);\n    });\n}\n\nexport function registerIframeLorebookHandler() {\n  registerIframeHandler(\n    '[Lorebook][getLorebookSettings]',\n    async (event: MessageEvent<IframeGetLorebookSettings>): Promise<LorebookSettings> => {\n      const lorebook_settings = toLorebookSettings(getWorldInfoSettings());\n\n      console.info(`${getLogPrefix(event)}获取世界书全局设置:\\n${JSON.stringify(lorebook_settings, undefined, 2)}`);\n      return lorebook_settings;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][setLorebookSettings]',\n    async (event: MessageEvent<IframeSetLorebookSettings>): Promise<void> => {\n      const settings = event.data.settings;\n      if (settings.selected_global_lorebooks) {\n        const inexisting_lorebooks = settings.selected_global_lorebooks.filter(\n          lorebook => !world_names.includes(lorebook),\n        );\n        if (inexisting_lorebooks.length > 0) {\n          throw Error(`尝试修改要全局启用的世界书, 但未找到以下世界书: ${JSON.stringify(inexisting_lorebooks)}`);\n        }\n      }\n\n      assignPartialLorebookSettings(settings);\n\n      console.info(`${getLogPrefix(event)}修改世界书全局设置:\\n${JSON.stringify(settings, undefined, 2)}`);\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][getCharLorebooks]',\n    async (event: MessageEvent<IframeGetCharLorebooks>): Promise<CharLorebooks> => {\n      const option = event.data.option;\n\n      // @ts-ignore\n      if (selected_group && !option.name) {\n        throw Error(`不要在群组中调用这个功能`);\n      }\n      const filename = option.name ?? getCharaFilename(this_chid) ?? null;\n      // @ts-ignore\n      const character = findChar({ name: filename });\n      if (!character) {\n        throw Error(`未找到名为 '${filename}' 的角色卡`);\n      }\n\n      let books: CharLorebooks = { primary: null, additional: [] };\n\n      if (character.data?.extensions?.world) {\n        books.primary = character.data?.extensions?.world;\n      }\n\n      // @ts-ignore\n      const extraCharLore = world_info.charLore?.find(e => e.name === filename);\n      if (extraCharLore && Array.isArray(extraCharLore.extraBooks)) {\n        books.additional = extraCharLore.extraBooks;\n      }\n\n      console.info(\n        `${getLogPrefix(event)}获取角色卡绑定的世界书, 选项: ${JSON.stringify(option)}, 获取结果: ${JSON.stringify(\n          books,\n        )}`,\n      );\n      return books;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][setCurrentCharLorebooks]',\n    async (event: MessageEvent<IframesetCurrentCharLorebooks>): Promise<void> => {\n      const lorebooks = event.data.lorebooks;\n\n      // @ts-ignore\n      if (selected_group && !option.name) {\n        throw Error(`不要在群组中调用这个功能`);\n      }\n      const filename = getCharaFilename(this_chid);\n      if (!filename) {\n        throw Error(`未打开任何角色卡`);\n      }\n\n      const inexisting_lorebooks: string[] = [\n        ...(lorebooks.primary && !world_names.includes(lorebooks.primary) ? [lorebooks.primary] : []),\n        ...(lorebooks.additional ? lorebooks.additional.filter(lorebook => !world_names.includes(lorebook)) : []),\n      ];\n      if (inexisting_lorebooks.length > 0) {\n        throw Error(`尝试修改 '${filename}' 绑定的世界书, 但未找到以下世界书: ${inexisting_lorebooks}`);\n      }\n\n      if (lorebooks.primary !== undefined) {\n        const previous_primary = String($('#character_world').val());\n        $('#character_world').val(lorebooks.primary ? lorebooks.primary : '');\n\n        $('.character_world_info_selector')\n          .find('option:selected')\n          .val(lorebooks.primary ? world_names.indexOf(lorebooks.primary) : '');\n\n        if (previous_primary && !lorebooks.primary) {\n          const data = JSON.parse(String($('#character_json_data').val()));\n          if (data?.data?.character_book) {\n            data.data.character_book = undefined;\n          }\n          $('#character_json_data').val(JSON.stringify(data));\n        }\n\n        if (!(await editCurrentCharacter())) {\n          throw Error(`尝试为 '${filename}' 绑定主要世界书, 但在访问酒馆后端时出错`);\n        }\n\n        // @ts-ignore\n        setWorldInfoButtonClass(undefined, !!lorebooks.primary);\n      }\n\n      if (lorebooks.additional !== undefined) {\n        interface CharLoreEntry {\n          name: string;\n          extraBooks: string[];\n        }\n        let char_lore = (world_info as { charLore: CharLoreEntry[] }).charLore ?? [];\n\n        const existing_char_index = char_lore.findIndex(entry => entry.name === filename);\n        if (existing_char_index === -1) {\n          char_lore.push({ name: filename, extraBooks: lorebooks.additional });\n        } else if (lorebooks.additional.length === 0) {\n          char_lore.splice(existing_char_index, 1);\n        } else {\n          char_lore[existing_char_index].extraBooks = lorebooks.additional;\n        }\n\n        Object.assign(world_info, { charLore: char_lore });\n      }\n\n      saveCharacterDebounced();\n      saveSettingsDebounced();\n\n      console.info(\n        `${getLogPrefix(event)}修改角色卡绑定的世界书, 要修改的部分: ${JSON.stringify(lorebooks)}${\n          lorebooks.primary === undefined ? ', 主要世界书保持不变' : ''\n        }${lorebooks.additional === undefined ? ', 附加世界书保持不变' : ''}`,\n      );\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][getLorebooks]',\n    async (event: MessageEvent<IframeGetLorebooks>): Promise<string[]> => {\n      console.info(`${getLogPrefix(event)}获取世界书列表: ${JSON.stringify(world_names)}`);\n      return world_names;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][deleteLorebook]',\n    async (event: MessageEvent<IframeDeleteLorebook>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n\n      const success = await deleteWorldInfo(lorebook);\n\n      console.info(`${getLogPrefix(event)}移除世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n      return success;\n    },\n  );\n\n  registerIframeHandler(\n    '[Lorebook][createLorebook]',\n    async (event: MessageEvent<IframeCreateLorebook>): Promise<boolean> => {\n      const lorebook = event.data.lorebook;\n\n      const success = await createNewWorldInfo(lorebook, { interactive: false });\n\n      console.info(`${getLogPrefix(event)}新建世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n      return success;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { executeSlashCommandsWithOptions } from '@sillytavern/scripts/slash-commands';\n\ninterface IframeSlash extends IframeMessage {\n  request: '[Slash][triggerSlash]' | '[Slash][triggerSlashWithResult]';\n  command: string;\n}\n\nexport function registerIframeSlashHandler() {\n  registerIframeHandler('[Slash][triggerSlash]', async (event: MessageEvent<IframeSlash>): Promise<void> => {\n    const command = event.data.command;\n\n    const result = await executeSlashCommandsWithOptions(command);\n    if (result.isError) {\n      throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n    }\n\n    console.info(`${getLogPrefix(event)}运行 Slash 命令: ${command}`);\n  });\n\n  registerIframeHandler(\n    '[Slash][triggerSlashWithResult]',\n    async (event: MessageEvent<IframeSlash>): Promise<string | undefined> => {\n      const command = event.data.command;\n\n      const result = await executeSlashCommandsWithOptions(command);\n      if (result.isError) {\n        throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n      }\n\n      console.info(`${getLogPrefix(event)}运行 Slash 命令 '${command}', 结果: ${result.pipe}`);\n      return result.pipe;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { substituteParamsExtended } from '@sillytavern/script';\n\ninterface IframeSubstitudeMacros extends IframeMessage {\n  request: '[Utils][substitudeMacros]';\n  text: string;\n}\n\nexport function registerIframeUtilHandler() {\n  registerIframeHandler(\n    '[Utils][substitudeMacros]',\n    async (event: MessageEvent<IframeSubstitudeMacros>): Promise<string> => {\n      const text = event.data.text;\n\n      const text_demacroed = substituteParamsExtended(text);\n\n      console.info(`${getLogPrefix(event)}替换字符串中的宏, 字符串: '${text}', 结果: '${text_demacroed}'`);\n      return text_demacroed;\n    },\n  );\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\nimport { audioEnable, audioImport, audioMode, audioPlay, audioSelect } from '@/slash_command/audio';\n\ninterface IframeAudioMode extends IframeMessage {\n  request: '[Audio][audioMode]';\n  type: string;\n  mode: string;\n}\n\ninterface IframeAudioEnable extends IframeMessage {\n  request: '[Audio][audioEnable]';\n  type: string;\n  state?: string;\n}\n\ninterface IframeAudioPlay extends IframeMessage {\n  request: '[Audio][audioPlay]';\n  type: string;\n  play?: string;\n}\n\ninterface IframeAudioImport extends IframeMessage {\n  request: '[Audio][audioImport]';\n  type: string;\n  url: string;\n  play?: string;\n}\n\ninterface IframeAudioSelect extends IframeMessage {\n  request: '[Audio][audioSelect]';\n  type: string;\n  url: string;\n}\n\nexport function registerIframeAudioHandler() {\n  registerIframeHandler('[Audio][audioMode]', async (event: MessageEvent<IframeAudioMode>): Promise<void> => {\n    const type = event.data.type;\n    const mode = event.data.mode;\n    await audioMode({ type, mode });\n    console.info(`${getLogPrefix(event)} 切换音频模式: ${type}-${mode}`);\n  });\n\n  registerIframeHandler('[Audio][audioEnable]', async (event: MessageEvent<IframeAudioEnable>): Promise<void> => {\n    const type = event.data.type;\n    const state = event.data.state;\n    await audioEnable({ type, state });\n    console.info(`${getLogPrefix(event)} 切换音频状态: ${type}-${state}`);\n  });\n\n  registerIframeHandler('[Audio][audioPlay]', async (event: MessageEvent<IframeAudioPlay>): Promise<void> => {\n    const type = event.data.type;\n    const play = event.data.play;\n    await audioPlay({ type, play });\n    console.info(`${getLogPrefix(event)} 切换音频播放状态: ${type}-${play}`);\n  });\n\n  registerIframeHandler('[Audio][audioImport]', async (event: MessageEvent<IframeAudioImport>): Promise<void> => {\n    const type = event.data.type;\n    const url = event.data.url;\n    const play = event.data.play;\n    await audioImport({ type, play }, url);\n    console.info(`${getLogPrefix(event)} 导入音频: ${type}-${url}-${play}`);\n  });\n\n  registerIframeHandler('[Audio][audioSelect]', async (event: MessageEvent<IframeAudioSelect>): Promise<void> => {\n    const type = event.data.type;\n    const url = event.data.url;\n    await audioSelect({ type }, url);\n    console.info(`${getLogPrefix(event)} 选择音频: ${type}-${url}`);\n  });\n}\n","import { charsPath } from '@/util/extension_variables';\nimport { characters, getPastCharacterChats, getRequestHeaders, getThumbnailUrl, this_chid } from '@sillytavern/script';\n\ntype v1CharData = (typeof characters)[number];\n\n/**\n * 角色卡管理类\n * 用于封装角色卡数据操作和提供便捷的访问方法\n */\nexport class Character {\n  /**\n   * v1CharData类型的角色卡数据\n   * @see char-data.js 中的 v1CharData 类型定义\n   */\n  private charData: v1CharData;\n\n  constructor(characterData: v1CharData) {\n    this.charData = characterData;\n  }\n\n  /**\n   * 根据名称或头像id查找角色卡数据\n   * @param options 查找选项\n   * @returns 找到的角色卡数据，找不到为null\n   */\n  static find({ name, allowAvatar = true }: { name?: string; allowAvatar?: boolean } = {}): any {\n    if (name === undefined) {\n      // @ts-ignore\n      const currentChar = characters[this_chid];\n      if (currentChar) {\n        name = currentChar.avatar;\n        // 确保allowAvatar为true，以便可以通过avatar准确查找角色\n        allowAvatar = true;\n      }\n    }\n\n    const matches = (char: { avatar: string; name: string }) =>\n      !name || char.name === name || (allowAvatar && char.avatar === name);\n\n    const filteredCharacters = characters;\n\n    // 如果有确定的角色头像id提供，则返回该角色\n    if (allowAvatar && name) {\n      const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n      if (characterByAvatar) {\n        return characterByAvatar;\n      }\n    }\n\n    // 查找所有匹配的角色\n    const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n    if (matchingCharacters.length > 1) {\n      console.warn(`[Character] [findCharacter] 找到多个符合条件的角色，返回导入时间最早的角色: ${name}`);\n    }\n\n    if (matchingCharacters.length === 0) {\n      throw new Error(`[Character] [findCharacter] 提供的名称或头像ID为: ${name}，未找到符合条件的角色`);\n    }\n\n    return matchingCharacters[0];\n  }\n\n  /**\n   * 根据名称查找角色卡数据在characters数组中的索引（类似this_chid）\n   * @param name 角色名称\n   * @returns 角色卡数据在characters数组中的索引，未找到返回-1\n   */\n\n  static findCharacterIndex(name: string) {\n    const matchTypes = [\n      (a: string, b: string) => a === b,\n      (a: string, b: string) => a.startsWith(b),\n      (a: string, b: string) => a.includes(b),\n    ];\n\n    const exactAvatarMatch = characters.findIndex(x => x.avatar === name);\n\n    if (exactAvatarMatch !== -1) {\n      return exactAvatarMatch;\n    }\n\n    for (const matchType of matchTypes) {\n      const index = characters.findIndex(x => matchType(x.name.toLowerCase(), name.toLowerCase()));\n      if (index !== -1) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * 从服务器获取每个聊天文件的聊天内容，并将其编译成字典。\n   * 该函数遍历提供的聊天元数据列表，并请求每个聊天的实际聊天内容，\n   *\n   * @param {Array} data - 包含每个聊天的元数据的数组，例如文件名。\n   * @param {boolean} isGroupChat - 一个标志，指示聊天是否为群组聊天。\n   * @returns {Promise<Object>} chat_dict - 一个字典，其中每个键是文件名，值是\n   * 从服务器获取的相应聊天内容。\n   */\n  static async getChatsFromFiles(data: any[], isGroupChat: boolean) {\n    const chat_dict: Record<string, any> = {};\n    const chat_list = Object.values(data)\n      .sort((a, b) => a['file_name'].localeCompare(b['file_name']))\n      .reverse();\n\n    const chat_promise = chat_list.map(({ file_name }) => {\n      // eslint-disable-next-line no-async-promise-executor\n      return new Promise<void>(async (res, _rej) => {\n        try {\n          // 从文件名中提取角色名称（破折号前的部分）\n          const ch_name = isGroupChat ? '' : file_name.split(' - ')[0];\n\n          // 使用Character.find方法查找角色，获取头像\n          let characterData = null;\n          let avatar_url = '';\n\n          if (!isGroupChat && ch_name) {\n            characterData = Character.find({ name: ch_name });\n            if (characterData) {\n              avatar_url = characterData.avatar;\n            }\n          }\n\n          const endpoint = isGroupChat ? '/api/chats/group/get' : '/api/chats/get';\n          const requestBody = isGroupChat\n            ? JSON.stringify({ id: file_name })\n            : JSON.stringify({\n                ch_name: ch_name,\n                file_name: file_name.replace('.jsonl', ''),\n                avatar_url: avatar_url,\n              });\n\n          const chatResponse = await fetch(endpoint, {\n            method: 'POST',\n            headers: getRequestHeaders(),\n            body: requestBody,\n            cache: 'no-cache',\n          });\n\n          if (!chatResponse.ok) {\n            return res();\n          }\n\n          const currentChat = await chatResponse.json();\n          if (!isGroupChat) {\n            // remove the first message, which is metadata, only for individual chats\n            currentChat.shift();\n          }\n          chat_dict[file_name] = currentChat;\n        } catch (error) {\n          console.error(error);\n        }\n\n        return res();\n      });\n    });\n\n    await Promise.all(chat_promise);\n\n    return chat_dict;\n  }\n\n  /**\n   * 获取角色管理内的数据\n   * @returns 完整的角色管理内的数据对象\n   */\n  getCardData(): v1CharData {\n    return this.charData;\n  }\n\n  /**\n   * 获取角色头像ID\n   * @returns 头像ID/文件名\n   */\n  getAvatarId(): string {\n    return this.charData.avatar || '';\n  }\n\n  /**\n   * 获取正则脚本\n   * @returns 正则脚本数组\n   */\n  getRegexScripts(): Array<{\n    id: string;\n    scriptName: string;\n    findRegex: string;\n    replaceString: string;\n    trimStrings: string[];\n    placement: number[];\n    disabled: boolean;\n    markdownOnly: boolean;\n    promptOnly: boolean;\n    runOnEdit: boolean;\n    substituteRegex: number | boolean;\n    minDepth: number;\n    maxDepth: number;\n  }> {\n    return this.charData.data?.extensions?.regex_scripts || [];\n  }\n\n  /**\n   * 获取角色书\n   * @returns 角色书数据对象或null\n   */\n  getCharacterBook(): {\n    name: string;\n    entries: Array<{\n      keys: string[];\n      secondary_keys?: string[];\n      comment: string;\n      content: string;\n      constant: boolean;\n      selective: boolean;\n      insertion_order: number;\n      enabled: boolean;\n      position: string;\n      extensions: any;\n      id: number;\n    }>;\n  } | null {\n    return this.charData.data?.character_book || null;\n  }\n\n  /**\n   * 获取角色世界名称\n   * @returns 世界名称\n   */\n  getWorldName(): string {\n    return this.charData.data?.extensions?.world || '';\n  }\n}\n\n/**\n * 获取角色卡数据\n * @param name 角色名称或头像ID\n * @param allowAvatar 是否允许通过头像ID查找\n * @returns 角色卡数据\n */\nexport function getCharData(name?: string, allowAvatar: boolean = true): v1CharData | null {\n  try {\n    const characterData = Character.find({ name, allowAvatar });\n    if (!characterData) return null;\n\n    const character = new Character(characterData);\n    console.info(`获取角色卡数据成功, 角色: ${name || '未知'}`);\n    return character.getCardData();\n  } catch (error) {\n    console.error(`获取角色卡数据失败, 角色: ${name || '未知'}`, error);\n    return null;\n  }\n}\n\n/**\n * 获取角色头像路径\n * @param name 角色名称或头像ID\n * @param allowAvatar 是否允许通过头像ID查找\n * @returns 角色头像路径\n */\nexport function getCharAvatarPath(name?: string, allowAvatar: boolean = true): string | null {\n  try {\n    const characterData = Character.find({ name, allowAvatar });\n    if (!characterData) return null;\n\n    const character = new Character(characterData);\n    const avatarId = character.getAvatarId();\n\n    // 使用getThumbnailUrl获取缩略图URL，然后提取实际文件名\n    const thumbnailPath = getThumbnailUrl('avatar', avatarId);\n    const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n\n    // 假设charsPath在其他地方定义\n    console.info(`获取角色头像路径成功, 角色: ${name || '未知'}`);\n    return charsPath + targetAvatarImg;\n  } catch (error) {\n    console.error(`获取角色头像路径失败, 角色: ${name || '未知'}`, error);\n    return null;\n  }\n}\n\n/**\n * 获取角色聊天历史摘要\n * @param name 角色名称或头像ID\n * @param allowAvatar 是否允许通过头像ID查找\n * @returns 聊天历史摘要数组\n */\nexport async function getChatHistoryBrief(name?: string, allowAvatar: boolean = true): Promise<any[] | null> {\n  try {\n    const characterData = Character.find({ name, allowAvatar });\n    if (!characterData) return null;\n\n    const character = new Character(characterData);\n    const index = Character.findCharacterIndex(character.getAvatarId());\n\n    if (index === -1) return null;\n\n    const chats = await getPastCharacterChats(index);\n    console.info(`获取角色聊天历史摘要成功, 角色: ${name || '未知'}`);\n    return chats;\n  } catch (error) {\n    console.error(`获取角色聊天历史摘要失败, 角色: ${name || '未知'}`, error);\n    return null;\n  }\n}\n\n/**\n * 获取聊天历史详情\n * @param data 聊天数据数组\n * @param isGroupChat 是否为群组聊天\n * @returns 聊天历史详情\n */\nexport async function getChatHistoryDetail(\n  data: any[],\n  isGroupChat: boolean = false,\n): Promise<Record<string, any> | null> {\n  try {\n    const result = await Character.getChatsFromFiles(data, isGroupChat);\n    console.info(`获取聊天文件详情成功`);\n    return result;\n  } catch (error) {\n    console.error(`获取聊天文件详情失败`, error);\n    return null;\n  }\n}\n","import { handlePartialRender } from '@/component/message_iframe';\n\nimport {\n  chat,\n  messageFormatting,\n  reloadCurrentChat,\n  saveChatConditional,\n  substituteParamsExtended,\n  system_message_types,\n} from '@sillytavern/script';\nimport { stringToRange } from '@sillytavern/scripts/utils';\n\ninterface GetChatMessagesOption {\n  role?: 'all' | 'system' | 'assistant' | 'user'; // 按 role 筛选消息; 默认为 `'all'`\n  hide_state?: 'all' | 'hidden' | 'unhidden'; // 按是否被隐藏筛选消息; 默认为 `'all'`\n}\n\n/**\n * 获取聊天消息\n *\n * @param range 要获取的消息楼层号或楼层范围, 与 `/messages` 相同\n * @param option 可选选项\n *   - `role:'all'|'system'|'assistant'|'user'`: 按 role 筛选消息; 默认为 `'all'`\n *   - `hide_state:'all'|'hidden'|'unhidden'`: 按是否被隐藏筛选消息; 默认为 `'all'`\n *\n * @returns 一个数组, 数组的元素是每楼的消息 `ChatMessage`. 该数组依据按 message_id 从低到高排序.\n */\nexport async function getChatMessages(\n  range: string | number,\n  option: GetChatMessagesOption = {},\n): Promise<ChatMessage[]> {\n  const range_demacroed = substituteParamsExtended(range.toString());\n  const rangeNumber = stringToRange(range_demacroed, 0, chat.length - 1);\n  if (!rangeNumber) {\n    throw Error(`提供的消息范围 range 无效: ${range}`);\n  }\n  if (!['all', 'system', 'assistant', 'user'].includes(option.role ?? 'all')) {\n    throw Error(`提供的 role 无效, 请提供 'all', 'system', 'assistant' 或 'user', 你提供的是: ${option.role}`);\n  }\n  if (!['all', 'hidden', 'unhidden'].includes(option.hide_state ?? 'all')) {\n    throw Error(`提供的 hide_state 无效, 请提供 'all', 'hidden' 或 'unhidden', 你提供的是: ${option.hide_state}`);\n  }\n\n  const { start, end } = rangeNumber;\n\n  const getRole = (chat_message: any) => {\n    const is_narrator = chat_message.extra?.type === system_message_types.NARRATOR;\n    if (is_narrator) {\n      if (chat_message.is_user) {\n        return 'unknown';\n      }\n      return 'system';\n    }\n    if (chat_message.is_user) {\n      return 'user';\n    }\n    return 'assistant';\n  };\n\n  const process_message = async (message_id: number): Promise<ChatMessage | null> => {\n    const message = chat[message_id];\n    if (!message) {\n      console.warn(`没找到第 ${message_id} 楼的消息`);\n      return null;\n    }\n\n    const role = getRole(message);\n    if (option.role !== 'all' && role !== option.role) {\n      console.debug(`筛去了第 ${message_id} 楼的消息因为它的身份不是 ${option.role}`);\n      return null;\n    }\n\n    if (option.hide_state !== 'all' && (option.hide_state === 'hidden') !== message.is_system) {\n      console.debug(\n        `筛去了第 ${message_id} 楼的消息因为它${\n          option.hide_state === 'hidden' ? `` : `没`\n        } 被隐藏`,\n      );\n      return null;\n    }\n\n    const swipe_id = message?.swipe_id ?? 0;\n    const swipes = message?.swipes ?? [message.mes];\n    const swipes_data = message?.variables ?? [];\n    const data = swipes_data[swipe_id] ?? {};\n\n    return {\n      message_id: message_id,\n      name: message.name,\n      role: role as 'system' | 'assistant' | 'user',\n      is_hidden: message.is_system,\n      message: message.mes,\n      data: data,\n\n      swipe_id: swipe_id,\n      swipes: swipes,\n      swipes_data: swipes_data,\n\n      is_user: message.is_user,\n      is_system_or_hidden: message.is_system,\n    };\n  };\n\n  const promises: Promise<ChatMessage | null>[] = [];\n  for (let i: number = start; i <= end; ++i) {\n    promises.push(process_message(i));\n  }\n\n  const chat_messages: ChatMessage[] = (await Promise.all(promises)).filter(chat_message => chat_message !== null);\n\n  console.info(\n    `获取${start == end ? `第 ${start} ` : ` ${start}-${end} `}楼的消息, 选项: ${JSON.stringify(\n      option,\n    )} `,\n  );\n  return chat_messages;\n}\n\n/**\n * 设置某消息楼层某聊天消息页的信息. 如果设置了当前会被发送给 ai 的消息文本 (正被使用且没被隐藏的消息页文本), 则 \"仅格式提示词\" 正则将会使用它而不是原来的消息.\n *\n * @param field_values 要设置的信息\n *   - message?: 消息页要设置的消息文本\n *   - data?: 消息页要绑定的数据\n * @param message_id 消息楼层id\n * @param option 可选选项:\n *   - `swipe_id?:'current'|number`: 要替换的消息页 (`'current'` 来替换当前使用的消息页, 或从 0 开始的序号来替换对应消息页), 如果消息中还没有该消息页, 则会创建该页; 默认为 `'current'`\n *   - `refresh?:'none'|'display_current'|'display_and_render_current'|'all'`: 是否更新页面的显示和 iframe 渲染, 只会更新已经被加载显示在网页的楼层, 更新显示时会触发被更新楼层的 \"仅格式显示\" 正则; 默认为 `'display_and_render_current'`\n */\nexport async function setChatMessage(\n  field_values: ChatMessageToSet,\n  message_id: number,\n  option?: SetChatMessageOption,\n): Promise<void> {\n  field_values = typeof field_values === 'string' ? { message: field_values } : field_values;\n  const required_option: Required<SetChatMessageOption> = {\n    swipe_id: option?.swipe_id ?? 'current',\n    refresh: option?.refresh ?? 'display_and_render_current',\n  };\n      if (typeof required_option.swipe_id !== 'number' && required_option.swipe_id !== 'current') {\n        throw Error(`提供的 swipe_id 无效, 请提供 'current' 或序号, 你提供的是: ${required_option.swipe_id} `);\n      }\n      if (!['none', 'display_current', 'display_and_render_current', 'all'].includes(required_option.refresh)) {\n        throw Error(\n          `提供的 refresh 无效, 请提供 'none', 'display_current', 'display_and_render_current' 或 'all', 你提供的是: ${required_option.refresh} `,\n        );\n      }\n\n      const chat_message = chat[message_id];\n  if (!chat_message) {\n    console.warn(`未找到第 ${message_id} 楼的消息`);\n    return;\n  }\n\n  const add_swipes_if_required = (): boolean => {\n    if (required_option.swipe_id === 'current') {\n      return false;\n    }\n\n    // swipe_id 对应的消息页存在\n    if (required_option.swipe_id == 0 || (chat_message.swipes && required_option.swipe_id < chat_message.swipes.length)) {\n      return true;\n    }\n\n        if (!chat_message.swipes) {\n          chat_message.swipe_id = 0;\n          chat_message.swipes = [chat_message.mes];\n          chat_message.swipe_info = [{}];\n        }\n        for (let i = chat_message.swipes.length; i <= required_option.swipe_id; ++i) {\n          chat_message.swipes.push('');\n          chat_message.swipe_info.push({});\n        }\n        return true;\n      };\n\n      const swipe_id_previous_index: number = chat_message.swipe_id ?? 0;\n      const swipe_id_to_set_index: number = required_option.swipe_id == 'current' ? swipe_id_previous_index : required_option.swipe_id;\n      const swipe_id_to_use_index: number = required_option.refresh != 'none' ? swipe_id_to_set_index : swipe_id_previous_index;\n      const message: string =\n        field_values.message ??\n        (chat_message.swipes ? chat_message.swipes[swipe_id_to_set_index] : undefined) ??\n        chat_message.mes;\n\n      const update_chat_message = () => {\n        const message_demacroed = substituteParamsExtended(message);\n\n        if (field_values.data) {\n          if (!chat_message.variables) {\n            chat_message.variables = [];\n          }\n          chat_message.variables[swipe_id_to_set_index] = field_values.data;\n        }\n\n        if (chat_message.swipes) {\n          chat_message.swipes[swipe_id_to_set_index] = message_demacroed;\n          chat_message.swipe_id = swipe_id_to_use_index;\n        }\n\n        if (swipe_id_to_use_index === swipe_id_to_set_index) {\n          chat_message.mes = message_demacroed;\n        }\n      };\n\n      const update_partial_html = (should_update_swipe: boolean) => {\n        // @ts-ignore\n        const mes_html = $(`div.mes[mesid = \"${message_id}\"]`);\n        if (!mes_html) {\n          return;\n        }\n\n        if (should_update_swipe) {\n          // FIXME: 只有一条消息时, swipes-counter 不会正常显示; 此外还要考虑 swipes-counter 的 \"Swipe # for All Messages\" 选项\n          mes_html\n            .find('.swipes-counter')\n            .text(`${swipe_id_to_use_index + 1}\\u200b/\\u200b${chat_message.swipes.length}`);\n        }\n        if (required_option.refresh != 'none') {\n          mes_html\n            .find('.mes_text')\n            .empty()\n            .append(\n              messageFormatting(message, chat_message.name, chat_message.is_system, chat_message.is_user, message_id),\n            );\n          if (required_option.refresh == 'display_and_render_current') {\n            handlePartialRender(message_id);\n          }\n        }\n      };\n\n      const should_update_swipe: boolean = add_swipes_if_required();\n      update_chat_message();\n      if (required_option.refresh == 'all') {\n        await reloadCurrentChat();\n      } else {\n        update_partial_html(should_update_swipe);\n        // QUESTION: saveChatDebounced 还是 await saveChatConditional?\n        await saveChatConditional();\n      }\n\n      console.info(\n        `设置第 ${message_id} 楼消息, 选项: ${JSON.stringify(\n          required_option,\n        )}, 设置前使用的消息页: ${swipe_id_previous_index}, 设置的消息页: ${swipe_id_to_set_index}, 现在使用的消息页: ${swipe_id_to_use_index} `,\n      );\n}\n","import { chat, messageFormatting } from '@sillytavern/script';\nimport { getLastMessageId } from '@sillytavern/scripts/macros';\n\n\n/**\n * 将字符串处理为酒馆用于显示的 html 格式. 将会,\n * 1. 替换字符串中的酒馆宏\n * 2. 对字符串应用对应的酒馆正则\n * 3. 将字符串调整为 html 格式\n *\n * @param text 要处理的字符串\n * @param option 可选选项\n *   - `message_id?:number`: 消息所在的楼层, 要求该楼层已经存在, 即在 `[0, await getLastMessageId()]` 范围内; 默认为最新楼层\n *\n * @returns 处理结果\n */\nexport function formatAsDisplayedMessage(text: string, option: FormatAsDisplayedMessageOption = {}): string {\n  option.message_id = option.message_id ?? 'last';\n  if (typeof option.message_id !== 'number' && !['last', 'last_user', 'last_char'].includes(option.message_id)) {\n    throw Error(\n      `提供的 message_id 无效, 请提供 'last', 'last_user', 'last_char' 或楼层消息号, 你提供的是: ${option.message_id}`,\n    );\n  }\n  const last_message_id = getLastMessageId();\n  if (last_message_id === null) {\n    throw Error(`未找到任何消息楼层, 你提供的是: ${option.message_id}`);\n  }\n  switch (option.message_id) {\n    case 'last':\n      option.message_id = last_message_id;\n      break;\n    case 'last_user': {\n      const last_user_message_id = getLastMessageId({ filter: (m: any) => m.is_user && !m.is_system }) as number;\n      if (last_user_message_id === null) {\n        throw Error(`未找到任何 user 消息楼层, 你提供的是: ${option.message_id}`);\n      }\n      option.message_id = last_user_message_id;\n      break;\n    }\n    case 'last_char': {\n      const last_char_message_id = getLastMessageId({ filter: (m: any) => !m.is_user && !m.is_system }) as number;\n      if (last_char_message_id === null) {\n        throw Error(`未找到任何 char 消息楼层, 你提供的是: ${option.message_id}`);\n      }\n      option.message_id = last_char_message_id;\n      break;\n    }\n  }\n  if (option.message_id < 0 || option.message_id > last_message_id) {\n    throw Error(`提供的 message_id 不在 [0, ${last_message_id}] 内, 你提供的是: ${option.message_id} `);\n  }\n\n  const chat_message = chat[option.message_id];\n  const result = messageFormatting(\n    text,\n    chat_message.name,\n    chat_message.is_system,\n    chat_message.is_user,\n    option.message_id,\n  );\n\n  console.info(\n    `将字符串处理为酒馆用于显示的 html 格式, 字符串: '${text}', 选项: '${JSON.stringify(option)}', 结果: '${result}'`,\n  );\n  return result;\n}\n","import {\n  MAX_INJECTION_DEPTH,\n  activateSendButtons,\n  baseChatReplace,\n  characters,\n  chat,\n  chat_metadata,\n  cleanUpMessage,\n  countOccurrences,\n  deactivateSendButtons,\n  eventSource,\n  extension_prompt_roles,\n  extension_prompt_types,\n  getBiasStrings,\n  getCharacterCardFields,\n  getExtensionPromptRoleByName,\n  getMaxContextSize,\n  isOdd,\n  name1,\n  name2,\n  saveChatConditional,\n  saveSettingsDebounced,\n  setExtensionPrompt,\n  setGenerationProgress,\n  showSwipeButtons,\n  stopGeneration,\n  substituteParams,\n  this_chid,\n} from '@sillytavern/script';\nimport { NOTE_MODULE_NAME, metadata_keys, shouldWIAddPrompt } from '@sillytavern/scripts/authors-note';\nimport { extension_settings, getContext } from '@sillytavern/scripts/extensions';\nimport { getRegexedString, regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\nimport {\n  ChatCompletion,\n  Message,\n  MessageCollection,\n  isImageInliningSupported,\n  oai_settings,\n  prepareOpenAIMessages,\n  sendOpenAIRequest,\n  setOpenAIMessageExamples,\n  setOpenAIMessages,\n  setupChatCompletionPromptManager,\n} from '@sillytavern/scripts/openai';\nimport {\n  flushEphemeralStoppingStrings,\n  persona_description_positions,\n  power_user,\n} from '@sillytavern/scripts/power-user';\nimport { Prompt, PromptCollection } from '@sillytavern/scripts/PromptManager';\nimport { Stopwatch, getBase64Async } from '@sillytavern/scripts/utils';\nimport { getWorldInfoPrompt, wi_anchor_position, world_info_include_names } from '@sillytavern/scripts/world-info';\n\n// 在文件顶部添加 abortController 声明\nlet abortController = new AbortController();\n\nfunction fromOverrides(overrides: Overrides): detail.OverrideConfig {\n  return {\n    world_info_before: overrides.world_info_before,\n    persona_description: overrides.persona_description,\n    char_description: overrides.char_description,\n    char_personality: overrides.char_personality,\n    scenario: overrides.scenario,\n    world_info_after: overrides.world_info_after,\n    dialogue_examples: overrides.dialogue_examples,\n\n    with_depth_entries: overrides.chat_history?.with_depth_entries,\n    author_note: overrides.chat_history?.author_note,\n    chat_history: overrides.chat_history?.prompts,\n  };\n}\n\nfunction fromInjectionPrompt(inject: InjectionPrompt): detail.InjectionPrompt {\n  const position_map = {\n    before_prompt: 'BEFORE_PROMPT',\n    in_chat: 'IN_CHAT',\n    after_prompt: 'IN_PROMPT',\n    none: 'NONE',\n  } as const;\n  return {\n    role: inject.role,\n    content: inject.content,\n    position: position_map[inject.position],\n    depth: inject.depth,\n    scan: inject.should_scan,\n  };\n}\n\nfunction fromGenerateConfig(config: GenerateConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: true,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    overrides: config.overrides !== undefined ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects !== undefined ? config.injects.map(fromInjectionPrompt) : undefined,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n  };\n}\n\nfunction fromGenerateRawConfig(config: GenerateRawConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: false,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n    overrides: config.overrides ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects ? config.injects.map(fromInjectionPrompt) : undefined,\n    order: config.ordered_prompts,\n  };\n}\n\nnamespace detail {\n  export interface RolePrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n    image?: File | string;\n  }\n\n  export interface InjectionPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n    position?: 'IN_PROMPT' | 'IN_CHAT' | 'BEFORE_PROMPT' | 'NONE';\n    depth?: number;\n    scan?: boolean;\n  }\n\n  export interface CustomPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n  }\n\n  // 覆盖配置类型\n  export interface OverrideConfig {\n    world_info_before?: string; // 世界书（角色定义之前的部分）\n    persona_description?: string; // 用户描述\n    char_description?: string; // 角色描述\n    char_personality?: string; // 角色高级定义-性格\n    scenario?: string; // 场景\n    world_info_after?: string; // 世界书（角色定义之后的部分）\n    dialogue_examples?: string; // 角色高级定义-对话示例\n\n    with_depth_entries?: boolean; // 世界书深度\n    author_note?: string; // 作者注释\n    chat_history?: RolePrompt[]; // 聊天历史\n  }\n\n  // 内置提示词条目类型\n  export type BuiltinPromptEntry =\n    | 'world_info_before' // 世界书(角色定义前)\n    | 'persona_description' // 用户描述\n    | 'char_description' // 角色描述\n    | 'char_personality' // 角色性格\n    | 'scenario' // 场景\n    | 'world_info_after' // 世界书(角色定义后)\n    | 'dialogue_examples' // 对话示例\n    | 'chat_history' // 聊天历史\n    | 'user_input'; // 用户输入\n\n  // 生成参数类型\n  export interface GenerateParams {\n    user_input?: string;\n    use_preset?: boolean;\n    image?: File | string;\n    stream?: boolean;\n    overrides?: OverrideConfig;\n    max_chat_history?: number;\n    inject?: InjectionPrompt[];\n    order?: Array<BuiltinPromptEntry | CustomPrompt>;\n  }\n}\n\nconst type = 'quiet';\nconst dryRun = false;\n\nconst character_names_behavior = {\n  NONE: -1,\n  DEFAULT: 0,\n  COMPLETION: 1,\n  CONTENT: 2,\n};\n\nconst roleTypes: Record<\n  'system' | 'user' | 'assistant',\n  (typeof extension_prompt_roles)[keyof typeof extension_prompt_roles]\n> = {\n  system: extension_prompt_roles.SYSTEM,\n  user: extension_prompt_roles.USER,\n  assistant: extension_prompt_roles.ASSISTANT,\n};\nconst default_order: detail.BuiltinPromptEntry[] = [\n  'world_info_before',\n  'persona_description',\n  'char_description',\n  'char_personality',\n  'scenario',\n  'world_info_after',\n  'dialogue_examples',\n  'chat_history',\n  'user_input',\n];\n\nclass StreamingProcessor {\n  public generator: () => AsyncGenerator<{ text: string }, void, void>;\n  public stoppingStrings?: any;\n  public result: string;\n  public isStopped: boolean;\n  public isFinished: boolean;\n  public abortController: AbortController;\n  private messageBuffer: string;\n\n  constructor() {\n    this.result = '';\n    this.messageBuffer = '';\n    this.isStopped = false;\n    this.isFinished = false;\n    this.generator = this.nullStreamingGeneration;\n    this.abortController = new AbortController();\n  }\n\n  onProgressStreaming(text: string, isFinal: boolean) {\n    // 计算增量文本\n    const newText = text.slice(this.messageBuffer.length);\n    this.messageBuffer = text;\n\n    let processedText = cleanUpMessage(newText, false, false, !isFinal, this.stoppingStrings);\n\n    const charsToBalance = ['*', '\"', '```'];\n    for (const char of charsToBalance) {\n      if (!isFinal && isOdd(countOccurrences(processedText, char))) {\n        const separator = char.length > 1 ? '\\n' : '';\n        processedText = processedText.trimEnd() + separator + char;\n      }\n    }\n\n    eventSource.emit('js_stream_token_received_fully', text);\n    eventSource.emit('js_stream_token_received_incrementally', processedText);\n\n    if (isFinal) {\n      const fullText = cleanUpMessage(text, false, false, false, this.stoppingStrings);\n      eventSource.emit('js_generation_ended', fullText);\n    }\n  }\n\n  onErrorStreaming() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n    this.isStopped = true;\n    unblockGeneration();\n    saveChatConditional();\n  }\n\n  async *nullStreamingGeneration(): AsyncGenerator<{ text: string }, void, void> {\n    throw Error('Generation function for streaming is not hooked up');\n  }\n\n  async generate() {\n    try {\n      const sw = new Stopwatch(1000 / power_user.streaming_fps);\n      const timestamps = [];\n\n      for await (const { text } of this.generator()) {\n        timestamps.push(Date.now());\n        if (this.isStopped) {\n          this.messageBuffer = '';\n          return;\n        }\n\n        this.result = text;\n        await sw.tick(() => this.onProgressStreaming(text, false));\n      }\n\n      if (!this.isStopped) {\n        this.onProgressStreaming(this.result, true);\n      } else {\n        this.messageBuffer = '';\n      }\n\n      const seconds = (timestamps[timestamps.length - 1] - timestamps[0]) / 1000;\n      console.warn(\n        `Stream stats: ${timestamps.length} tokens, ${seconds.toFixed(2)} seconds, rate: ${Number(\n          timestamps.length / seconds,\n        ).toFixed(2)} TPS`,\n      );\n    } catch (err) {\n      if (!this.isFinished) {\n        this.onErrorStreaming();\n        throw Error(`Generate method error: ${err}`);\n      }\n      this.messageBuffer = '';\n      return this.result;\n    }\n\n    this.isFinished = true;\n    return this.result;\n  }\n}\n\nasync function iframeGenerate({\n  user_input = '',\n  use_preset = true,\n  image = undefined,\n  overrides = undefined,\n  max_chat_history = undefined,\n  inject = [],\n  order = undefined,\n  stream = false,\n}: detail.GenerateParams = {}): Promise<string> {\n  //初始化\n  abortController = new AbortController();\n\n  // 1. 处理用户输入（正则，宏）\n  const processedUserInput = processUserInput(substituteParams(user_input), oai_settings) || '';\n\n  // 2. 准备过滤后的基础数据\n  const baseData = await prepareAndOverrideData(\n    {\n      overrides,\n      max_chat_history,\n      inject,\n      order,\n    },\n    processedUserInput,\n  );\n\n  // 3. 根据 use_preset 分流处理\n  const generate_data = use_preset\n    ? await handlePresetPath(baseData, processedUserInput, {\n        image,\n        overrides,\n        max_chat_history,\n        inject,\n        order,\n      })\n    : await handleCustomPath(\n        baseData,\n        {\n          image,\n          overrides,\n          max_chat_history,\n          inject,\n          order,\n        },\n        processedUserInput,\n      );\n  console.log('[Generate:发送提示词]', generate_data);\n  // 4. 根据 stream 参数决定生成方式\n  return await generateResponse(generate_data, stream);\n}\n\nasync function prepareAndOverrideData(\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const getOverrideContent = (identifier: string): string | detail.RolePrompt[] | undefined => {\n    if (!config.overrides) return undefined;\n    const value = config.overrides[identifier as keyof detail.OverrideConfig];\n    if (typeof value === 'boolean') return undefined;\n    return value;\n  };\n\n  // 1. 处理角色卡高级定义角色备注 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config)) {\n    handleCharDepthPrompt();\n  }\n\n  // 2. 设置作者注释 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('author_note', config)) {\n    setAuthorNotePrompt(config);\n  }\n\n  // 3. 处理user角色描述 - 仅在chat_history和persona_description都未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('persona_description', config)) {\n    setPersonaDescriptionExtensionPrompt();\n  }\n\n  // 4. 获取角色卡基础字段\n  const {\n    description: rawDescription,\n    personality: rawPersonality,\n    persona: rawPersona,\n    scenario: rawScenario,\n    mesExamples: rawMesExamples,\n    system,\n    jailbreak,\n  } = getCharacterCardFields();\n\n  // 判断是否被过滤,如果被过滤返回空字符串,否则返回override的值或原始值\n  const description = isPromptFiltered('char_description', config)\n    ? ''\n    : getOverrideContent('char_description') ?? rawDescription;\n\n  const personality = isPromptFiltered('char_personality', config)\n    ? ''\n    : getOverrideContent('char_personality') ?? rawPersonality;\n\n  const persona = isPromptFiltered('persona_description', config)\n    ? ''\n    : getOverrideContent('persona_description') ?? rawPersona;\n\n  const scenario = isPromptFiltered('scenario', config) ? '' : getOverrideContent('scenario') ?? rawScenario;\n\n  const mesExamples = isPromptFiltered('dialogue_examples', config)\n    ? ''\n    : (getOverrideContent('dialogue_examples') as string) ?? rawMesExamples;\n\n  let mesExamplesArray = parseMesExamples(mesExamples);\n  let oaiMessageExamples = [];\n  oaiMessageExamples = setOpenAIMessageExamples(mesExamplesArray);\n\n  // 5. 获取偏置字符串\n  const { promptBias } = getBiasStrings(processedUserInput, type);\n\n  // 6. 处理自定义注入的提示词\n  if (config.inject) {\n    await handleInjectedPrompts(config);\n  }\n\n  // 7. 处理聊天记录\n  let oaiMessages = [];\n  if (config.overrides?.chat_history) {\n    oaiMessages = [...config.overrides.chat_history].reverse();\n  } else {\n    oaiMessages = setOpenAIMessages(await processChatHistory(chat));\n    if (config.max_chat_history !== undefined) {\n      oaiMessages = oaiMessages.slice(0, config.max_chat_history);\n    }\n  }\n\n  // 添加临时消息用于激活世界书\n  addTemporaryUserMessage(processedUserInput);\n  // 8. 处理世界信息\n  const worldInfo = await processWorldInfo(oaiMessages as detail.RolePrompt[], config);\n\n  // 移除临时消息\n  removeTemporaryUserMessage();\n\n  // 9. 处理世界书消息示例\n  mesExamplesArray = !isPromptFiltered('dialogue_examples', config)\n    ? await processMessageExamples(mesExamplesArray, worldInfo.worldInfoExamples)\n    : [];\n\n  return {\n    characterInfo: {\n      description,\n      personality,\n      persona,\n      scenario,\n      system: system,\n      jailbreak: jailbreak,\n    },\n    chatContext: {\n      oaiMessages,\n      oaiMessageExamples,\n      promptBias,\n    },\n    worldInfo,\n  };\n}\n\n//处理角色卡中的深度提示词\nfunction handleCharDepthPrompt() {\n  const depthPromptText =\n    // @ts-ignore\n    baseChatReplace(characters[this_chid]?.data?.extensions?.depth_prompt?.prompt?.trim(), name1, name2) || '';\n  // @ts-ignore\n  const depthPromptDepth = characters[this_chid]?.data?.extensions?.depth_prompt?.depth ?? '4';\n  const depthPromptRole = getExtensionPromptRoleByName(\n    // @ts-ignore\n    characters[this_chid]?.data?.extensions?.depth_prompt?.role ?? 'system',\n  );\n  setExtensionPrompt(\n    'DEPTH_PROMPT',\n    depthPromptText,\n    extension_prompt_types.IN_CHAT,\n    depthPromptDepth,\n    // @ts-ignore\n    extension_settings.note.allowWIScan,\n    depthPromptRole,\n  );\n}\n//处理作者注释\nfunction setAuthorNotePrompt(config: detail.GenerateParams) {\n  const authorNoteOverride = config?.overrides?.author_note;\n  // @ts-ignore\n  let prompt = authorNoteOverride ?? $('#extension_floating_prompt').val() as string;\n\n  setExtensionPrompt(\n    NOTE_MODULE_NAME,\n    prompt,\n    // @ts-ignore\n    chat_metadata[metadata_keys.position],\n    // @ts-ignore\n    chat_metadata[metadata_keys.depth],\n    // @ts-ignore\n    extension_settings.note.allowWIScan,\n    // @ts-ignore\n    chat_metadata[metadata_keys.role],\n  );\n}\n//用户角色描述提示词设置为提示词管理器之外的选项的情况\nfunction setPersonaDescriptionExtensionPrompt() {\n  const description = power_user.persona_description;\n  const INJECT_TAG = 'PERSONA_DESCRIPTION';\n  setExtensionPrompt(INJECT_TAG, '', extension_prompt_types.IN_PROMPT, 0);\n\n  if (!description || power_user.persona_description_position === persona_description_positions.NONE) {\n    return;\n  }\n\n  //当user信息在作者注释前后 - 仅在作者注释未被过滤时执行\n  const promptPositions = [persona_description_positions.BOTTOM_AN, persona_description_positions.TOP_AN];\n\n  if (promptPositions.includes(power_user.persona_description_position) && shouldWIAddPrompt) {\n    // @ts-ignore\n    const originalAN = getContext().extensionPrompts[NOTE_MODULE_NAME].value;\n    const ANWithDesc =\n      power_user.persona_description_position === persona_description_positions.TOP_AN\n        ? `${description}\\n${originalAN}`\n        : `${originalAN}\\n${description}`;\n\n    setExtensionPrompt(\n      NOTE_MODULE_NAME,\n      ANWithDesc,\n      // @ts-ignore\n      chat_metadata[metadata_keys.position],\n      // @ts-ignore\n      chat_metadata[metadata_keys.depth],\n      // @ts-ignore\n      extension_settings.note.allowWIScan,\n      // @ts-ignore\n      chat_metadata[metadata_keys.role],\n    );\n  }\n\n  // user信息深度注入不依赖于作者注释的状态，直接应用\n  if (power_user.persona_description_position === persona_description_positions.AT_DEPTH) {\n    setExtensionPrompt(\n      INJECT_TAG,\n      description,\n      extension_prompt_types.IN_CHAT,\n      power_user.persona_description_depth,\n      true,\n      power_user.persona_description_role,\n    );\n  }\n}\nasync function handleInjectedPrompts(promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>) {\n  if (!promptConfig || !Array.isArray(promptConfig.inject)) return;\n\n  const injects = promptConfig.inject;\n\n  const positionMap = {\n    IN_PROMPT: extension_prompt_types.IN_PROMPT,\n    IN_CHAT: extension_prompt_types.IN_CHAT,\n    BEFORE_PROMPT: extension_prompt_types.BEFORE_PROMPT,\n    NONE: extension_prompt_types.NONE,\n  };\n\n  for (const inject of injects) {\n    const validatedInject = {\n      role: roleTypes[inject.role] ?? extension_prompt_roles.SYSTEM,\n      content: inject.content || '',\n      depth: Number(inject.depth) || 0,\n      scan: Boolean(inject.scan) || true,\n      position: positionMap[inject.position as keyof typeof positionMap] ?? extension_prompt_types.IN_CHAT,\n    };\n\n    // 设置用户自定义注入提示词\n    setExtensionPrompt(\n      `INJECTION-${inject.depth}-${inject.role}`,\n      validatedInject.content,\n      validatedInject.position,\n      validatedInject.depth,\n      validatedInject.scan,\n      validatedInject.role,\n    );\n  }\n}\n// 处理聊天记录\nasync function processChatHistory(chat: any[]) {\n  let coreChat = chat.filter(x => !x.is_system);\n\n  return await Promise.all(\n    coreChat.map(async (chatItem, index) => {\n      let message = chatItem.mes;\n      let regexType = chatItem.is_user ? regex_placement.USER_INPUT : regex_placement.AI_OUTPUT;\n\n      let regexedMessage = getRegexedString(message, regexType, {\n        isPrompt: true,\n        depth: coreChat.length - index - 1,\n      });\n\n      return {\n        ...chatItem,\n        mes: regexedMessage,\n        index,\n      };\n    }),\n  );\n}\n\n// 处理世界书\nasync function processWorldInfo(\n  oaiMessages: detail.RolePrompt[],\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const chatForWI = oaiMessages\n    .filter(x => x.role !== 'system')\n    .map(x => {\n      const name = x.role === 'user' ? name1 : name2;\n      return world_info_include_names ? `${name}: ${x.content}` : x.content;\n    })\n    .reverse();\n\n  const this_max_context = getMaxContextSize();\n  const { worldInfoString, worldInfoBefore, worldInfoAfter, worldInfoExamples, worldInfoDepth } =\n    await getWorldInfoPrompt(chatForWI, this_max_context, dryRun);\n\n  await clearInjectionPrompts(['customDepthWI']);\n\n  if (!isPromptFiltered('with_depth_entries', config)) {\n    processWorldInfoDepth(worldInfoDepth);\n  }\n\n  // 先检查是否被过滤，如果被过滤直接返回null\n  const finalWorldInfoBefore = isPromptFiltered('world_info_before', config)\n    ? null\n    : config.overrides?.world_info_before !== undefined\n    ? config.overrides.world_info_before\n    : worldInfoBefore;\n\n  const finalWorldInfoAfter = isPromptFiltered('world_info_after', config)\n    ? null\n    : config.overrides?.world_info_after !== undefined\n    ? config.overrides.world_info_after\n    : worldInfoAfter;\n\n  return {\n    worldInfoString,\n    worldInfoBefore: finalWorldInfoBefore,\n    worldInfoAfter: finalWorldInfoAfter,\n    worldInfoExamples,\n    worldInfoDepth: !isPromptFiltered('with_depth_entries', config) ? worldInfoDepth : null,\n  };\n}\n// 处理世界信息深度部分\nfunction processWorldInfoDepth(worldInfoDepth: any[]) {\n  if (Array.isArray(worldInfoDepth)) {\n    worldInfoDepth.forEach(entry => {\n      const joinedEntries = entry.entries.join('\\n');\n      setExtensionPrompt(\n        `customDepthWI-${entry.depth}-${entry.role}`,\n        joinedEntries,\n        extension_prompt_types.IN_CHAT,\n        entry.depth,\n        false,\n        entry.role,\n      );\n    });\n  }\n}\n// 处理世界书中示例前后\nasync function processMessageExamples(mesExamplesArray: string[], worldInfoExamples: any[]): Promise<string[]> {\n  // 处理世界信息中的示例\n  for (const example of worldInfoExamples) {\n    if (!example.content.length) continue;\n\n    const formattedExample = baseChatReplace(example.content, name1, name2);\n    const cleanedExample = parseMesExamples(formattedExample);\n\n    if (example.position === wi_anchor_position.before) {\n      mesExamplesArray.unshift(...cleanedExample);\n    } else {\n      mesExamplesArray.push(...cleanedExample);\n    }\n  }\n\n  return mesExamplesArray;\n}\n//处理对话示例格式\nfunction parseMesExamples(examplesStr: string) {\n  if (examplesStr.length === 0 || examplesStr === '<START>') {\n    return [];\n  }\n\n  if (!examplesStr.startsWith('<START>')) {\n    examplesStr = '<START>\\n' + examplesStr.trim();\n  }\n  const blockHeading = '<START>\\n';\n  const splitExamples = examplesStr\n    .split(/<START>/gi)\n    .slice(1)\n    .map(block => `${blockHeading}${block.trim()}\\n`);\n\n  return splitExamples;\n}\n//用户输入先正则处理\nfunction processUserInput(user_input: string, oai_settings: any) {\n  if (user_input === '') {\n    user_input = oai_settings.send_if_empty.trim();\n  }\n  return getRegexedString(user_input, regex_placement.USER_INPUT, {\n    isPrompt: true,\n    depth: 0,\n  });\n}\n//使用预设\nasync function handlePresetPath(\n  baseData: any,\n  processedUserInput: string,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  // prepareOpenAIMessages会从设置里读取场景因此临时覆盖\n  let originalScenario = null;\n\n  try {\n    const scenarioOverride = config?.overrides?.scenario;\n    // @ts-ignore\n    if (scenarioOverride && characters && characters[this_chid]) {\n      // 保存原始场景\n      // @ts-ignore\n      originalScenario = characters[this_chid].scenario || null;\n      // @ts-ignore\n      characters[this_chid].scenario = scenarioOverride;\n    }\n    // 添加user消息(一次性)\n    const userMessageTemp = {\n      role: 'user',\n      content: processedUserInput,\n      image: config.image,\n    };\n\n    if (config.image) {\n      userMessageTemp.image = await convertFileToBase64(config.image);\n    }\n\n    baseData.chatContext.oaiMessages.unshift(userMessageTemp);\n\n    const messageData = {\n      name2,\n      charDescription: baseData.characterInfo.description,\n      charPersonality: baseData.characterInfo.personality,\n      Scenario: baseData.characterInfo.scenario,\n      worldInfoBefore: baseData.worldInfo.worldInfoBefore,\n      worldInfoAfter: baseData.worldInfo.worldInfoAfter,\n      extensionPrompts: getContext().extensionPrompts,\n      bias: baseData.chatContext.promptBias,\n      type: 'normal',\n      quietPrompt: '',\n      quietImage: null,\n      cyclePrompt: '',\n      systemPromptOverride: baseData.characterInfo.system,\n      jailbreakPromptOverride: baseData.characterInfo.jailbreak,\n      personaDescription: baseData.characterInfo.persona,\n      messages: baseData.chatContext.oaiMessages,\n      messageExamples: baseData.chatContext.oaiMessageExamples,\n    };\n\n    const [prompt] = await prepareOpenAIMessages(messageData as any, dryRun);\n\n    return { prompt };\n  } finally {\n    // 恢复原始场景\n    // @ts-ignore\n    if (originalScenario !== null && characters && characters[this_chid]) {\n      // @ts-ignore\n      characters[this_chid].scenario = originalScenario;\n    }\n  }\n}\nasync function convertSystemPromptsToCollection(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const promptCollection = new PromptCollection();\n  const examplesCollection = new MessageCollection('dialogue_examples');\n  // 处理自定义注入\n  const customPrompts = (promptConfig.order || default_order)\n    .map((item, index) => {\n      if (typeof item === 'object' && item.role && item.content) {\n        const identifier = `custom_prompt_${index}`;\n        return {\n          identifier,\n          role: item.role as 'system' | 'user' | 'assistant',\n          content: item.content,\n        };\n      }\n      return null;\n    })\n    .filter((item): item is NonNullable<typeof item> => item !== null);\n\n  for (const prompt of customPrompts) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: prompt.identifier,\n        // @ts-ignore\n        role: prompt.role,\n        content: prompt.content,\n        system_prompt: prompt.role === 'system',\n      }),\n    );\n  }\n\n  // 处理角色信息\n  const characterPrompts = [\n    {\n      id: 'char_description',\n      content: baseData.characterInfo.description,\n      role: 'system',\n    },\n    {\n      id: 'char_personality',\n      content: baseData.characterInfo.personality,\n      role: 'system',\n    },\n    {\n      id: 'scenario',\n      content: baseData.characterInfo.scenario,\n      role: 'system',\n    },\n  ];\n\n  // 添加角色相关提示词\n  characterPrompts.forEach(prompt => {\n    if (prompt.content) {\n      promptCollection.add(\n        // @ts-ignore\n        new Prompt({\n          // @ts-ignore\n          identifier: prompt.id,\n          // @ts-ignore\n          role: prompt.role,\n          // @ts-ignore\n          content: prompt.content,\n          // @ts-ignore\n          system_prompt: true,\n        }),\n      );\n    }\n  });\n\n  //当user信息在提示词管理器中时\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.IN_PROMPT\n  ) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: 'persona_description',\n        // @ts-ignore\n        role: 'system',\n        // @ts-ignore\n        content: baseData.characterInfo.persona,\n        // @ts-ignore\n        system_prompt: true,\n      }),\n    );\n  }\n\n  // 处理世界信息\n  if (baseData.worldInfo.world_info_before) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: 'world_info_before',\n        // @ts-ignore\n        role: 'system',\n        // @ts-ignore\n        content: baseData.worldInfo.world_info_before,\n        // @ts-ignore\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.worldInfo.world_info_after) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: 'world_info_after',\n        // @ts-ignore\n        role: 'system',\n        // @ts-ignore\n        content: baseData.worldInfo.world_info_after,\n        // @ts-ignore\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.chatContext.oaiMessageExamples.length > 0) {\n    // 遍历所有对话示例\n    for (const dialogue of [...baseData.chatContext.oaiMessageExamples]) {\n      const dialogueIndex = baseData.chatContext.oaiMessageExamples.indexOf(dialogue);\n      const chatMessages = [];\n\n      for (let promptIndex = 0; promptIndex < dialogue.length; promptIndex++) {\n        const prompt = dialogue[promptIndex];\n        const role = 'system';\n        const content = prompt.content || '';\n        const identifier = `dialogue_examples ${dialogueIndex}-${promptIndex}`;\n\n        const chatMessage = await Message.createAsync(role, content, identifier);\n        await chatMessage.setName(prompt.name);\n        chatMessages.push(chatMessage);\n      }\n      for (const message of chatMessages) {\n        examplesCollection.add(message);\n      }\n    }\n  }\n  return {\n    systemPrompts: promptCollection,\n    dialogue_examples: examplesCollection,\n  };\n}\n//不使用预设\nasync function handleCustomPath(\n  baseData: any,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const chatCompletion = new ChatCompletion();\n  chatCompletion.setTokenBudget(oai_settings.openai_max_context, oai_settings.openai_max_tokens);\n  chatCompletion.reserveBudget(3);\n  const orderArray = config.order || default_order;\n  const positionMap: Record<string, number> = orderArray.reduce((acc: Record<string, number>, item, index) => {\n    if (typeof item === 'string') {\n      acc[item.toLowerCase()] = index;\n    } else if (typeof item === 'object') {\n      acc[`custom_prompt_${index}`] = index;\n    }\n    return acc;\n  }, {});\n\n  //转换为集合\n  const { systemPrompts, dialogue_examples } = await convertSystemPromptsToCollection(baseData, config);\n  const addToChatCompletionInOrder = async (source: any, index: number) => {\n    if (typeof source === 'object') {\n      // 处理自定义注入\n      const collection = new MessageCollection(`custom_prompt_${index}`);\n      const message = await Message.createAsync(source.role, source.content, `custom_prompt_${index}`);\n      collection.add(message);\n      chatCompletion.add(collection, index);\n    } else if (systemPrompts.has(source)) {\n      // 处理普通提示词\n      const prompt = systemPrompts.get(source);\n      const collection = new MessageCollection(source);\n      const message = await Message.fromPromptAsync(prompt);\n      collection.add(message);\n      chatCompletion.add(collection, positionMap[source]);\n    }\n  };\n\n  // 处理所有类型的提示词\n  for (const [index, item] of orderArray.entries()) {\n    if (typeof item === 'string') {\n      // 使用 isPromptFiltered 替代 promptFilter 判断\n      if (!isPromptFiltered(item, config)) {\n        await addToChatCompletionInOrder(item, index);\n      }\n    } else if (typeof item === 'object' && item.role && item.content) {\n      await addToChatCompletionInOrder(item, index);\n    }\n  }\n\n  const dialogue_examplesIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'dialogue_examples',\n  );\n\n  if (dialogue_examplesIndex !== -1 && !isPromptFiltered('dialogue_examples', config)) {\n    chatCompletion.add(dialogue_examples, dialogue_examplesIndex);\n  }\n  //给user输入预留token\n  const userInputMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n  chatCompletion.reserveBudget(userInputMessage);\n\n  await processChatHistoryAndInject(baseData, config, chatCompletion, processedUserInput);\n  chatCompletion.freeBudget(userInputMessage);\n\n  //根据当前预设决定是否合并连续系统role消息\n  if (oai_settings.squash_system_messages) {\n    await chatCompletion.squashSystemMessages();\n  }\n  const prompt = chatCompletion.getChat();\n  return { prompt };\n}\n\nasync function processChatHistoryAndInject(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  chatCompletion: ChatCompletion,\n  processedUserInput: string,\n) {\n  const orderArray = promptConfig.order || default_order;\n  const chatHistoryIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'chat_history',\n  );\n  const userInputIndex = orderArray.findIndex(item => typeof item === 'string' && item.toLowerCase() === 'user_input');\n\n  const hasUserInput = userInputIndex !== -1;\n  const hasChatHistory = chatHistoryIndex !== -1;\n  const isChatHistoryFiltered = isPromptFiltered('chat_history', promptConfig);\n\n  // 创建用户输入消息\n  const userMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n\n  // 仅在需要时添加图像\n  if (promptConfig.image && hasUserInput) {\n    await userMessage.addImage(await convertFileToBase64(promptConfig.image));\n  }\n\n  // 如果聊天记录被过滤或不在order中，只处理用户输入\n  if (isChatHistoryFiltered || !hasChatHistory) {\n    const insertIndex = hasUserInput ? userInputIndex : orderArray.length;\n    chatCompletion.add(new MessageCollection('user_input', userMessage), insertIndex);\n    return;\n  }\n\n  // 处理聊天记录\n  const chatCollection = new MessageCollection('chat_history');\n\n  // 为新聊天指示预留token\n  const newChat = oai_settings.new_chat_prompt;\n  const newChatMessage = await Message.createAsync('system', substituteParams(newChat), 'newMainChat');\n  chatCompletion.reserveBudget(newChatMessage);\n\n  // 添加新聊天提示词到集合的最前面\n  chatCollection.add(newChatMessage);\n\n  // 处理空消息替换\n  const lastChatPrompt = baseData.chatContext.oaiMessages[baseData.chatContext.oaiMessages.length - 1];\n  const emptyMessage = await Message.createAsync('user', oai_settings.send_if_empty, 'emptyUserMessageReplacement');\n\n  if (\n    lastChatPrompt &&\n    lastChatPrompt.role === 'assistant' &&\n    oai_settings.send_if_empty &&\n    chatCompletion.canAfford(emptyMessage)\n  ) {\n    chatCollection.add(emptyMessage);\n  }\n\n  // 将用户消息添加到消息数组中准备处理注入\n  if (!hasUserInput) {\n    const userPrompt = {\n      role: 'user',\n      content: processedUserInput,\n      identifier: 'user_input',\n      image: promptConfig.image ? await convertFileToBase64(promptConfig.image) : undefined,\n    };\n    baseData.chatContext.oaiMessages.unshift(userPrompt);\n  }\n\n  // 处理注入和添加消息\n  const messages = (await populationInjectionPrompts(baseData.chatContext.oaiMessages, promptConfig.inject)).reverse();\n  const imageInlining = isImageInliningSupported();\n  // 添加聊天记录\n  const chatPool = [...messages];\n  for (const chatPrompt of chatPool) {\n    const prompt = new Prompt(chatPrompt as any);\n    prompt.identifier = `chat_history-${messages.length - chatPool.indexOf(chatPrompt)}`;\n    prompt.content = substituteParams(prompt.content);\n\n    const chatMessage = await Message.fromPromptAsync(prompt);\n    const promptManager = setupChatCompletionPromptManager(oai_settings);\n\n    if (promptManager) {\n      // @ts-ignore\n      if (promptManager.serviceSettings.names_behavior === character_names_behavior.COMPLETION && prompt.name) {\n        const messageName = promptManager.isValidName(prompt.name)\n          ? prompt.name\n          : promptManager.sanitizeName(prompt.name);\n        await chatMessage.setName(messageName);\n      }\n    }\n    if (imageInlining && chatPrompt.image) {\n      await chatMessage.addImage(chatPrompt.image as string);\n    }\n    if (chatCompletion.canAfford(chatMessage)) {\n      chatCollection.add(chatMessage);\n    } else {\n      break;\n    }\n  }\n\n  // 释放新聊天提示词的预留token\n  chatCompletion.freeBudget(newChatMessage);\n\n  if (hasUserInput) {\n    // 按各自在order中的位置添加聊天记录和用户输入\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n    chatCompletion.add(new MessageCollection('user_input', userMessage), userInputIndex);\n  } else {\n    // 聊天记录中已包含用户输入，直接添加到chat_history位置\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n  }\n}\nasync function populationInjectionPrompts(messages: detail.RolePrompt[], customInjects: detail.InjectionPrompt[] = []) {\n  let processedMessages = [...messages];\n  let totalInsertedMessages = 0;\n  const injectionPrompts = [];\n  // @ts-ignore\n  const authorsNote = getContext().extensionPrompts[NOTE_MODULE_NAME];\n  if (authorsNote && authorsNote.value) {\n    injectionPrompts.push({\n      role: getPromptRole(authorsNote.role),\n      content: authorsNote.value,\n      identifier: 'authorsNote',\n      injection_depth: authorsNote.depth,\n      injected: true,\n    });\n  }\n\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.AT_DEPTH\n  ) {\n    injectionPrompts.push({\n      role: 'system',\n      content: power_user.persona_description,\n      identifier: 'persona_description',\n      injection_depth: power_user.persona_description_depth,\n      injected: true,\n    });\n  }\n\n  // 处理自定义注入\n  if (Array.isArray(customInjects)) {\n    for (const inject of customInjects) {\n      injectionPrompts.push({\n        identifier: `INJECTION-${inject.role}-${inject.depth}`,\n        role: inject.role,\n        content: inject.content,\n        injection_depth: inject.depth || 0,\n        injected: true,\n      });\n    }\n  }\n\n  for (let i = 0; i <= MAX_INJECTION_DEPTH; i++) {\n    const depthPrompts = injectionPrompts.filter(prompt => prompt.injection_depth === i && prompt.content);\n\n    const roles = ['system', 'user', 'assistant'];\n    const roleMessages = [];\n    const separator = '\\n';\n\n    for (const role of roles) {\n      // 直接处理当前深度和角色的所有提示词\n      const rolePrompts = depthPrompts\n        .filter(prompt => prompt.role === role)\n        .map(x => x.content.trim())\n        .join(separator);\n\n      if (rolePrompts) {\n        roleMessages.push({\n          role: role as 'user' | 'system' | 'assistant',\n          content: rolePrompts,\n          injected: true,\n        });\n      }\n    }\n\n    if (roleMessages.length) {\n      const injectIdx = i + totalInsertedMessages;\n      processedMessages.splice(injectIdx, 0, ...roleMessages);\n      totalInsertedMessages += roleMessages.length;\n    }\n  }\n\n  return processedMessages;\n}\n\nfunction getPromptRole(role: number) {\n  switch (role) {\n    case extension_prompt_roles.SYSTEM:\n      return 'system';\n    case extension_prompt_roles.USER:\n      return 'user';\n    case extension_prompt_roles.ASSISTANT:\n      return 'assistant';\n    default:\n      return 'system';\n  }\n}\n\n//生成响应\nasync function generateResponse(generate_data: any, useStream = false): Promise<string> {\n  let result = '';\n  try {\n    deactivateSendButtons();\n\n    if (useStream) {\n      let originalStreamSetting = oai_settings.stream_openai;\n      if (!originalStreamSetting) {\n        oai_settings.stream_openai = true;\n        saveSettingsDebounced();\n      }\n      const streamingProcessor = new StreamingProcessor();\n      // @ts-ignore\n      streamingProcessor.generator = await sendOpenAIRequest('normal', generate_data.prompt, abortController.signal);\n      result = (await streamingProcessor.generate()) as string;\n      // console.log(\"getMessage\", getMessage);\n      if (originalStreamSetting !== oai_settings.stream_openai) {\n        oai_settings.stream_openai = originalStreamSetting;\n        saveSettingsDebounced();\n      }\n    } else {\n      eventSource.emit('js_generation_started');\n      const response = await sendOpenAIRequest(type, generate_data.prompt, abortController.signal);\n      result = await handleResponse(response);\n    }\n  } catch (error) {\n    throw error;\n  } finally {\n    unblockGeneration();\n    await clearInjectionPrompts(['INJECTION']);\n  }\n  return result;\n}\n\n// 处理响应\nasync function handleResponse(response: any) {\n  if (!response) {\n    throw Error(`未得到响应`);\n  }\n  if (response.error) {\n    if (response?.response) {\n      // @ts-ignore\n      toastr.error(response.response, t`API Error`, {\n        preventDuplicates: true,\n      });\n    }\n    throw Error(response?.response);\n  }\n  const message: string = extractMessageFromData(response);\n  eventSource.emit('js_generation_ended', message);\n  return message;\n}\n\nfunction unblockGeneration() {\n  activateSendButtons();\n  showSwipeButtons();\n  setGenerationProgress(0);\n  flushEphemeralStoppingStrings();\n}\n\n// 清理注入\nasync function clearInjectionPrompts(prefixes: string[]) {\n  const prompts: Record<string, any> = getContext().extensionPrompts;\n  Object.keys(prompts)\n    .filter(key => prefixes.some(prefix => key.startsWith(prefix)))\n    .forEach(key => delete prompts[key]);\n\n  await saveChatConditional();\n}\nfunction extractMessageFromData(data: any) {\n  if (typeof data === 'string') {\n    return data;\n  }\n\n  return (\n    data?.choices?.[0]?.message?.content ??\n    data?.choices?.[0]?.text ??\n    data?.text ??\n    data?.message?.content?.[0]?.text ??\n    data?.message?.tool_plan ??\n    ''\n  );\n}\n\nasync function convertFileToBase64(image: File | string): Promise<string> {\n  if (image instanceof File) {\n    return await getBase64Async(image);\n  }\n  return image;\n}\n\nfunction addTemporaryUserMessage(userContent: string) {\n  setExtensionPrompt('TEMP_USER_MESSAGE', userContent, extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction removeTemporaryUserMessage() {\n  setExtensionPrompt('TEMP_USER_MESSAGE', '', extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction isPromptFiltered(promptId: string, config: { overrides?: detail.OverrideConfig }): boolean {\n  if (!config.overrides) {\n    return false;\n  }\n\n  if (promptId === 'with_depth_entries') {\n    return config.overrides.with_depth_entries === false;\n  }\n\n  // 特殊处理 chat_history\n  if (promptId === 'chat_history') {\n    const prompts = config.overrides.chat_history;\n    return prompts !== undefined && prompts.length === 0;\n  }\n\n  // 对于普通提示词，只有当它在 overrides 中存在且为空字符串时才被过滤\n  const override = config.overrides[promptId as keyof Omit<detail.OverrideConfig, 'chat_history'>];\n  return override !== undefined && override === '';\n}\n\n/**\n * 使用酒馆当前启用的预设, 让 ai 生成一段文本.\n *\n * 该函数在执行过程中将会发送以下事件:\n * - `iframe_events.GENERATION_STARTED`: 生成开始\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n * - `iframe_events.GENERATION_ENDED`: 生成结束, 监听它可以得到生成的最终文本 (当然也能通过函数返回值获得)\n *\n * @param config 提示词和生成方式设置\n *   - `user_input?:string`: 用户输入\n *   - `should_stream?:boolean`: 是否启用流式传输; 默认为 'false'\n *   - `image?:File|string`: 图片输入\n *   - `overrides?:Overrides`: 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词. 如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖角色描述\n *   - `injects?:InjectionPrompt[]`: 要额外注入的提示词\n *   - `max_chat_history?:'all'|number`: 最多使用多少条聊天历史\n * @returns 生成的最终文本\n */\nexport async function generate(config: GenerateConfig) {\n  console.info(`发送生成请求: ${config}`);\n\n  const converted_config = fromGenerateConfig(config);\n  return await iframeGenerate(converted_config);\n}\n\n/**\n * 不使用酒馆当前启用的预设, 让 ai 生成一段文本.\n *\n * 该函数在执行过程中将会发送以下事件:\n * - `iframe_events.GENERATION_STARTED`: 生成开始\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n * - `iframe_events.GENERATION_ENDED`: 生成结束, 监听它可以得到生成的最终文本 (当然也能通过函数返回值获得)\n *\n * @param config 提示词和生成方式设置\n *   - `user_input?:string`: 用户输入\n *   - `should_stream?:boolean`: 是否启用流式传输; 默认为 'false'\n *   - `image?:File|string`: 图片输入\n *   - `overrides?:Overrides`: 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词. 如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖角色描述\n *   - `injects?:InjectionPrompt[]`: 要额外注入的提示词\n *   - `max_chat_history?:'all'|number`: 最多使用多少条聊天历史\n *   - `ordered_prompts?:(BuiltinPrompt|RolePrompt)[]`: 一个提示词数组, 数组元素将会按顺序发给 ai, 因而相当于自定义预设\n * @returns 生成的最终文本\n */\nexport async function generateRaw(config: GenerateRawConfig) {\n  console.info(`发送生成请求: ${config}`);\n\n  const converted_config = fromGenerateRawConfig(config);\n  return await iframeGenerate(converted_config);\n}\n\n// @ts-ignore\n$(document).on('click', '#mes_stop', function () {\n  const wasStopped = stopGeneration();\n  if (wasStopped) {\n    if (abortController) {\n      abortController.abort('Clicked stop button');\n    }\n    unblockGeneration();\n  }\n});\n","import { findChar } from '@/compatibility';\n\nimport {\n  characters,\n  getOneCharacter,\n  getRequestHeaders,\n  saveCharacterDebounced,\n  saveSettings,\n  saveSettingsDebounced,\n  this_chid,\n} from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { ensureImageFormatSupported, getCharaFilename } from '@sillytavern/scripts/utils';\nimport {\n  createNewWorldInfo,\n  deleteWorldInfo,\n  getWorldInfoSettings,\n  selected_world_info,\n  setWorldInfoButtonClass,\n  world_info,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\nasync function editCurrentCharacter(): Promise<boolean> {\n  // @ts-ignore\n  $('#rm_info_avatar').html('');\n  // @ts-ignore\n  const form_data = new FormData(($('#form_create') as JQuery<HTMLFormElement>).get(0));\n\n  const raw_file = form_data.get('avatar');\n  if (raw_file instanceof File) {\n    const converted_file = await ensureImageFormatSupported(raw_file);\n    form_data.set('avatar', converted_file);\n  }\n\n  const headers = getRequestHeaders();\n  // @ts-ignore\n  delete headers['Content-Type'];\n\n  // TODO: 这里的代码可以用来修改第一条消息!\n  form_data.delete('alternate_greetings');\n  // @ts-ignore\n  const chid = $('.open_alternate_greetings').data('chid');\n  if (chid && Array.isArray(characters[chid]?.data?.alternate_greetings)) {\n    for (const value of characters[chid].data.alternate_greetings) {\n      form_data.append('alternate_greetings', value);\n    }\n  }\n\n  const response = await fetch('/api/characters/edit', {\n    method: 'POST',\n    headers: headers,\n    body: form_data,\n    cache: 'no-cache',\n  });\n\n  if (!response.ok) {\n    return false;\n  }\n\n  await getOneCharacter(form_data.get('avatar_url'));\n  // @ts-ignore\n  $('#add_avatar_button').replaceWith($('#add_avatar_button').val('').clone(true));\n  // @ts-ignore\n  $('#create_button').attr('value', 'Save');\n\n  return true;\n}\n\nfunction toLorebookSettings(world_info_settings: ReturnType<typeof getWorldInfoSettings>): LorebookSettings {\n  return {\n    selected_global_lorebooks: (world_info_settings.world_info as { globalSelect: string[] }).globalSelect,\n\n    scan_depth: world_info_settings.world_info_depth,\n    context_percentage: world_info_settings.world_info_budget,\n    budget_cap: world_info_settings.world_info_budget_cap,\n    min_activations: world_info_settings.world_info_min_activations,\n    max_depth: world_info_settings.world_info_min_activations_depth_max,\n    max_recursion_steps: world_info_settings.world_info_max_recursion_steps,\n\n    insertion_strategy: { 0: 'evenly', 1: 'character_first', 2: 'global_first' }[\n      world_info_settings.world_info_character_strategy\n    ] as 'evenly' | 'character_first' | 'global_first',\n\n    include_names: world_info_settings.world_info_include_names,\n    recursive: world_info_settings.world_info_recursive,\n    case_sensitive: world_info_settings.world_info_case_sensitive,\n    match_whole_words: world_info_settings.world_info_match_whole_words,\n    use_group_scoring: world_info_settings.world_info_use_group_scoring,\n    overflow_alert: world_info_settings.world_info_overflow_alert,\n  };\n}\n\nfunction assignPartialLorebookSettings(settings: Partial<LorebookSettings>): void {\n  const for_eachs = {\n    selected_global_lorebooks: (value: LorebookSettings['selected_global_lorebooks']) => {\n      // @ts-ignore\n      $('#world_info').find('option[value!=\"\"]').remove();\n      world_names.forEach((item, i) =>\n        // @ts-ignore\n        $('#world_info').append(`<option value='${i}'${value.includes(item) ? ' selected' : ''}>${item}</option>`),\n      );\n\n      selected_world_info.length = 0;\n      selected_world_info.push(...value);\n      saveSettings();\n    },\n\n    scan_depth: (value: LorebookSettings['scan_depth']) => {\n      // @ts-ignore\n      $('#world_info_depth').val(value).trigger('input');\n    },\n    context_percentage: (value: LorebookSettings['context_percentage']) => {\n      // @ts-ignore\n      $('#world_info_budget').val(value).trigger('input');\n    },\n    budget_cap: (value: LorebookSettings['budget_cap']) => {\n      // @ts-ignore\n      $('#world_info_budget_cap').val(value).trigger('input');\n    },\n    min_activations: (value: LorebookSettings['min_activations']) => {\n      // @ts-ignore\n      $('#world_info_min_activations').val(value).trigger('input');\n    },\n    max_depth: (value: LorebookSettings['max_depth']) => {\n      // @ts-ignore\n      $('#world_info_min_activations_depth_max').val(value).trigger('input');\n    },\n    max_recursion_steps: (value: LorebookSettings['max_recursion_steps']) => {\n      // @ts-ignore\n      $('#world_info_max_recursion_steps').val(value).trigger('input');\n    },\n\n    insertion_strategy: (value: LorebookSettings['insertion_strategy']) => {\n      const converted_value = { evenly: 0, character_first: 1, global_first: 2 }[value];\n      // @ts-ignore\n      $(`#world_info_character_strategy option[value='${converted_value}']`).prop('selected', true);\n      // @ts-ignore\n      $('#world_info_character_strategy').val(converted_value).trigger('change');\n    },\n\n    include_names: (value: LorebookSettings['include_names']) => {\n      // @ts-ignore\n      $('#world_info_include_names').prop('checked', value).trigger('input');\n    },\n    recursive: (value: LorebookSettings['recursive']) => {\n      // @ts-ignore\n      $('#world_info_recursive').prop('checked', value).trigger('input');\n    },\n    case_sensitive: (value: LorebookSettings['case_sensitive']) => {\n      // @ts-ignore\n      $('#world_info_case_sensitive').prop('checked', value).trigger('input');\n    },\n    match_whole_words: (value: LorebookSettings['match_whole_words']) => {\n      // @ts-ignore\n      $('#world_info_match_whole_words').prop('checked', value).trigger('input');\n    },\n    use_group_scoring: (value: LorebookSettings['use_group_scoring']) => {\n      // @ts-ignore\n      $('#world_info_use_group_scoring').prop('checked', value).trigger('change');\n    },\n    overflow_alert: (value: LorebookSettings['overflow_alert']) => {\n      // @ts-ignore\n      $('#world_info_overflow_alert').prop('checked', value).trigger('change');\n    },\n  };\n\n  Object.entries(settings)\n    .filter(([_, value]) => value !== undefined)\n    .forEach(([field, value]) => {\n      // @ts-ignore\n      for_eachs[field]?.(value);\n    });\n}\n\n/**\n * 获取当前的世界书全局设置\n *\n * @returns 当前的世界书全局设置\n */\nexport function getLorebookSettings(): LorebookSettings {\n  const lorebook_settings = toLorebookSettings(getWorldInfoSettings());\n\n  console.info(`获取世界书全局设置:\\n${JSON.stringify(lorebook_settings, undefined, 2)}`);\n  return lorebook_settings;\n}\n\n/**\n * 修改世界书全局设置\n *\n * @returns 修改世界书全局设置\n */\nexport function setLorebookSettings(settings: Partial<LorebookSettings>): void {\n  if (settings.selected_global_lorebooks) {\n    const inexisting_lorebooks = settings.selected_global_lorebooks.filter(lorebook => !world_names.includes(lorebook));\n    if (inexisting_lorebooks.length > 0) {\n      throw Error(`尝试修改要全局启用的世界书, 但未找到以下世界书: ${JSON.stringify(inexisting_lorebooks)}`);\n    }\n  }\n\n  assignPartialLorebookSettings(settings);\n\n  console.info(`修改世界书全局设置:\\n${JSON.stringify(settings, undefined, 2)}`);\n}\n\n/**\n * 获取角色卡绑定的世界书\n *\n * @param option 可选选项\n *   - `name?:string`: 要查询的角色卡名称; 默认为当前角色卡\n *   - `type?:'all'|'primary'|'additional'`: 按角色世界书的绑定类型筛选世界书; 默认为 `'all'`\n *\n * @returns 一个 CharLorebook 数组\n */\nexport function getCharLorebooks(option: GetCharLorebooksOption): CharLorebooks {\n  // @ts-ignore\n  if (selected_group && !option.name) {\n    throw Error(`不要在群组中调用这个功能`);\n  }\n  //@ts-ignore\n  const filename = option.name ?? characters[this_chid]?.avatar ?? null;\n  // @ts-ignore\n  const character = findChar({ name: filename });\n  if (!character) {\n    throw Error(`未找到名为 '${filename}' 的角色卡`);\n  }\n\n  let books: CharLorebooks = { primary: null, additional: [] };\n\n  if (character.data?.extensions?.world) {\n    books.primary = character.data?.extensions?.world;\n  }\n\n  // @ts-ignore\n  const extraCharLore = world_info.charLore?.find(e => e.name === filename);\n  if (extraCharLore && Array.isArray(extraCharLore.extraBooks)) {\n    books.additional = extraCharLore.extraBooks;\n  }\n\n  console.info(`获取角色卡绑定的世界书, 选项: ${JSON.stringify(option)}, 获取结果: ${JSON.stringify(books)}`);\n  return books;\n}\n\n// TODO: 加入文档中\n/**\n * 设置当前角色卡绑定的世界书\n *\n * @param lorebooks 要设置的世界书信息\n *    - `primary: string | null;`: 主要世界书名称，设为null或空字符串表示移除\n *    - `additional: string[];`: 附加世界书名称数组，设为空数组表示移除所有附加世界书\n */\nexport async function setCurrentCharLorebooks(lorebooks: Partial<CharLorebooks>): Promise<void> {\n  // @ts-ignore\n  if (selected_group && !option.name) {\n    throw Error(`不要在群组中调用这个功能`);\n  }\n  // @ts-ignore\n  const filename = getCharaFilename(this_chid);\n  if (!filename) {\n    throw Error(`未打开任何角色卡`);\n  }\n\n  const inexisting_lorebooks: string[] = [\n    ...(lorebooks.primary && !world_names.includes(lorebooks.primary) ? [lorebooks.primary] : []),\n    ...(lorebooks.additional ? lorebooks.additional.filter(lorebook => !world_names.includes(lorebook)) : []),\n  ];\n  if (inexisting_lorebooks.length > 0) {\n    throw Error(`尝试修改 '${filename}' 绑定的世界书, 但未找到以下世界书: ${inexisting_lorebooks}`);\n  }\n\n  if (lorebooks.primary !== undefined) {\n    // @ts-ignore\n    const previous_primary = String($('#character_world').val());\n    // @ts-ignore\n    $('#character_world').val(lorebooks.primary ? lorebooks.primary : '');\n\n    // @ts-ignore\n    $('.character_world_info_selector')\n      .find('option:selected')\n      .val(lorebooks.primary ? world_names.indexOf(lorebooks.primary) : '');\n\n    if (previous_primary && !lorebooks.primary) {\n      // @ts-ignore\n      const data = JSON.parse(String($('#character_json_data').val()));\n      if (data?.data?.character_book) {\n        data.data.character_book = undefined;\n      }\n      // @ts-ignore\n      $('#character_json_data').val(JSON.stringify(data));\n    }\n\n    if (!(await editCurrentCharacter())) {\n      throw Error(`尝试为 '${filename}' 绑定主要世界书, 但在访问酒馆后端时出错`);\n    }\n\n    // @ts-ignore\n    setWorldInfoButtonClass(undefined, !!lorebooks.primary);\n  }\n\n  if (lorebooks.additional !== undefined) {\n    interface CharLoreEntry {\n      name: string;\n      extraBooks: string[];\n    }\n    let char_lore = (world_info as { charLore: CharLoreEntry[] }).charLore ?? [];\n\n    const existing_char_index = char_lore.findIndex(entry => entry.name === filename);\n    if (existing_char_index === -1) {\n      char_lore.push({ name: filename, extraBooks: lorebooks.additional });\n    } else if (lorebooks.additional.length === 0) {\n      char_lore.splice(existing_char_index, 1);\n    } else {\n      char_lore[existing_char_index].extraBooks = lorebooks.additional;\n    }\n\n    Object.assign(world_info, { charLore: char_lore });\n  }\n\n  saveCharacterDebounced();\n  saveSettingsDebounced();\n\n  console.info(\n    `修改角色卡绑定的世界书, 要修改的部分: ${JSON.stringify(lorebooks)}${\n      lorebooks.primary === undefined ? ', 主要世界书保持不变' : ''\n    }${lorebooks.additional === undefined ? ', 附加世界书保持不变' : ''}`,\n  );\n}\n\n/**\n * 获取世界书列表\n *\n * @returns 世界书名称列表\n */\nexport async function getLorebooks(): Promise<string[]> {\n  console.info(`获取世界书列表: ${JSON.stringify(world_names)}`);\n  return world_names;\n}\n\n/**\n * 删除世界书\n *\n * @param lorebook 世界书名称\n * @returns 是否成功删除, 可能因世界书不存在等原因而失败\n */\nexport async function deleteLorebook(lorebook: string): Promise<boolean> {\n  const success = await deleteWorldInfo(lorebook);\n\n  console.info(`移除世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n  return success;\n}\n\n/**\n * 新建世界书\n *\n * @param lorebook 世界书名称\n *\n * @returns 是否成功创建, 如果已经存在同名世界书会失败\n */\nexport async function createLorebook(lorebook: string): Promise<boolean> {\n  const success = await createNewWorldInfo(lorebook, { interactive: false });\n\n  console.info(`新建世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n  return success;\n}\n","import { event_types, eventSource } from '@sillytavern/script';\nimport { debounce } from '@sillytavern/scripts/utils';\nimport {\n  createWorldInfoEntry,\n  deleteWIOriginalDataValue,\n  loadWorldInfo,\n  originalWIDataKeyMap,\n  saveWorldInfo,\n  setWIOriginalDataValue,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\nfunction toLorebookEntry(entry: any): LorebookEntry {\n  return {\n    uid: entry.uid,\n    display_index: entry.displayIndex,\n    comment: entry.comment,\n    enabled: !entry.disable,\n    type: entry.constant ? 'constant' : entry.vectorized ? 'vectorized' : 'selective',\n    position:\n      // @ts-ignore\n      {\n        0: 'before_character_definition',\n        1: 'after_character_definition',\n        5: 'before_example_messages',\n        6: 'after_example_messages',\n        2: 'before_author_note',\n        3: 'after_author_note',\n      }[entry.position] ??\n      (entry.role === 0 ? 'at_depth_as_system' : entry.role === 1 ? 'at_depth_as_user' : 'at_depth_as_assistant'),\n    depth: entry.position === 4 ? entry.depth : null,\n    order: entry.order,\n    probability: entry.probability,\n\n    key: entry.key,\n    logic: {\n      0: 'and_any',\n      1: 'and_all',\n      2: 'not_any',\n      3: 'not_all',\n    }[entry.selectiveLogic as number] as 'and_any' | 'and_all' | 'not_any' | 'not_all',\n    filter: entry.keysecondary,\n\n    scan_depth: entry.scanDepth ?? 'same_as_global',\n    case_sensitive: entry.caseSensitive ?? 'same_as_global',\n    match_whole_words: entry.matchWholeWords ?? 'same_as_global',\n    use_group_scoring: entry.useGroupScoring ?? 'same_as_global',\n    automation_id: entry.automationId || null,\n\n    exclude_recursion: entry.excludeRecursion,\n    prevent_recursion: entry.preventRecursion,\n    delay_until_recursion: entry.delayUntilRecursion,\n\n    content: entry.content,\n\n    group: entry.group,\n    group_prioritized: entry.groupOverride,\n    group_weight: entry.groupWeight,\n    sticky: entry.sticky || null,\n    cooldown: entry.cooldown || null,\n    delay: entry.delay || null,\n  };\n}\n\nfunction fromPartialLorebookEntry(entry: Partial<LorebookEntry>): any {\n  const transformers = {\n    uid: (value: LorebookEntry['uid']) => ({ uid: value }),\n    display_index: (value: LorebookEntry['display_index']) => ({ displayIndex: value }),\n\n    comment: (value: LorebookEntry['comment']) => ({ comment: value }),\n    enabled: (value: LorebookEntry['enabled']) => ({ disable: !value }),\n    type: (value: LorebookEntry['type']) => ({\n      constant: value === 'constant',\n      vectorized: value === 'vectorized',\n    }),\n    position: (value: LorebookEntry['position']) => ({\n      position: {\n        before_character_definition: 0,\n        after_character_definition: 1,\n        before_example_messages: 5,\n        after_example_messages: 6,\n        before_author_note: 2,\n        after_author_note: 3,\n        at_depth_as_system: 4,\n        at_depth_as_user: 4,\n        at_depth_as_assistant: 4,\n      }[value],\n      role:\n        // @ts-ignore\n        {\n          at_depth_as_system: 0,\n          at_depth_as_user: 1,\n          at_depth_as_assistant: 2,\n        }[value] ?? null,\n    }),\n    depth: (value: LorebookEntry['depth']) => ({ depth: value === null ? 4 : value }),\n    order: (value: LorebookEntry['order']) => ({ order: value }),\n    probability: (value: LorebookEntry['probability']) => ({ probability: value }),\n\n    key: (value: LorebookEntry['key']) => ({ key: value }),\n    logic: (value: LorebookEntry['logic']) => ({\n      selectiveLogic: {\n        and_any: 0,\n        and_all: 1,\n        not_any: 2,\n        not_all: 3,\n      }[value],\n    }),\n    filter: (value: LorebookEntry['filter']) => ({ keysecondary: value }),\n\n    scan_depth: (value: LorebookEntry['scan_depth']) => ({ scanDepth: value === 'same_as_global' ? null : value }),\n    case_sensitive: (value: LorebookEntry['case_sensitive']) => ({\n      caseSensitive: value === 'same_as_global' ? null : value,\n    }),\n    match_whole_words: (value: LorebookEntry['match_whole_words']) => ({\n      matchWholeWords: value === 'same_as_global' ? null : value,\n    }),\n    use_group_scoring: (value: LorebookEntry['use_group_scoring']) => ({\n      useGroupScoring: value === 'same_as_global' ? null : value,\n    }),\n    automation_id: (value: LorebookEntry['automation_id']) => ({ automationId: value === null ? '' : value }),\n\n    exclude_recursion: (value: LorebookEntry['exclude_recursion']) => ({ excludeRecursion: value }),\n    prevent_recursion: (value: LorebookEntry['prevent_recursion']) => ({ preventRecursion: value }),\n    delay_until_recursion: (value: LorebookEntry['delay_until_recursion']) => ({ delayUntilRecursion: value }),\n\n    content: (value: LorebookEntry['content']) => ({ content: value }),\n\n    group: (value: LorebookEntry['group']) => ({ group: value }),\n    group_prioritized: (value: LorebookEntry['group_prioritized']) => ({ groupOverride: value }),\n    group_weight: (value: LorebookEntry['group_weight']) => ({ groupWeight: value }),\n    sticky: (value: LorebookEntry['sticky']) => ({ sticky: value === null ? 0 : value }),\n    cooldown: (value: LorebookEntry['cooldown']) => ({ cooldown: value === null ? 0 : value }),\n    delay: (value: LorebookEntry['delay']) => ({ delay: value === null ? 0 : value }),\n  };\n\n  return Object.entries(entry)\n    .filter(([_, value]) => value !== undefined)\n    .reduce(\n      (result, [field, value]) => ({\n        ...result,\n        // @ts-ignore\n        ...transformers[field]?.(value),\n      }),\n      {},\n    );\n}\n\nfunction assignFieldValuesToWiEntry(data: any, wi_entry: any, field_values: any) {\n  Object.entries(field_values).forEach(([field, value]) => {\n    wi_entry[field] = value;\n    // @ts-ignore\n    const original_wi_mapped_key = originalWIDataKeyMap[field];\n    if (original_wi_mapped_key) {\n      // @ts-ignore\n      setWIOriginalDataValue(data, wi_entry.uid, original_wi_mapped_key, value);\n    }\n  });\n}\n\nfunction reloadEditor(file: string): void {\n  // @ts-ignore\n  const currentIndex = Number($('#world_editor_select').val());\n  const selectedIndex = world_names.indexOf(file);\n  if (selectedIndex !== -1 && currentIndex === selectedIndex) {\n    // @ts-ignore\n    $('#world_editor_select').val(selectedIndex).trigger('change');\n  }\n}\n\nconst reloadEditorDebounced = debounce(reloadEditor);\n\n/**\n * 获取世界书中的条目信息. **请务必阅读示例**.\n *\n * @param lorebook 世界书名称\n * @param option 可选选项\n *   - `filter:'none'|LorebookEntry的一个子集`: 按照指定字段值筛选条目, 要求对应字段值包含制定的内容; 默认为不进行筛选.\n *                                       如 `{content: '神乐光'}` 表示内容中必须有 `'神乐光'`, `{type: 'selective'}` 表示仅获取绿灯条目.\n *                                       由于实现限制, 只能做到这样的简单筛选; 如果需要更复杂的筛选, 请获取所有条目然后自己筛选.\n *\n * @returns 一个数组, 元素是各条目信息.\n */\nexport async function getLorebookEntries(lorebook: string, option: GetLorebookEntriesOption): Promise<LorebookEntry[]> {\n  if (!world_names.includes(lorebook)) {\n    throw Error(`未能找到世界书 '${lorebook}'`);\n  }\n\n  // @ts-ignore\n  let entries: LorebookEntry[] = Object.values((await loadWorldInfo(lorebook)).entries).map(toLorebookEntry);\n  const filter = option.filter ?? 'none';\n  if (filter !== 'none') {\n    entries = entries.filter(entry =>\n      Object.entries(filter).every(([field, expected_value]) => {\n        // @ts-ignore\n        const entry_value = entry[field];\n        if (Array.isArray(entry_value)) {\n          return (expected_value as string[]).every(value => entry_value.includes(value));\n        }\n        if (typeof entry_value === 'string') {\n          return entry_value.includes(expected_value as string);\n        }\n        return entry_value === expected_value;\n      }),\n    );\n  }\n\n  console.info(`获取世界书 '${lorebook}' 中的条目, 选项: ${JSON.stringify(option)}`);\n  return entries;\n}\n\n/**\n * 将条目信息修改回对应的世界书中, 如果某个字段不存在, 则该字段采用原来的值.\n *\n * 这只是修改信息, 不能创建新的条目, 因此要求条目必须已经在世界书中.\n *\n * @param lorebook 条目所在的世界书名称\n * @param entries 一个数组, 元素是各条目信息. 其中必须有 \"uid\", 而其他字段可选.\n */\nexport async function setLorebookEntries(lorebook: string, entries: LorebookEntry[]): Promise<void> {\n  if (!world_names.includes(lorebook)) {\n    throw Error(`未能找到世界书 '${lorebook}'`);\n  }\n  const data = await loadWorldInfo(lorebook);\n\n  const process_entry = async (entry: (typeof entries)[0]): Promise<void> => {\n    // @ts-ignore\n    const wi_entry = data.entries[entry.uid];\n    if (!wi_entry) {\n      throw Error(`未能在世界书 '${lorebook}' 中找到 uid=${entry.uid} 的条目`);\n    }\n    assignFieldValuesToWiEntry(data, wi_entry, fromPartialLorebookEntry(entry));\n  };\n\n  await Promise.all(entries.map(process_entry));\n  await saveWorldInfo(lorebook, data);\n  reloadEditorDebounced(lorebook);\n\n  console.info(`修改世界书 '${lorebook}' 中以下条目的以下字段:\\n${JSON.stringify(entries, undefined, 2)}`);\n}\n\n/**\n * 向世界书中新增一个条目\n *\n * @param lorebook 世界书名称\n * @param field_values 要对新条目设置的字段值, 如果不设置则采用酒馆给的默认值. **不能设置 `uid`**.\n *\n * @returns 新条目的 uid\n */\nexport async function createLorebookEntry(lorebook: string, field_values: Partial<LorebookEntry>): Promise<number> {\n  if (!world_names.includes(lorebook)) {\n    throw Error(`未能找到世界书 '${lorebook}'`);\n  }\n  const data = await loadWorldInfo(lorebook);\n  const wi_entry = createWorldInfoEntry(lorebook, data) as any;\n  const partial_lorebook_entry = fromPartialLorebookEntry(field_values);\n  if (partial_lorebook_entry.uid) {\n    delete partial_lorebook_entry.uid;\n  }\n  assignFieldValuesToWiEntry(data, wi_entry, partial_lorebook_entry);\n\n  await saveWorldInfo(lorebook, data);\n  reloadEditorDebounced(lorebook);\n\n  console.info(\n    `在世界书 '${lorebook}' 中新建 uid='${wi_entry.uid}' 条目, 并设置内容:\\n${JSON.stringify(\n      field_values,\n      undefined,\n      2,\n    )}`,\n  );\n  return wi_entry.uid;\n}\n\n/**\n * 删除世界书中的某个条目\n *\n * @param lorebook 世界书名称\n * @param uid 要删除的条目 uid\n *\n * @returns 是否成功删除, 可能因世界书不存在、对应条目不存在等原因失败\n */\nexport async function deleteLorebookEntry(lorebook: string, lorebook_uid: number): Promise<boolean> {\n  const data = await loadWorldInfo(lorebook);\n  // QUESTION: 好像没办法从 data 检测世界书是否存在?\n  let deleted = false;\n  // @ts-ignore 18046\n  if (data.entries[lorebook_uid]) {\n    // @ts-ignore 18046\n    delete data.entries[lorebook_uid];\n    deleted = true;\n  }\n  if (deleted) {\n    // @ts-ignore 2345\n    deleteWIOriginalDataValue(data, lorebook_uid);\n    await saveWorldInfo(lorebook, data);\n    reloadEditorDebounced(lorebook);\n  }\n\n  console.info(`删除世界书 '${lorebook}' 中的 uid='${lorebook_uid}' 条目${deleted ? '成功' : '失败'}`);\n  return deleted;\n}\n\n/**\n * 激活世界书中的某些条目, 即它们将发送给 ai\n *\n * @param lorebook 世界书名称\n * @param entries 一个数组, 元素是要激活的各条目, 必须包含 `uid`\n */\nexport async function activateLorebookEntries(\n  lorebook: string,\n  entries: { uid: Pick<LorebookEntry, 'uid'> }[],\n): Promise<void> {\n  return eventSource.emit(\n    event_types.WORLDINFO_FORCE_ACTIVATE,\n    entries.map(entry => ({ world: lorebook, uid: entry.uid })),\n  );\n}\n","import { executeSlashCommandsWithOptions } from '@sillytavern/scripts/slash-commands';\n\n/**\n * 运行 Slash 命令, 注意如果命令写错了将不会有任何反馈\n *\n * @param command 要运行的 Slash 命令\n * @returns Slash 管道结果, 如果命令出错或执行了 `/abort` 则返回 `undefined`\n */\nexport async function triggerSlash(command: string): Promise<string> {\n  const result = await executeSlashCommandsWithOptions(command);\n  if (result.isError) {\n    throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n  }\n\n  console.info(`运行 Slash 命令: ${command}`);\n  return result.pipe;\n}\n\n// QUESTION: 弃用？保留实现但是只推荐使用triggerSlash\nexport async function triggerSlashWithResult(command: string): Promise<string> {\nconst result = await executeSlashCommandsWithOptions(command);\n      if (result.isError) {\n        throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n      }\n\n  console.info(`运行 Slash 命令 '${command}', 结果: ${result.pipe}`);\n  return result.pipe;\n}\n","import { partition } from '@/util/helper';\n\nimport { characters, reloadCurrentChat, saveChatConditional, saveSettings, this_chid } from '@sillytavern/script';\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\nimport { extension_settings, writeExtensionField } from '@sillytavern/scripts/extensions';\nimport { regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\n\nexport function isCharacterTavernRegexEnabled(): boolean {\n  // @ts-ignore 2345\n  return extension_settings?.character_allowed_regex?.includes(characters?.[this_chid]?.avatar);\n}\n\nexport function getGlobalRegexes(): RegexScriptData[] {\n  return extension_settings.regex ?? [];\n}\n\nexport function getCharacterRegexes(): RegexScriptData[] {\n  if (this_chid === undefined) {\n    throw new Error('当前没有选中角色，无法获取角色正则');\n  }\n  // @ts-ignore\n  return characters[this_chid]?.data?.extensions?.regex_scripts ?? [];\n}\n\nfunction toTavernRegex(regex_script_data: RegexScriptData, scope: 'global' | 'character'): TavernRegex {\n  return {\n    id: regex_script_data.id,\n    script_name: regex_script_data.scriptName,\n    enabled: !regex_script_data.disabled,\n    run_on_edit: regex_script_data.runOnEdit,\n    scope: scope,\n\n    find_regex: regex_script_data.findRegex,\n    replace_string: regex_script_data.replaceString,\n\n    source: {\n      user_input: regex_script_data.placement.includes(regex_placement.USER_INPUT),\n      ai_output: regex_script_data.placement.includes(regex_placement.AI_OUTPUT),\n      slash_command: regex_script_data.placement.includes(regex_placement.SLASH_COMMAND),\n      world_info: regex_script_data.placement.includes(regex_placement.WORLD_INFO),\n    },\n\n    destination: {\n      display: regex_script_data.markdownOnly,\n      prompt: regex_script_data.promptOnly,\n    },\n\n    min_depth: typeof regex_script_data.minDepth === 'number' ? regex_script_data.minDepth : null,\n    max_depth: typeof regex_script_data.maxDepth === 'number' ? regex_script_data.maxDepth : null,\n  };\n}\n\nfunction fromTavernRegex(tavern_regex: TavernRegex): RegexScriptData {\n  return {\n    id: tavern_regex.id,\n    scriptName: tavern_regex.script_name,\n    disabled: !tavern_regex.enabled,\n    runOnEdit: tavern_regex.run_on_edit,\n\n    findRegex: tavern_regex.find_regex,\n    replaceString: tavern_regex.replace_string,\n    trimStrings: [], // TODO: handle this?\n\n    placement: [\n      ...(tavern_regex.source.user_input ? [regex_placement.USER_INPUT] : []),\n      ...(tavern_regex.source.ai_output ? [regex_placement.AI_OUTPUT] : []),\n      ...(tavern_regex.source.slash_command ? [regex_placement.SLASH_COMMAND] : []),\n      ...(tavern_regex.source.world_info ? [regex_placement.WORLD_INFO] : []),\n    ],\n\n    substituteRegex: 0, // TODO: handle this?\n\n    // @ts-ignore\n    minDepth: tavern_regex.min_depth,\n    // @ts-ignore\n    maxDepth: tavern_regex.max_depth,\n\n    markdownOnly: tavern_regex.destination.display,\n    promptOnly: tavern_regex.destination.prompt,\n  };\n}\n\n/**\n * 判断局部正则是否启用\n * @returns 布尔值\n */\nexport function isCharacterTavernRegexesEnabled(): boolean {\n  const result = isCharacterTavernRegexEnabled();\n\n  console.info(`查询到局部正则${result ? '被启用' : '被禁用'}`);\n  return result;\n}\n\n/**\n * 获取酒馆正则\n *\n * @param option 可选选项\n *   - `scope?:'all'|'global'|'character'`:         // 按所在区域筛选酒馆正则; 默认为 `'all'`\n *   - `enable_state?:'all'|'enabled'|'disabled'`:  // 按是否被开启筛选酒馆正则; 默认为 `'all'`\n *\n * @returns 一个数组, 数组的元素是酒馆正则 `TavernRegex`. 该数组依据正则作用于文本的顺序排序, 也就是酒馆显示正则的地方从上到下排列.\n */\nexport function getTavernRegexes(option: GetTavernRegexesOption = {}): TavernRegex[] {\n  const scope = option.scope ?? 'all';\n  const enable_state = option.enable_state ?? 'all';\n\n  if (!['all', 'enabled', 'disabled'].includes(enable_state)) {\n    throw Error(`提供的 enable_state 无效, 请提供 'all', 'enabled' 或 'disabled', 你提供的是: ${enable_state}`);\n  }\n  if (!['all', 'global', 'character'].includes(scope)) {\n    throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${scope}`);\n  }\n\n  let regexes: TavernRegex[] = [];\n  if (scope === 'all' || scope === 'global') {\n    regexes = [...regexes, ...getGlobalRegexes().map(regex => toTavernRegex(regex, 'global'))];\n  }\n  if (scope === 'all' || scope === 'character') {\n    regexes = [...regexes, ...getCharacterRegexes().map(regex => toTavernRegex(regex, 'character'))];\n  }\n  if (enable_state !== 'all') {\n    regexes = regexes.filter(regex => regex.enabled === (enable_state === 'enabled'));\n  }\n\n  return regexes;\n}\n\n/**\n * 完全替换酒馆正则为 `regexes`.\n * - **这是一个很慢的操作!** 尽量对正则做完所有事后再一次性 replaceTavernRegexes.\n * - **为了重新应用正则, 它会重新载入整个聊天消息**, 将会触发 `tavern_events.CHAT_CHANGED` 进而重新加载全局脚本和楼层消息.\n *     这意味着如果你在全局脚本中运行本函数, 则该函数之后的内容将不会被执行.\n *\n * 之所以提供这么直接的函数, 是因为你可能需要调换正则顺序等.\n *\n * @param regexes 要用于替换的酒馆正则\n * @param option 可选选项\n *   - scope?: 'all' | 'global' | 'character';  // 要替换的酒馆正则部分; 默认为 'all'\n */\nexport async function replaceTavernRegexes(\n  regexes: TavernRegex[],\n  option: ReplaceTavernRegexesOption = {},\n): Promise<void> {\n  const scope = option.scope ?? 'all';\n\n  if (!['all', 'global', 'character'].includes(scope)) {\n    throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${scope}`);\n  }\n\n  // FIXME: `trimStrings` and `substituteRegex` are not considered\n  const emptied_regexes = regexes.filter(regex => regex.script_name == '');\n  if (emptied_regexes.length > 0) {\n    throw Error(`不能将酒馆正则的名称设置为空字符串:\\n${JSON.stringify(emptied_regexes.map(regex => regex.id))}`);\n  }\n  const [global_regexes, character_regexes] = partition(regexes, regex => regex.scope === 'global').map(regexes =>\n    regexes.map(fromTavernRegex),\n  );\n\n  if (this_chid === undefined) {\n    throw new Error('当前没有选中角色，无法获取角色正则');\n  }\n  // @ts-ignore\n  const character = characters[this_chid];\n  if (scope === 'all' || scope === 'global') {\n    extension_settings.regex = global_regexes;\n  }\n  if (scope === 'all' || scope === 'character') {\n    if (character) {\n      // @ts-ignore\n      characters[this_chid].data.extensions.regex_scripts = character_regexes;\n      // @ts-ignore\n      await writeExtensionField(this_chid, 'regex_scripts', character_regexes);\n    }\n  }\n  await saveSettings();\n  if (character) {\n    await saveChatConditional();\n  }\n  await reloadCurrentChat();\n\n  console.info(`替换酒馆正则\\\n${scope === 'all' || scope === 'global' ? `, 全局正则:\\n${JSON.stringify(global_regexes, undefined, 2)}` : ``}\\\n${scope === 'all' || scope === 'character' ? `, 局部正则:\\n${JSON.stringify(character_regexes, undefined, 2)}` : ``}`);\n}\n","import { substituteParamsExtended } from '@sillytavern/script';\n\n/**\n * 替换字符串中的酒馆宏\n *\n * @param text 要替换的字符串\n * @returns 替换结果\n *\n * @example\n * const text = substitudeMacros(\"{{char}} speaks in {{lastMessageId}}\");\n * text == \"少女歌剧 speaks in 5\";\n */\nexport function substitudeMacros(text: string): string {\n  const text_demacroed = substituteParamsExtended(text);\n\n  console.info(`替换字符串中的宏, 字符串: '${text}', 结果: '${text_demacroed}'`);\n  return text_demacroed;\n}\n","import { chat_metadata, saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\n\ninterface VariableOption {\n  type: 'chat' | 'global'; // 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n}\n\nfunction getVariablesByType(type: 'chat' | 'global'): Record<string, any> {\n  switch (type) {\n    case 'chat':\n      { const metadata = chat_metadata as {\n        variables: Record<string, any> | undefined;\n      };\n      if (!metadata.variables) {\n        metadata.variables = {};\n      }\n      return metadata.variables; }\n    case 'global':\n      return extension_settings.variables.global;\n  }\n}\n\n/**\n * 获取变量表\n *\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @returns 变量表\n *\n * @example\n * // 获取所有聊天变量并弹窗输出结果\n * const variables = getVariables();\n * alert(variables);\n *\n * @example\n * // 获取所有全局变量\n * const variables = getVariables({type: 'global'});\n * // 前端助手内置了 lodash 库, 你能用它做很多事, 比如查询某个变量是否存在\n * if (_.has(variables, \"神乐光.好感度\")) {\n *   ...\n * }\n */\nexport function getVariables({ type = 'chat' }: VariableOption): Record<string, any> {\n  const result = getVariablesByType(type);\n\n  console.info(`$获取${type == 'chat' ? `聊天` : `全局`}变量表:\\n${JSON.stringify(result, undefined, 2)}`);\n  return result;\n}\n\n/**\n * 完全替换变量表为 `variables`\n *\n * 之所以提供这么直接的函数, 是因为前端助手内置了 lodash 库:\n *   `insertOrAssignVariables` 等函数其实就是先 `getVariables` 获取变量表, 用 lodash 库处理, 再 `replaceVariables` 替换变量表.\n *\n * @param variables 要用于替换的变量表\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @example\n * // 执行前的聊天变量: `{爱城华恋: {好感度: 5}}`\n * await replaceVariables({神乐光: {好感度: 5, 认知度: 0}});\n * // 执行后的聊天变量: `{神乐光: {好感度: 5, 认知度: 0}}`\n *\n * @example\n * // 删除 `{神乐光: {好感度: 5}}` 变量\n * let variables = getVariables();\n * _.unset(variables, \"神乐光.好感度\");\n * replaceVariables(variables);\n */\nexport function replaceVariables(variables: Record<string, any>, { type = 'chat' }: VariableOption): void {\n  switch (type) {\n    case 'chat':\n      (chat_metadata as { variables: Object }).variables = variables;\n      saveMetadataDebounced();\n      break;\n    case 'global':\n      extension_settings.variables.global = variables;\n      saveSettingsDebounced();\n      break;\n  }\n\n  console.info(`将${type == 'chat' ? `聊天` : `全局`}变量表替换为:\\n${JSON.stringify(variables, undefined, 2)}`);\n}","import { getCharAvatarPath, getCharData, getChatHistoryBrief, getChatHistoryDetail } from '@/function/character';\nimport { getChatMessages, setChatMessage } from '@/function/chat_message';\nimport { formatAsDisplayedMessage } from '@/function/displayed_message';\nimport { updateFrontendVersion } from '@/function/frontend_version';\nimport { generate, generateRaw } from '@/function/generate';\nimport {\n  createLorebook,\n  deleteLorebook,\n  getCharLorebooks,\n  getLorebooks,\n  getLorebookSettings,\n  setCurrentCharLorebooks,\n  setLorebookSettings,\n} from '@/function/lorebook';\nimport {\n  activateLorebookEntries,\n  createLorebookEntry,\n  deleteLorebookEntry,\n  getLorebookEntries,\n  setLorebookEntries,\n} from '@/function/lorebook_entry';\nimport { triggerSlash, triggerSlashWithResult } from '@/function/slash';\nimport { getTavernRegexes, isCharacterTavernRegexesEnabled, replaceTavernRegexes } from '@/function/tavern_regex';\nimport { substitudeMacros } from '@/function/util';\nimport { getVariables, replaceVariables } from '@/function/variables';\nimport { audioEnable, audioImport, audioMode, audioPlay, audioSelect } from '@/slash_command/audio';\n\n/**\n * 初始化TavernHelper全局对象\n * 将各种功能函数暴露到全局作用域\n */\nexport function initTavernHelperObject() {\n  (globalThis as unknown as { TavernHelper: Record<string, any> }).TavernHelper = {\n    // 变量\n    getVariables,\n    replaceVariables,\n    // 音频\n    audioEnable,\n    audioImport,\n    audioMode,\n    audioPlay,\n    audioSelect,\n    // 角色\n    getCharData,\n    getCharAvatarPath,\n    getChatHistoryBrief,\n    getChatHistoryDetail,\n    // 消息\n    getChatMessages,\n    setChatMessage,\n    // 显示消息\n    formatAsDisplayedMessage,\n    // 更新前端版本\n    updateFrontendVersion,\n    // 工具\n    substitudeMacros,\n    // 生成\n    generate,\n    generateRaw,\n    // 世界书\n    getLorebookEntries,\n    setLorebookEntries,\n    createLorebookEntry,\n    deleteLorebookEntry,\n    activateLorebookEntries,\n    // 世界书设置\n    getLorebookSettings,\n    setLorebookSettings,\n    getCharLorebooks,\n    setCurrentCharLorebooks,\n    getLorebooks,\n    deleteLorebook,\n    createLorebook,\n    // 触发命令\n    triggerSlash,\n    triggerSlashWithResult,\n    // 酒馆正则\n    isCharacterTavernRegexesEnabled,\n    getTavernRegexes,\n    replaceTavernRegexes,\n  };\n}\n","import { libraries_text } from '@/component/character_level/library';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\nimport { getCharAvatarPath, getSettingValue, getUserAvatarPath, saveSettingValue } from '@/util/extension_variables';\n\nimport { eventSource, event_types, reloadCurrentChat, updateMessageBlock } from '@sillytavern/script';\nimport { getContext } from '@sillytavern/scripts/extensions';\n\nlet tampermonkeyMessageListener: ((event: MessageEvent) => void) | null = null;\nlet isRenderEnabled: boolean;\nlet isRenderingOptimizeEnabled: boolean;\nlet renderDepth: number;\n\nconst iframeResizeObservers = new Map();\nconst isExtensionEnabled = getSettingValue('enabled_extension');\n\n// 保存原始高亮方法\nconst originalHighlightElement = hljs.highlightElement;\n\nconst RENDER_MODES = {\n  FULL: 'FULL',\n  PARTIAL: 'PARTIAL',\n};\n\ninterface IFrameElement extends HTMLIFrameElement {\n  cleanup: () => void;\n  [prop: string]: any;\n}\n\nexport const partialRenderEvents = [\n  event_types.CHARACTER_MESSAGE_RENDERED,\n  event_types.USER_MESSAGE_RENDERED,\n  event_types.MESSAGE_UPDATED,\n  event_types.MESSAGE_SWIPED,\n];\n\nexport const defaultIframeSettings = {\n  render_enabled: true,\n  tampermonkey_compatibility: false,\n  render_depth: 3,\n  render_optimize: false,\n};\n\nexport async function handleRenderToggle(userInput: boolean = true, enable: boolean = true) {\n  if (enable) {\n    renderMessagesInIframes(RENDER_MODES.FULL);\n  }\n  if (userInput) {\n    await saveSettingValue('render.render_enabled', enable);\n  }\n}\n\n/**\n * 清理后，重新渲染所有iframe\n */\nexport async function clearAndRenderAllIframes() {\n  await clearAllIframes();\n  await reloadCurrentChat();\n  await renderAllIframes();\n}\n\n/**\n * 渲染所有iframe\n */\nexport async function renderAllIframes() {\n  await renderMessagesInIframes(RENDER_MODES.FULL);\n  console.log('[Render] 渲染所有iframe');\n}\n\n/**\n * 渲染部分iframe\n * @param mesId 消息ID\n */\nexport async function renderPartialIframes(mesId: number) {\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const context = getContext();\n  const totalMessages = context.chat.length;\n\n  if (processDepth > 0) {\n    const depthOffset = totalMessages - processDepth;\n\n    if (mesId < depthOffset) {\n      return;\n    }\n  }\n\n  await renderMessagesInIframes(RENDER_MODES.PARTIAL, mesId);\n\n  console.log('[Render] 渲染' + mesId + '号消息的iframe');\n}\n\n/**\n * 使用了min-height:vh时，自动调整iframe高度\n */\nexport const viewport_adjust_script = `\n$(window).on(\"message\", function (event) {\n    if (event.originalEvent.data.request === \"updateViewportHeight\") {\n        const newHeight = event.originalEvent.data.newHeight;\n        $(\"html\").css(\"--viewport-height\", newHeight + \"px\");\n    }\n});\n`;\n\n/**\n * 油猴脚本\n */\nexport const tampermonkey_script = `\nclass AudioManager {\n  constructor() {\n    this.currentlyPlaying = null;\n  }\n  handlePlay(audio) {\n    if (this.currentlyPlaying && this.currentlyPlaying !== audio) {\n      this.currentlyPlaying.pause();\n    }\n    window.parent.postMessage({\n      type: 'audioPlay',\n      iframeId: window.frameElement.id\n    }, '*');\n\n    this.currentlyPlaying = audio;\n  }\n  stopAll() {\n    if (this.currentlyPlaying) {\n      this.currentlyPlaying.pause();\n      this.currentlyPlaying = null;\n    }\n  }\n}\nconst audioManager = new AudioManager();\n$('.qr-button').on('click', function() {\n  const buttonName = $(this).text().trim();\n  window.parent.postMessage({ type: 'buttonClick', name: buttonName }, '*');\n});\n$('.st-text').each(function() {\n  $(this).on('input', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  $(this).on('change', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  const textarea = this;\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'value') {\n        window.parent.postMessage({ type: 'textInput', text: $(textarea).val() }, '*');\n      }\n    });\n  });\n  observer.observe(textarea, { attributes: true });\n});\n$('.st-send-button').on('click', function() {\n  window.parent.postMessage({ type: 'sendClick' }, '*');\n});\n$('.st-audio').on('play', function() {\n  audioManager.handlePlay(this);\n});\n$(window).on('message', function(event) {\n  if (event.originalEvent.data.type === 'stopAudio' &&\n    event.originalEvent.data.iframeId !== window.frameElement.id) {\n    audioManager.stopAll();\n  }\n});\n`;\n\n/**\n * 转换代码块中的min-height:vh\n * @param htmlContent 代码块内容\n * @returns 转换后的代码块内容\n */\nfunction processVhUnits(htmlContent: string) {\n  const hasMinVh = /min-height:\\s*[^;]*vh/.test(htmlContent);\n\n  if (!hasMinVh) {\n    return htmlContent;\n  }\n\n  const viewportHeight = window.innerHeight;\n  const processedContent = htmlContent.replace(/min-height:\\s*([^;]*vh[^;]*);/g, expression => {\n    const processedExpression = expression.replace(\n      /(\\d+)vh/g,\n      `calc(var(--viewport-height, ${viewportHeight}px) * $1 / 100)`,\n    );\n    return `${processedExpression};`;\n  });\n\n  return processedContent;\n}\n\n/**\n * 使用了min-height:vh时，更新iframe的viewport高度\n */\nfunction updateIframeViewportHeight() {\n  $(window).on('resize', function () {\n    if ($('iframe[data-needs-vh=\"true\"]').length) {\n      const viewportHeight = window.innerHeight;\n      $('iframe[data-needs-vh=\"true\"]').each(function () {\n        const iframe = this as HTMLIFrameElement;\n        if (iframe.contentWindow) {\n          iframe.contentWindow.postMessage(\n            {\n              request: 'updateViewportHeight',\n              newHeight: viewportHeight,\n            },\n            '*',\n          );\n        }\n      });\n    }\n  });\n}\n\n/**\n * 渲染消息到iframe\n * @param mode 渲染模式\n * @param specificMesId 指定消息ID\n */\nasync function renderMessagesInIframes(mode = RENDER_MODES.FULL, specificMesId: number | null = null) {\n  if (!isExtensionEnabled || !isRenderEnabled) {\n    return;\n  }\n\n  const context = getContext();\n  const totalMessages = context.chat.length;\n  const processDepth = renderDepth || 0;\n  const depthLimit = processDepth > 0 ? processDepth : totalMessages;\n  const depthLimitedMessageIds = [...Array(totalMessages).keys()].slice(-depthLimit);\n\n  let messagesToRenderIds: number[] = [];\n  const messagesToCancelIds: number[] = [...Array(totalMessages).keys()].filter(\n    id => !depthLimitedMessageIds.includes(id),\n  );\n\n  if (mode === RENDER_MODES.FULL) {\n    messagesToRenderIds = depthLimitedMessageIds;\n  } else if (mode === RENDER_MODES.PARTIAL && specificMesId !== null) {\n    if (depthLimitedMessageIds.includes(specificMesId)) {\n      messagesToRenderIds = [specificMesId];\n    } else {\n      return;\n    }\n  }\n\n  for (const messageId of messagesToCancelIds) {\n    const message = context.chat[messageId];\n    const $iframes = $(`[id^=\"message-iframe-${messageId}-\"]`);\n    if ($iframes.length > 0) {\n      await Promise.all(\n        $iframes.toArray().map(async iframe => {\n          await destroyIframe(iframe as IFrameElement);\n        }),\n      );\n      updateMessageBlock(messageId, message);\n    }\n    if (isRenderingOptimizeEnabled) {\n      const $mesText = $(`.mes[mesid=\"${messageId}\"] .mes_block .mes_text`);\n      addToggleButtonsToMessage($mesText);\n    }\n  }\n\n  const renderedMessages = [];\n  for (const messageId of messagesToRenderIds) {\n    const $messageElement = $(`.mes[mesid=\"${messageId}\"]`);\n    if (!$messageElement.length) {\n      console.debug(`未找到 mesid: ${messageId} 对应的消息元素。`);\n      continue;\n    }\n\n    const $codeElements = $messageElement.find('pre');\n    if (!$codeElements.length) {\n      continue;\n    }\n\n    let iframeCounter = 1;\n\n    $codeElements.each(function () {\n      let extractedText = extractTextFromCode(this);\n      if (!extractedText.includes('<body') || !extractedText.includes('</body>')) {\n        if (isRenderingOptimizeEnabled) {\n          addCodeToggleButtons(messageId);\n        }\n        return;\n      }\n      const disableLoading = /<!--\\s*disable-default-loading\\s*-->/.test(extractedText);\n      const hasMinVh = /min-height:\\s*[^;]*vh/.test(extractedText);\n      extractedText = hasMinVh ? processVhUnits(extractedText) : extractedText;\n\n      let $wrapper = $('<div>').css({\n        position: 'relative',\n        width: '100%',\n      });\n\n      const $iframe = $('<iframe>')\n        .attr({\n          id: `message-iframe-${messageId}-${iframeCounter}`,\n          srcdoc: '',\n          loading: 'lazy',\n        })\n        .css({\n          margin: '5px auto',\n          border: 'none',\n          width: '100%',\n        });\n\n      iframeCounter++;\n\n      if (hasMinVh) {\n        $iframe.attr('data-needs-vh', 'true');\n      }\n\n      let loadingTimeout: NodeJS.Timeout | null = null;\n      if (!disableLoading) {\n        const $loadingOverlay = $('<div>').addClass('iframe-loading-overlay').html(`\n            <div class=\"iframe-loading-content\">\n              <i class=\"fa-solid fa-spinner fa-spin\"></i>\n              <span class=\"loading-text\">Loading...</span>\n            </div>`);\n\n        loadingTimeout = setTimeout(() => {\n          const $loadingText = $loadingOverlay.find('.loading-text');\n          if ($loadingText.length) {\n            $loadingText.text('如加载时间过长，请检查网络');\n          }\n        }, 10000);\n\n        $wrapper.append($loadingOverlay);\n      }\n\n      $wrapper.append($iframe);\n\n      const srcdocContent = `\n        <html>\n        <head>\n          <style>\n          ${hasMinVh ? `:root{--viewport-height:${window.innerHeight}px;}` : ``}\n          html,body{margin:0;padding:0;overflow:hidden;max-width:100%!important;box-sizing:border-box}\n          .user_avatar,.user-avatar{background-image:url('${getUserAvatarPath()}')}\n          .char_avatar,.char-avatar{background-image:url('${getCharAvatarPath()}')}\n          </style>\n          ${third_party}\n          <script src=\"${script_url.get('iframe_client')}\"></script>\n          ${libraries_text}\n        </head>\n        <body>\n          ${extractedText}\n          ${hasMinVh ? `<script src=\"${script_url.get('viewport_adjust_script')}\"></script>` : ``}\n          ${\n            getSettingValue('render.tampermonkey_compatibility')\n              ? `<script src=\"${script_url.get('tampermonkey_script')}\"></script>`\n              : ``\n          }\n        </body>\n        </html>\n      `;\n      $iframe.attr('srcdoc', srcdocContent);\n\n      $iframe.on('load', function () {\n        observeIframeContent(this as IFrameElement);\n\n        $wrapper = $(this).parent();\n        if ($wrapper.length) {\n          const $loadingOverlay = $wrapper.find('.iframe-loading-overlay');\n          if ($loadingOverlay.length) {\n            $loadingOverlay.css('opacity', '0');\n            setTimeout(() => $loadingOverlay.remove(), 300);\n          }\n        }\n\n        if ($(this).attr('data-needs-vh') === 'true') {\n          const iframe = this as HTMLIFrameElement;\n          if (iframe.contentWindow) {\n            iframe.contentWindow.postMessage(\n              {\n                request: 'updateViewportHeight',\n                newHeight: window.innerHeight,\n              },\n              '*',\n            );\n          }\n        }\n\n        eventSource.emitAndWait('message_iframe_render_ended', this.id);\n\n        if (isRenderingOptimizeEnabled) {\n          removeCodeToggleButtonsByMesId(messageId);\n        }\n\n        if (loadingTimeout) {\n          clearTimeout(loadingTimeout);\n        }\n      });\n\n      eventSource.emitAndWait('message_iframe_render_started', $iframe.attr('id'));\n      $(this).replaceWith($wrapper);\n    });\n\n    renderedMessages.push(messageId);\n  }\n}\n\n/**\n * 观察iframe内容用于自动调整高度\n * @param iframe iframe元素\n */\nfunction observeIframeContent(iframe: IFrameElement) {\n  const $iframe = $(iframe);\n  if (!$iframe.length || !$iframe[0].contentWindow || !$iframe[0].contentWindow.document.body) {\n    return;\n  }\n  const docBody = $iframe[0].contentWindow.document.body;\n  const iframeId = $iframe.attr('id');\n\n  let resizeObserver = null;\n\n  adjustIframeHeight(iframe);\n\n  try {\n    if (window.ResizeObserver) {\n      resizeObserver = new ResizeObserver(() => {\n        adjustIframeHeight(iframe);\n      });\n      resizeObserver.observe(docBody);\n\n      if (iframeId) {\n        iframeResizeObservers.set(iframeId, resizeObserver);\n      }\n    }\n  } catch (e) {\n    console.error('ResizeObserver初始化错误:', e);\n  }\n\n  iframe.cleanup = () => {\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      if (iframeId) {\n        iframeResizeObservers.delete(iframeId);\n      }\n    }\n  };\n}\n\n/**\n * 销毁iframe\n * @param iframe iframe元素\n */\nexport function destroyIframe(iframe: IFrameElement): Promise<void> {\n  return new Promise(resolve => {\n    const $iframe = $(iframe);\n\n    if (!$iframe.length) {\n      resolve();\n      return;\n    }\n\n    const iframeId = $iframe.attr('id');\n\n    $iframe.off();\n\n    try {\n      if ($iframe[0].contentWindow) {\n        const iframeDoc = $iframe[0].contentWindow.document;\n        if (iframeDoc) {\n          $(iframeDoc).find('*').off();\n          $(iframeDoc).off();\n        }\n      }\n    } catch (e) {\n      console.debug('清理iframe内部事件时出错:', e);\n    }\n\n    try {\n      const $mediaElements = $iframe.contents().find('audio, video');\n      $mediaElements.each(function () {\n        if (this instanceof HTMLMediaElement) {\n          this.pause();\n          this.src = '';\n          this.load();\n          $(this).off();\n        }\n      });\n    } catch (e) {\n      console.debug('清理媒体元素时出错:', e);\n    }\n\n    if ($iframe[0].contentWindow && 'stop' in $iframe[0].contentWindow) {\n      $iframe[0].contentWindow.stop();\n    }\n\n    // 清空iframe内容\n    if ($iframe[0].contentWindow) {\n      try {\n        if (iframeId && typeof eventSource.removeListener === 'function') {\n          eventSource.removeListener('message_iframe_render_ended', iframeId as any);\n          eventSource.removeListener('message_iframe_render_started', iframeId as any);\n        }\n\n        $iframe.attr('src', 'about:blank');\n      } catch (e) {\n        console.debug('清空iframe内容时出错:', e);\n      }\n    }\n\n    // 断开ResizeObserver连接\n    if (iframe.cleanup && typeof iframe.cleanup === 'function') {\n      iframe.cleanup();\n    } else if (iframeId && iframeResizeObservers.has(iframeId)) {\n      const observer = iframeResizeObservers.get(iframeId);\n      observer.disconnect();\n      iframeResizeObservers.delete(iframeId);\n    }\n\n    // 从DOM中移除并清除引用\n    const $clone = $iframe.clone(false);\n    if ($iframe.parent().length) {\n      $iframe.replaceWith($clone);\n    }\n    if ($clone.parent().length) {\n      $clone.remove();\n    }\n\n    // 移除jQuery数据缓存\n    try {\n      $iframe.removeData();\n    } catch (e) {\n      console.debug('移除jQuery数据缓存时出错:', e);\n    }\n\n    // 清空iframe的属性\n    for (const prop in iframe) {\n      if (Object.prototype.hasOwnProperty.call(iframe, prop)) {\n        try {\n          iframe[prop] = null;\n        } catch (e) {\n          console.debug('清空iframe的属性时出错:', e);\n        }\n      }\n    }\n\n    // 确保所有清理操作都完成后再resolve\n    setTimeout(() => {\n      resolve();\n    }, 0);\n  });\n}\n\n/**\n * 清理所有iframe\n * @returns {Promise<void>}\n */\nexport async function clearAllIframes(): Promise<void> {\n  const $iframes = $('iframe[id^=\"message-iframe\"]');\n  await Promise.all(\n    $iframes.toArray().map(async iframe => {\n      await destroyIframe(iframe as IFrameElement);\n    }),\n  );\n\n  // 清理相关的事件监听器\n  try {\n    if (typeof eventSource.removeListener === 'function') {\n      eventSource.removeListener('message_iframe_render_started', null as any);\n      eventSource.removeListener('message_iframe_render_ended', null as any);\n    }\n  } catch (e) {\n    console.debug('清理事件监听器时出错:', e);\n  }\n\n  // 尝试主动触发垃圾回收\n  try {\n    let arr = [];\n    for (let i = 0; i < 10; i++) {\n      arr.push(new Array(1000000).fill(1));\n    }\n    arr = null as any;\n\n    if (window.gc) {\n      window.gc();\n    }\n  } catch (e) {\n    console.debug('尝试触发垃圾回收时出错:', e);\n  }\n}\n\n/**\n * 处理油猴脚本兼容模式传来的消息\n * @param event 消息事件\n */\nfunction handleTampermonkeyMessages(event: MessageEvent): void {\n  if (event.data.type === 'buttonClick') {\n    const buttonName = event.data.name;\n    $('.qr--button.menu_button').each(function () {\n      if ($(this).find('.qr--button-label').text().trim() === buttonName) {\n        $(this).trigger('click');\n      }\n    });\n  } else if (event.data.type === 'textInput') {\n    const $sendTextarea = jQuery('#send_textarea');\n    if ($sendTextarea.length) {\n      $sendTextarea.val(event.data.text).trigger('input').trigger('change');\n    }\n  } else if (event.data.type === 'sendClick') {\n    const $sendButton = jQuery('#send_but');\n    if ($sendButton.length) {\n      $sendButton.trigger('click');\n    }\n  }\n}\n\n/**\n * 油猴兼容模式-创建全局音频管理器\n */\nfunction createGlobalAudioManager() {\n  let currentPlayingIframeId: string | null = null;\n\n  window.addEventListener('message', function (event) {\n    if (event.data.type === 'audioPlay') {\n      const newIframeId = event.data.iframeId;\n\n      if (currentPlayingIframeId && currentPlayingIframeId !== newIframeId) {\n        $('iframe').each(function () {\n          const iframe = this as HTMLIFrameElement;\n          if (iframe.contentWindow) {\n            iframe.contentWindow.postMessage(\n              {\n                type: 'stopAudio',\n                iframeId: newIframeId,\n              },\n              '*',\n            );\n          }\n        });\n      }\n\n      currentPlayingIframeId = newIframeId;\n    }\n  });\n}\n\n/**\n * 调整iframe高度\n * @param iframe iframe元素\n */\nfunction adjustIframeHeight(iframe: IFrameElement) {\n  const $iframe = $(iframe);\n  if (!$iframe.length || !$iframe[0].contentWindow || !$iframe[0].contentWindow.document.body) {\n    return;\n  }\n\n  const doc = $iframe[0].contentWindow.document;\n\n  const bodyHeight = doc.body.offsetHeight;\n  const htmlHeight = doc.documentElement.offsetHeight;\n\n  const newHeight = Math.max(bodyHeight, htmlHeight);\n  const currentHeight = parseFloat($iframe.css('height')) || 0;\n\n  if (Math.abs(currentHeight - newHeight) > 5) {\n    $iframe.css('height', newHeight + 'px');\n\n    if ($iframe.attr('data-needs-vh') === 'true' && iframe.contentWindow) {\n      iframe.contentWindow.postMessage(\n        {\n          request: 'updateViewportHeight',\n          newHeight: window.innerHeight,\n        },\n        '*',\n      );\n    }\n  }\n}\n\n/**\n * 提取代码块中的文本\n * @param codeElement 代码块元素\n * @returns 提取的文本\n */\nfunction extractTextFromCode(codeElement: HTMLElement) {\n  let textContent = '';\n\n  $(codeElement)\n    .contents()\n    .each(function () {\n      if (this.nodeType === Node.TEXT_NODE) {\n        textContent += this.textContent;\n      } else if (this.nodeType === Node.ELEMENT_NODE) {\n        textContent += extractTextFromCode(this as HTMLElement);\n      }\n    });\n\n  return textContent;\n}\n\n/**\n * 删除消息后重新渲染\n * @param mesId 消息ID\n */\nexport async function renderMessageAfterDelete(mesId: number) {\n  const context = getContext();\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const totalMessages = context.chat.length;\n  const maxRemainId = mesId - 1;\n  // 考虑到高楼层的情况，深度为0时，只渲染最后一个消息\n  if (processDepth === 0) {\n    const message = context.chat[maxRemainId];\n\n    const hasCodeBlock = /```[\\s\\S]*?```/.test(message);\n    const $iframe = $('[id^=\"message-iframe-' + maxRemainId + '-\"]');\n\n    if (!hasCodeBlock && $iframe.length === 0) {\n      return;\n    }\n    await destroyIframe($iframe.get(0) as IFrameElement);\n    updateMessageBlock(maxRemainId, message);\n    renderPartialIframes(maxRemainId);\n  } else {\n    const startRenderIndex = totalMessages - processDepth;\n    for (let i = startRenderIndex; i <= maxRemainId; i++) {\n      const message = context.chat[i];\n      const hasCodeBlock = /```[\\s\\S]*?```/.test(message);\n      const $iframe = $('[id^=\"message-iframe-' + i + '-\"]');\n\n      if (!hasCodeBlock && $iframe.length === 0) {\n        continue;\n      }\n      await destroyIframe($iframe.get(0) as IFrameElement);\n      updateMessageBlock(i, message);\n      renderPartialIframes(i);\n    }\n  }\n}\n\n/**\n * 处理油猴兼容性设置改变\n */\nasync function onTampermonkeyCompatibilityChange() {\n  const isEnabled = Boolean($('#tampermonkey_compatibility').prop('checked'));\n  await saveSettingValue('render.tampermonkey_compatibility', isEnabled);\n\n  if (!getSettingValue('activate_setting')) {\n    return;\n  }\n\n  if (isEnabled) {\n    if (!tampermonkeyMessageListener) {\n      tampermonkeyMessageListener = handleTampermonkeyMessages;\n      window.addEventListener('message', tampermonkeyMessageListener);\n      createGlobalAudioManager();\n    }\n  } else if (tampermonkeyMessageListener) {\n    window.removeEventListener('message', tampermonkeyMessageListener);\n    tampermonkeyMessageListener = null;\n  }\n\n  await clearAndRenderAllIframes();\n}\n\n/**\n * 处理深度输入改变时\n */\nasync function onDepthInput(value: string) {\n  const processDepth = parseInt(value, 10);\n  renderDepth = processDepth;\n\n  if (processDepth < 0) {\n    toastr.warning('处理深度不能为负数');\n    $('#render-depth').val(getSettingValue('render.render_depth'));\n    return;\n  }\n\n  await saveSettingValue('render.render_depth', processDepth);\n\n  await clearAndRenderAllIframes();\n}\n\nexport const handlePartialRender = (mesId: number) => {\n  console.log('[Render] PARTIAL render event triggered for message ID:', mesId);\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const context = getContext();\n  const totalMessages = context.chat.length;\n\n  if (processDepth > 0) {\n    const depthOffset = totalMessages - processDepth;\n\n    if (mesId < depthOffset) {\n      return;\n    }\n  }\n\n  setTimeout(() => {\n    renderMessagesInIframes(RENDER_MODES.PARTIAL, mesId);\n  }, 100);\n};\n\n/**\n * 注入加载样式\n */\nexport function injectLoadingStyles() {\n  if ($('#iframe-loading-styles').length) return;\n\n  const styleSheet = $('<style>', {\n    id: 'iframe-loading-styles',\n    text: `\n      .iframe-loading-overlay{\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n        background:rgba(0,0,0,.7);\n        display:flex;\n        justify-content:center;\n        align-items:center;\n        z-index:1000;\n        transition:opacity .3s ease\n      }\n      .iframe-loading-content{\n        color:#fff;\n        display:flex;\n        align-items:center;\n        gap:10px;\n        font-size:16px\n      }\n      .iframe-loading-content i{\n        font-size:20px\n      }\n      .loading-text {\n        transition: opacity 0.3s ease;\n      }`,\n  });\n\n  $('head').append(styleSheet);\n}\n\n/**\n * 注入代码块隐藏样式\n */\nexport function injectCodeBlockHideStyles() {\n  const styleId = 'hidden-code-block-styles';\n  let style = document.getElementById(styleId);\n  if (!style) {\n    style = document.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.setAttribute('id', styleId);\n    document.head.appendChild(style);\n  }\n  style.innerHTML = `\n    pre {\n      display: none;\n    }\n    .code-toggle-button {\n      display: inline-block;\n      margin: 5px 0;\n      padding: 5px 10px;\n      background-color: rgba(0, 0, 0, 0.1);\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 0.9em;\n      user-select: none;\n      transition: background-color 0.3s;\n    }\n    .code-toggle-button:hover {\n      background-color: rgba(0, 0, 0, 0.2);\n    }\n  `;\n}\n\n/**\n * 移除代码块隐藏样式\n */\nfunction removeCodeBlockHideStyles() {\n  const styleId = 'hidden-code-block-styles';\n  const style = document.getElementById(styleId);\n  if (style) {\n    style.remove();\n  }\n}\n\n/**\n * 为消息添加折叠控件\n * @param $mesText 消息文本元素\n */\nfunction addToggleButtonsToMessage($mesText: JQuery<HTMLElement>) {\n  if ($mesText.find('.code-toggle-button').length > 0 || $mesText.find('pre').length === 0) {\n    return;\n  }\n\n  $mesText.find('pre').each(function () {\n    const $pre = $(this);\n    const $toggleButton = $(\n      '<div class=\"code-toggle-button\" title=\"取消选中‘前端卡渲染优化’关闭此折叠功能\">显示代码块</div>',\n    );\n\n    $toggleButton.on('click', function () {\n      const isVisible = $pre.is(':visible');\n\n      if (isVisible) {\n        $pre.hide();\n        $(this).text('显示代码块');\n      } else {\n        $pre.show();\n        $(this).text('隐藏代码块');\n      }\n    });\n\n    $pre.before($toggleButton);\n  });\n}\n\n/**\n * 给所有消息添加折叠控件\n */\nexport function addCodeToggleButtonsToAllMessages() {\n  const $chat = $('#chat');\n  if (!$chat.length) {\n    return;\n  }\n\n  $chat.find('.mes .mes_block .mes_text').each(function () {\n    const $mesText = $(this);\n    addToggleButtonsToMessage($mesText);\n  });\n}\n\n/**\n * 根据mesId为消息添加折叠控件\n * @param mesId 消息ID\n */\nfunction addCodeToggleButtons(mesId: number) {\n  const $chat = $('#chat');\n  if (!$chat.length) {\n    return;\n  }\n  const $mesText = $chat.find(`div[mesid=\"${mesId}\"] .mes_block .mes_text`);\n  addToggleButtonsToMessage($mesText);\n}\n\n/**\n * 根据mesId移除折叠控件\n * @param mesId 消息ID\n */\nfunction removeCodeToggleButtonsByMesId(mesId: number) {\n  $(`div[mesid=\"${mesId}\"] .code-toggle-button`).each(function () {\n    $(this).off('click').remove();\n  });\n}\n\n/**\n * 移除所有折叠控件\n */\nfunction removeAllCodeToggleButtons() {\n  $('.code-toggle-button').each(function () {\n    $(this).off('click').remove();\n  });\n  // 去掉所有pre的display:none\n  $('pre').css('display', 'block');\n}\n\n/**\n * 添加前端卡渲染优化设置\n */\nexport function addRenderingOptimizeSettings() {\n  injectCodeBlockHideStyles();\n  hljs.highlightElement = function () {\n    return;\n  };\n}\n\n/**\n * 移除前端卡渲染优化设置\n */\nexport function removeRenderingOptimizeSettings() {\n  hljs.highlightElement = originalHighlightElement;\n  removeCodeBlockHideStyles();\n  removeAllCodeToggleButtons();\n}\n\n/**\n * 处理重型前端卡渲染优化\n * @param userInput 是否由用户手动触发\n * @param enable 是否启用重型前端卡渲染优化\n */\nasync function handleRenderingOptimizationToggle(userInput: boolean = true, enable: boolean = true) {\n  if (userInput) {\n    await saveSettingValue('render.render_optimize', enable);\n    isRenderingOptimizeEnabled = enable;\n  }\n\n  if (!isRenderEnabled) {\n    return;\n  }\n\n  if (enable) {\n    addRenderingOptimizeSettings();\n    if (userInput) {\n      await clearAndRenderAllIframes();\n    }\n  } else {\n    removeRenderingOptimizeSettings();\n    if (userInput) {\n      await clearAndRenderAllIframes();\n    }\n  }\n}\n/**\n * 处理渲染器启用设置改变\n * @param enable 是否启用渲染器\n * @param userInput 是否由用户手动触发\n */\nasync function handleRenderEnableToggle(enable: boolean, userInput: boolean = true) {\n  if (userInput) {\n    await saveSettingValue('render.render_enabled', enable);\n    isRenderEnabled = enable;\n  }\n  if (enable) {\n    $('#render-settings-content .extension-content-item').not(':first').css('opacity', 1);\n    if (isRenderingOptimizeEnabled) {\n      addRenderingOptimizeSettings();\n    }\n    await renderAllIframes();\n  } else {\n    $('#render-settings-content .extension-content-item').not(':first').css('opacity', 0.5);\n    if (isRenderingOptimizeEnabled) {\n      removeRenderingOptimizeSettings();\n    }\n    await clearAllIframes();\n    await reloadCurrentChat();\n  }\n}\n\n/**\n * 添加前端渲染快速按钮\n */\nfunction addRenderQuickButton() {\n  const buttonHtml = $(`\n  <div id=\"tavern-helper-container\" class=\"list-group-item flex-container flexGap5 interactable\">\n      <div class=\"fa-solid fa-puzzle-piece extensionsMenuExtensionButton\" /></div>\n      <span id=\"tavern-helper-text\">${isRenderEnabled ? '关闭前端渲染' : '开启前端渲染'}</span>\n  </div>`);\n  buttonHtml.css('display', 'flex');\n  $('#extensionsMenu').append(buttonHtml);\n  $('#tavern-helper-container').on('click', async function () {\n    $('#tavern-helper-text').text(!isRenderEnabled ? '关闭前端渲染' : '开启前端渲染');\n    await handleRenderEnableToggle(!isRenderEnabled, true);\n    $('#render-enable-toggle').prop('checked', isRenderEnabled);\n  });\n}\n\n/**\n * 初始化iframe控制面板\n */\nexport const initIframePanel = () => {\n  // 处理处理深度设置\n  renderDepth = getSettingValue('render.render_depth');\n  $('#render-depth')\n    .val(renderDepth || defaultIframeSettings.render_depth)\n    .on('input', function (event) {\n      onDepthInput((event.target as HTMLInputElement).value);\n    });\n\n  isRenderEnabled = getSettingValue('render.render_enabled');\n  handleRenderEnableToggle(isRenderEnabled, false);\n  $('#render-enable-toggle')\n    .prop('checked', isRenderEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleRenderEnableToggle(event.target.checked, true));\n\n  addRenderQuickButton();\n\n  // 处理重型前端卡渲染优化\n  isRenderingOptimizeEnabled = getSettingValue('render.render_optimize');\n  if (isRenderingOptimizeEnabled) {\n    handleRenderingOptimizationToggle(false, true);\n  }\n  $('#render-optimize-toggle')\n    .prop('checked', isRenderingOptimizeEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleRenderingOptimizationToggle(true, event.target.checked));\n\n  // 处理油猴兼容性设置\n  const tampermonkeyEnabled = getSettingValue('render.tampermonkey_compatibility');\n  $('#tampermonkey_compatibility').prop('checked', tampermonkeyEnabled).on('click', onTampermonkeyCompatibilityChange);\n\n  if (tampermonkeyEnabled) {\n    onTampermonkeyCompatibilityChange();\n  }\n\n  $(window).on('resize', function () {\n    if ($('iframe[data-needs-vh=\"true\"]').length) {\n      updateIframeViewportHeight();\n    }\n  });\n  injectLoadingStyles();\n};\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getTagsList\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_tags_js_fe93ed66__.getTagsList) });","// for compatibility with old sillytavern versions\nimport { characters, this_chid } from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { getTagsList } from '@sillytavern/scripts/tags';\nimport { equalsIgnoreCaseAndAccents } from '@sillytavern/scripts/utils';\n\n// for 1.12.6\n/**\n * Finds a character by name, with optional filtering and precedence for avatars\n * @param {object} [options={}] - The options for the search\n * @param {string?} [options.name=null] - The name to search for\n * @param {boolean} [options.allowAvatar=true] - Whether to allow searching by avatar\n * @param {boolean} [options.insensitive=true] - Whether the search should be case insensitive\n * @param {string[]?} [options.filteredByTags=null] - Tags to filter characters by\n * @param {boolean} [options.preferCurrentChar=true] - Whether to prefer the current character(s)\n * @param {boolean} [options.quiet=false] - Whether to suppress warnings\n * @returns {any?} - The found character or null if not found\n */\nexport function findChar({\n  name = null,\n  allowAvatar = true,\n  insensitive = true,\n  filteredByTags = null,\n  preferCurrentChar = true,\n  quiet = false,\n} = {}) {\n  const matches = (char: any) =>\n    !name ||\n    (allowAvatar && char.avatar === name) ||\n    (insensitive ? equalsIgnoreCaseAndAccents(char.name, name) : char.name === name);\n\n  // Filter characters by tags if provided\n  let filteredCharacters = characters;\n  if (filteredByTags) {\n    filteredCharacters = characters.filter(char => {\n      const charTags = getTagsList(char.avatar, false);\n      // @ts-ignore\n      return filteredByTags.every(tagName => charTags.some(x => x.name == tagName));\n    });\n  }\n\n  // Get the current character(s)\n  /** @type {any[]} */\n  // @ts-ignore\n  const currentChars = (selected_group as any)\n    ? // @ts-ignore\n      groups\n        // @ts-ignore\n        .find(group => group.id === selected_group)\n        // @ts-ignore\n        ?.members.map(member => filteredCharacters.find(char => char.avatar === member))\n    : // @ts-ignore\n      filteredCharacters.filter(char => characters[this_chid]?.avatar === char.avatar);\n\n  // If we have a current char and prefer it, return that if it matches\n  if (preferCurrentChar) {\n    const preferredCharSearch = currentChars.filter(matches);\n    if (preferredCharSearch.length > 1) {\n      // @ts-ignore\n      if (!quiet) toastr.warning('Multiple characters found for given conditions.');\n      else console.warn('Multiple characters found for given conditions. Returning the first match.');\n    }\n    if (preferredCharSearch.length) {\n      return preferredCharSearch[0];\n    }\n  }\n\n  // If allowAvatar is true, search by avatar first\n  if (allowAvatar && name) {\n    const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n    if (characterByAvatar) {\n      return characterByAvatar;\n    }\n  }\n\n  // Search for matching characters by name\n  const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n  if (matchingCharacters.length > 1) {\n    // @ts-ignore\n    if (!quiet) toastr.warning('Multiple characters found for given conditions.');\n    else console.warn('Multiple characters found for given conditions. Returning the first match.');\n  }\n\n  return matchingCharacters[0] || null;\n}\n","export { SetMultimap, ArrayMultimap };\n\nabstract class Multimap<K, V, I extends Iterable<V>> implements Iterable<[K, V]> {\n  private size_ = 0;\n  private map: Map<K, I> = new Map();\n  private operator: CollectionOperator<V, I>;\n\n  constructor(operator: CollectionOperator<V, I>, iterable?: Iterable<[K, V]>) {\n    this.operator = operator;\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.put(key, value);\n      }\n    }\n    return this;\n  }\n\n  abstract get [Symbol.toStringTag](): string;\n\n  get size(): number {\n    return this.size_;\n  }\n\n  get(key: K): I {\n    const values = this.map.get(key);\n    if (values) {\n      return this.operator.clone(values);\n    } else {\n      return this.operator.create();\n    }\n  }\n\n  put(key: K, value: V): boolean {\n    let values = this.map.get(key);\n    if (!values) {\n      values = this.operator.create();\n    }\n    if (!this.operator.add(value, values)) {\n      return false;\n    }\n    this.map.set(key, values);\n    this.size_++;\n    return true;\n  }\n\n  putAll(key: K, values: I): boolean;\n  putAll(multimap: Multimap<K, V, I>): boolean;\n  putAll(arg1: K | Multimap<K, V, I>, arg2?: I): boolean {\n    let pushed = 0;\n    if (arg2) {\n      const key = arg1 as K;\n      const values = arg2;\n      for (const value of values) {\n        this.put(key, value);\n        pushed++;\n      }\n    } else if (arg1 instanceof Multimap) {\n      for (const [key, value] of arg1.entries()) {\n        this.put(key, value);\n        pushed++;\n      }\n    } else {\n      throw new TypeError('unexpected arguments');\n    }\n    return pushed > 0;\n  }\n\n  has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  hasEntry(key: K, value: V): boolean {\n    return this.operator.has(value, this.get(key));\n  }\n\n  delete(key: K): boolean {\n    this.size_ -= this.operator.size(this.get(key));\n    return this.map.delete(key);\n  }\n\n  deleteEntry(key: K, value: V): boolean {\n    const current = this.get(key);\n    if (!this.operator.delete(value, current)) {\n      return false;\n    }\n    this.map.set(key, current);\n    this.size_--;\n    return true;\n  }\n\n  clear(): void {\n    this.map.clear();\n    this.size_ = 0;\n  }\n\n  keys(): IterableIterator<K> {\n    return this.map.keys();\n  }\n\n  entries(): IterableIterator<[K, V]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    function* gen(): IterableIterator<[K, V]> {\n      for (const [key, values] of self.map.entries()) {\n        for (const value of values) {\n          yield [key, value];\n        }\n      }\n    }\n    return gen();\n  }\n\n  values(): IterableIterator<V> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    function* gen(): IterableIterator<V> {\n      for (const [, value] of self.entries()) {\n        yield value;\n      }\n    }\n    return gen();\n  }\n\n  forEach<T>(callback: (this: T | this, value: V, key: K, map: this) => void, thisArg?: T): void {\n    for (const [key, value] of this.entries()) {\n      callback.call(thisArg === undefined ? this : thisArg, value, key, this);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  asMap(): Map<K, I> {\n    const ret = new Map<K, I>();\n    for (const key of this.keys()) {\n      ret.set(key, this.operator.clone(this.get(key)));\n    }\n    return ret;\n  }\n}\n\ninterface CollectionOperator<V, I> {\n  create(): I;\n  clone(collection: I): I;\n  add(value: V, collection: I): boolean;\n  size(collection: I): number;\n  delete(value: V, collection: I): boolean;\n  has(value: V, collection: I): boolean;\n}\n\nclass ArrayMultimap<K, V> extends Multimap<K, V, V[]> {\n  constructor(iterable?: Iterable<[K, V]>) {\n    super(new ArrayOperator(), iterable);\n  }\n\n  get [Symbol.toStringTag](): string {\n    return 'ArrayMultimap';\n  }\n}\n\nclass ArrayOperator<V> implements CollectionOperator<V, V[]> {\n  create(): V[] {\n    return [];\n  }\n\n  clone(collection: V[]): V[] {\n    return collection.slice();\n  }\n\n  add(value: V, collection: V[]): boolean {\n    collection.push(value);\n    return true;\n  }\n\n  size(collection: V[]): number {\n    return collection.length;\n  }\n\n  delete(value: V, collection: V[]): boolean {\n    const index = collection.indexOf(value);\n    if (index > -1) {\n      collection.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n  has(value: V, collection: V[]): boolean {\n    return collection.includes(value);\n  }\n}\n\nclass SetMultimap<K, V> extends Multimap<K, V, Set<V>> {\n  constructor(iterable?: Iterable<[K, V]>) {\n    super(new SetOperator(), iterable);\n  }\n  get [Symbol.toStringTag](): string {\n    return 'SetMultimap';\n  }\n}\n\nclass SetOperator<V> implements CollectionOperator<V, Set<V>> {\n  create(): Set<V> {\n    return new Set();\n  }\n  clone(collection: Set<V>): Set<V> {\n    return new Set(collection);\n  }\n  add(value: V, collection: Set<V>): boolean {\n    const prev = collection.size;\n    collection.add(value);\n    return prev !== collection.size;\n  }\n  size(collection: Set<V>): number {\n    return collection.size;\n  }\n  delete(value: V, collection: Set<V>): boolean {\n    return collection.delete(value);\n  }\n  has(value: V, collection: Set<V>): boolean {\n    return collection.has(value);\n  }\n}\n","import { SetMultimap } from '@/util/multimap';\n\nexport function partition<T>(array: T[], predicate: (item: T) => boolean): [T[], T[]] {\n  return array.reduce(\n    ([pass, fail], item) => {\n      if (predicate(item)) {\n        pass.push(item);\n      } else {\n        fail.push(item);\n      }\n      return [pass, fail];\n    },\n    [[], []] as [T[], T[]],\n  );\n}\n\nexport function set_or_add<K1, K2, V>(map: Map<K1, SetMultimap<K2, V>>, k1: K1, k2: K2, v: V): boolean {\n  if (map.has(k1)) {\n    // @ts-ignore 2532\n    map.get(k1).put(k2, v);\n    return false;\n  }\n\n  map.set(k1, new SetMultimap([[k2, v]]));\n  return true;\n}\n\nexport function try_set<K, V>(map: Map<K, V>, key: K, value: V): boolean {\n  if (map.has(key)) {\n    return false;\n  }\n  map.set(key, value);\n  return true;\n}\n\nexport function get_or_set<K, V>(map: Map<K, V>, key: K, defaulter: () => V): V {\n  const existing_value = map.get(key);\n  if (existing_value) {\n    return existing_value;\n  }\n  const default_value = defaulter();\n  map.set(key, default_value);\n  return default_value;\n}\n\nexport function extract<K, V>(map: Map<K, V>, key: K): V | undefined {\n  const value = map.get(key);\n  if (!value) {\n    return undefined;\n  }\n  map.delete(key);\n  return value;\n}\n\nexport function with_fallback<T extends Object>(data: Partial<T>, fallback: T): T {\n  const result = { ...fallback };\n  for (const key in data) {\n    if (data[key] !== undefined) {\n      result[key] = data[key];\n    }\n  }\n  return result;\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { chat_metadata, event_types } from '@sillytavern/script';\nimport { getContext, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\n\n// for compatibility\ninterface IframeSetVariables extends IframeMessage {\n  request: '[Variables][setVariables]';\n  message_id: number;\n  variables: Record<string, any>;\n}\n\nlet latest_set_variables_message_id: number | null = null;\n\nexport function registerIframeVariableHandler() {\n  registerIframeHandler('[Variables][setVariables]', async (event: MessageEvent<IframeSetVariables>): Promise<void> => {\n    const variables = event.data.variables;\n    const message_id = event.data.message_id;\n\n    if (isNaN(message_id)) {\n      return;\n    }\n    const chat_length = getContext().chat.length;\n    const latest_message_id = chat_length - 1;\n\n    if (message_id !== latest_message_id) {\n      console.info(\n        `因为 ${message_id} 楼不是最新楼层 ${latest_message_id} 楼, 取消设置聊天变量. 原本要设置的变量:\\n${JSON.stringify(\n          variables,\n          undefined,\n          2,\n        )} `,\n      );\n      return;\n    }\n    latest_set_variables_message_id = message_id;\n    if (\n      // @ts-ignore\n      !chat_metadata.variables ||\n      // @ts-ignore\n      typeof chat_metadata.variables !== 'object'\n    ) {\n      // @ts-ignore\n      chat_metadata.variables = {};\n    }\n    if (\n      // @ts-ignore\n      !chat_metadata.variables.tempVariables ||\n      // @ts-ignore\n      typeof chat_metadata.variables.tempVariables !== 'object'\n    ) {\n      // @ts-ignore\n      chat_metadata.variables.tempVariables = {};\n    }\n    if (variables.hasOwnProperty('tempVariables')) {\n      // @ts-ignore\n      delete variables.tempVariables;\n    }\n    // @ts-ignore\n    const tempVariables = chat_metadata.variables.tempVariables;\n    // @ts-ignore\n    const currentVariables = chat_metadata.variables;\n    Object.keys(variables).forEach(key => {\n      // @ts-ignore\n      const newValue = variables[key];\n      const currentValue = currentVariables[key];\n      if (newValue !== currentValue) {\n        tempVariables[key] = newValue;\n      }\n    });\n    // @ts-ignore\n    chat_metadata.variables.tempVariables = tempVariables;\n    saveMetadataDebounced();\n\n    console.info(`${getLogPrefix(event)}设置聊天变量, 要设置的变量:\\n${JSON.stringify(variables, undefined, 2)} `);\n  });\n}\n\nexport function clearTempVariables() {\n  if (\n    chat_metadata.variables &&\n    chat_metadata.variables.tempVariables &&\n    Object.keys(chat_metadata.variables.tempVariables).length > 0\n  ) {\n    console.log('[Var]Clearing tempVariables.');\n    chat_metadata.variables.tempVariables = {};\n    saveMetadataDebounced();\n  }\n}\n\nexport function shouldUpdateVariables(eventMesId: number) {\n  if (\n    !chat_metadata.variables ||\n    !chat_metadata.variables.tempVariables ||\n    Object.keys(chat_metadata.variables.tempVariables).length === 0\n  ) {\n    return;\n  }\n  if (eventMesId === latest_set_variables_message_id) {\n    console.log('[Var]MesId matches the latest setVariables, skipping ST variable update.');\n    return;\n  } else if (latest_set_variables_message_id !== null && eventMesId > latest_set_variables_message_id) {\n    console.log('[Var]Event mesId is newer than setVariables mesId, updating ST variables.');\n    const newVariables = { ...chat_metadata.variables.tempVariables };\n    updateVariables(newVariables);\n\n    chat_metadata.variables.tempVariables = {};\n    console.log('[Var]TempVariables cleared.');\n  } else {\n    console.log('[Var]Event mesId is older than setVariables mesId, ignoring.');\n  }\n}\n\nfunction updateVariables(newVariables: Record<string, any>) {\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  const currentVariables = chat_metadata.variables;\n\n  for (let key in newVariables) {\n    if (newVariables.hasOwnProperty(key)) {\n      currentVariables[key] = newVariables[key];\n    }\n  }\n\n  chat_metadata.variables = currentVariables;\n\n  saveMetadataDebounced();\n}\n\nexport const checkVariablesEvents = [event_types.CHARACTER_MESSAGE_RENDERED, event_types.USER_MESSAGE_RENDERED];\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"getRegexedString\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__.getRegexedString), [\"regex_placement\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__.regex_placement) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"ChatCompletion\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.ChatCompletion), [\"Message\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.Message), [\"MessageCollection\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.MessageCollection), [\"isImageInliningSupported\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.isImageInliningSupported), [\"oai_settings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.oai_settings), [\"prepareOpenAIMessages\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.prepareOpenAIMessages), [\"sendOpenAIRequest\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.sendOpenAIRequest), [\"setOpenAIMessageExamples\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setOpenAIMessageExamples), [\"setOpenAIMessages\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setOpenAIMessages), [\"setupChatCompletionPromptManager\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setupChatCompletionPromptManager) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"createNewWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.createNewWorldInfo), [\"createWorldInfoEntry\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.createWorldInfoEntry), [\"deleteWIOriginalDataValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.deleteWIOriginalDataValue), [\"deleteWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.deleteWorldInfo), [\"getWorldInfoPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.getWorldInfoPrompt), [\"getWorldInfoSettings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.getWorldInfoSettings), [\"loadWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.loadWorldInfo), [\"originalWIDataKeyMap\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.originalWIDataKeyMap), [\"saveWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.saveWorldInfo), [\"selected_world_info\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.selected_world_info), [\"setWIOriginalDataValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.setWIOriginalDataValue), [\"setWorldInfoButtonClass\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.setWorldInfoButtonClass), [\"wi_anchor_position\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.wi_anchor_position), [\"world_info\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_info), [\"world_info_include_names\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_info_include_names), [\"world_names\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_names) });","import { libraries_text } from '@/component/character_level/library';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\nimport { loadScripts, Script } from '@/util/load_script';\n\nlet script_map: Map<string, HTMLIFrameElement> = new Map();\n\nfunction makeScriptIframe(script: Script): { iframe: HTMLIFrameElement; load_promise: Promise<void> } {\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.id = `script-iframe-${script.name}`;\n\n  const srcdocContent = `\n    <html>\n    <head>\n      ${third_party}\n      <script src=\"${script_url.get('iframe_client')}\"></script>\n      ${libraries_text}\n    </head>\n    <body>\n      ${script.code}\n    </body>\n    </html>\n  `;\n\n  iframe.srcdoc = srcdocContent;\n\n  const load_promise = new Promise<void>(resolve => {\n    iframe.onload = () => {\n      console.info(`[Script](${iframe.id}) 加载完毕`);\n      resolve();\n    };\n  });\n\n  document.body.appendChild(iframe);\n\n  return { iframe, load_promise };\n}\n\nexport function destroy(): void {\n  if (script_map.size !== 0) {\n    console.log(`[Script] 清理全局脚本...`);\n    script_map.forEach((iframe, _) => {\n      iframe.remove();\n    });\n    script_map.clear();\n    console.log(`[Script] 全局脚本清理完成!`);\n  }\n}\n\nexport async function initialize(): Promise<void> {\n  try {\n    destroy();\n\n    const scripts = loadScripts('脚本-');\n    console.info(`[Script] 加载全局脚本: ${JSON.stringify(scripts.map(script => script.name))}`);\n\n    const load_promises: Promise<void>[] = [];\n\n    scripts.forEach(script => {\n      const { iframe, load_promise } = makeScriptIframe(script);\n      script_map.set(script.name, iframe);\n      load_promises.push(load_promise);\n    });\n\n    await Promise.allSettled(load_promises);\n  } catch (error) {\n    console.error('[Script] 全局脚本加载失败:', error);\n    throw error;\n  }\n}\n","import { destroy as destroyLibrary, initialize as initializeLibrary } from '@/component/character_level/library';\nimport {\n  destroy as destroyScriptIframe,\n  initialize as initializeScriptIframe,\n} from '@/component/character_level/script_iframe';\n\nimport { event_types, eventSource } from '@sillytavern/script';\n\nconst load_events = [event_types.CHAT_CHANGED] as const;\n\nexport function initializeCharacterLevelOnExtension() {\n  // FIXME: 在无角色卡的情况下, 修改正则并不会触发 CHAT_CHANGED 事件, 因而不会加载这些内容\n  load_events.forEach(eventType => {\n    eventSource.makeFirst(eventType, initializeScriptIframe);\n    eventSource.makeFirst(eventType, initializeLibrary);\n  });\n}\n\nexport function destroyCharacterLevelOnExtension() {\n  load_events.forEach(eventType => {\n    eventSource.removeListener(eventType, initializeScriptIframe);\n    eventSource.removeListener(eventType, initializeLibrary);\n  });\n  destroyScriptIframe();\n  destroyLibrary();\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"commonEnumProviders\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__.commonEnumProviders), [\"enumIcons\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__.enumIcons) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"SlashCommandEnumValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__.SlashCommandEnumValue), [\"enumTypes\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__.enumTypes) });","import { extensionName } from '@/util/extension_variables';\n\nimport { chat_metadata, saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\nimport { SlashCommand } from '@sillytavern/scripts/slash-commands/SlashCommand';\nimport {\n  ARGUMENT_TYPE,\n  SlashCommandArgument,\n  SlashCommandNamedArgument,\n} from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { commonEnumProviders, enumIcons } from '@sillytavern/scripts/slash-commands/SlashCommandCommonEnumsProvider';\nimport { SlashCommandEnumValue, enumTypes } from '@sillytavern/scripts/slash-commands/SlashCommandEnumValue';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\nimport {\n  list_BGMS,\n  list_ambients,\n  onAudioEnabledClick,\n  playAudio,\n  updateAudio,\n  updateAudioSelect,\n} from '../component/audio';\n\ninterface AudioElement extends HTMLElement {\n  pause(): void;\n}\n\n/**\n * 切换音频播放模式\n */\nexport async function audioMode(args: { type: string; mode: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const mode = args.mode.toLowerCase();\n\n  if (!['bgm', 'ambient'].includes(type) || !['repeat', 'random', 'single', 'stop'].includes(mode)) {\n    console.warn('WARN: Invalid arguments for /audiomode command');\n    return '';\n  }\n\n  if (type === 'bgm') {\n    extension_settings[extensionName].audio.bgm_mode = mode;\n    const iconMap: Record<string, string> = {\n      repeat: 'fa-repeat',\n      random: 'fa-random',\n      single: 'fa-redo-alt',\n      stop: 'fa-cancel',\n    };\n    $('#audio_bgm_mode_icon').removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n    $('#audio_bgm_mode_icon').addClass(iconMap[mode]);\n  } else if (type === 'ambient') {\n    extension_settings[extensionName].audio.ambient_mode = mode;\n    const iconMap: Record<string, string> = {\n      repeat: 'fa-repeat',\n      random: 'fa-random',\n      single: 'fa-redo-alt',\n      stop: 'fa-cancel',\n    };\n    $('#audio_ambient_mode_icon').removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n    $('#audio_ambient_mode_icon').addClass(iconMap[mode]);\n  }\n\n  saveSettingsDebounced();\n  return '';\n}\n\n/**\n * 切换播放器开关状态\n */\nexport async function audioEnable(args: { type: string; state?: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const state = (args.state || 'true').toLowerCase();\n\n  if (!type) {\n    console.warn('WARN: Missing arguments for /audioenable command');\n    return '';\n  }\n\n  if (type === 'bgm') {\n    if (state === 'true') {\n      $('#enable_bgm').prop('checked', true);\n      await onAudioEnabledClick('bgm');\n    } else if (state === 'false') {\n      $('#enable_bgm').prop('checked', false);\n      await onAudioEnabledClick('bgm');\n    }\n  } else if (type === 'ambient') {\n    if (state === 'true') {\n      $('#enable_ambient').prop('checked', true);\n      await onAudioEnabledClick('ambient');\n    } else if (state === 'false') {\n      $('#enable_ambient').prop('checked', false);\n      await onAudioEnabledClick('ambient');\n    }\n  }\n\n  return '';\n}\n\n/**\n * 切换播放/暂停状态\n */\nexport async function audioPlay(args: { type: string; play?: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const play = (args.play || 'true').toLowerCase();\n\n  if (!type) {\n    console.warn('WARN: Missing arguments for /audioplaypause command');\n    return '';\n  }\n\n  if (type === 'bgm') {\n    if (play === 'true') {\n      await playAudio('bgm');\n    } else if (play === 'false') {\n      const audioElement = $('#audio_bgm')[0] as AudioElement;\n      audioElement.pause();\n    }\n  } else if (type === 'ambient') {\n    if (play === 'true') {\n      await playAudio('ambient');\n    } else if (play === 'false') {\n      const audioElement = $('#audio_ambient')[0] as AudioElement;\n      audioElement.pause();\n    }\n  }\n\n  return '';\n}\n\n/**\n * 导入音频链接\n */\nexport async function audioImport(args: { type: string; play?: string }, url: string): Promise<void> {\n  const type = args.type.toLowerCase();\n  const play = (args.play || 'true').toLowerCase();\n\n  if (!type || !url) {\n    console.warn('WARN: Missing arguments for /audioimport command');\n    return '';\n  }\n\n  const urlArray = url\n    .split(',')\n    .map((url: string) => url.trim())\n    .filter((url: string) => url !== '')\n    .filter((url: string, index: number, self: string[]) => self.indexOf(url) === index);\n  if (urlArray.length === 0) {\n    console.warn('WARN: Invalid or empty URLs provided.');\n    return '';\n  }\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n  const existingUrls = chat_metadata.variables[typeKey] || [];\n  const mergedUrls = [...new Set([...urlArray, ...existingUrls])];\n\n  chat_metadata.variables[typeKey] = mergedUrls;\n  saveMetadataDebounced();\n\n  if (type === 'bgm') {\n    updateAudioSelect('bgm');\n  } else if (type === 'ambient') {\n    updateAudioSelect('ambient');\n  }\n\n  if (play === 'true' && urlArray[0]) {\n    const selectedUrl = urlArray[0];\n    if (type === 'bgm') {\n      extension_settings[extensionName].audio.bgm_selected = selectedUrl;\n      await updateAudio('bgm', true);\n    } else if (type === 'ambient') {\n      extension_settings[extensionName].audio.ambient_selected = selectedUrl;\n      await updateAudio('ambient', true);\n    }\n  }\n\n  return '';\n}\n\n/**\n * 选择并播放音频\n */\nexport async function audioSelect(args: { type: string }, url: string): Promise<void> {\n  const type = args.type.toLowerCase();\n\n  if (!url) {\n    console.warn('WARN: Missing URL for /audioselect command');\n    return '';\n  }\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  let playlist = type === 'bgm' ? list_BGMS : list_ambients;\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n\n  if (playlist && playlist.includes(url)) {\n    if (type === 'bgm') {\n      extension_settings[extensionName].audio.bgm_selected = url;\n      await updateAudio('bgm', true);\n    } else if (type === 'ambient') {\n      extension_settings[extensionName].audio.ambient_selected = url;\n      await updateAudio('ambient', true);\n    }\n    return '';\n  }\n\n  const existingUrls = chat_metadata.variables[typeKey] || [];\n\n  const mergedUrls = [...new Set([url, ...existingUrls])];\n  chat_metadata.variables[typeKey] = mergedUrls;\n  saveMetadataDebounced();\n\n  if (type === 'bgm') {\n    updateAudioSelect('bgm');\n    extension_settings[extensionName].audio.bgm_selected = url;\n    await updateAudio('bgm', true);\n  } else if (type === 'ambient') {\n    updateAudioSelect('ambient');\n    extension_settings[extensionName].audio.ambient_selected = url;\n    await updateAudio('ambient', true);\n  }\n\n  return '';\n}\n\n/**\n * 初始化音频相关的 slash command\n */\nexport function initAudioSlashCommands() {\n  // 注册 audioselect 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioselect',\n      callback: audioSelect,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择播放器类型 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n      ],\n      unnamedArgumentList: [new SlashCommandArgument('url', [ARGUMENT_TYPE.STRING], true)],\n      helpString: `\n        <div>\n            选择并播放音频。如果音频链接不存在，则先导入再播放。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioselect type=bgm https://example.com/song.mp3</code></pre>\n                    选择并播放指定的音乐。\n                </li>\n                <li>\n                    <pre><code>/audioselect type=ambient https://example.com/sound.mp3</code></pre>\n                    选择并播放指定的音效。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioimport 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioimport',\n      callback: audioImport,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择导入类型 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'play',\n          description: '导入后是否立即播放第一个链接',\n          typeList: [ARGUMENT_TYPE.BOOLEAN],\n          defaultValue: 'true',\n          isRequired: false,\n        }),\n      ],\n      unnamedArgumentList: [new SlashCommandArgument('url', [ARGUMENT_TYPE.STRING], true)],\n      helpString: `\n        <div>\n            导入音频或音乐链接，并决定是否立即播放，默认为自动播放。可批量导入链接，使用英文逗号分隔。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioimport type=bgm https://example.com/song1.mp3,https://example.com/song2.mp3</code></pre>\n                    导入 BGM 音乐并立即播放第一个链接。\n                </li>\n                <li>\n                    <pre><code>/audioimport type=ambient play=false url=https://example.com/sound1.mp3,https://example.com/sound2.mp3 </code></pre>\n                    导入音效链接 (不自动播放)。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioplay 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioplay',\n      callback: audioPlay,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        new SlashCommandNamedArgument(\n          'play',\n          '播放或暂停',\n          [ARGUMENT_TYPE.STRING],\n          true,\n          false,\n          'true',\n          commonEnumProviders.boolean('trueFalse')(),\n        ),\n      ],\n      helpString: `\n        <div>\n            控制音乐播放器或音效播放器的播放与暂停。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioplay type=bgm</code></pre>\n                    播放当前音乐。\n                </li>\n                <li>\n                    <pre><code>/audioplay type=ambient play=false</code></pre>\n                    暂停当前音效。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioenable 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioenable',\n      callback: audioEnable,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        new SlashCommandNamedArgument(\n          'state',\n          '打开或关闭播放器',\n          [ARGUMENT_TYPE.STRING],\n          false,\n          false,\n          'true',\n          commonEnumProviders.boolean('trueFalse')(),\n        ),\n      ],\n      helpString: `\n        <div>\n            控制音乐播放器或音效播放器的开启与关闭。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioenable type=bgm state=true</code></pre>\n                    打开音乐播放器。\n                </li>\n                <li>\n                    <pre><code>/audioenable type=ambient state=false</code></pre>\n                    关闭音效播放器。\n                </li>\n            </ul>\n        </div>\n    `,\n    }),\n  );\n\n  // 注册 audiomode 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audiomode',\n      callback: audioMode,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'mode',\n          description: '选择播放模式',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('repeat', null, enumTypes.enum, enumIcons.loop),\n            new SlashCommandEnumValue('random', null, enumTypes.enum, enumIcons.shuffle),\n            new SlashCommandEnumValue('single', null, enumTypes.enum, enumIcons.redo),\n            new SlashCommandEnumValue('stop', null, enumTypes.enum, enumIcons.stop),\n          ],\n          isRequired: true,\n        }),\n      ],\n      helpString: `\n        <div>\n            设置音频播放模式。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=repeat</code></pre>\n                    设置音乐为循环播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=random</code></pre>\n                    设置音效为随机播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=single</code></pre>\n                    设置音乐为单曲循环模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=stop</code></pre>\n                    设置音效为停止播放模式。\n                </li>\n            </ul>\n        </div>\n    `,\n    }),\n  );\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"NOTE_MODULE_NAME\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.NOTE_MODULE_NAME), [\"metadata_keys\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.metadata_keys), [\"shouldWIAddPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.shouldWIAddPrompt) });","import { defaultAudioSettings, initAudioComponents } from '@/component/audio';\nimport { initExtensionMainPanel } from '@/component/main';\nimport { defaultIframeSettings, initIframePanel } from '@/component/message_iframe';\nimport { defaultScriptSettings, initScriptRepository } from '@/component/script_repository';\nimport { initTavernHelperObject } from '@/function';\nimport { initAudioSlashCommands } from '@/slash_command/audio';\nimport { initSlashEventEmit } from '@/slash_command/event';\nimport {\n  addVersionUpdateElement,\n  getFileContentByPath,\n  handleUpdateButton,\n  parseVersionFromFile,\n  runCheckWithPath,\n  VERSION_FILE_PATH,\n} from '@/util/check_update';\nimport { extensionFolderPath, extensionName } from '@/util/extension_variables';\n\nimport { saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, renderExtensionTemplateAsync } from '@sillytavern/scripts/extensions';\n\nconst defaultSettings = {\n  enabled_extension: true,\n  render: {\n    ...defaultIframeSettings,\n  },\n  script: {\n    ...defaultScriptSettings,\n  },\n  audio: {\n    ...defaultAudioSettings,\n  },\n};\n\n// function formatSlashCommands(): string {\n//   const cmdList = Object.keys(SlashCommandParser.commands)\n//     .filter(key => SlashCommandParser.commands[key].name === key) // exclude aliases\n//     .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n//     .map(key => SlashCommandParser.commands[key]);\n//   const transform_arg = (arg: SlashCommandNamedArgument) => {\n//     const transformers = {\n//       name: (value: SlashCommandNamedArgument['name']) => ({ name: value }),\n//       // description: (value: SlashCommandNamedArgument['description']) => ({ description: value }),\n//       isRequired: (value: SlashCommandNamedArgument['isRequired']) => ({\n//         is_required: value,\n//       }),\n//       defaultValue: (value: SlashCommandNamedArgument['defaultValue']) =>\n//         value !== null ? { default_value: value } : {},\n//       acceptsMultiple: (value: SlashCommandNamedArgument['acceptsMultiple']) => ({ accepts_multiple: value }),\n//       enumList: (value: SlashCommandNamedArgument['enumList']) =>\n//         value.length > 0 ? { enum_list: value.map(e => e.value) } : {},\n//       typeList: (value: SlashCommandNamedArgument['typeList']) => (value.length > 0 ? { type_list: value } : {}),\n//     };\n\n//     return Object.entries(arg)\n//       .filter(([_, value]) => value !== undefined)\n//       .reduce(\n//         (result, [key, value]) => ({\n//           ...result,\n//           // @ts-ignore\n//           ...transformers[key]?.(value),\n//         }),\n//         {},\n//       );\n//   };\n//   const transform_help_string = (help_string: string) => {\n//     const content = $('<span>').html(help_string);\n//     return content\n//       .text()\n//       .split('\\n')\n//       .map(line => line.trim())\n//       .filter(line => line !== '')\n//       .join(' ');\n//   };\n\n//   return cmdList\n//     .map(cmd => ({\n//       name: cmd.name,\n//       named_args: cmd.namedArgumentList.map(transform_arg) ?? [],\n//       unnamed_args: cmd.unnamedArgumentList.map(transform_arg) ?? [],\n//       return_type: cmd.returns ?? 'void',\n//       help_string: transform_help_string(cmd.helpString) ?? 'NO DETAILS',\n//     }))\n//     .map(\n//       cmd =>\n//         `/${cmd.name}${cmd.named_args.length > 0 ? ` ` : ``}${cmd.named_args\n//           .map(\n//             arg =>\n//               `[${arg.accepts_multiple ? `...` : ``}${arg.name}=${\n//                 arg.enum_list ? arg.enum_list.join('|') : arg.type_list.join('|')\n//               }]${arg.is_required ? `` : `?`}${arg.default_value ? `=${arg.default_value}` : ``}`,\n//           )\n//           .join(' ')}${cmd.unnamed_args.length > 0 ? ` ` : ``}${cmd.unnamed_args\n//           .map(\n//             arg =>\n//               `(${arg.accepts_multiple ? `...` : ``}${\n//                 arg.enum_list ? arg.enum_list.join('|') : arg.type_list.join('|')\n//               })${arg.is_required ? `` : `?`}${arg.default_value ? `=${arg.default_value}` : ``}`,\n//           )\n//           .join(' ')} // ${cmd.help_string}`,\n//     )\n//     .join('\\n');\n// }\n\n/**\n * 设置页面切换\n *  @param event 事件对象\n * */\nfunction handleSettingPageChange(event: JQuery.ClickEvent) {\n  const target = $(event.currentTarget);\n  let id = target.attr('id');\n  if (id === undefined) {\n    return;\n  }\n  id = id.replace('-settings-title', '');\n\n  function resetAllTitleClasses() {\n    $('#main-settings-title').removeClass('title-item-active');\n    $('#render-settings-title').removeClass('title-item-active');\n    $('#script-settings-title').removeClass('title-item-active');\n    $('#audio-settings-title').removeClass('title-item-active');\n  }\n\n  function hideAllContentPanels() {\n    $('#main-settings-content').hide();\n    $('#render-settings-content').hide();\n    $('#script-settings-content').hide();\n    $('#audio-settings-content').hide();\n  }\n\n  resetAllTitleClasses();\n  hideAllContentPanels();\n\n  switch (id) {\n    case 'main':\n      $('#main-settings-title').addClass('title-item-active');\n      $('#main-settings-content').show();\n      break;\n    case 'render':\n      $('#render-settings-title').addClass('title-item-active');\n      $('#render-settings-content').show();\n      break;\n    case 'script':\n      $('#script-settings-title').addClass('title-item-active');\n      $('#script-settings-content').show();\n      break;\n    case 'audio':\n      $('#audio-settings-title').addClass('title-item-active');\n      $('#audio-settings-content').show();\n      break;\n  }\n}\n\n/**\n * 版本控制\n */\nasync function handleVersionUpdate() {\n  const currentVersion = parseVersionFromFile(await getFileContentByPath(VERSION_FILE_PATH));\n  $('.version').text(`Ver ${currentVersion}`);\n  const isNeedUpdate = await runCheckWithPath();\n  if (isNeedUpdate) {\n    addVersionUpdateElement();\n  }\n  $('#update-extension').on('click', async () => await handleUpdateButton());\n}\n\n/**\n * 初始化扩展面板\n */\njQuery(async () => {\n  const getContainer = () => $('#extensions_settings');\n  const windowHtml = await renderExtensionTemplateAsync(`${extensionFolderPath}`, 'settings');\n  getContainer().append(windowHtml);\n  //@ts-ignore\n  if (!extension_settings[extensionName]) {\n    //@ts-ignore\n    extension_settings[extensionName] = defaultSettings;\n    saveSettingsDebounced();\n  }\n\n  initTavernHelperObject();\n\n  // 默认显示主设置界面\n  $('#main-settings-title').addClass('title-item-active');\n  $('#main-settings-content').show();\n  $('#render-settings-content').hide();\n  $('#script-settings-content').hide();\n  $('#audio-settings-content').hide();\n\n  // 监听设置选项卡切换\n  $('#main-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n  $('#render-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n  $('#script-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n  $('#audio-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n\n  handleVersionUpdate();\n\n  // $('#scriptLibraryButton')\n  //   .off('click')\n  //   .on('click', function () {\n  //     isScriptLibraryOpen = !isScriptLibraryOpen;\n  //     $('#scriptLibraryPopup').slideToggle(200, 'swing');\n  //   });\n\n  // $(document).on('mousedown touchstart', function (e) {\n  //   const clickTarget = $(e.target);\n\n  //   if (\n  //     isScriptLibraryOpen &&\n  //     clickTarget.closest('#scriptLibraryButton').length === 0 &&\n  //     clickTarget.closest('#scriptLibraryPopup').length === 0\n  //   ) {\n  //     $('#scriptLibraryPopup').slideUp(200, 'swing');\n  //     isScriptLibraryOpen = false;\n  //   }\n  // });\n  // $('#copy_third_party_installation').on('pointerup', function () {\n  //   navigator.clipboard.writeText(\n  //     'npm install --save-dev @types/file-saver @types/jquery @types/jqueryui @types/lodash @types/yamljs',\n  //   );\n  //   executeSlashCommandsWithOptions('/echo severity=success 已复制到剪贴板!');\n  // });\n  // $('#copy_third_party_tag').on('pointerup', function () {\n  //   navigator.clipboard.writeText(third_party);\n  //   executeSlashCommandsWithOptions('/echo severity=success 已复制到剪贴板!');\n  // });\n\n  // $('#download_slash_commands').on('click', function () {\n  //   const url = URL.createObjectURL(new Blob([formatSlashCommands()], { type: 'text/plain' }));\n  //   $(this).attr('href', url);\n  //   $(this).attr('download', 'slash_command.txt');\n  //   setTimeout(() => URL.revokeObjectURL(url), 0);\n  // });\n  initExtensionMainPanel();\n  initIframePanel();\n  initScriptRepository();\n  initAudioComponents();\n  initAudioSlashCommands();\n  initSlashEventEmit();\n});\n","import { libraries_text } from '@/component/character_level/library';\nimport { destroyIframe } from '@/component/message_iframe';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\nimport { extensionFolderPath, getSettingValue, saveSettingValue } from '@/util/extension_variables';\nimport { renderMarkdown } from '@/util/render_markdown';\nimport { characters, eventSource, this_chid } from '@sillytavern/script';\nimport { renderExtensionTemplateAsync, writeExtensionField } from '@sillytavern/scripts/extensions';\nimport { createDefaultScripts } from './default_scripts/index';\n//@ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { POPUP_TYPE, callGenericPopup } from '@sillytavern/scripts/popup';\nimport { download, getFileText, getSortableDelay, uuidv4 } from '@sillytavern/scripts/utils';\n\ninterface IFrameElement extends HTMLIFrameElement {\n  cleanup: () => void;\n  [prop: string]: any;\n}\n\nexport const defaultScriptSettings = {\n  global_script_enabled: true,\n  scope_script_enabled: true,\n  scriptsRepository: [] as Script[],\n  characters_with_scripts: [] as string[],\n};\n\nconst templatePath = `${extensionFolderPath}/src/component/script_repository`;\nconst baseTemplate = $(\n  await renderExtensionTemplateAsync(`${templatePath}`, 'script_item_template', {\n    scriptName: '',\n    id: '',\n    moveTo: '',\n    faIcon: '',\n  }),\n);\n\nconst defaultScriptTemplate = $(\n  await renderExtensionTemplateAsync(`${templatePath}`, 'script_default_repository', {\n    scriptName: '',\n    id: '',\n  }),\n);\n\nlet isGlobalScriptEnabled: boolean;\nlet isScopedScriptEnabled: boolean;\n\nclass Script {\n  id: string;\n  name: string;\n  content: string;\n  info: string;\n  buttons: { name: string; visible: boolean }[];\n  enabled: boolean;\n\n  constructor(data?: Partial<Script>) {\n    this.id = data?.id || uuidv4();\n    this.name = data?.name || '';\n    this.content = data?.content || '';\n    this.info = data?.info || '';\n    this.enabled = data?.enabled || false;\n    this.buttons = data?.buttons || [];\n  }\n\n  hasName(): boolean {\n    return Boolean(this.name);\n  }\n  getScript(): Script {\n    return getSettingValue('script.scriptsRepository').find((s: Script) => s.id === this.id);\n  }\n}\n\nexport enum ScriptType {\n  GLOBAL = 'global',\n  CHARACTER = 'scope',\n}\n\nclass ScriptRepository {\n  private static instance: ScriptRepository;\n  private globalScripts: Script[] = [];\n  private characterScripts: Script[] = [];\n  private activeScripts: Map<string, { script: Script; element: HTMLScriptElement }> = new Map();\n\n  private constructor() {\n    this.loadScripts();\n  }\n\n  public static getInstance(): ScriptRepository {\n    if (!ScriptRepository.instance) {\n      ScriptRepository.instance = new ScriptRepository();\n    }\n    return ScriptRepository.instance;\n  }\n\n  /**\n   * 脚本库原始数据\n   */\n  async loadScripts() {\n    this.globalScripts = getSettingValue('script.scriptsRepository') || [];\n    this.characterScripts = characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n  }\n  /**\n   * 获取脚本\n   * @param id 脚本id\n   * @returns 脚本\n   */\n  getScriptById(id: string) {\n    return (\n      this.globalScripts.find((s: Script) => s.id === id) || this.characterScripts.find((s: Script) => s.id === id)\n    );\n  }\n\n  /**\n   * 添加单个脚本到脚本库UI首位并保存到设置中\n   * @param script 脚本\n   * @param type 脚本类型\n   */\n  async addScript(script: Script, type: ScriptType) {\n    if (!script.hasName()) {\n      toastr.error('保存失败，脚本名称为空');\n    }\n    await scriptRepo.saveScript(script, type);\n    await scriptRepo.renderScript(script, type);\n  }\n\n  /**\n   * 加载脚本库到界面\n   */\n  async loadScriptLibrary() {\n    $('#global-script-list').empty();\n    $('#scoped-script-list').empty();\n\n    const $emptyTip = `<small>暂无可用脚本</small>`;\n    const globalScriptArray = getSettingValue('script.scriptsRepository') ?? [];\n    const scopedScriptArray = characters[this_chid]?.data?.extensions?.TavernHelper_scripts ?? [];\n    console.log(this_chid);\n\n    if (globalScriptArray.length > 0) {\n      const globalScripts = globalScriptArray.map((scriptData: Script) => new Script(scriptData));\n      globalScripts.forEach(async (script: Script) => {\n        const scriptHtml = await cloneTemplate(script, ScriptType.GLOBAL);\n        $('#global-script-list').append(scriptHtml);\n      });\n    } else {\n      $('#global-script-list').append($emptyTip);\n    }\n    if (scopedScriptArray.length > 0) {\n      const scopedScripts = scopedScriptArray.map((scriptData: Script) => new Script(scriptData));\n      scopedScripts.forEach(async (script: Script) => {\n        const scriptHtml = await cloneTemplate(script, ScriptType.CHARACTER);\n        $('#scoped-script-list').append(scriptHtml);\n      });\n    } else {\n      $('#scoped-script-list').append($emptyTip);\n    }\n    scriptRepo.makeDraggable($(`#global-script-list`), ScriptType.GLOBAL);\n    scriptRepo.makeDraggable($(`#scoped-script-list`), ScriptType.CHARACTER);\n  }\n\n  /**\n   * 运行指定类型的脚本\n   * @param type 脚本类型\n   */\n  async runScriptsByType(type: ScriptType) {\n    if (!getSettingValue('enabled_extension')) {\n      toastr.error('酒馆助手未启用，无法运行脚本');\n      return;\n    }\n    if (type === ScriptType.GLOBAL && !isGlobalScriptEnabled) {\n      return;\n    }\n    if (type === ScriptType.CHARACTER && !isScopedScriptEnabled) {\n      return;\n    }\n\n    const scripts = type === ScriptType.GLOBAL ? this.globalScripts : this.characterScripts;\n    const enabledScripts = scripts.map((script, index) => ({ script, index })).filter(({ script }) => script.enabled);\n\n    for (const { script } of enabledScripts) {\n      // 不要保存设置\n      await scriptRepo.runScript(script, type, false);\n    }\n  }\n\n  /**\n   * 取消运行指定类型的脚本\n   * @param type 脚本类型\n   */\n  async cancelRunScriptsByType(type: ScriptType) {\n    const scripts = type === ScriptType.GLOBAL ? this.globalScripts : this.characterScripts;\n    const disabledScripts = scripts.map((script, index) => ({ script, index })).filter(({ script }) => !script.enabled);\n\n    for (const { script } of disabledScripts) {\n      // 不要保存设置\n      await scriptRepo.cancelRunScript(script, type, false);\n    }\n  }\n\n  /**\n   * 运行单个脚本\n   * @param script 脚本\n   * @param type 脚本类型\n   * @param userInput 是否由用户输入,为true时,会设置enabled为true,并保存设置\n   */\n  async runScript(script: Script, type: ScriptType, userInput: boolean = true) {\n    if (!getSettingValue('enabled_extension')) {\n      toastr.error('扩展未启用');\n      return;\n    }\n    const typeName = type === ScriptType.GLOBAL ? '全局' : '局部';\n    const index = script.id.startsWith('global')\n      ? this.globalScripts.findIndex(s => s.id === script.id)\n      : this.characterScripts.findIndex(s => s.id === script.id);\n    if (index !== -1) {\n      if (userInput) {\n        script.enabled = true;\n        await scriptRepo.saveScript(script, type);\n      }\n    }\n\n    if (type === ScriptType.GLOBAL && !isGlobalScriptEnabled) {\n      return;\n    }\n    if (type === ScriptType.CHARACTER && !isScopedScriptEnabled) {\n      return;\n    }\n\n    try {\n      if (this.activeScripts.has(script.id)) {\n        await this.cancelRunScript(script, type, false);\n      }\n\n      const htmlContent = `\n        <html>\n        <head>\n          ${third_party}\n          ${libraries_text}\n          <script>\n            (function($) {\n              var original$ = $;\n              window.$ = function(selector, context){\n                context = context || window.parent.document;\n                return original$(selector, context);\n              }\n            })(jQuery);\n            SillyTavern = window.parent.SillyTavern.getContext();\n            TavernHelper = window.parent.TavernHelper;\n            for (const key in TavernHelper) {\n              window[key] = TavernHelper[key];\n            }\n          </script>\n          <script src=\"${script_url.get('iframe_client')}\"></script>\n        </head>\n        <body>\n          <script type=\"module\">\n            $(async () => {\n              try {\n                ${script.content}\n              } catch (error) {\n                console.error('脚本执行错误:', error);\n              }\n            });\n          </script>\n        </body>\n        </html>\n      `;\n\n      const blob = new Blob([htmlContent], { type: 'text/html' });\n      const url = URL.createObjectURL(blob);\n\n      const $iframe = $('<iframe>', {\n        style: 'display: none;',\n        id: `tavern-helper-script-${script.id}`,\n        src: url,\n      });\n\n      $iframe.on('load', () => {\n        console.info(`[Script]启用${typeName}脚本[\"${script.name}\"]`);\n        URL.revokeObjectURL(url);\n      });\n\n      $('body').append($iframe);\n\n      if (script.buttons && script.buttons.length > 0) {\n        script.buttons.forEach(button => {\n          if (button.visible) {\n            scriptButtonUi.addButton(button, script.id);\n          }\n        });\n      }\n    } catch (error) {\n      console.error(`[Script]${typeName}脚本启用失败:[\"${script.name}\"]`, error);\n      toastr.error(`${typeName}脚本启用失败:[\"${script.name}\"]`);\n    }\n  }\n\n  /**\n   * 取消运行单个脚本\n   * @param script 脚本\n   */\n  async cancelRunScript(script: Script, type: ScriptType, userInput: boolean = true) {\n    const typeName = type === ScriptType.GLOBAL ? '全局' : '局部';\n    const index =\n      type === ScriptType.GLOBAL\n        ? this.globalScripts.findIndex(s => s.id === script.id)\n        : this.characterScripts.findIndex(s => s.id === script.id);\n    if (index !== -1) {\n      if (userInput) {\n        script.enabled = false;\n        await scriptRepo.saveScript(script, type);\n      }\n      const iframeElement = $(`#tavern-helper-script-${script.id}`)[0] as IFrameElement;\n      if (iframeElement) {\n        await destroyIframe(iframeElement);\n      }\n      scriptButtonUi.removeButton(script.name, script.id);\n      console.info(`[Script]${typeName}脚本[\"${script.name}\"] 已禁用`);\n    }\n  }\n\n  /**\n   * 渲染单个脚本到界面\n   * @param script 脚本\n   * @param type 类型\n   */\n  async renderScript(script: Script, type: ScriptType) {\n    const scriptHtml = await cloneTemplate(script, type);\n    const $emptyTip =\n      type === ScriptType.GLOBAL ? $(`#global-script-list`).find('small') : $(`#scoped-script-list`).find('small');\n    if (type === ScriptType.GLOBAL) {\n      $('#global-script-list').prepend(scriptHtml);\n    } else {\n      $('#scoped-script-list').prepend(scriptHtml);\n    }\n\n    if ($emptyTip.length > 0) {\n      $emptyTip.remove();\n    }\n  }\n\n  /**\n   * 打开脚本编辑器\n   * @param type 类型\n   * @param scriptId 脚本ID\n   */\n  async openScriptEditor(type: ScriptType, scriptId?: string) {\n    const $editorHtml = $(await renderExtensionTemplateAsync(`${templatePath}`, 'script_editor'));\n    const $buttonContent = `<div class=\"button-item\">\n              <span class=\"drag-handle menu-handle\">☰</span>\n              <input type=\"checkbox\"/>\n              <input class=\"text_pole\" type=\"text\"/>\n              <div class=\"delete-button menu_button interactable\">\n                <i class=\"fa-solid fa-trash\"></i>\n              </div>\n            </div>`;\n    let script: Script | undefined;\n    if (scriptId) {\n      if (type === ScriptType.GLOBAL) {\n        script = getSettingValue('script.scriptsRepository').find((s: Script) => s.id === scriptId);\n      } else {\n        script = characters[this_chid]?.data?.extensions?.TavernHelper_scripts.find((s: Script) => s.id === scriptId);\n      }\n\n      if (script) {\n        $editorHtml.find('#script-name-input').val(script.name);\n        $editorHtml.find('#script-content-textarea').val(script.content);\n        $editorHtml.find('#script-info-textarea').val(script.info);\n        if (script.buttons && script.buttons.length > 0) {\n          script.buttons.forEach(button => {\n            $editorHtml.find('#script-button-content').append($buttonContent);\n            $editorHtml.find('#script-button-content').find('input').val(button.name);\n            $editorHtml.find('#script-button-content').find('input').prop('checked', button.visible);\n          });\n        }\n      }\n    }\n\n    $editorHtml.find('#add-button-trigger').on('click', () => {\n      $editorHtml.find('#script-button-content').append($buttonContent);\n    });\n\n    $editorHtml.find('#script-button-content').sortable({\n      handle: '.drag-handle',\n      items: '.button-item',\n    });\n\n    $editorHtml.on('click', '.delete-button', (e: JQuery.ClickEvent) => {\n      $(e.currentTarget).closest('.button-item').remove();\n    });\n\n    const popupResult = await callGenericPopup($editorHtml, POPUP_TYPE.CONFIRM, '', {\n      okButton: '确认',\n      cancelButton: '取消',\n      wide: true,\n      large: true,\n    });\n\n    if (popupResult) {\n      const scriptName = $editorHtml.find('#script-name-input').val() as string;\n      const scriptContent = $editorHtml.find('#script-content-textarea').val() as string;\n      const scriptInfo = $editorHtml.find('#script-info-textarea').val() as string;\n      const buttonArray = $editorHtml\n        .find('#script-button-content')\n        .find('.button-item')\n        .map((_index, element) => {\n          const buttonText = $(element).find('input.text_pole').val() as string;\n          const isVisible = $(element).find('input[type=\"checkbox\"]').prop('checked');\n          return {\n            text: buttonText,\n            visible: isVisible,\n          };\n        })\n        .toArray()\n        .filter(button => button.text && button.text.trim() !== '');\n\n      if (scriptId && script) {\n        const oldButtons = script.buttons;\n        if (oldButtons) {\n          oldButtons.forEach(button => {\n            scriptButtonUi.$scriptBar.find(`#${button.name}_${script.id}`).remove();\n          });\n        }\n\n        script.name = scriptName;\n        script.content = scriptContent;\n        script.info = scriptInfo;\n        script.buttons = buttonArray.map(button => ({ name: button.text, visible: button.visible }));\n        $(`#${script.id}`).find('.script-item-name').text(script.name);\n        await scriptRepo.saveScript(script, type);\n        if (script.enabled) {\n          await scriptRepo.runScript(script, type, false);\n        }\n      } else {\n        const newScript = new Script({\n          id: uuidv4(),\n          name: scriptName,\n          content: scriptContent,\n          info: scriptInfo,\n          enabled: false,\n          buttons: buttonArray.map(button => ({ name: button.text, visible: button.visible })),\n        });\n        await scriptRepo.addScript(newScript, type);\n      }\n    }\n  }\n\n  /**\n   * 删除脚本\n   * @param id 脚本ID\n   * @param type 类型\n   */\n  async deleteScript(id: string, type: ScriptType): Promise<void> {\n    try {\n      const array =\n        type === ScriptType.GLOBAL\n          ? getSettingValue('script.scriptsRepository') || []\n          : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n      const existingScriptIndex = array.findIndex((script: Script) => script.id === id);\n      if (existingScriptIndex !== -1) {\n        array.splice(existingScriptIndex, 1);\n\n        if (type === ScriptType.GLOBAL) {\n          $('#global-script-list').find(`#${id}`).remove();\n          await scriptRepo.saveGlobalScripts(array);\n        } else {\n          $('#scoped-script-list').find(`#${id}`).remove();\n          await scriptRepo.saveCharacterScripts(array);\n        }\n        if (array.length === 0) {\n          const $emptyTip = `<small>暂无可用脚本</small>`;\n          type === ScriptType.GLOBAL\n            ? $(`#global-script-list`).append($emptyTip)\n            : $(`#scoped-script-list`).append($emptyTip);\n        }\n      } else {\n        throw new Error('[ScriptRepository] 脚本不存在');\n      }\n    } catch (error) {\n      console.error('[ScriptRepository] 删除脚本时发生错误:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 保存单个脚本到设置中\n   * @param script 脚本\n   * @param type 脚本类型\n   */\n  async saveScript(script: Script, type: ScriptType) {\n    const array =\n      type === ScriptType.GLOBAL\n        ? getSettingValue('script.scriptsRepository') || []\n        : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n    const index = array.findIndex((s: Script) => s.id === script.id);\n    if (index === -1) {\n      array.unshift(script);\n    } else {\n      array[index] = script;\n    }\n    if (type === ScriptType.GLOBAL) {\n      await saveSettingValue('script.scriptsRepository', array);\n    } else {\n      await scriptRepo.saveCharacterScripts(array);\n    }\n  }\n\n  /**\n   * 保存脚本数组到扩展数据\n   * @param array 脚本数组\n   */\n  async saveGlobalScripts(array: Script[]) {\n    await saveSettingValue('script.scriptsRepository', array);\n  }\n\n  /**\n   * 保存脚本数组到角色卡数据\n   * @param array 脚本数组\n   */\n  async saveCharacterScripts(array: Script[]) {\n    if (this_chid) {\n      await writeExtensionField(this_chid, 'TavernHelper_scripts', array);\n    } else {\n      toastr.error('保存失败，当前角色为空');\n    }\n  }\n  /**\n   * 使脚本库可拖拽调整顺序\n   * @param list 脚本库列表\n   * @param type 脚本类型\n   */\n  makeDraggable(list: JQuery<HTMLElement>, type: ScriptType) {\n    list.sortable({\n      delay: getSortableDelay(),\n      handle: '.drag-handle',\n      items: '.script-item',\n      stop: async () => {\n        const newOrder: string[] = [];\n\n        list.find('> .script-item').each(function (this: HTMLElement) {\n          const id = $(this).attr('id');\n          if (id) {\n            newOrder.push(id);\n          }\n        });\n\n        const array =\n          type === ScriptType.GLOBAL\n            ? getSettingValue('script.scriptsRepository') || []\n            : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n        const updatedScripts = newOrder\n          .map(id => {\n            return array.find((script: Script) => script.id === id);\n          })\n          .filter(Boolean);\n\n        if (type === ScriptType.GLOBAL) {\n          await scriptRepo.saveGlobalScripts(updatedScripts);\n        } else {\n          await scriptRepo.saveCharacterScripts(updatedScripts);\n        }\n      },\n    });\n  }\n  /**\n   * 移动到另一类仓库\n   */\n  async moveScriptToOtherType(script: Script, type: ScriptType) {\n    try {\n      const sourceArray =\n        type === ScriptType.GLOBAL\n          ? getSettingValue('script.scriptsRepository') || []\n          : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n      const sourceIndex = sourceArray.findIndex((s: Script) => s.id === script.id);\n      if (sourceIndex !== -1) {\n        sourceArray.splice(sourceIndex, 1);\n\n        if (type === ScriptType.GLOBAL) {\n          await scriptRepo.saveGlobalScripts(sourceArray);\n          $('#global-script-list').find(`#${script.id}`).remove();\n        } else {\n          await scriptRepo.saveCharacterScripts(sourceArray);\n          $('#scoped-script-list').find(`#${script.id}`).remove();\n        }\n\n        const targetType = type === ScriptType.GLOBAL ? ScriptType.CHARACTER : ScriptType.GLOBAL;\n        const targetArray =\n          targetType === ScriptType.GLOBAL\n            ? getSettingValue('script.scriptsRepository') || []\n            : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n        targetArray.unshift(script);\n\n        if (targetType === ScriptType.GLOBAL) {\n          await scriptRepo.saveGlobalScripts(targetArray);\n          await scriptRepo.renderScript(script, targetType);\n        } else {\n          await scriptRepo.saveCharacterScripts(targetArray);\n          await scriptRepo.renderScript(script, targetType);\n        }\n      } else {\n        throw new Error('[ScriptRepository] 脚本不存在');\n      }\n    } catch (error) {\n      console.error('[ScriptRepository] 移动脚本时发生错误:', error);\n      toastr.error('移动脚本失败');\n      throw error;\n    }\n  }\n}\n\nexport const scriptRepo = ScriptRepository.getInstance();\n\nexport class ScriptButtonUi {\n  $scriptBar!: JQuery<HTMLElement>;\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    if (!$('#TH-script-bar').length) {\n      $('<div id=\"TH-script-bar\" class=\"flex-container flexGap5 alignItemsCenter justifyCenter\"></div>').prependTo(\n        '#send_form',\n      );\n    }\n    this.$scriptBar = $('#TH-script-bar');\n  }\n\n  addButton(button: { name: string }, id: string) {\n    const buttonId = `${button.name}_${id}`;\n    this.$scriptBar.append(\n      `<div class=\"TH-script-button menu_button interactable\" id=\"${buttonId}\">${button.name}</div>`,\n    );\n    this.$scriptBar.find(`#${buttonId}`).on('click', async () => {\n      await eventSource.emit(`${buttonId}`);\n    });\n  }\n\n  removeButton(name: string, id: string) {\n    this.$scriptBar.find(`#${name}_${id}`).remove();\n  }\n\n  clear() {\n    this.$scriptBar.empty();\n  }\n}\n\nexport const scriptButtonUi = new ScriptButtonUi();\n\n/**\n * 克隆显示模板\n * @param script 脚本\n * @param type 类型,global 全局,scope 局部\n */\nexport async function cloneTemplate(script: Script, type: ScriptType.GLOBAL | ScriptType.CHARACTER) {\n  const scriptHtml = baseTemplate.clone();\n\n  scriptHtml.attr('id', script.id);\n\n  scriptHtml.find('.script-item-name').text(script.name);\n  scriptHtml.find('.script-storage-location').addClass(type === 'global' ? 'move-to-scoped' : 'move-to-global');\n  scriptHtml.find('.script-storage-location i').addClass(type === 'global' ? 'fa-arrow-down' : 'fa-arrow-up');\n\n  const toggleId = `toggle-script-${script.id}`;\n  scriptHtml.find('label').attr('for', toggleId);\n\n  scriptHtml\n    .find('.toggle-script')\n    .attr('id', toggleId)\n    .prop('checked', script.enabled)\n    .on('change', async function () {\n      const isChecked = !!$(this).prop('checked');\n\n      scriptHtml.find('.script-toggle-on').toggle(isChecked);\n      scriptHtml.find('.script-toggle-off').toggle(!isChecked);\n      script.enabled = isChecked;\n      await scriptRepo.saveScript(script, type);\n      // 不需要再保存一次\n      if (isChecked) {\n        await scriptRepo.runScript(script, type, false);\n      } else {\n        await scriptRepo.cancelRunScript(script, type, false);\n      }\n    });\n\n  scriptHtml\n    .find('.script-toggle-on')\n    .toggle(script.enabled)\n    .on('click', async function () {\n      $(this).hide();\n      scriptHtml.find('.script-toggle-off').show();\n    });\n\n  scriptHtml\n    .find('.script-toggle-off')\n    .toggle(!script.enabled)\n    .on('click', async function () {\n      $(this).hide();\n      scriptHtml.find('.script-toggle-on').show();\n    });\n\n  scriptHtml.find('.script-info').on('click', async function () {\n    const info = script.getScript().info;\n    const htmlText = renderMarkdown(info);\n    await callGenericPopup(htmlText, POPUP_TYPE.DISPLAY);\n  });\n\n  scriptHtml.find('.edit-script').on('click', () => scriptRepo.openScriptEditor(type, script.id));\n  scriptHtml.find('.script-storage-location').on('click', () => scriptRepo.moveScriptToOtherType(script, type));\n  scriptHtml.find('.export-script').on('click', async function () {\n    // eslint-disable-next-line no-control-regex\n    const fileName = `${script.name.replace(/[\\s.<>:\"/\\\\|?*\\x00-\\x1F\\x7F]/g, '_').toLowerCase()}.json`;\n    const { id, enabled, ...scriptData } = script;\n    const fileData = JSON.stringify(scriptData, null, 4);\n    download(fileData, fileName, 'application/json');\n  });\n  scriptHtml.find('.delete-script').on('click', async () => {\n    const confirm = await callGenericPopup('确定要删除这个脚本吗？', POPUP_TYPE.CONFIRM);\n\n    if (!confirm) {\n      return;\n    }\n\n    await scriptRepo.deleteScript(script.id, type);\n\n    scriptHtml.remove();\n  });\n  return scriptHtml;\n}\n\n/**\n * 克隆默认脚本模板\n * @param script 脚本\n * @param type 类型,global 全局,scope 局部\n */\nexport async function cloneDefaultScriptTemplate(script: Script) {\n  const scriptHtml = defaultScriptTemplate.clone();\n\n  scriptHtml.attr('id', script.id);\n\n  scriptHtml.find('.script-item-name').text(script.name);\n  scriptHtml.find('.script-info').on('click', () => callGenericPopup(script.info, POPUP_TYPE.DISPLAY));\n  scriptHtml.find('.add-script').on('click', async () => {\n    let target = 'global';\n    const template = $(await renderExtensionTemplateAsync(`${templatePath}`, 'script_import_target'));\n    template.find('#script-import-target-global').on('input', () => (target = 'global'));\n    template.find('#script-import-target-scoped').on('input', () => (target = 'scoped'));\n    await callGenericPopup(template, POPUP_TYPE.TEXT);\n\n    const convertedScript = new Script({\n      id: script.id,\n      name: script.name,\n      content: script.content,\n      info: script.info,\n      enabled: script.enabled,\n    });\n\n    const type = target === 'global' ? ScriptType.GLOBAL : ScriptType.CHARACTER;\n    // 检查是否已存在相同id的脚本\n    const existingScript = scriptRepo.getScriptById(convertedScript.id);\n    if (existingScript) {\n      const confirm = await callGenericPopup(`脚本 ${existingScript.name} 已存在，是否要覆盖？`, POPUP_TYPE.CONFIRM);\n      if (!confirm) {\n        return;\n      } else {\n        await scriptRepo.saveScript(convertedScript, type);\n      }\n    } else {\n      await scriptRepo.addScript(convertedScript, type);\n    }\n  });\n  return scriptHtml;\n}\n\n/**\n * 加载默认脚本库\n */\nasync function loadDefaultScriptsRepository() {\n  const defaultScriptList = $('<div id=\"default-script-list\" class=\"flex-container flexFlowColumn\"></div>');\n  const defaultScripts = await createDefaultScripts();\n  for (const script of defaultScripts) {\n    const template = await cloneDefaultScriptTemplate(script);\n    defaultScriptList.append(template);\n  }\n  await callGenericPopup(defaultScriptList, POPUP_TYPE.TEXT);\n}\n\n/**\n * 处理脚本启用开关的点击事件\n * @param type 类型,global 全局,scope 局部\n * @param enable 是否启用\n * @param userInput 是否由用户输入\n */\nasync function handleScriptToggle(type: ScriptType, enable: boolean, userInput: boolean = true) {\n  if (type === ScriptType.GLOBAL) {\n    if (userInput) {\n      await saveSettingValue('script.global_script_enabled', enable);\n    }\n    isGlobalScriptEnabled = enable;\n    if (enable) {\n      scriptRepo.runScriptsByType(ScriptType.GLOBAL);\n    } else {\n      scriptRepo.cancelRunScriptsByType(ScriptType.GLOBAL);\n    }\n  } else {\n    if (userInput) {\n      await saveSettingValue('script.scope_script_enabled', enable);\n    }\n    isScopedScriptEnabled = enable;\n    if (enable) {\n      scriptRepo.runScriptsByType(ScriptType.CHARACTER);\n    } else {\n      scriptRepo.cancelRunScriptsByType(ScriptType.CHARACTER);\n    }\n  }\n}\n\n/**\n * 导入脚本文件\n * @param {File} file 文件\n * @param {boolean} type 脚本类型\n */\nasync function onScriptImportFileChange(file: File, type: ScriptType) {\n  if (!file) {\n    toastr.error('未提供文件。');\n    return;\n  }\n\n  try {\n    const fileText = await getFileText(file);\n    const script = JSON.parse(fileText);\n    if (!script.name) {\n      throw new Error('未提供脚本名称。');\n    }\n\n    const newScript = new Script(script);\n    // 分配一个新的id\n    newScript.id = uuidv4();\n    newScript.enabled = false;\n\n    await scriptRepo.saveScript(newScript, type);\n    await scriptRepo.renderScript(newScript, type);\n    toastr.success(`脚本 \"${newScript.name}\" 导入成功。`);\n  } catch (error) {\n    console.error(error);\n    toastr.error('无效的JSON文件。');\n    return;\n  }\n}\n\n/**\n * 从脚本允许列表中删除角色\n * @param param0\n */\n\nexport async function purgeEmbeddedScripts({ character }) {\n  const avatar = character?.avatar;\n  const charactersWithScripts = getSettingValue('script.characters_with_scripts');\n  if (avatar && charactersWithScripts?.includes(avatar)) {\n    const index = charactersWithScripts.indexOf(avatar);\n    if (index !== -1) {\n      charactersWithScripts.splice(index, 1);\n      await saveSettingValue('script.characters_with_scripts', charactersWithScripts);\n    }\n  }\n}\n\n/**\n * 检查角色中的嵌入式脚本\n */\nexport async function checkEmbeddedScripts() {\n  const chid = this_chid;\n\n  if (chid !== undefined && !selected_group) {\n    const avatar = characters[chid]?.avatar;\n    const scripts = characters[chid]?.data?.extensions?.TavernHelper_scripts;\n\n    if (Array.isArray(scripts) && scripts.length > 0) {\n      const charactersWithScripts = getSettingValue('script.characters_with_scripts');\n      if (avatar && !charactersWithScripts.includes(avatar)) {\n        const characterScripts = characters[chid]?.data?.extensions?.TavernHelper_scripts;\n        if (Array.isArray(characterScripts) && characterScripts.length > 0) {\n          const scopedScripts = characterScripts.map((scriptData: Script) => new Script(scriptData));\n          scopedScripts.forEach(async (script: Script) => {\n            const scriptHtml = await cloneTemplate(script, ScriptType.CHARACTER);\n            $('#scoped-script-list').append(scriptHtml);\n          });\n\n          const template = await renderExtensionTemplateAsync(`${templatePath}`, 'script_allow_popup');\n          const result = await callGenericPopup(template, POPUP_TYPE.CONFIRM, '', { okButton: 'Yes' });\n\n          if (result) {\n            $('#scoped-script-list')\n              .find('.toggle-script')\n              .each(function () {\n                $(this).prop('checked', !$(this).prop('checked')).trigger('change');\n              });\n          }\n          charactersWithScripts.push(avatar);\n          await saveSettingValue('script.characters_with_scripts', charactersWithScripts);\n        }\n      }\n    }\n  }\n}\n\n/**\n * 清理所有脚本iframe\n */\nexport async function clearAllScriptsIframe() {\n  const $iframes = $('iframe[id^=\"tavern-helper-script-\"]');\n  for (const iframe of $iframes) {\n    await destroyIframe(iframe as IFrameElement);\n  }\n}\n\nexport async function initScriptRepository() {\n  isGlobalScriptEnabled = getSettingValue('script.global_script_enabled');\n  isScopedScriptEnabled = getSettingValue('script.scope_script_enabled');\n\n  handleScriptToggle(ScriptType.GLOBAL, isGlobalScriptEnabled, false);\n  handleScriptToggle(ScriptType.CHARACTER, isScopedScriptEnabled, false);\n\n  $('#global-script-enable-toggle')\n    .prop('checked', isGlobalScriptEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleScriptToggle(ScriptType.GLOBAL, event.target.checked, true));\n  $('#scoped-script-enable-toggle')\n    .prop('checked', isScopedScriptEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleScriptToggle(ScriptType.CHARACTER, event.target.checked, true));\n\n  $('#open-global-script-editor').on('click', () => scriptRepo.openScriptEditor(ScriptType.GLOBAL, undefined));\n  $('#open-scoped-script-editor').on('click', () => scriptRepo.openScriptEditor(ScriptType.CHARACTER, undefined));\n\n  $('#import-script-file').on('change', async function () {\n    let target = 'global';\n    const template = $(await renderExtensionTemplateAsync(`${templatePath}`, 'script_import_target'));\n    template.find('#script-import-target-global').on('input', () => (target = 'global'));\n    template.find('#script-import-target-scoped').on('input', () => (target = 'scoped'));\n    await callGenericPopup(template, POPUP_TYPE.TEXT);\n    const inputElement = this instanceof HTMLInputElement && this;\n    if (inputElement && inputElement.files) {\n      for (const file of inputElement.files) {\n        await onScriptImportFileChange(file, target === 'global' ? ScriptType.GLOBAL : ScriptType.CHARACTER);\n      }\n\n      inputElement.value = '';\n    }\n  });\n\n  $('#import-script').on('click', function () {\n    $('#import-script-file').trigger('click');\n  });\n\n  $('#default-script').on('click', loadDefaultScriptsRepository);\n  scriptButtonUi.init();\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"SlashCommandParser\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandParser_js_585e5f4d__.SlashCommandParser) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"Prompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__.Prompt), [\"PromptCollection\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__.PromptCollection) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"Stopwatch\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.Stopwatch), [\"debounce\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.debounce), [\"download\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.download), [\"ensureImageFormatSupported\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.ensureImageFormatSupported), [\"equalsIgnoreCaseAndAccents\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.equalsIgnoreCaseAndAccents), [\"getBase64Async\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getBase64Async), [\"getCharaFilename\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getCharaFilename), [\"getFileText\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getFileText), [\"getSortableDelay\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getSortableDelay), [\"setValueByPath\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.setValueByPath), [\"stringToRange\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.stringToRange), [\"uuidv4\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.uuidv4) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"selected_group\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_group_chats_js_79178f54__.selected_group) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"t\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_i18n_js_b4bbac2e__.t) });","// TODO: 导入 index 时使用 raw, 而不是分别使用 raw\nimport _impl from \"@/iframe_client/_impl?raw\"\nimport _multimap from \"@/iframe_client/_multimap?raw\"\nimport audio from \"@/iframe_client/audio?raw\"\nimport character from \"@/iframe_client/character?raw\"\nimport chat_message from \"@/iframe_client/chat_message?raw\"\nimport displayed_message from \"@/iframe_client/displayed_message?raw\"\nimport event from \"@/iframe_client/event?raw\"\nimport exported from \"@/iframe_client/exported?raw\"\nimport frontend_version from \"@/iframe_client/frontend_version?raw\"\nimport generate from \"@/iframe_client/generate?raw\"\nimport lorebook from \"@/iframe_client/lorebook?raw\"\nimport lorebook_entry from \"@/iframe_client/lorebook_entry?raw\"\nimport slash from \"@/iframe_client/slash?raw\"\nimport tavern_regex from \"@/iframe_client/tavern_regex?raw\"\nimport util from \"@/iframe_client/util?raw\"\nimport variables from \"@/iframe_client/variables?raw\"\n\nexport const iframe_client = [\n  _impl,\n  _multimap,\n  // audio,\n  // character,\n  // chat_message,\n  // displayed_message,\n  event,\n  // exported,\n  // frontend_version,\n  // generate,\n  // lorebook,\n  // lorebook_entry,\n  // slash,\n  // tavern_regex,\n  util,\n  // variables,\n].join('\\n');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(799);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","module","exports","y","x","__webpack_require__","d","__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__","DEFAULT_SCRIPT_IDS","AUTO_FIX_OPTIONS","AUTO_OPEN_SCOPE_REGEX","DEFAULT_SCRIPT_CONFIGS","name","scriptId","async","loadScriptContent","response","fetch","ok","Error","statusText","text","error","console","loadScriptInfo","createDefaultScript","config","id","content","info","enabled","createDefaultScripts","scripts","Object","values","script","push","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_js_aacea5c1__","libraries_text","initialize","libraries","JSON","stringify","map","library","code","join","destroy","renderMarkdown","markdown","htmlText","reloadMarkdownProcessor","makeHtml","getIframeName","event","window","source","frameElement","getLogPrefix","data","request","iframe_handlers","registerIframeHandler","handler","loadScripts","prefix","filterScriptFromRegex","scriptName","replace","startsWith","isEnabled","disabled","toName","enabled_global_regexes","filter","enabled_character_regexes","runOnEdit","replaceString","slashEventEmit","named_args","eventSource","emit","initSlashEventEmit","SlashCommandParser","addCommandObject","SlashCommand","fromProps","callback","returns","namedArgumentList","SlashCommandNamedArgument","description","typeList","ARGUMENT_TYPE","STRING","isRequired","acceptsMultiple","unnamedArgumentList","helpString","updateFrontendVersion","method","headers","getRequestHeaders","body","extensionName","toastr","t","timeOut","json","isUpToDate","success","shortCommitHash","extensionFolderPath","charsPath","getUserAvatarPath","user_avatar","getCharAvatarPath","thumbnailPath","getThumbnailUrl","characters","this_chid","avatar","targetAvatarImg","substring","lastIndexOf","getSettingValue","key","keys","split","value","extension_settings","k","saveSettingValue","setValueByPath","saveSettingsDebounced","__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__","GITLAB_INSTANCE_URL","GITLAB_PROJECT_PATH","GITLAB_BRANCH","VERSION_FILE_PATH_GITLAB","CHANGELOG_FILE_PATH_GITLAB","VERSION_FILE_PATH","CURRENT_VERSION","LATEST_VERSION","CHANGELOG_CONTENT","fetchRawFileContentFromGitLab","filePath","idOrPathForUrl","includes","encodeURIComponent","encodedFilePath","url","errorBody","e","status","trim","parseVersionFromFile","parse","version","SyntaxError","message","String","compareSemVer","versionA","versionB","cleanVersionA","cleanVersionB","partsA","Number","partsB","i","numA","numB","isNaN","warn","getFileContentByPath","runCheckWithPath","comparisonResult","addVersionUpdateElement","$","append","handleUpdateButton","changelogContent","undefined","logs","currentVersion","latestVersion","matches","matchAll","length","latestVersionMatch","find","match","startIndex","index","nextVersionMatch","endIndex","currentVersionMatch","parseChangelogBetweenVersions","getChangelog","callGenericPopup","POPUP_TYPE","CONFIRM","okButton","cancelButton","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommand_js_7714abe5__","predefinedMacros","Map","registerAllMacros","entries","MacrosParser","registerMacro","log","unregisterAllMacros","unregisterMacro","demacro","event_data","get_global_variable","variables","global","get_chat_variable","chat_metadata","get_message_variable","chat","swipe_id","at","forEach","messages","replaceAll","_substring","type","path","object","default_value","result","get_property_from_path","initializeMacroOnExtension","on","event_types","CHAT_COMPLETION_PROMPT_READY","destroyMacroOnExtension","removeListener","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__","__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__","__WEBPACK_EXTERNAL_MODULE__scripts_RossAscends_mods_js_224b6398__","isAudioEnabled","list_BGMS","list_ambients","bgmEnded","ambientEnded","isExtensionEnabled","templatePath","defaultAudioSettings","audio_enabled","bgm_enabled","ambient_enabled","bgm_mode","bgm_muted","bgm_volume","bgm_selected","bgm_current_time","ambient_mode","ambient_muted","ambient_volume","ambient_selected","ambient_current_time","audio_cooldown","updateAudio","isUserInput","audioEnded","audioSelector","attr","audio_url","playlist","getAudioUrl","mode","currentFile","filteredPlaylist","file","Math","floor","random","getNextFileByMode","audio","cleanAudioSrc","src","cleanAudioUrl","decodeURIComponent","load","Promise","resolve","canPlayHandler","removeEventListener","readyState","HTMLMediaElement","HAVE_ENOUGH_DATA","addEventListener","playAudio","audioUrlWithCacheBusting","originalUrl","cacheBuster","Date","getTime","separator","getAudioUrlWithCacheBusting","selectElement","val","updateAudioSelect","empty","audioList","selectedSetting","Array","isArray","fileLabel","Option","toUpperCase","typeKey","toggleAudioControls","shouldEnable","prop","onAudioEnabledClick","pause","initAudioEventListeners","onVolumeSliderWheelEvent","slider","this","preventDefault","stopPropagation","delta","deltaY","newVal","trigger","handleLongPress","volumeControlId","iconId","$volumeControl","$icon","pressTimer","isMobile","setTimeout","css","clearTimeout","document","is","target","has","refreshAudioResources","openUrlManagerPopup","urlManager","renderExtensionTemplateAsync","prepend","savedAudioUrl","urlTemplate","urlValue","addClass","updatedUrls","newUrlOrder","renderUrl","container","urlHtml","clone","fileName","parts","currentUrl","inputUrl","INPUT","newFileName","pop","newId","remove","newUrls","input","debug","urlArray","from","Set","openUrlImportPopup","removeClass","sortable","delay","getSortableDelay","handle","stop","each","newUrl","newUrlList","currentBgmUrl","currentAmbientUrl","saveMetadataDebounced","handleAudioToggle","enable","userInput","bgmUrl","ambientUrl","bgmAudioElement","play","ambientAudioElement","audioElement","playPauseIcon","selectedAudio","onAudioModeClick","modes","icon","nextModeIndex","findIndex","m","onAudioSelectChange","onAudioCooldownInput","onAudioVolumeChange","onAudioMuteClick","toggleClass","togglePlayPause","paused","initAudioStyles","hide","$audioElement","$progressSlider","duration","progressPercent","currentTime","cooldownBGM","remainingTime","isFadingOut","fadeStep","volume","fadeOutInterval","setInterval","max","clearInterval","targetVolume","fadeInInterval","min","initializeProgressBar","initAudioComponents","checked","audioTypes","events","selector","bindTypeEvents","volumeSlider","get","passive","urlManagerMap","bgm","ambient","bgmAudio","ambientAudio","togglePlayPauseIcon","iconSelector","CHAT_CHANGED","$bgmPlayer","$ambientPlayer","handleChatChanged","clear","loadScriptLibrary","runScriptsByType","GLOBAL","CHARACTER","handleCharacterDeleted","character","handlePartialRender","mesId","mesIdNumber","parseInt","handleMessageDeleted","handleVariableUpdated","initExtensionMainPanel","handleExtensionToggle","currentTarget","userAction","next","set","CHARACTER_DELETED","eventType","MESSAGE_DELETED","reloadCurrentChat","delete","__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__","__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__","isCharacterTavernRegexEnabled","character_allowed_regex","getGlobalRegexes","regex","getCharacterRegexes","extensions","regex_scripts","toTavernRegex","regex_script_data","scope","script_name","run_on_edit","find_regex","findRegex","replace_string","user_input","placement","regex_placement","USER_INPUT","ai_output","AI_OUTPUT","slash_command","SLASH_COMMAND","world_info","WORLD_INFO","destination","display","markdownOnly","prompt","promptOnly","min_depth","minDepth","max_depth","maxDepth","fromTavernRegex","tavern_regex","trimStrings","substituteRegex","registerIframeTavernRegexHandler","option","enable_state","regexes","emptied_regexes","global_regexes","character_regexes","writeExtensionField","saveSettings","saveChatConditional","script_url","URL","createObjectURL","Blob","createObjectURLFromScript","revokeObjectURL","Character","charData","constructor","characterData","allowAvatar","currentChar","filteredCharacters","characterByAvatar","char","matchingCharacters","findCharacterIndex","matchTypes","a","b","exactAvatarMatch","matchType","toLowerCase","getChatsFromFiles","isGroupChat","chat_dict","chat_promise","sort","localeCompare","reverse","file_name","res","_rej","ch_name","avatar_url","endpoint","requestBody","chatResponse","cache","currentChat","shift","all","getCardData","getAvatarId","getRegexScripts","getCharacterBook","character_book","getWorldName","world","abortController","AbortController","fromOverrides","overrides","world_info_before","persona_description","char_description","char_personality","scenario","world_info_after","dialogue_examples","with_depth_entries","chat_history","author_note","prompts","fromInjectionPrompt","inject","role","position","before_prompt","in_chat","after_prompt","none","depth","scan","should_scan","dryRun","character_names_behavior","roleTypes","system","extension_prompt_roles","SYSTEM","user","USER","assistant","ASSISTANT","default_order","StreamingProcessor","generator","stoppingStrings","isStopped","isFinished","messageBuffer","nullStreamingGeneration","onProgressStreaming","isFinal","newText","slice","processedText","cleanUpMessage","charsToBalance","isOdd","countOccurrences","trimEnd","fullText","onErrorStreaming","abort","unblockGeneration","generate","sw","Stopwatch","power_user","streaming_fps","timestamps","now","tick","seconds","toFixed","err","iframeGenerate","use_preset","image","max_chat_history","order","stream","processedUserInput","oai_settings","send_if_empty","getRegexedString","isPrompt","processUserInput","substituteParams","baseData","getOverrideContent","identifier","isPromptFiltered","depthPromptText","baseChatReplace","depth_prompt","name1","name2","depthPromptDepth","depthPromptRole","getExtensionPromptRoleByName","setExtensionPrompt","extension_prompt_types","IN_CHAT","note","allowWIScan","handleCharDepthPrompt","authorNoteOverride","NOTE_MODULE_NAME","metadata_keys","setAuthorNotePrompt","INJECT_TAG","IN_PROMPT","persona_description_position","persona_description_positions","NONE","BOTTOM_AN","TOP_AN","shouldWIAddPrompt","originalAN","getContext","extensionPrompts","ANWithDesc","AT_DEPTH","persona_description_depth","persona_description_role","setPersonaDescriptionExtensionPrompt","rawDescription","personality","rawPersonality","persona","rawPersona","rawScenario","mesExamples","rawMesExamples","jailbreak","getCharacterCardFields","mesExamplesArray","parseMesExamples","oaiMessageExamples","setOpenAIMessageExamples","promptBias","getBiasStrings","promptConfig","injects","positionMap","BEFORE_PROMPT","validatedInject","Boolean","handleInjectedPrompts","oaiMessages","setOpenAIMessages","coreChat","is_system","chatItem","mes","regexType","is_user","regexedMessage","processChatHistory","userContent","worldInfo","chatForWI","world_info_include_names","this_max_context","getMaxContextSize","worldInfoString","worldInfoBefore","worldInfoAfter","worldInfoExamples","worldInfoDepth","getWorldInfoPrompt","clearInjectionPrompts","entry","joinedEntries","processWorldInfoDepth","finalWorldInfoBefore","finalWorldInfoAfter","processWorldInfo","removeTemporaryUserMessage","example","cleanedExample","wi_anchor_position","before","unshift","processMessageExamples","characterInfo","chatContext","prepareAndOverrideData","generate_data","originalScenario","scenarioOverride","userMessageTemp","convertFileToBase64","messageData","charDescription","charPersonality","Scenario","bias","quietPrompt","quietImage","cyclePrompt","systemPromptOverride","jailbreakPromptOverride","personaDescription","messageExamples","prepareOpenAIMessages","handlePresetPath","chatCompletion","ChatCompletion","setTokenBudget","openai_max_context","openai_max_tokens","reserveBudget","orderArray","reduce","acc","item","systemPrompts","promptCollection","PromptCollection","examplesCollection","MessageCollection","customPrompts","add","Prompt","system_prompt","characterPrompts","dialogue","dialogueIndex","indexOf","chatMessages","promptIndex","chatMessage","Message","createAsync","setName","convertSystemPromptsToCollection","addToChatCompletionInOrder","collection","fromPromptAsync","dialogue_examplesIndex","userInputMessage","chatHistoryIndex","userInputIndex","hasUserInput","hasChatHistory","isChatHistoryFiltered","userMessage","addImage","insertIndex","chatCollection","newChat","new_chat_prompt","newChatMessage","lastChatPrompt","emptyMessage","canAfford","userPrompt","customInjects","processedMessages","totalInsertedMessages","injectionPrompts","authorsNote","getPromptRole","injection_depth","injected","MAX_INJECTION_DEPTH","depthPrompts","roles","roleMessages","rolePrompts","injectIdx","splice","populationInjectionPrompts","imageInlining","isImageInliningSupported","chatPool","chatPrompt","promptManager","setupChatCompletionPromptManager","serviceSettings","names_behavior","messageName","isValidName","sanitizeName","freeBudget","processChatHistoryAndInject","squash_system_messages","squashSystemMessages","getChat","handleCustomPath","useStream","deactivateSendButtons","originalStreamSetting","stream_openai","streamingProcessor","sendOpenAIRequest","signal","preventDuplicates","choices","tool_plan","extractMessageFromData","handleResponse","generateResponse","examplesStr","block","activateSendButtons","showSwipeButtons","setGenerationProgress","flushEphemeralStoppingStrings","prefixes","some","File","getBase64Async","promptId","override","stopGeneration","toLorebookEntry","uid","display_index","displayIndex","comment","disable","constant","vectorized","probability","logic","selectiveLogic","keysecondary","scan_depth","scanDepth","case_sensitive","caseSensitive","match_whole_words","matchWholeWords","use_group_scoring","useGroupScoring","automation_id","automationId","exclude_recursion","excludeRecursion","prevent_recursion","preventRecursion","delay_until_recursion","delayUntilRecursion","group","group_prioritized","groupOverride","group_weight","groupWeight","sticky","cooldown","fromPartialLorebookEntry","transformers","before_character_definition","after_character_definition","before_example_messages","after_example_messages","before_author_note","after_author_note","at_depth_as_system","at_depth_as_user","at_depth_as_assistant","and_any","and_all","not_any","not_all","_","field","assignFieldValuesToWiEntry","wi_entry","field_values","original_wi_mapped_key","originalWIDataKeyMap","setWIOriginalDataValue","reloadEditorDebounced","debounce","currentIndex","selectedIndex","world_names","handleIframe","stack","postMessage","targetOrigin","range_demacroed","substituteParamsExtended","range","stringToRange","hide_state","start","end","process_message","message_id","chat_message","extra","system_message_types","NARRATOR","swipes","swipes_data","is_hidden","is_system_or_hidden","promises","chat_messages","refresh","swipe_id_previous_index","swipe_id_to_set_index","swipe_id_to_use_index","should_update_swipe","swipe_info","add_swipes_if_required","message_demacroed","update_chat_message","mes_html","messageFormatting","update_partial_html","last_message_id","getLastMessageId","last_user_message_id","last_char_message_id","iframe_name","converted_config","should_stream","fromGenerateConfig","ordered_prompts","fromGenerateRawConfig","lorebook","loadWorldInfo","every","expected_value","entry_value","saveWorldInfo","createWorldInfoEntry","partial_lorebook_entry","lorebook_uid","deleted","deleteWIOriginalDataValue","lorebook_settings","selected_global_lorebooks","world_info_settings","getWorldInfoSettings","globalSelect","world_info_depth","context_percentage","world_info_budget","budget_cap","world_info_budget_cap","min_activations","world_info_min_activations","world_info_min_activations_depth_max","max_recursion_steps","world_info_max_recursion_steps","insertion_strategy","world_info_character_strategy","include_names","recursive","world_info_recursive","world_info_case_sensitive","world_info_match_whole_words","world_info_use_group_scoring","overflow_alert","world_info_overflow_alert","settings","inexisting_lorebooks","for_eachs","selected_world_info","converted_value","evenly","character_first","global_first","assignPartialLorebookSettings","selected_group","filename","getCharaFilename","books","primary","additional","extraCharLore","charLore","extraBooks","lorebooks","previous_primary","html","form_data","FormData","raw_file","converted_file","ensureImageFormatSupported","chid","alternate_greetings","getOneCharacter","replaceWith","editCurrentCharacter","setWorldInfoButtonClass","char_lore","existing_char_index","assign","saveCharacterDebounced","deleteWorldInfo","createNewWorldInfo","interactive","command","executeSlashCommandsWithOptions","isError","errorMessage","pipe","text_demacroed","createCharacterHandler","defaultValue","logMessage","displayName","withCharacter","logText","then","resolvedResult","catch","_event","_result","getPastCharacterChats","registerIframeCharacterHandler","state","getCharData","avatarId","getChatHistoryBrief","chats","getChatHistoryDetail","getChatMessages","toString","rangeNumber","setChatMessage","required_option","formatAsDisplayedMessage","DEFAULT","COMPLETION","CONTENT","generateRaw","getLorebookSettings","setLorebookSettings","getCharLorebooks","setCurrentCharLorebooks","getLorebooks","deleteLorebook","createLorebook","getLorebookEntries","setLorebookEntries","createLorebookEntry","deleteLorebookEntry","activateLorebookEntries","WORLDINFO_FORCE_ACTIVATE","triggerSlash","triggerSlashWithResult","isCharacterTavernRegexesEnabled","getTavernRegexes","replaceTavernRegexes","substitudeMacros","getVariables","metadata","getVariablesByType","replaceVariables","initTavernHelperObject","globalThis","TavernHelper","audioEnable","audioImport","audioMode","audioPlay","audioSelect","isRenderEnabled","isRenderingOptimizeEnabled","renderDepth","tampermonkeyMessageListener","iframeResizeObservers","originalHighlightElement","hljs","highlightElement","RENDER_MODES","FULL","PARTIAL","partialRenderEvents","CHARACTER_MESSAGE_RENDERED","USER_MESSAGE_RENDERED","MESSAGE_UPDATED","MESSAGE_SWIPED","defaultIframeSettings","render_enabled","tampermonkey_compatibility","render_depth","render_optimize","clearAndRenderAllIframes","clearAllIframes","renderAllIframes","renderMessagesInIframes","renderPartialIframes","processDepth","totalMessages","viewport_adjust_script","tampermonkey_script","processVhUnits","htmlContent","test","viewportHeight","innerHeight","expression","specificMesId","context","depthLimit","depthLimitedMessageIds","messagesToRenderIds","messagesToCancelIds","messageId","$iframes","toArray","iframe","destroyIframe","updateMessageBlock","addToggleButtonsToMessage","renderedMessages","$messageElement","$codeElements","iframeCounter","extractedText","extractTextFromCode","addCodeToggleButtons","disableLoading","hasMinVh","$wrapper","width","$iframe","srcdoc","loading","margin","border","loadingTimeout","$loadingOverlay","$loadingText","srcdocContent","observeIframeContent","parent","contentWindow","newHeight","emitAndWait","off","docBody","iframeId","resizeObserver","adjustIframeHeight","ResizeObserver","observe","cleanup","disconnect","iframeDoc","contents","$clone","removeData","prototype","hasOwnProperty","call","arr","fill","gc","handleTampermonkeyMessages","buttonName","$sendTextarea","jQuery","$sendButton","doc","bodyHeight","offsetHeight","htmlHeight","documentElement","currentHeight","parseFloat","abs","codeElement","textContent","nodeType","Node","TEXT_NODE","ELEMENT_NODE","renderMessageAfterDelete","maxRemainId","hasCodeBlock","onTampermonkeyCompatibilityChange","currentPlayingIframeId","newIframeId","createGlobalAudioManager","$mesText","$pre","$toggleButton","show","addCodeToggleButtonsToAllMessages","$chat","addRenderingOptimizeSettings","styleId","style","getElementById","createElement","setAttribute","head","appendChild","innerHTML","injectCodeBlockHideStyles","removeRenderingOptimizeSettings","removeCodeBlockHideStyles","handleRenderingOptimizationToggle","handleRenderEnableToggle","not","initIframePanel","warning","onDepthInput","buttonHtml","addRenderQuickButton","tampermonkeyEnabled","styleSheet","injectLoadingStyles","__WEBPACK_EXTERNAL_MODULE__scripts_tags_js_fe93ed66__","findChar","insensitive","filteredByTags","preferCurrentChar","quiet","equalsIgnoreCaseAndAccents","charTags","getTagsList","tagName","currentChars","groups","members","member","preferredCharSearch","Multimap","size_","operator","iterable","put","size","create","putAll","arg1","arg2","pushed","TypeError","hasEntry","deleteEntry","current","self","gen","thisArg","Symbol","iterator","asMap","ret","toStringTag","partition","array","predicate","pass","fail","extract","latest_set_variables_message_id","registerIframeVariableHandler","latest_message_id","tempVariables","currentVariables","newValue","clearTempVariables","shouldUpdateVariables","eventMesId","newVariables","updateVariables","checkVariablesEvents","__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__","__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__","__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__","script_map","load_promises","load_promise","third_party","onload","makeScriptIframe","allSettled","load_events","initializeCharacterLevelOnExtension","makeFirst","destroyCharacterLevelOnExtension","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__","args","iconMap","repeat","single","existingUrls","mergedUrls","selectedUrl","initAudioSlashCommands","enumList","SlashCommandEnumValue","enumTypes","enum","enumIcons","SlashCommandArgument","BOOLEAN","commonEnumProviders","boolean","loop","shuffle","redo","__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__","defaultSettings","enabled_extension","render","handleSettingPageChange","handleVersionUpdate","windowHtml","defaultScriptSettings","global_script_enabled","scope_script_enabled","scriptsRepository","characters_with_scripts","baseTemplate","moveTo","faIcon","defaultScriptTemplate","isGlobalScriptEnabled","isScopedScriptEnabled","Script","buttons","uuidv4","hasName","getScript","s","ScriptType","ScriptRepository","static","globalScripts","characterScripts","activeScripts","getInstance","instance","TavernHelper_scripts","getScriptById","addScript","scriptRepo","saveScript","renderScript","$emptyTip","globalScriptArray","scopedScriptArray","scriptData","scriptHtml","cloneTemplate","makeDraggable","enabledScripts","runScript","cancelRunScriptsByType","disabledScripts","cancelRunScript","typeName","blob","button","visible","scriptButtonUi","addButton","iframeElement","removeButton","openScriptEditor","$editorHtml","$buttonContent","items","closest","wide","large","scriptContent","scriptInfo","buttonArray","_index","element","oldButtons","$scriptBar","newScript","deleteScript","existingScriptIndex","saveGlobalScripts","saveCharacterScripts","list","newOrder","updatedScripts","moveScriptToOtherType","sourceArray","sourceIndex","targetType","targetArray","ScriptButtonUi","init","prependTo","buttonId","toggleId","isChecked","toggle","DISPLAY","fileData","download","cloneDefaultScriptTemplate","template","TEXT","convertedScript","existingScript","loadDefaultScriptsRepository","defaultScriptList","defaultScripts","handleScriptToggle","onScriptImportFileChange","fileText","getFileText","purgeEmbeddedScripts","charactersWithScripts","checkEmbeddedScripts","clearAllScriptsIframe","initScriptRepository","inputElement","HTMLInputElement","files","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandParser_js_585e5f4d__","__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__","__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__","__WEBPACK_EXTERNAL_MODULE__scripts_group_chats_js_79178f54__","__WEBPACK_EXTERNAL_MODULE__scripts_i18n_js_b4bbac2e__","iframe_client","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","queue","fn","r","hasAwait","currentDeps","outerResolve","reject","depQueues","promise","rej","deps","dep","obj","wrapDeps","getResult","fnQueue","q","definition","o","defineProperty","enumerable","__webpack_exports__"],"sourceRoot":""}