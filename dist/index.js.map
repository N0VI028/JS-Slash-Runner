{"version":3,"file":"index.js","mappings":"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","sources":["webpack://JS-Slash-Runner/webpack/runtime/async module","webpack://JS-Slash-Runner/./src/iframe_client/index.ts","webpack://JS-Slash-Runner/./src/component/script_repository/default_scripts/index.ts","webpack://JS-Slash-Runner/./src/function/lorebook_entry.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands.js\"","webpack://JS-Slash-Runner/./src/component/character_level/library.ts","webpack://JS-Slash-Runner/./src/util/render_markdown.ts","webpack://JS-Slash-Runner/./src/iframe_server/_impl.ts","webpack://JS-Slash-Runner/./src/function/util.ts","webpack://JS-Slash-Runner/./src/util/load_script.ts","webpack://JS-Slash-Runner/./src/slash_command/event.ts","webpack://JS-Slash-Runner/./src/function/frontend_version.ts","webpack://JS-Slash-Runner/./src/util/extension_variables.ts","webpack://JS-Slash-Runner/./src/third_party.html","webpack://JS-Slash-Runner/external module \"../../../../../scripts/popup.js\"","webpack://JS-Slash-Runner/./src/util/check_update.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommand.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/tags.js\"","webpack://JS-Slash-Runner/./src/function/lorebook.ts","webpack://JS-Slash-Runner/./src/compatibility.ts","webpack://JS-Slash-Runner/./src/component/macro.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandArgument.js\"","webpack://JS-Slash-Runner/external module \"../../../../../script.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/RossAscends-mods.js\"","webpack://JS-Slash-Runner/./src/component/audio/index.ts","webpack://JS-Slash-Runner/./src/iframe_server/index.ts","webpack://JS-Slash-Runner/./src/function/variables.ts","webpack://JS-Slash-Runner/./src/component/main.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/macros.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/extensions.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/authors-note.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/openai.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/power-user.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/PromptManager.js\"","webpack://JS-Slash-Runner/./src/function/generate.ts","webpack://JS-Slash-Runner/./src/script_url.ts","webpack://JS-Slash-Runner/./src/component/message_iframe.ts","webpack://JS-Slash-Runner/./src/util/multimap.ts","webpack://JS-Slash-Runner/./src/util/helper.ts","webpack://JS-Slash-Runner/./src/iframe_server/variables.ts","webpack://JS-Slash-Runner/./src/component/reference.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/extensions/regex/engine.js\"","webpack://JS-Slash-Runner/./src/function/displayed_message.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/world-info.js\"","webpack://JS-Slash-Runner/./src/component/character_level/script_iframe.ts","webpack://JS-Slash-Runner/./src/component/character_level/index.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandCommonEnumsProvider.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandEnumValue.js\"","webpack://JS-Slash-Runner/./src/slash_command/audio.ts","webpack://JS-Slash-Runner/./src/function/chat_message.ts","webpack://JS-Slash-Runner/./src/index.ts","webpack://JS-Slash-Runner/./src/component/script_repository/index.ts","webpack://JS-Slash-Runner/./src/function/slash.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/slash-commands/SlashCommandParser.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/utils.js\"","webpack://JS-Slash-Runner/external module \"../../../../../scripts/group-chats.js\"","webpack://JS-Slash-Runner/./src/function/index.ts","webpack://JS-Slash-Runner/./src/function/character.ts","webpack://JS-Slash-Runner/./src/function/tavern_regex.ts","webpack://JS-Slash-Runner/external module \"../../../../../scripts/i18n.js\"","webpack://JS-Slash-Runner/webpack/bootstrap","webpack://JS-Slash-Runner/webpack/runtime/define property getters","webpack://JS-Slash-Runner/webpack/runtime/hasOwnProperty shorthand","webpack://JS-Slash-Runner/webpack/startup"],"sourcesContent":["var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","// TODO: 导入 index 时使用 raw, 而不是分别使用 raw\nimport _impl from \"@/iframe_client/_impl?raw\"\nimport _multimap from \"@/iframe_client/_multimap?raw\"\nimport event from \"@/iframe_client/event?raw\"\nimport util from \"@/iframe_client/util?raw\"\nimport variables from '@/iframe_client/variables?raw';\n\n\nexport const iframe_client = [\n  _impl,\n  _multimap,\n  event,\n  util,\n  variables,\n].join('\\n');\n\nexport const window_functions = `\n  SillyTavern = window.parent.SillyTavern.getContext();\n  TavernHelper = window.parent.TavernHelper;\n  for (const key in TavernHelper) {\n    window[key] = TavernHelper[key];\n  }\n`;\n","/**\n * 默认脚本配置类型\n */\ntype ScriptConfig = {\n  name: string;\n};\n\n/**\n * 默认脚本配置\n * 包含每个默认脚本的基本信息\n */\nexport const DEFAULT_SCRIPT_CONFIGS: Record<string, ScriptConfig> = {\n  auto_fix_options: {\n    name: '自动关闭前端卡不兼容选项',\n  },\n  auto_open_scope_regex: {\n    name: '自动开启角色卡局部正则',\n  },\n  auto_toggle_by_preset: {\n    name: '随预设或API自动切换正则、世界书、提示词条目',\n  },\n  auto_import_qr: {\n    name: '自动导入角色卡快速回复',\n  },\n  resource_preload: {\n    name: '资源预加载',\n  },\n  auto_install_plugins: {\n    name: '自动安装角色卡插件',\n  },\n};\n\n/**\n * 加载脚本内容\n * @param scriptId 脚本ID\n * @returns 脚本内容\n */\nexport async function loadScriptContent(scriptId: string): Promise<string> {\n  try {\n    const response = await fetch(\n      `/scripts/extensions/third-party/JS-Slash-Runner/src/component/script_repository/default_scripts/${scriptId}/${scriptId}.js`,\n    );\n    if (!response.ok) {\n      throw new Error(`[Script] 加载默认脚本内容失败: ${response.statusText}`);\n    }\n    return await response.text();\n  } catch (error) {\n    console.error(`[Script] 加载默认脚本内容失败: ${scriptId}:`, error);\n    return '';\n  }\n}\n\n/**\n * 加载脚本信息\n * @param scriptId 脚本ID\n * @returns 脚本信息HTML\n */\nexport async function loadScriptInfo(scriptId: string): Promise<string> {\n  try {\n    const response = await fetch(\n      `/scripts/extensions/third-party/JS-Slash-Runner/src/component/script_repository/default_scripts/${scriptId}/${scriptId}.md`,\n    );\n    if (!response.ok) {\n      throw new Error(`[Script] 加载默认脚本信息失败: ${response.statusText}`);\n    }\n    return await response.text();\n  } catch (error) {\n    console.error(`[Script] 加载默认脚本信息失败: ${scriptId}:`, error);\n    return '';\n  }\n}\n\n/**\n * 创建单个默认脚本\n * @param scriptId 脚本ID\n * @returns 脚本对象\n */\nexport async function createDefaultScript(scriptId: string): Promise<any> {\n  const config = DEFAULT_SCRIPT_CONFIGS[scriptId];\n  if (!config) {\n    console.error(`[Script] 未找到脚本配置: ${scriptId}`);\n    return null;\n  }\n\n  try {\n    return {\n      id: scriptId,\n      name: config.name,\n      content: await loadScriptContent(scriptId),\n      info: await loadScriptInfo(scriptId),\n      enabled: false,\n    };\n  } catch (error) {\n    console.error(`[Script] 创建默认脚本失败: ${scriptId}:`, error);\n    return null;\n  }\n}\n\n/**\n * 创建指定类型的默认脚本\n * @param type 脚本类型\n * @returns 脚本对象\n */\nexport async function createScript(type: keyof typeof DEFAULT_SCRIPT_CONFIGS): Promise<any> {\n  return (await createDefaultScript(type)) || {};\n}\n\n/**\n * 创建所有默认脚本\n * @returns 默认脚本数组\n */\nexport async function createDefaultScripts(): Promise<any[]> {\n  const scripts: any[] = [];\n\n  for (const scriptId of Object.keys(DEFAULT_SCRIPT_CONFIGS)) {\n    const script = await createDefaultScript(scriptId);\n    if (script) {\n      scripts.push(script);\n    }\n  }\n\n  return scripts;\n}\n","import { event_types, eventSource } from '@sillytavern/script';\nimport { debounce } from '@sillytavern/scripts/utils';\nimport {\n  createWorldInfoEntry,\n  deleteWIOriginalDataValue,\n  loadWorldInfo,\n  originalWIDataKeyMap,\n  saveWorldInfo,\n  setWIOriginalDataValue,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\ninterface LorebookEntry {\n  uid: number; // uid 是相对于世界书内部的, 不要跨世界书使用\n  display_index: number; // 酒馆中将排序设置为 \"自定义\" 时的显示顺序\n\n  comment: string;\n  enabled: boolean;\n  type: 'constant' | 'selective' | 'vectorized';\n  position:\n    | 'before_character_definition' // 角色定义之前\n    | 'after_character_definition' // 角色定义之后\n    | 'before_example_messages' // 示例消息之前\n    | 'after_example_messages' // 示例消息之后\n    | 'before_author_note' // 作者注释之前\n    | 'after_author_note' // 作者注释之后\n    | 'at_depth_as_system' // @D⚙\n    | 'at_depth_as_assistant' // @D👤\n    | 'at_depth_as_user'; // @D🤖\n  depth: number | null; // 仅对于 `position === 'at_depth_as_???'` 有意义; 其他情况为 null\n  order: number;\n  probability: number;\n\n  key: string[];\n  logic: 'and_any' | 'and_all' | 'not_all' | 'not_any';\n  filter: string[];\n\n  scan_depth: 'same_as_global' | number;\n  case_sensitive: 'same_as_global' | boolean;\n  match_whole_words: 'same_as_global' | boolean;\n  use_group_scoring: 'same_as_global' | boolean;\n  automation_id: string | null;\n\n  exclude_recursion: boolean;\n  prevent_recursion: boolean;\n  delay_until_recursion: boolean | number; // 启用则是 true, 如果设置了具体的 Recursion Level 则是数字 (具体参考酒馆中勾选这个选项后的变化)\n\n  content: string;\n\n  group: string;\n  group_prioritized: boolean;\n  group_weight: number;\n  sticky: number | null;\n  cooldown: number | null;\n  delay: number | null;\n}\n\ninterface GetLorebookEntriesOption {\n  filter?: 'none' | Partial<LorebookEntry>; // 按照指定字段值筛选条目, 如 `{position: 'at_depth_as_system'}` 表示仅获取处于 @D⚙ 的条目; 默认为不进行筛选. 由于实现限制, 只能做到这样的简单筛选; 如果需要更复杂的筛选, 请获取所有条目然后自己筛选.\n}\n\nfunction toLorebookEntry(entry: any): LorebookEntry {\n  return {\n    uid: entry.uid,\n    display_index: entry.displayIndex,\n    comment: entry.comment,\n    enabled: !entry.disable,\n    type: entry.constant ? 'constant' : entry.vectorized ? 'vectorized' : 'selective',\n    position:\n      // @ts-ignore\n      {\n        0: 'before_character_definition',\n        1: 'after_character_definition',\n        5: 'before_example_messages',\n        6: 'after_example_messages',\n        2: 'before_author_note',\n        3: 'after_author_note',\n      }[entry.position] ??\n      (entry.role === 0 ? 'at_depth_as_system' : entry.role === 1 ? 'at_depth_as_user' : 'at_depth_as_assistant'),\n    depth: entry.position === 4 ? entry.depth : null,\n    order: entry.order,\n    probability: entry.probability,\n\n    key: entry.key,\n    logic: {\n      0: 'and_any',\n      1: 'and_all',\n      2: 'not_any',\n      3: 'not_all',\n    }[entry.selectiveLogic as number] as 'and_any' | 'and_all' | 'not_any' | 'not_all',\n    filter: entry.keysecondary,\n\n    scan_depth: entry.scanDepth ?? 'same_as_global',\n    case_sensitive: entry.caseSensitive ?? 'same_as_global',\n    match_whole_words: entry.matchWholeWords ?? 'same_as_global',\n    use_group_scoring: entry.useGroupScoring ?? 'same_as_global',\n    automation_id: entry.automationId || null,\n\n    exclude_recursion: entry.excludeRecursion,\n    prevent_recursion: entry.preventRecursion,\n    delay_until_recursion: entry.delayUntilRecursion,\n\n    content: entry.content,\n\n    group: entry.group,\n    group_prioritized: entry.groupOverride,\n    group_weight: entry.groupWeight,\n    sticky: entry.sticky || null,\n    cooldown: entry.cooldown || null,\n    delay: entry.delay || null,\n  };\n}\n\nfunction fromPartialLorebookEntry(entry: Partial<LorebookEntry>): any {\n  const transformers = {\n    uid: (value: LorebookEntry['uid']) => ({ uid: value }),\n    display_index: (value: LorebookEntry['display_index']) => ({ displayIndex: value }),\n\n    comment: (value: LorebookEntry['comment']) => ({ comment: value }),\n    enabled: (value: LorebookEntry['enabled']) => ({ disable: !value }),\n    type: (value: LorebookEntry['type']) => ({\n      constant: value === 'constant',\n      vectorized: value === 'vectorized',\n    }),\n    position: (value: LorebookEntry['position']) => ({\n      position: {\n        before_character_definition: 0,\n        after_character_definition: 1,\n        before_example_messages: 5,\n        after_example_messages: 6,\n        before_author_note: 2,\n        after_author_note: 3,\n        at_depth_as_system: 4,\n        at_depth_as_user: 4,\n        at_depth_as_assistant: 4,\n      }[value],\n      role:\n        // @ts-ignore\n        {\n          at_depth_as_system: 0,\n          at_depth_as_user: 1,\n          at_depth_as_assistant: 2,\n        }[value] ?? null,\n    }),\n    depth: (value: LorebookEntry['depth']) => ({ depth: value === null ? 4 : value }),\n    order: (value: LorebookEntry['order']) => ({ order: value }),\n    probability: (value: LorebookEntry['probability']) => ({ probability: value }),\n\n    key: (value: LorebookEntry['key']) => ({ key: value }),\n    logic: (value: LorebookEntry['logic']) => ({\n      selectiveLogic: {\n        and_any: 0,\n        and_all: 1,\n        not_any: 2,\n        not_all: 3,\n      }[value],\n    }),\n    filter: (value: LorebookEntry['filter']) => ({ keysecondary: value }),\n\n    scan_depth: (value: LorebookEntry['scan_depth']) => ({ scanDepth: value === 'same_as_global' ? null : value }),\n    case_sensitive: (value: LorebookEntry['case_sensitive']) => ({\n      caseSensitive: value === 'same_as_global' ? null : value,\n    }),\n    match_whole_words: (value: LorebookEntry['match_whole_words']) => ({\n      matchWholeWords: value === 'same_as_global' ? null : value,\n    }),\n    use_group_scoring: (value: LorebookEntry['use_group_scoring']) => ({\n      useGroupScoring: value === 'same_as_global' ? null : value,\n    }),\n    automation_id: (value: LorebookEntry['automation_id']) => ({ automationId: value === null ? '' : value }),\n\n    exclude_recursion: (value: LorebookEntry['exclude_recursion']) => ({ excludeRecursion: value }),\n    prevent_recursion: (value: LorebookEntry['prevent_recursion']) => ({ preventRecursion: value }),\n    delay_until_recursion: (value: LorebookEntry['delay_until_recursion']) => ({ delayUntilRecursion: value }),\n\n    content: (value: LorebookEntry['content']) => ({ content: value }),\n\n    group: (value: LorebookEntry['group']) => ({ group: value }),\n    group_prioritized: (value: LorebookEntry['group_prioritized']) => ({ groupOverride: value }),\n    group_weight: (value: LorebookEntry['group_weight']) => ({ groupWeight: value }),\n    sticky: (value: LorebookEntry['sticky']) => ({ sticky: value === null ? 0 : value }),\n    cooldown: (value: LorebookEntry['cooldown']) => ({ cooldown: value === null ? 0 : value }),\n    delay: (value: LorebookEntry['delay']) => ({ delay: value === null ? 0 : value }),\n  };\n\n  return Object.entries(entry)\n    .filter(([_, value]) => value !== undefined)\n    .reduce(\n      (result, [field, value]) => ({\n        ...result,\n        // @ts-ignore\n        ...transformers[field]?.(value),\n      }),\n      {},\n    );\n}\n\nfunction assignFieldValuesToWiEntry(data: any, wi_entry: any, field_values: any) {\n  Object.entries(field_values).forEach(([field, value]) => {\n    wi_entry[field] = value;\n    // @ts-ignore\n    const original_wi_mapped_key = originalWIDataKeyMap[field];\n    if (original_wi_mapped_key) {\n      // @ts-ignore\n      setWIOriginalDataValue(data, wi_entry.uid, original_wi_mapped_key, value);\n    }\n  });\n}\n\nfunction reloadEditor(file: string): void {\n  // @ts-ignore\n  const currentIndex = Number($('#world_editor_select').val());\n  const selectedIndex = world_names.indexOf(file);\n  if (selectedIndex !== -1 && currentIndex === selectedIndex) {\n    // @ts-ignore\n    $('#world_editor_select').val(selectedIndex).trigger('change');\n  }\n}\n\nconst reloadEditorDebounced = debounce(reloadEditor);\n\n/**\n * 获取世界书中的条目信息. **请务必阅读示例**.\n *\n * @param lorebook 世界书名称\n * @param option 可选选项\n *   - `filter:'none'|LorebookEntry的一个子集`: 按照指定字段值筛选条目, 要求对应字段值包含制定的内容; 默认为不进行筛选.\n *                                       如 `{content: '神乐光'}` 表示内容中必须有 `'神乐光'`, `{type: 'selective'}` 表示仅获取绿灯条目.\n *                                       由于实现限制, 只能做到这样的简单筛选; 如果需要更复杂的筛选, 请获取所有条目然后自己筛选.\n *\n * @returns 一个数组, 元素是各条目信息.\n */\nexport async function getLorebookEntries(\n  lorebook: string,\n  option: GetLorebookEntriesOption = { filter: 'none' },\n): Promise<LorebookEntry[]> {\n  const { filter = 'none' } = option;\n  if (!world_names.includes(lorebook)) {\n    throw Error(`未能找到世界书 '${lorebook}'`);\n  }\n\n  // @ts-ignore\n  let entries: LorebookEntry[] = Object.values((await loadWorldInfo(lorebook)).entries).map(toLorebookEntry);\n  if (filter !== 'none') {\n    entries = entries.filter(entry =>\n      Object.entries(filter).every(([field, expected_value]) => {\n        // @ts-ignore\n        const entry_value = entry[field];\n        if (Array.isArray(entry_value)) {\n          return (expected_value as string[]).every(value => entry_value.includes(value));\n        }\n        if (typeof entry_value === 'string') {\n          return entry_value.includes(expected_value as string);\n        }\n        return entry_value === expected_value;\n      }),\n    );\n  }\n\n  console.info(`获取世界书 '${lorebook}' 中的条目, 选项: ${JSON.stringify({ filter })}`);\n  return entries;\n}\n\n/**\n * 将条目信息修改回对应的世界书中, 如果某个字段不存在, 则该字段采用原来的值.\n *\n * 这只是修改信息, 不能创建新的条目, 因此要求条目必须已经在世界书中.\n *\n * @param lorebook 条目所在的世界书名称\n * @param entries 一个数组, 元素是各条目信息. 其中必须有 \"uid\", 而其他字段可选.\n */\nexport async function setLorebookEntries(lorebook: string, entries: LorebookEntry[]): Promise<void> {\n  if (!world_names.includes(lorebook)) {\n    throw Error(`未能找到世界书 '${lorebook}'`);\n  }\n  const data = await loadWorldInfo(lorebook);\n\n  const process_entry = async (entry: (typeof entries)[0]): Promise<void> => {\n    // @ts-ignore\n    const wi_entry = data.entries[entry.uid];\n    if (!wi_entry) {\n      throw Error(`未能在世界书 '${lorebook}' 中找到 uid=${entry.uid} 的条目`);\n    }\n    assignFieldValuesToWiEntry(data, wi_entry, fromPartialLorebookEntry(entry));\n  };\n\n  await Promise.all(entries.map(process_entry));\n  await saveWorldInfo(lorebook, data);\n  reloadEditorDebounced(lorebook);\n\n  console.info(`修改世界书 '${lorebook}' 中以下条目的以下字段:\\n${JSON.stringify(entries, undefined, 2)}`);\n}\n\n/**\n * 向世界书中新增一个条目\n *\n * @param lorebook 世界书名称\n * @param field_values 要对新条目设置的字段值, 如果不设置则采用酒馆给的默认值. **不能设置 `uid`**.\n *\n * @returns 新条目的 uid\n */\nexport async function createLorebookEntry(lorebook: string, field_values: Partial<LorebookEntry>): Promise<number> {\n  if (!world_names.includes(lorebook)) {\n    throw Error(`未能找到世界书 '${lorebook}'`);\n  }\n  const data = await loadWorldInfo(lorebook);\n  const wi_entry = createWorldInfoEntry(lorebook, data) as any;\n  const partial_lorebook_entry = fromPartialLorebookEntry(field_values);\n  if (partial_lorebook_entry.uid) {\n    delete partial_lorebook_entry.uid;\n  }\n  assignFieldValuesToWiEntry(data, wi_entry, partial_lorebook_entry);\n\n  await saveWorldInfo(lorebook, data);\n  reloadEditorDebounced(lorebook);\n\n  console.info(\n    `在世界书 '${lorebook}' 中新建 uid='${wi_entry.uid}' 条目, 并设置内容:\\n${JSON.stringify(\n      field_values,\n      undefined,\n      2,\n    )}`,\n  );\n  return wi_entry.uid;\n}\n\n/**\n * 删除世界书中的某个条目\n *\n * @param lorebook 世界书名称\n * @param uid 要删除的条目 uid\n *\n * @returns 是否成功删除, 可能因世界书不存在、对应条目不存在等原因失败\n */\nexport async function deleteLorebookEntry(lorebook: string, lorebook_uid: number): Promise<boolean> {\n  const data = await loadWorldInfo(lorebook);\n  // QUESTION: 好像没办法从 data 检测世界书是否存在?\n  let deleted = false;\n  // @ts-ignore 18046\n  if (data.entries[lorebook_uid]) {\n    // @ts-ignore 18046\n    delete data.entries[lorebook_uid];\n    deleted = true;\n  }\n  if (deleted) {\n    // @ts-ignore 2345\n    deleteWIOriginalDataValue(data, lorebook_uid);\n    await saveWorldInfo(lorebook, data);\n    reloadEditorDebounced(lorebook);\n  }\n\n  console.info(`删除世界书 '${lorebook}' 中的 uid='${lorebook_uid}' 条目${deleted ? '成功' : '失败'}`);\n  return deleted;\n}\n\n/**\n * 激活世界书中的某些条目, 即它们将发送给 ai\n *\n * @param lorebook 世界书名称\n * @param entries 一个数组, 元素是要激活的各条目, 必须包含 `uid`\n */\nexport async function activateLorebookEntries(\n  lorebook: string,\n  entries: { uid: Pick<LorebookEntry, 'uid'> }[],\n): Promise<void> {\n  return eventSource.emit(\n    event_types.WORLDINFO_FORCE_ACTIVATE,\n    entries.map(entry => ({ world: lorebook, uid: entry.uid })),\n  );\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"executeSlashCommandsWithOptions\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_js_aacea5c1__.executeSlashCommandsWithOptions) });","import { loadScripts } from '@/util/load_script';\n\nexport let libraries_text: string = '';\n\nexport function initialize(): void {\n  const libraries = loadScripts('库-');\n  console.info(`[Library] 加载库: ${JSON.stringify(libraries.map(library => library.name))}`);\n\n  libraries_text = libraries.map(script => script.code).join('\\n');\n}\n\nexport function destroy(): void {\n  libraries_text = '';\n}\n","import { reloadMarkdownProcessor } from '@sillytavern/script';\n\nexport function renderMarkdown(markdown: string) {\n  const converter = reloadMarkdownProcessor();\n  let htmlText = converter.makeHtml(markdown);\n  htmlText = `<div style=\"text-align: left; max-height:80dvh; overflow-y: auto;\">${htmlText}</div>`;\n  return htmlText;\n}\n","export interface IframeMessage {\n  request: string;\n  uid: number;\n}\n\nexport function getIframeName<T extends IframeMessage>(event: MessageEvent<T>): string {\n  const window = event.source as Window;\n  return window.frameElement?.id as string;\n}\n\nexport function getLogPrefix<T extends IframeMessage>(event: MessageEvent<T>): string {\n  return `${event.data.request}(${getIframeName(event)}) `;\n}\n\ntype IframeHandlers = {\n  [request: string]: (event: MessageEvent<any>) => Promise<any | void>;\n};\n\nexport const iframe_handlers: IframeHandlers = {};\n\nexport function registerIframeHandler<T extends IframeMessage>(\n  request: string,\n  handler: (event: MessageEvent<T>) => Promise<any | void>,\n) {\n  iframe_handlers[request] = handler;\n}","import { substituteParamsExtended } from '@sillytavern/script';\n\n/**\n * 替换字符串中的酒馆宏\n *\n * @param text 要替换的字符串\n * @returns 替换结果\n *\n * @example\n * const text = substitudeMacros(\"{{char}} speaks in {{lastMessageId}}\");\n * text == \"少女歌剧 speaks in 5\";\n */\nexport function substitudeMacros(text: string): string {\n  const text_demacroed = substituteParamsExtended(text);\n\n  console.info(`替换字符串中的宏, 字符串: '${text}', 结果: '${text_demacroed}'`);\n  return text_demacroed;\n}\n","import { getCharacterRegexes, getGlobalRegexes, isCharacterTavernRegexEnabled } from '@/function/tavern_regex';\n\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\n\nexport interface Script {\n  name: string;\n  code: string;\n}\n\nexport function loadScripts(prefix: string): Script[] {\n  const filterScriptFromRegex = (script: RegexScriptData) =>\n    script.scriptName.replace(/^【.*】/, '').startsWith(prefix);\n  const isEnabled = (script: RegexScriptData) => !script.disabled;\n  const toName = (script: RegexScriptData) => script.scriptName.replace(/^【.*】/, '').replace(prefix, '');\n\n  let scripts: RegexScriptData[] = [];\n\n  const enabled_global_regexes = getGlobalRegexes().filter(filterScriptFromRegex).filter(isEnabled);\n  scripts.push(...enabled_global_regexes);\n\n  const enabled_character_regexes = getCharacterRegexes()\n    .filter(filterScriptFromRegex)\n    .filter(isEnabled)\n    .filter(script => (isCharacterTavernRegexEnabled() ? true : script.runOnEdit));\n  scripts.push(...enabled_character_regexes);\n\n  const to_script = (script: RegexScriptData) => ({ name: toName(script), code: script.replaceString });\n  return scripts.map(to_script);\n}\n\nexport function is_equal_scripts(lhs: Script[], rhs: Script[]): boolean {\n  if (lhs === rhs) {\n    return true;\n  }\n  if (lhs == null || rhs == null) {\n    return false;\n  }\n  if (lhs.length !== rhs.length) {\n    return false;\n  }\n\n  for (let i = 0; i < lhs.length; i++) {\n    if (lhs[i].name !== rhs[i].name && lhs[i].code !== rhs[i].code) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { eventSource } from '@sillytavern/script';\nimport { SlashCommand } from '@sillytavern/scripts/slash-commands/SlashCommand';\nimport { ARGUMENT_TYPE, SlashCommandNamedArgument } from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\nexport async function slashEventEmit(named_args: any): Promise<any> {\n  const event: string = named_args.event;\n  const data: string[] = named_args.data ?? [];\n\n  eventSource.emit(event, ...data);\n\n  console.info(`[Event][/event-emit] 发送 '${event}' 事件, 携带数据: ${JSON.stringify(data)}`);\n\n  return event;\n}\n\nexport function initSlashEventEmit() {\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'event-emit',\n      callback: slashEventEmit,\n      returns: '发送的事件名称',\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'event',\n          description: '事件名称',\n          typeList: [ARGUMENT_TYPE.STRING],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'data',\n          description: '要传输的数据',\n          typeList: [ARGUMENT_TYPE.STRING],\n          isRequired: false,\n          acceptsMultiple: true,\n        }),\n      ],\n      unnamedArgumentList: [],\n      helpString: `\n    <div>\n        发送 \\`event\\` 事件, 同时可以发送一些数据.\n        所有正在监听该消息频道的 listener 函数都会自动运行, 并能用函数参数接收发送来的数据.\n        由于酒馆 STScript 输入方式的局限性, 所有数据将会以字符串 string 类型接收; 如果需要 number 等类型, 请自行转换.\n    </div>\n    <div>\n        <strong>Example:</strong>\n        <ul>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"读档\"</code></pre>\n            </li>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"存档\" data={{getvar::数据}} data=8 data=你好 {{user}}</code></pre>\n            </li>\n            <li>\n                <pre><code class=\"language-stscript\">/event-emit event=\"随便什么名称\" data=\"这是一个 数据\" data={{user}}</code></pre>\n            </li>\n        </ul>\n    </div>\n  `,\n    }),\n  );\n}\n","import { getRequestHeaders } from '@sillytavern/script';\nimport { t } from '@sillytavern/scripts/i18n';\n\nimport { extensionName } from '@/util/extension_variables';\n\n/**\n * 更新酒馆助手\n */\nexport async function updateFrontendVersion() {\n  const response = await fetch('/api/extensions/update', {\n    method: 'POST',\n    headers: getRequestHeaders(),\n    body: JSON.stringify({ extensionName: extensionName }),\n  });\n  if (!response.ok) {\n    const text = await response.text();\n    // @ts-ignore\n    toastr.error(text || response.statusText, t`更新酒馆助手失败`, { timeOut: 5000 });\n    console.error(`更新酒馆助手失败: ${text}`);\n    return false;\n  }\n\n  const data = await response.json();\n  if (data.isUpToDate) {\n    console.info(`酒馆助手已是最新版本, 无需更新`);\n  } else {\n    // @ts-ignore\n    toastr.success(t`成功更新酒馆助手为 ${data.shortCommitHash}`, t`请刷新页面`);\n    console.info(`成功更新酒馆助手为  ${data.shortCommitHash}, 请刷新页面`);\n  }\n  return true;\n}\n","import {\n  characters,\n  getThumbnailUrl,\n  this_chid,\n  user_avatar,\n  saveSettingsDebounced,\n} from '@sillytavern/script';\nimport { extension_settings } from '@sillytavern/scripts/extensions';\nimport { setValueByPath } from '@sillytavern/scripts/utils';\n\nexport const extensionName = 'JS-Slash-Runner';\nexport const extensionSettingName = 'TavernHelper';\n//TODO: 修改名称\nexport const extensionFolderPath = `third-party/${extensionName}`;\n\n// 获取头像原图\nexport const charsPath = '/characters/';\nexport const getUserAvatarPath = () => `./User Avatars/${user_avatar}`;\nexport const getCharAvatarPath = () => {\n  //@ts-ignore\n  const thumbnailPath = getThumbnailUrl('avatar', characters[this_chid].avatar);\n  const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n  return charsPath + targetAvatarImg;\n};\n\n/**\n * 获取扩展设置变量的值\n * @returns 设置变量的值\n */\nexport function getSettingValue(key: string) {\n  const keys = key.split('.');\n  //@ts-ignore\n  let value = extension_settings[extensionSettingName];\n\n  for (const k of keys) {\n    if (value === undefined || value === null) {\n      return undefined;\n    }\n    value = value[k];\n  }\n\n  return value;\n}\n\n/**\n * 保存扩展设置变量的值\n * @param key 设置变量的键\n * @param value 设置变量的值\n */\nexport async function saveSettingValue(key: string, value: any) {\n  //@ts-ignore\n  setValueByPath(extension_settings[extensionSettingName], key, value);\n  await saveSettingsDebounced();\n}\n","// Module\nvar code = `<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css\" integrity=\"sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"/> <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/themes/base/jquery-ui.min.css\" integrity=\"sha512-TFee0335YRJoyiqz8hA8KV3P0tXa5CpRBSoM0Wnkn7JoJx1kaq1yXL/rb8YFpWXkMOjRcv5txv+C6UluttluCQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"/> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js\" integrity=\"sha512-Qlv6VSKh1gDKGoJbnyA5RMXYcvnpIqhO++MhIM2fStMcGT9i2T//tSwYFlcyoRRDcDZ+TYHpH8azBBCyhpSeqw==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\" integrity=\"sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js\" integrity=\"sha512-MSOo1aY+3pXCOCdGAYoBZ6YGI0aragoQsg1mKKBHXCYPIWxamwOE7Drh+N5CPgGI5SA9IEKJiPjdfqWFWmZtRA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js\" integrity=\"sha512-WFN04846sdKMIP5LKNphMaWzU7YpMyCU245etK3g/2ARYbPK9Ub18eG+ljU96qKRCWh+quCY7yefSmlkQw1ANQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> ${\"<\" + \"script\"} src=\"https://cdnjs.cloudflare.com/ajax/libs/yamljs/0.3.0/yaml.min.js\" integrity=\"sha512-f/K0Q5lZ1SrdNdjc2BO2I5kTx8E5Uw1EU3PhSUB9fYPohap5rPWEmQRCjtpDxNmQB4/+MMI/Cf+nvh1VSiwrTA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\">${\"<\" + \"/script\"}> `;\n// Exports\nexport default code;","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"POPUP_TYPE\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__.POPUP_TYPE), [\"callGenericPopup\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__.callGenericPopup) });","import { POPUP_TYPE, callGenericPopup } from '@sillytavern/scripts/popup';\n\nimport { updateFrontendVersion } from '../function/frontend_version';\nimport { extensionFolderPath } from './extension_variables';\nimport { renderMarkdown } from './render_markdown';\n\nconst GITLAB_INSTANCE_URL = 'gitlab.com';\nconst GITLAB_PROJECT_PATH = 'novi028/JS-Slash-Runner';\nconst GITLAB_BRANCH = '3.0.0';\nconst VERSION_FILE_PATH_GITLAB = 'manifest.json';\nconst CHANGELOG_FILE_PATH_GITLAB = 'doc/CHANGELOG.md';\nexport const VERSION_FILE_PATH = `/scripts/extensions/${extensionFolderPath}/manifest.json`;\nlet CURRENT_VERSION: string;\nlet LATEST_VERSION: string;\nlet CHANGELOG_CONTENT: string;\n\n/**\n * 从 GitLab 仓库获取指定文件的原始内容 (支持项目 ID 或项目路径)\n * @param filePath 文件在仓库中的路径 (会被自动 URL 编码)\n * @returns 返回文件内容的 Promise<string>\n */\nasync function fetchRawFileContentFromGitLab(filePath: string): Promise<string> {\n  const idOrPathForUrl =\n    typeof GITLAB_PROJECT_PATH === 'string' && GITLAB_PROJECT_PATH.includes('/')\n      ? encodeURIComponent(GITLAB_PROJECT_PATH)\n      : GITLAB_PROJECT_PATH;\n  const encodedFilePath = encodeURIComponent(filePath);\n  const url = `https://${GITLAB_INSTANCE_URL}/api/v4/projects/${idOrPathForUrl}/repository/files/${encodedFilePath}/raw?ref=${GITLAB_BRANCH}`;\n\n  const headers: HeadersInit = {\n    'Cache-Control': 'no-cache',\n  };\n\n  try {\n    const response = await fetch(url, { method: 'GET', headers: headers });\n    if (!response.ok) {\n      let errorBody = '';\n      try {\n        errorBody = await response.text();\n      } catch (e) {\n        /* ignore */\n      }\n      throw new Error(\n        `[TavernHelper] 无法获取 GitLab 文件: ${response.status} ${response.statusText}. URL: ${url}. Response: ${errorBody}`,\n      );\n    }\n    const content = await response.text();\n    return content.trim();\n  } catch (error) {\n    console.error('[TavernHelper] 获取 GitLab 文件内容时出错:', error);\n    throw error;\n  }\n}\n\n/**\n * 从 JSON 文件内容中解析 'version' 字段的值\n * @param content 文件内容字符串\n * @returns 解析出的版本号字符串 (例如 \"2.5.5\")\n * @throws 如果内容不是有效的 JSON，或者 'version' 字段不存在或不是字符串，则抛出错误\n */\nexport function parseVersionFromFile(content: string): string {\n  try {\n    const data = JSON.parse(content);\n\n    if (data && typeof data.version === 'string') {\n      return data.version;\n    } else {\n      throw new Error(\"[TavernHelper] 在 JSON 数据中未找到有效的 'version' 字段 (必须是字符串类型)\");\n    }\n  } catch (error) {\n    console.error('[TavernHelper] 解析版本文件内容时出错:', error);\n\n    if (error instanceof SyntaxError) {\n      throw new Error(`[TavernHelper] 无法将文件内容解析为 JSON: ${error.message}`);\n    }\n\n    throw new Error(\n      `[TavernHelper] 无法从文件内容中解析版本号: ${error instanceof Error ? error.message : String(error)}`,\n    );\n  }\n}\n\n/**\n * 比较两个语义化版本号 (Semantic Versioning - Major.Minor.Patch)\n * @param versionA 版本号字符串 A (例如 \"2.5.5\")\n * @param versionB 版本号字符串 B (例如 \"1.0.0\")\n * @returns\n * - 正数 (> 0): 如果 versionA > versionB (A 更新)\n * - 负数 (< 0): 如果 versionA < versionB (B 更新)\n * - 0:        如果 versionA == versionB (版本相同)\n * 注意: 这个基础比较器不处理预发布标签 (-beta) 或构建元数据 (+build)。\n * 它会将 \"2.5.5-beta\" 和 \"2.5.5\" 在此比较中视为相等。\n */\nfunction compareSemVer(versionA: string, versionB: string): number {\n  const cleanVersionA = versionA.split('-')[0].split('+')[0];\n  const cleanVersionB = versionB.split('-')[0].split('+')[0];\n\n  const partsA = cleanVersionA.split('.').map(Number);\n  const partsB = cleanVersionB.split('.').map(Number);\n\n  for (let i = 0; i < 3; i++) {\n    // 如果某个版本号部分缺失 (例如 \"1.2\" vs \"1.2.3\")，则视为 0\n    const numA = partsA[i] || 0;\n    const numB = partsB[i] || 0;\n\n    if (isNaN(numA) || isNaN(numB)) {\n      console.warn(`[TavernHelper] 版本号 \"${versionA}\" 或 \"${versionB}\" 包含非数字部分，可能导致比较不准确。`);\n      return 0;\n    }\n\n    if (numA > numB) {\n      return 1;\n    }\n    if (numA < numB) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\nexport async function getFileContentByPath(filePath: string) {\n  try {\n    const response = await fetch(filePath);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const content = await response.text();\n    return content;\n  } catch (error) {\n    console.error(`读取文件 ${filePath} 失败:`, error);\n    throw error;\n  }\n}\n\nexport async function runCheckWithPath() {\n  try {\n    LATEST_VERSION = parseVersionFromFile(await fetchRawFileContentFromGitLab(VERSION_FILE_PATH_GITLAB));\n    CURRENT_VERSION = parseVersionFromFile(await getFileContentByPath(VERSION_FILE_PATH));\n\n    const comparisonResult = compareSemVer(LATEST_VERSION, CURRENT_VERSION);\n\n    if (comparisonResult > 0) {\n      console.info(`[TavernHelper] 需要更新！最新版本 ${LATEST_VERSION} > 当前版本 ${CURRENT_VERSION}`);\n      return true;\n    } else if (comparisonResult === 0) {\n      console.info(`[TavernHelper] 当前版本 ${CURRENT_VERSION} 已是最新。`);\n      return false;\n    } else {\n      console.warn(`[TavernHelper] 当前版本 ${CURRENT_VERSION} 比远程版本 ${LATEST_VERSION} 还新？`);\n      return false;\n    }\n  } catch (error) {\n    console.error('[TavernHelper] 版本检查失败:', error);\n    return false;\n  }\n}\n\n/**\n * 添加版本更新提示元素\n */\nexport function addVersionUpdateElement() {\n  const container = $('#tavern-helper-extension-container .inline-drawer-header b');\n  container.append(`\n    <span style=\"color: red; font-size: 12px; font-weight: bold;\">\n      New!\n    </span>\n  `);\n}\n\n/**\n * 解析变更日志内容，提取两个版本之间的日志\n * @param changelogContent 变更日志的完整内容\n * @param currentVersion 当前版本号\n * @param latestVersion 最新版本号\n * @returns 两个版本之间的日志内容\n */\nfunction parseChangelogBetweenVersions(\n  changelogContent: string,\n  currentVersion: string,\n  latestVersion: string,\n): string | undefined {\n  // 查找所有版本标题\n  const versionRegex = /##\\s*([0-9]+\\.[0-9]+\\.[0-9]+)/g;\n  const matches = [...changelogContent.matchAll(versionRegex)];\n\n  if (matches.length === 0) {\n    toastr.error('无法找到版本日志。');\n    return;\n  }\n\n  // 比较当前版本和最新版本\n  const comparisonResult = compareSemVer(latestVersion, currentVersion);\n\n  if (comparisonResult <= 0) {\n    // 当前版本大于或等于最新版本，只返回最新版本的日志\n    const latestVersionMatch = matches.find(match => match[1] === latestVersion);\n    if (!latestVersionMatch) {\n      toastr.error('获取更新日志失败');\n      return;\n    }\n\n    const startIndex = latestVersionMatch.index;\n    const nextVersionMatch = matches.find(match => match.index > startIndex);\n    const endIndex = nextVersionMatch ? nextVersionMatch.index : changelogContent.length;\n\n    return changelogContent.substring(startIndex, endIndex).trim();\n  } else {\n    const currentVersionMatch = matches.find(match => match[1] === currentVersion);\n    if (!currentVersionMatch) {\n      toastr.error(`无法找到版本 ${currentVersion} 的日志。`);\n      return;\n    }\n\n    const latestVersionMatch = matches.find(match => match[1] === latestVersion);\n    if (!latestVersionMatch) {\n      toastr.error(`无法找到版本 ${latestVersion} 的日志。`);\n      return;\n    }\n\n    const startIndex = currentVersionMatch.index;\n    const endIndex = latestVersionMatch.index;\n\n    changelogContent = changelogContent.substring(startIndex, endIndex).trim();\n\n    return renderMarkdown(changelogContent);\n  }\n}\n\n/**\n * 弹出changeLog的popup\n */\nexport async function handleUpdateButton() {\n  if (!CHANGELOG_CONTENT) {\n    await getChangelog();\n  }\n  const result = await callGenericPopup(CHANGELOG_CONTENT, POPUP_TYPE.CONFIRM, '', { okButton: '更新', cancelButton: '取消' });\n  if (result) {\n    toastr.info('更新中……');\n    await updateFrontendVersion();\n  }\n}\n\n/**\n * 获取变更日志\n * @returns 两个版本之间的日志内容\n */\nexport async function getChangelog() {\n  const changelogContent = await fetchRawFileContentFromGitLab(CHANGELOG_FILE_PATH_GITLAB);\n  if (LATEST_VERSION === undefined) {\n    LATEST_VERSION = parseVersionFromFile(await fetchRawFileContentFromGitLab(VERSION_FILE_PATH_GITLAB));\n  }\n\n  if (CURRENT_VERSION === undefined) {\n    CURRENT_VERSION = parseVersionFromFile(await getFileContentByPath(VERSION_FILE_PATH));\n  }\n\n  const logs = parseChangelogBetweenVersions(changelogContent, CURRENT_VERSION, LATEST_VERSION);\n  if (!logs) {\n    toastr.error('无法获取更新日志');\n    return;\n  } else {\n    CHANGELOG_CONTENT = logs;\n  }\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"SlashCommand\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommand_js_7714abe5__.SlashCommand) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getTagsList\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_tags_js_fe93ed66__.getTagsList) });","import { findChar } from '@/compatibility';\n\nimport {\n  characters,\n  getOneCharacter,\n  getRequestHeaders,\n  saveCharacterDebounced,\n  saveSettings,\n  saveSettingsDebounced,\n  this_chid,\n} from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { ensureImageFormatSupported, getCharaFilename } from '@sillytavern/scripts/utils';\nimport {\n  createNewWorldInfo,\n  deleteWorldInfo,\n  getWorldInfoSettings,\n  selected_world_info,\n  setWorldInfoButtonClass,\n  world_info,\n  world_names,\n} from '@sillytavern/scripts/world-info';\n\ninterface LorebookSettings {\n  selected_global_lorebooks: string[];\n\n  scan_depth: number;\n  context_percentage: number;\n  budget_cap: number; // 0 表示禁用\n  min_activations: number;\n  max_depth: number; // 0 表示无限制\n  max_recursion_steps: number;\n\n  insertion_strategy: 'evenly' | 'character_first' | 'global_first';\n\n  include_names: boolean;\n  recursive: boolean;\n  case_sensitive: boolean;\n  match_whole_words: boolean;\n  use_group_scoring: boolean;\n  overflow_alert: boolean;\n}\n\ninterface GetCharLorebooksOption {\n  name?: string;\n  type?: 'all' | 'primary' | 'additional';\n}\n\ninterface CharLorebooks {\n  primary: string | null;\n  additional: string[];\n}\n\nasync function editCurrentCharacter(): Promise<boolean> {\n  // @ts-ignore\n  $('#rm_info_avatar').html('');\n  // @ts-ignore\n  const form_data = new FormData(($('#form_create') as JQuery<HTMLFormElement>).get(0));\n\n  const raw_file = form_data.get('avatar');\n  if (raw_file instanceof File) {\n    const converted_file = await ensureImageFormatSupported(raw_file);\n    form_data.set('avatar', converted_file);\n  }\n\n  const headers = getRequestHeaders();\n  // @ts-ignore\n  delete headers['Content-Type'];\n\n  // TODO: 这里的代码可以用来修改第一条消息!\n  form_data.delete('alternate_greetings');\n  // @ts-ignore\n  const chid = $('.open_alternate_greetings').data('chid');\n  if (chid && Array.isArray(characters[chid]?.data?.alternate_greetings)) {\n    for (const value of characters[chid].data.alternate_greetings) {\n      form_data.append('alternate_greetings', value);\n    }\n  }\n\n  const response = await fetch('/api/characters/edit', {\n    method: 'POST',\n    headers: headers,\n    body: form_data,\n    cache: 'no-cache',\n  });\n\n  if (!response.ok) {\n    return false;\n  }\n\n  await getOneCharacter(form_data.get('avatar_url'));\n  // @ts-ignore\n  $('#add_avatar_button').replaceWith($('#add_avatar_button').val('').clone(true));\n  // @ts-ignore\n  $('#create_button').attr('value', 'Save');\n\n  return true;\n}\n\nfunction toLorebookSettings(world_info_settings: ReturnType<typeof getWorldInfoSettings>): LorebookSettings {\n  return {\n    selected_global_lorebooks: (world_info_settings.world_info as { globalSelect: string[] }).globalSelect,\n\n    scan_depth: world_info_settings.world_info_depth,\n    context_percentage: world_info_settings.world_info_budget,\n    budget_cap: world_info_settings.world_info_budget_cap,\n    min_activations: world_info_settings.world_info_min_activations,\n    max_depth: world_info_settings.world_info_min_activations_depth_max,\n    max_recursion_steps: world_info_settings.world_info_max_recursion_steps,\n\n    insertion_strategy: { 0: 'evenly', 1: 'character_first', 2: 'global_first' }[\n      world_info_settings.world_info_character_strategy\n    ] as 'evenly' | 'character_first' | 'global_first',\n\n    include_names: world_info_settings.world_info_include_names,\n    recursive: world_info_settings.world_info_recursive,\n    case_sensitive: world_info_settings.world_info_case_sensitive,\n    match_whole_words: world_info_settings.world_info_match_whole_words,\n    use_group_scoring: world_info_settings.world_info_use_group_scoring,\n    overflow_alert: world_info_settings.world_info_overflow_alert,\n  };\n}\n\nfunction assignPartialLorebookSettings(settings: Partial<LorebookSettings>): void {\n  const for_eachs = {\n    selected_global_lorebooks: (value: LorebookSettings['selected_global_lorebooks']) => {\n      // @ts-ignore\n      $('#world_info').find('option[value!=\"\"]').remove();\n      world_names.forEach((item, i) =>\n        // @ts-ignore\n        $('#world_info').append(`<option value='${i}'${value.includes(item) ? ' selected' : ''}>${item}</option>`),\n      );\n\n      selected_world_info.length = 0;\n      selected_world_info.push(...value);\n      saveSettings();\n    },\n\n    scan_depth: (value: LorebookSettings['scan_depth']) => {\n      // @ts-ignore\n      $('#world_info_depth').val(value).trigger('input');\n    },\n    context_percentage: (value: LorebookSettings['context_percentage']) => {\n      // @ts-ignore\n      $('#world_info_budget').val(value).trigger('input');\n    },\n    budget_cap: (value: LorebookSettings['budget_cap']) => {\n      // @ts-ignore\n      $('#world_info_budget_cap').val(value).trigger('input');\n    },\n    min_activations: (value: LorebookSettings['min_activations']) => {\n      // @ts-ignore\n      $('#world_info_min_activations').val(value).trigger('input');\n    },\n    max_depth: (value: LorebookSettings['max_depth']) => {\n      // @ts-ignore\n      $('#world_info_min_activations_depth_max').val(value).trigger('input');\n    },\n    max_recursion_steps: (value: LorebookSettings['max_recursion_steps']) => {\n      // @ts-ignore\n      $('#world_info_max_recursion_steps').val(value).trigger('input');\n    },\n\n    insertion_strategy: (value: LorebookSettings['insertion_strategy']) => {\n      const converted_value = { evenly: 0, character_first: 1, global_first: 2 }[value];\n      // @ts-ignore\n      $(`#world_info_character_strategy option[value='${converted_value}']`).prop('selected', true);\n      // @ts-ignore\n      $('#world_info_character_strategy').val(converted_value).trigger('change');\n    },\n\n    include_names: (value: LorebookSettings['include_names']) => {\n      // @ts-ignore\n      $('#world_info_include_names').prop('checked', value).trigger('input');\n    },\n    recursive: (value: LorebookSettings['recursive']) => {\n      // @ts-ignore\n      $('#world_info_recursive').prop('checked', value).trigger('input');\n    },\n    case_sensitive: (value: LorebookSettings['case_sensitive']) => {\n      // @ts-ignore\n      $('#world_info_case_sensitive').prop('checked', value).trigger('input');\n    },\n    match_whole_words: (value: LorebookSettings['match_whole_words']) => {\n      // @ts-ignore\n      $('#world_info_match_whole_words').prop('checked', value).trigger('input');\n    },\n    use_group_scoring: (value: LorebookSettings['use_group_scoring']) => {\n      // @ts-ignore\n      $('#world_info_use_group_scoring').prop('checked', value).trigger('change');\n    },\n    overflow_alert: (value: LorebookSettings['overflow_alert']) => {\n      // @ts-ignore\n      $('#world_info_overflow_alert').prop('checked', value).trigger('change');\n    },\n  };\n\n  Object.entries(settings)\n    .filter(([_, value]) => value !== undefined)\n    .forEach(([field, value]) => {\n      // @ts-ignore\n      for_eachs[field]?.(value);\n    });\n}\n\n/**\n * 获取当前的世界书全局设置\n *\n * @returns 当前的世界书全局设置\n */\nexport function getLorebookSettings(): LorebookSettings {\n  const lorebook_settings = toLorebookSettings(getWorldInfoSettings());\n\n  console.info(`获取世界书全局设置:\\n${JSON.stringify(lorebook_settings, undefined, 2)}`);\n  return lorebook_settings;\n}\n\n/**\n * 修改世界书全局设置\n *\n * @returns 修改世界书全局设置\n */\nexport function setLorebookSettings(settings: Partial<LorebookSettings>): void {\n  if (settings.selected_global_lorebooks) {\n    const inexisting_lorebooks = settings.selected_global_lorebooks.filter(lorebook => !world_names.includes(lorebook));\n    if (inexisting_lorebooks.length > 0) {\n      throw Error(`尝试修改要全局启用的世界书, 但未找到以下世界书: ${JSON.stringify(inexisting_lorebooks)}`);\n    }\n  }\n\n  assignPartialLorebookSettings(settings);\n\n  console.info(`修改世界书全局设置:\\n${JSON.stringify(settings, undefined, 2)}`);\n}\n\n/**\n * 获取角色卡绑定的世界书\n *\n * @param option 可选选项\n *   - `name?:string`: 要查询的角色卡名称; 默认为当前角色卡\n *   - `type?:'all'|'primary'|'additional'`: 按角色世界书的绑定类型筛选世界书; 默认为 `'all'`\n *\n * @returns 一个 CharLorebook 数组\n */\nexport function getCharLorebooks(\n  option: GetCharLorebooksOption = { name: characters[this_chid]?.avatar ?? null, type: 'all' },\n): CharLorebooks {\n  const { name = characters[this_chid]?.avatar ?? null, type = 'all' } = option;\n\n  // @ts-ignore\n  if (selected_group && !name) {\n    throw Error(`不要在群组中调用这个功能`);\n  }\n  //@ts-ignore\n  const filename = name;\n  // @ts-ignore\n  const character = findChar({ name: filename });\n  if (!character) {\n    throw Error(`未找到名为 '${filename}' 的角色卡`);\n  }\n\n  const books: CharLorebooks = { primary: null, additional: [] };\n\n  if (character.data?.extensions?.world) {\n    books.primary = character.data?.extensions?.world;\n  }\n\n  // @ts-ignore\n  const extraCharLore = world_info.charLore?.find(e => e.name === filename);\n  if (extraCharLore && Array.isArray(extraCharLore.extraBooks)) {\n    books.additional = extraCharLore.extraBooks;\n  }\n\n  // 根据 type 参数过滤结果\n  if (type) {\n    switch (type) {\n      case 'primary':\n        return { primary: books.primary, additional: [] };\n      case 'additional':\n        return { primary: null, additional: books.additional };\n      case 'all':\n      default:\n        return books;\n    }\n  }\n\n  console.info(`获取角色卡绑定的世界书, 选项: ${JSON.stringify({ name, type })}, 获取结果: ${JSON.stringify(books)}`);\n  return books;\n}\n\n/**\n * 设置当前角色卡绑定的世界书\n *\n * @param lorebooks 要设置的世界书信息\n *    - `primary: string | null;`: 主要世界书名称，设为null或空字符串表示移除\n *    - `additional: string[];`: 附加世界书名称数组，设为空数组表示移除所有附加世界书\n */\nexport async function setCurrentCharLorebooks(lorebooks: Partial<CharLorebooks>): Promise<void> {\n  // @ts-ignore\n  if (selected_group && !name) {\n    throw Error(`不要在群组中调用这个功能`);\n  }\n  // @ts-ignore\n  const filename = name ?? getCharaFilename(this_chid);\n  if (!filename) {\n    throw Error(`未打开任何角色卡`);\n  }\n\n  const inexisting_lorebooks: string[] = [\n    ...(lorebooks.primary && !world_names.includes(lorebooks.primary) ? [lorebooks.primary] : []),\n    ...(lorebooks.additional ? lorebooks.additional.filter(lorebook => !world_names.includes(lorebook)) : []),\n  ];\n  if (inexisting_lorebooks.length > 0) {\n    throw Error(`尝试修改 '${filename}' 绑定的世界书, 但未找到以下世界书: ${inexisting_lorebooks}`);\n  }\n\n  if (lorebooks.primary !== undefined) {\n    // @ts-ignore\n    const previous_primary = String($('#character_world').val());\n    // @ts-ignore\n    $('#character_world').val(lorebooks.primary ? lorebooks.primary : '');\n\n    // @ts-ignore\n    $('.character_world_info_selector')\n      .find('option:selected')\n      .val(lorebooks.primary ? world_names.indexOf(lorebooks.primary) : '');\n\n    if (previous_primary && !lorebooks.primary) {\n      // @ts-ignore\n      const data = JSON.parse(String($('#character_json_data').val()));\n      if (data?.data?.character_book) {\n        data.data.character_book = undefined;\n      }\n      // @ts-ignore\n      $('#character_json_data').val(JSON.stringify(data));\n    }\n\n    if (!(await editCurrentCharacter())) {\n      throw Error(`尝试为 '${filename}' 绑定主要世界书, 但在访问酒馆后端时出错`);\n    }\n\n    // @ts-ignore\n    setWorldInfoButtonClass(undefined, !!lorebooks.primary);\n  }\n\n  if (lorebooks.additional !== undefined) {\n    interface CharLoreEntry {\n      name: string;\n      extraBooks: string[];\n    }\n    const char_lore = (world_info as { charLore: CharLoreEntry[] }).charLore ?? [];\n\n    const existing_char_index = char_lore.findIndex(entry => entry.name === filename);\n    if (existing_char_index === -1) {\n      char_lore.push({ name: filename, extraBooks: lorebooks.additional });\n    } else if (lorebooks.additional.length === 0) {\n      char_lore.splice(existing_char_index, 1);\n    } else {\n      char_lore[existing_char_index].extraBooks = lorebooks.additional;\n    }\n\n    Object.assign(world_info, { charLore: char_lore });\n  }\n\n  saveCharacterDebounced();\n  saveSettingsDebounced();\n\n  console.info(\n    `修改角色卡绑定的世界书, 要修改的部分: ${JSON.stringify(lorebooks)}${\n      lorebooks.primary === undefined ? ', 主要世界书保持不变' : ''\n    }${lorebooks.additional === undefined ? ', 附加世界书保持不变' : ''}`,\n  );\n}\n\n/**\n * 获取世界书列表\n *\n * @returns 世界书名称列表\n */\nexport async function getLorebooks(): Promise<string[]> {\n  console.info(`获取世界书列表: ${JSON.stringify(world_names)}`);\n  return world_names;\n}\n\n/**\n * 删除世界书\n *\n * @param lorebook 世界书名称\n * @returns 是否成功删除, 可能因世界书不存在等原因而失败\n */\nexport async function deleteLorebook(lorebook: string): Promise<boolean> {\n  const success = await deleteWorldInfo(lorebook);\n\n  console.info(`移除世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n  return success;\n}\n\n/**\n * 新建世界书\n *\n * @param lorebook 世界书名称\n *\n * @returns 是否成功创建, 如果已经存在同名世界书会失败\n */\nexport async function createLorebook(lorebook: string): Promise<boolean> {\n  const success = await createNewWorldInfo(lorebook, { interactive: false });\n\n  console.info(`新建世界书 '${lorebook}' ${success ? '成功' : '失败'}`);\n  return success;\n}\n\n/**\n * 获取当前角色卡绑定的主要世界书\n *\n * @returns 如果当前角色卡有绑定并使用世界书 (地球图标呈绿色), 返回该世界书的名称; 否则返回 `null`\n */\nexport async function getCurrentCharPrimaryLorebook(): Promise<string | null> {\n  return getCharLorebooks().primary;\n}\n","// for compatibility with old sillytavern versions\nimport { characters, this_chid } from '@sillytavern/script';\n// @ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { getTagsList } from '@sillytavern/scripts/tags';\nimport { equalsIgnoreCaseAndAccents } from '@sillytavern/scripts/utils';\n\n// for 1.12.6\n/**\n * Finds a character by name, with optional filtering and precedence for avatars\n * @param {object} [options={}] - The options for the search\n * @param {string?} [options.name=null] - The name to search for\n * @param {boolean} [options.allowAvatar=true] - Whether to allow searching by avatar\n * @param {boolean} [options.insensitive=true] - Whether the search should be case insensitive\n * @param {string[]?} [options.filteredByTags=null] - Tags to filter characters by\n * @param {boolean} [options.preferCurrentChar=true] - Whether to prefer the current character(s)\n * @param {boolean} [options.quiet=false] - Whether to suppress warnings\n * @returns {any?} - The found character or null if not found\n */\nexport function findChar({\n  name = null,\n  allowAvatar = true,\n  insensitive = true,\n  filteredByTags = null,\n  preferCurrentChar = true,\n  quiet = false,\n} = {}) {\n  const matches = (char: any) =>\n    !name ||\n    (allowAvatar && char.avatar === name) ||\n    (insensitive ? equalsIgnoreCaseAndAccents(char.name, name) : char.name === name);\n\n  // Filter characters by tags if provided\n  let filteredCharacters = characters;\n  if (filteredByTags) {\n    filteredCharacters = characters.filter(char => {\n      const charTags = getTagsList(char.avatar, false);\n      // @ts-ignore\n      return filteredByTags.every(tagName => charTags.some(x => x.name == tagName));\n    });\n  }\n\n  // Get the current character(s)\n  /** @type {any[]} */\n  // @ts-ignore\n  const currentChars = (selected_group as any)\n    ? // @ts-ignore\n      groups\n        // @ts-ignore\n        .find(group => group.id === selected_group)\n        // @ts-ignore\n        ?.members.map(member => filteredCharacters.find(char => char.avatar === member))\n    : // @ts-ignore\n      filteredCharacters.filter(char => characters[this_chid]?.avatar === char.avatar);\n\n  // If we have a current char and prefer it, return that if it matches\n  if (preferCurrentChar) {\n    const preferredCharSearch = currentChars.filter(matches);\n    if (preferredCharSearch.length > 1) {\n      // @ts-ignore\n      if (!quiet) toastr.warning('Multiple characters found for given conditions.');\n      else console.warn('Multiple characters found for given conditions. Returning the first match.');\n    }\n    if (preferredCharSearch.length) {\n      return preferredCharSearch[0];\n    }\n  }\n\n  // If allowAvatar is true, search by avatar first\n  if (allowAvatar && name) {\n    const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n    if (characterByAvatar) {\n      return characterByAvatar;\n    }\n  }\n\n  // Search for matching characters by name\n  const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n  if (matchingCharacters.length > 1) {\n    // @ts-ignore\n    if (!quiet) toastr.warning('Multiple characters found for given conditions.');\n    else console.warn('Multiple characters found for given conditions. Returning the first match.');\n  }\n\n  return matchingCharacters[0] || null;\n}\n","import { getCharAvatarPath, getUserAvatarPath } from '@/util/extension_variables';\n\nimport { chat, chat_metadata, event_types, eventSource } from '@sillytavern/script';\nimport { extension_settings } from '@sillytavern/scripts/extensions';\nimport { MacroFunction, MacrosParser } from '@sillytavern/scripts/macros';\n\nconst predefinedMacros = new Map<string, string | MacroFunction>([\n  ['userAvatarPath', getUserAvatarPath],\n  ['charAvatarPath', getCharAvatarPath],\n]);\n\n/**\n * 注册一个宏\n * @param {string} key - 宏的名称\n * @param {MacroFunction|string} value - 字符串或返回字符串的函数\n */\nexport function registerMacro(key: string, value: string | MacroFunction) {\n  MacrosParser.registerMacro(key, value);\n  console.log(`[Macro] 宏 \"${key}\" 注册成功`);\n}\n\n/**\n * 注册所有预定义的宏\n */\nexport function registerAllMacros() {\n  for (const [key, value] of predefinedMacros.entries()) {\n    MacrosParser.registerMacro(key, value);\n    console.log(`[Macro] 宏 \"${key}\" 注册成功`);\n  }\n}\n\n/**\n * 注销指定的宏\n * @param {string} key - 要注销的宏名称\n */\nexport function unregisterMacro(key: string) {\n  MacrosParser.unregisterMacro(key);\n  console.log(`[Macro] 宏 \"${key}\" 注销成功`);\n}\n\n/**\n * 注销所有预定义的宏\n */\nexport function unregisterAllMacros() {\n  for (const key of predefinedMacros.keys()) {\n    MacrosParser.unregisterMacro(key);\n    console.log(`[Macro] 宏 \"${key}\" 注销成功`);\n  }\n}\n\nfunction get_property_from_path(object: Record<string, any>, path: string, default_value: any) {\n  let result: Record<string, any> | undefined = object;\n  for (const key of path.split('.')) {\n    if (result === undefined) {\n      return default_value;\n    }\n    result = result[key];\n  }\n  return result ?? default_value;\n}\n\nfunction demacro(event_data: Parameters<ListenerType['chat_completion_prompt_ready']>[0]) {\n  const map = {\n    get_global_variable: extension_settings.variables.global,\n    get_chat_variable: (chat_metadata as { variables: Object }).variables,\n    get_message_variable:\n      chat\n        .filter(message => message.variables?.[message.swipe_id ?? 0] !== undefined)\n        .map(message => message.variables[message.swipe_id ?? 0])\n        .at(-1) ?? {},\n  };\n  event_data.chat.forEach(messages => {\n    messages.content = messages.content.replaceAll(\n      /\\{\\{(get_global_variable|get_chat_variable|get_message_variable)::(.*?)\\}\\}/g,\n      (_substring, type: keyof typeof map, path: string) => {\n        return JSON.stringify(get_property_from_path(map[type], path, null));\n      },\n    );\n  });\n}\n\nexport function initializeMacroOnExtension() {\n  eventSource.on(event_types.CHAT_COMPLETION_PROMPT_READY, demacro);\n}\n\nexport function destroyMacroOnExtension() {\n  eventSource.removeListener(event_types.CHAT_COMPLETION_PROMPT_READY, demacro);\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"ARGUMENT_TYPE\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.ARGUMENT_TYPE), [\"SlashCommandArgument\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.SlashCommandArgument), [\"SlashCommandNamedArgument\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__.SlashCommandNamedArgument) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"MAX_INJECTION_DEPTH\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.MAX_INJECTION_DEPTH), [\"activateSendButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.activateSendButtons), [\"baseChatReplace\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.baseChatReplace), [\"characters\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.characters), [\"chat\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.chat), [\"chat_metadata\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.chat_metadata), [\"cleanUpMessage\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.cleanUpMessage), [\"countOccurrences\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.countOccurrences), [\"deactivateSendButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.deactivateSendButtons), [\"eventSource\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.eventSource), [\"event_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.event_types), [\"extension_prompt_roles\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.extension_prompt_roles), [\"extension_prompt_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.extension_prompt_types), [\"getBiasStrings\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getBiasStrings), [\"getCharacterCardFields\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getCharacterCardFields), [\"getExtensionPromptRoleByName\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getExtensionPromptRoleByName), [\"getMaxContextSize\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getMaxContextSize), [\"getOneCharacter\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getOneCharacter), [\"getPastCharacterChats\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getPastCharacterChats), [\"getRequestHeaders\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getRequestHeaders), [\"getThumbnailUrl\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.getThumbnailUrl), [\"isOdd\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.isOdd), [\"messageFormatting\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.messageFormatting), [\"name1\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.name1), [\"name2\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.name2), [\"reloadCurrentChat\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.reloadCurrentChat), [\"reloadMarkdownProcessor\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.reloadMarkdownProcessor), [\"saveCharacterDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveCharacterDebounced), [\"saveChatConditional\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveChatConditional), [\"saveSettings\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveSettings), [\"saveSettingsDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.saveSettingsDebounced), [\"setExtensionPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.setExtensionPrompt), [\"setGenerationProgress\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.setGenerationProgress), [\"showSwipeButtons\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.showSwipeButtons), [\"stopGeneration\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.stopGeneration), [\"substituteParams\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.substituteParams), [\"substituteParamsExtended\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.substituteParamsExtended), [\"system_message_types\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.system_message_types), [\"this_chid\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.this_chid), [\"updateMessageBlock\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.updateMessageBlock), [\"user_avatar\"]: () => (__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__.user_avatar) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"isMobile\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_RossAscends_mods_js_224b6398__.isMobile) });","import { getSettingValue, saveSettingValue, extensionFolderPath } from '@/util/extension_variables';\n\nimport { chat_metadata, eventSource, event_types, saveSettingsDebounced } from '@sillytavern/script';\nimport {\n  renderExtensionTemplateAsync,\n  saveMetadataDebounced,\n} from '@sillytavern/scripts/extensions';\nimport { POPUP_TYPE, callGenericPopup } from '@sillytavern/scripts/popup';\nimport { isMobile } from '@sillytavern/scripts/RossAscends-mods';\nimport { getSortableDelay } from '@sillytavern/scripts/utils';\n\nlet isAudioEnabled: boolean;\nexport let list_BGMS: string[] = [];\nexport let list_ambients: string[] = [];\nlet bgmEnded = true;\nlet ambientEnded = true;\n\nconst isExtensionEnabled = getSettingValue('enabled_extension');\nconst templatePath = `${extensionFolderPath}/src/component/audio`;\n// 定义默认音频设置\nexport const defaultAudioSettings = {\n  audio_enabled: true,\n  bgm_enabled: true,\n  ambient_enabled: true,\n  bgm_mode: 'repeat',\n  bgm_muted: false,\n  bgm_volume: 50,\n  bgm_selected: null,\n  bgm_current_time: 0,\n  ambient_mode: 'stop',\n  ambient_muted: false,\n  ambient_volume: 50,\n  ambient_selected: null,\n  ambient_current_time: 0,\n  audio_cooldown: 0,\n};\n\n/**\n * 更新音频\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @param isUserInput 是否由用户操作触发-将导致音频中断\n */\nexport async function updateAudio(type = 'bgm', isUserInput = false) {\n  if (!getSettingValue('audio.audio_setting')) {\n    return;\n  }\n\n  const isTypeEnabled =\n    type === 'bgm'\n      ? getSettingValue('audio.bgm_enabled')\n      : getSettingValue('audio.ambient_enabled');\n\n  if (!isTypeEnabled) {\n    return;\n  }\n  const audioEnded = type === 'bgm' ? bgmEnded : ambientEnded;\n  const audioSelector = `#audio_${type}`;\n\n  if (!isUserInput && $(audioSelector).attr('src') != '' && !audioEnded) {\n    return;\n  }\n\n  let audio_url = '';\n  const playlist = await getAudioUrl(type as 'bgm' | 'ambient');\n\n  if (isUserInput) {\n    audio_url =\n      type === 'bgm'\n        ? getSettingValue('audio.bgm_selected') || playlist[0]\n        : getSettingValue('audio.ambient_selected') || playlist[0];\n  } else {\n    const mode =\n      type === 'bgm'\n        ? getSettingValue('audio.bgm_mode')\n        : getSettingValue('audio.ambient_mode');\n\n    const selected =\n      type === 'bgm'\n        ? getSettingValue('audio.bgm_selected')\n        : getSettingValue('audio.ambient_selected');\n\n    audio_url = getNextFileByMode(mode, playlist, selected);\n  }\n\n  if (!audio_url) {\n    return;\n  }\n\n  const audio = $(audioSelector)[0] as HTMLAudioElement;\n\n  // 对于ambient类型，处理掉防缓存后缀\n  if (type === 'ambient') {\n    const cleanAudioSrc = audio.src.split('?')[0];\n    const cleanAudioUrl = audio_url.split('?')[0];\n    if (decodeURIComponent(cleanAudioSrc) === decodeURIComponent(cleanAudioUrl) && !audioEnded) {\n      return;\n    }\n  } else if (decodeURIComponent(audio.src) === decodeURIComponent(audio_url) && !audioEnded) {\n      return;\n    }\n\n  // 设置audioEnded状态\n  if (type === 'bgm') {\n    bgmEnded = false;\n  } else {\n    ambientEnded = false;\n  }\n\n  if (type === 'bgm') {\n    audio.src = audio_url;\n    audio.load();\n\n    await new Promise<void>(resolve => {\n      const canPlayHandler = () => {\n        audio.removeEventListener('canplaythrough', canPlayHandler);\n        resolve();\n      };\n\n      if (audio.readyState >= HTMLMediaElement.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener('canplaythrough', canPlayHandler);\n      }\n    });\n\n    await playAudio(type);\n  } else {\n    // 对于ambient类型，使用缓存破坏\n    const audioUrlWithCacheBusting = getAudioUrlWithCacheBusting(audio_url);\n    audio.src = audioUrlWithCacheBusting;\n    audio.load();\n\n    await new Promise<void>(resolve => {\n      const canPlayHandler = () => {\n        audio.removeEventListener('canplaythrough', canPlayHandler);\n        resolve();\n      };\n\n      if (audio.readyState >= HTMLMediaElement.HAVE_ENOUGH_DATA) {\n        resolve();\n      } else {\n        audio.addEventListener('canplaythrough', canPlayHandler);\n      }\n    });\n\n    await playAudio(type as 'bgm' | 'ambient');\n  }\n\n  // 更新选中的音频\n  if (type === 'bgm') {\n    saveSettingValue('audio.bgm_selected', audio_url);\n  } else {\n    saveSettingValue('audio.ambient_selected', audio_url);\n  }\n\n  // 更新选择器\n  const selectElement = $(`#audio_${type}_select`);\n  if (selectElement.val() !== audio_url) {\n    selectElement.val(audio_url);\n  }\n\n  saveSettingsDebounced();\n}\n\n/**\n * 更新音频下拉选择菜单\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function updateAudioSelect(type = 'bgm') {\n  if (!getSettingValue(`audio.${type}_enabled`)) {\n    return;\n  }\n\n  const selectElement = $(`#audio_${type}_select`);\n  selectElement.empty();\n\n  if (type === 'bgm') {\n    list_BGMS = await getAudioUrl('bgm');\n  } else {\n    list_ambients = await getAudioUrl('ambient');\n  }\n\n  const audioList = type === 'bgm' ? list_BGMS : list_ambients;\n  let selectedSetting =\n    type === 'bgm'\n      ? getSettingValue('audio.bgm_selected')\n      : getSettingValue('audio.ambient_selected');\n\n  if (audioList && audioList.length > 0) {\n    // 检查当前选择的音频是否在列表中，如果不在则选择第一个\n    if (!audioList.includes(selectedSetting)) {\n      console.warn(`[Audio] 当前选择的音频 ${selectedSetting} 不在列表中，自动选择列表第一个音频`);\n      selectedSetting = audioList[0];\n      if (type === 'bgm') {\n        saveSettingValue('audio.bgm_selected', selectedSetting);\n      } else {\n        saveSettingValue('audio.ambient_selected', selectedSetting);\n      }\n      saveSettingsDebounced();\n    }\n\n    const audioFiles = Array.isArray(audioList) ? audioList : audioList.split(',').map(file => file.trim());\n    audioFiles.forEach((file: string) => {\n      const fileLabel = file.replace(/^.*[\\\\\\/]/, '').replace(/\\.[^/.]+$/, '');\n      selectElement.append(new Option(fileLabel, file));\n    });\n\n    selectElement.val(selectedSetting);\n  } else {\n    console.log(`[Audio] 暂无可用的 ${type.toUpperCase()} 资源`);\n  }\n}\n\n/**\n * 获取音频URL\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @returns 音频URL数组\n */\nexport async function getAudioUrl(type = 'bgm') {\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n  //@ts-ignore\n  const chatSpecificUrls = chat_metadata.variables?.[typeKey] || [];\n  return chatSpecificUrls;\n}\n\n/**\n * 添加缓存参数防止缓存\n * @param originalUrl 原始URL\n */\nexport function getAudioUrlWithCacheBusting(originalUrl: string) {\n  if (!originalUrl) return '';\n  const cacheBuster = new Date().getTime();\n  const separator = originalUrl.includes('?') ? '&' : '?';\n  return `${originalUrl}${separator}_=${cacheBuster}`;\n}\n\n/**\n * 根据播放模式获取下一个音频文件\n * @param mode 播放模式\n * @param playlist 播放列表\n * @param currentFile 当前文件\n */\nexport function getNextFileByMode(mode: string, playlist: string[], currentFile: string) {\n  if (!playlist || playlist.length === 0) {\n    return '';\n  }\n\n  switch (mode) {\n    case 'repeat':\n      return playlist[0];\n    case 'single':\n      return currentFile || playlist[0];\n    case 'random': {\n      const filteredPlaylist = playlist.filter(file => file !== currentFile);\n      if (filteredPlaylist.length === 0) {\n        return playlist[0];\n      }\n      const randomIndex = Math.floor(Math.random() * filteredPlaylist.length);\n      return filteredPlaylist[randomIndex];\n    }\n    case 'stop':\n      return '';\n    default:\n      return playlist[0];\n  }\n}\n\n/**\n * 切换音频控件状态\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n * @param status 是否启用\n */\nexport function toggleAudioControls(type: 'bgm' | 'ambient', status = 'enable') {\n  const isMainEnabled = $('#audio_enabled').prop('checked');\n\n  const shouldEnable = isMainEnabled && status === 'enable';\n\n  const controlIds = [\n    `#audio_${type}_play_pause`,\n    `#audio_${type}_mute`,\n    `#audio_${type}_mode`,\n    `#audio_${type}_select`,\n    `#audio_${type}_volume_slider`,\n  ];\n\n  controlIds.forEach(id => {\n    $(id).prop('disabled', !shouldEnable);\n  });\n}\n\n/**\n * 点击音频启用按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function onAudioEnabledClick(type = 'bgm') {\n  const enabled = $(`#enable_${type}`).prop('checked');\n  saveSettingValue(`audio.${type}_enabled`, enabled);\n\n  if (enabled) {\n    toggleAudioControls(type as 'bgm' | 'ambient', 'enable');\n    await updateAudio(type, false);\n  } else {\n    ($(`#audio_${type}`)[0] as HTMLAudioElement).pause();\n    toggleAudioControls(type as 'bgm' | 'ambient', 'disable');\n  }\n}\n\n/**\n * 初始化音频事件监听\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport function initAudioEventListeners(type: 'bgm' | 'ambient') {\n  ($(`#audio_${type}`) as HTMLAudioElement).on('ended', async function () {\n    if (type === 'bgm') {\n      bgmEnded = true;\n    } else {\n      ambientEnded = true;\n    }\n    const mode = getSettingValue(`audio.${type}_mode`);\n\n    if (mode === 'stop') {\n      return;\n    }\n\n    await updateAudio(type, false);\n  });\n}\n\n/**\n * 初始化进度条\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport function initializeProgressBar(type: 'bgm' | 'ambient') {\n  const $audioElement = $(`#audio_${type}`);\n  const $progressSlider = $(`#audio_${type}_progress_slider`);\n\n  $audioElement.on('timeupdate', function () {\n    if (!isNaN(this.duration)) {\n      const progressPercent = (this.currentTime / this.duration) * 100;\n      $progressSlider.val(progressPercent);\n    }\n    const cooldownBGM = getSettingValue('audio.audio_cooldown');\n    const remainingTime = this.duration - this.currentTime;\n\n    if (cooldownBGM > 0 && remainingTime <= cooldownBGM && !this.isFadingOut) {\n      const initialVolume = this.volume;\n      const fadeStep = initialVolume / (cooldownBGM * 10);\n      this.isFadingOut = true;\n\n      const fadeOutInterval = setInterval(() => {\n        if (this.volume > 0) {\n          this.volume = Math.max(0, this.volume - fadeStep);\n        } else {\n          clearInterval(fadeOutInterval);\n          this.isFadingOut = false;\n        }\n      }, 100);\n    }\n  });\n\n  $audioElement.on('play', function () {\n    const cooldownBGM = getSettingValue('audio.audio_cooldown');\n    const targetVolume = $(`#audio_${type}_volume_slider`).val() / 100;\n\n    if (cooldownBGM <= 0) {\n      this.volume = targetVolume;\n      return;\n    }\n\n    this.volume = 0;\n    const fadeStep = targetVolume / (cooldownBGM * 10);\n    let fadeInInterval = setInterval(() => {\n      if (this.volume < targetVolume) {\n        this.volume = Math.min(targetVolume, this.volume + fadeStep);\n      } else {\n        clearInterval(fadeInInterval);\n      }\n    }, 100);\n  });\n\n  $audioElement.on('loadedmetadata', function () {\n    if (!isNaN(this.duration)) {\n      $progressSlider.attr('max', 100);\n    }\n  });\n\n  $progressSlider.on('input', function () {\n    const value = $(this).val();\n    if (!isNaN($audioElement[0].duration)) {\n      $audioElement[0].currentTime = (value / 100) * $audioElement[0].duration;\n    }\n  });\n}\n\n/**\n * 音量滑块滚轮调节事件处理\n * @param e 事件对象\n */\nfunction onVolumeSliderWheelEvent(this: any, e: WheelEvent) {\n  const slider = $(this);\n  e.preventDefault();\n  e.stopPropagation();\n\n  const delta = e.deltaY / 20;\n  const sliderVal = Number(slider.val());\n\n  let newVal = sliderVal - delta;\n  if (newVal < 0) {\n    newVal = 0;\n  } else if (newVal > 100) {\n    newVal = 100;\n  }\n\n  slider.val(newVal).trigger('input');\n}\n\n/**\n * 长按音量控制按钮出现音量调节\n * @param volumeControlId 音量控制按钮ID\n * @param iconId 音量控制按钮图标ID\n */\nfunction handleLongPress(volumeControlId: string, iconId: string) {\n  const $volumeControl = $(`#${volumeControlId}`);\n  const $icon = $(`#${iconId}`);\n  let pressTimer: number | undefined;\n\n  if (isMobile()) {\n    $icon.on('touchstart', function (e) {\n      pressTimer = setTimeout(() => {\n        $volumeControl.css('display', 'block');\n      }, 500);\n    });\n\n    $icon.on('touchend', function (e) {\n      clearTimeout(pressTimer);\n    });\n\n    $(document).on('click', function (event) {\n      if (\n        !$icon.is(event.target) &&\n        $icon.has(event.target).length === 0 &&\n        !$volumeControl.is(event.target) &&\n        $volumeControl.has(event.target).length === 0\n      ) {\n        $volumeControl.css('display', 'none');\n      }\n    });\n  }\n}\n\n/**\n * 刷新音频资源\n */\nexport async function refreshAudioResources() {\n  updateAudioSelect('bgm');\n  updateAudioSelect('ambient');\n}\n\n/**\n * 打开音频资源管理弹窗\n * @param typeKey 音频类型 \"bgmurl\" 或 \"ambienturl\"\n */\n\nasync function openUrlManagerPopup(typeKey: 'bgmurl' | 'ambienturl') {\n  const urlManager = $(await renderExtensionTemplateAsync(`${templatePath}`, 'audio_url_manager'));\n  urlManager.prepend(`\n    <style>\n      #saved_audio_url.empty::after {\n        content: \"暂无音频\";\n        color: #999;\n        margin-top: 20px;\n        font-size: 12px;\n      }\n    </style>\n  `);\n  const savedAudioUrl = urlManager.find('#saved_audio_url').empty();\n  const urlTemplate = $(await renderExtensionTemplateAsync(`${templatePath}`, 'audio_url_template'));\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  let urlValue: string[] = chat_metadata.variables[typeKey];\n  if (!urlValue) {\n    urlValue = [];\n\n    savedAudioUrl.addClass('empty');\n  } else {\n    try {\n      if (urlValue.length === 0) {\n        savedAudioUrl.addClass('empty');\n      }\n    } catch (error) {\n      console.error(`[Audio] Failed to parse ${typeKey}:`, error);\n      return null;\n    }\n  }\n\n  const updatedUrls: Record<string, string> = {};\n  let newUrlOrder = [...urlValue];\n  function renderUrl(container: JQuery<HTMLElement>, url: string) {\n    const urlHtml = urlTemplate.clone();\n    let fileName;\n    if (url.includes('/')) {\n      const parts = url.split('/');\n      fileName = parts[parts.length - 1] || parts[parts.length - 2];\n    } else {\n      fileName = url;\n    }\n\n    const id = fileName.replace(/\\./g, '-');\n\n    urlHtml.attr('id', id);\n    urlHtml.find('.audio_url_name').text(fileName);\n\n    urlHtml.find('.audio_url_name').attr('data-url', url);\n\n    urlHtml.find('.edit_existing_url').on('click', async function () {\n      const currentUrl = urlHtml.find('.audio_url_name').attr('data-url');\n\n      if (!currentUrl) {\n        console.error('[Audio] No URL found for this element.');\n        return;\n      }\n\n      const inputUrl = await callGenericPopup('', POPUP_TYPE.INPUT, currentUrl);\n\n      if (!inputUrl) {\n        return;\n      }\n\n      const newFileName = inputUrl.split('/').pop();\n\n      const newId = newFileName.replace(/\\./g, '-');\n\n      urlHtml.attr('id', newId);\n      urlHtml.find('.audio_url_name').text(newFileName);\n      urlHtml.find('.audio_url_name').attr('data-url', inputUrl);\n\n      updatedUrls[currentUrl] = inputUrl;\n    });\n\n    urlHtml.find('.delete_url').on('click', async function () {\n      const confirmDelete = await callGenericPopup('确认要删除此链接?', POPUP_TYPE.CONFIRM);\n\n      if (!confirmDelete) {\n        return;\n      }\n\n      // 仅从DOM中移除元素\n      urlHtml.remove();\n\n      // 检查是否需要显示空状态提示\n      if (savedAudioUrl.find('.audio_url_name').length === 0) {\n        savedAudioUrl.addClass('empty');\n      }\n    });\n\n    container.append(urlHtml);\n  }\n\n  urlValue.forEach(url => {\n    renderUrl(savedAudioUrl, url);\n  });\n  urlManager.find('#import_button').on('click', async function () {\n    const newUrls = await openUrlImportPopup();\n\n    if (!newUrls) {\n      console.debug(`[Audio] ${typeKey} URL导入已取消`);\n      return;\n    }\n\n    savedAudioUrl.removeClass('empty');\n\n    newUrls.forEach(url => {\n      renderUrl(savedAudioUrl, url);\n    });\n  });\n  (savedAudioUrl as any).sortable({\n    delay: getSortableDelay(),\n    handle: '.drag-handle',\n    stop: function () {\n      newUrlOrder = [];\n      savedAudioUrl.find('.audio_url_name').each(function () {\n        const newUrl = $(this).attr('data-url');\n        if (newUrl) {\n          newUrlOrder.push(newUrl);\n        }\n      });\n    },\n  });\n  const result = await callGenericPopup(urlManager, POPUP_TYPE.CONFIRM, '', {\n    okButton: `确认`,\n    cancelButton: `取消`,\n  });\n\n  if (!result) {\n    return;\n  } else {\n    // 直接读取所有data-url属性，生成新的URL列表\n    const newUrlList: string[] = [];\n    savedAudioUrl.find('.audio_url_name').each(function () {\n      const url = $(this).attr('data-url');\n      if (url) {\n        newUrlList.push(url);\n      }\n    });\n\n    // 检查当前播放的音频是否在新的列表中\n    const currentBgmUrl = getSettingValue('audio.bgm_selected');\n    const currentAmbientUrl = getSettingValue('audio.ambient_selected');\n\n    // 如果当前播放的音频不在新的列表中，停止播放\n    if (typeKey === 'bgmurl' && currentBgmUrl && !newUrlList.includes(currentBgmUrl)) {\n      const bgmAudio = $('#audio_bgm')[0] as HTMLAudioElement;\n      bgmAudio.pause();\n      bgmEnded = true;\n    } else if (typeKey === 'ambienturl' && currentAmbientUrl && !newUrlList.includes(currentAmbientUrl)) {\n      const ambientAudio = $('#audio_ambient')[0] as HTMLAudioElement;\n      ambientAudio.pause();\n      ambientEnded = true;\n    }\n\n    // 更新并保存新的URL列表\n    chat_metadata.variables[typeKey] = newUrlList;\n    saveMetadataDebounced();\n    if (typeKey === 'bgmurl') {\n      updateAudioSelect('bgm');\n    } else if (typeKey === 'ambienturl') {\n      updateAudioSelect('ambient');\n    }\n  }\n}\n\n/**\n * 点击音频总开关时的处理函数\n */\nasync function handleAudioToggle(enable: boolean = true, userInput: boolean = true) {\n  if (userInput) {\n    isAudioEnabled = enable;\n    saveSettingValue('audio.audio_enabled', isAudioEnabled);\n  }\n\n  if (enable) {\n    $('#audio-player-content').css('opacity', '1');\n    if (!isExtensionEnabled) {\n      return;\n    }\n    toggleAudioControls('bgm', 'enable');\n    toggleAudioControls('ambient', 'enable');\n    const bgmUrl = await getAudioUrl('bgm');\n    const ambientUrl = await getAudioUrl('ambient');\n    if (bgmUrl.length > 0) {\n      const bgmAudioElement = $('#audio_bgm')[0] as HTMLAudioElement;\n      try {\n        await bgmAudioElement.play();\n      } catch (error) {\n        throw new Error('[Audio] 播放音乐失败：没有提供有效源');\n      }\n    }\n    if (ambientUrl.length > 0) {\n      const ambientAudioElement = $('#audio_ambient')[0] as HTMLAudioElement;\n      try {\n        await ambientAudioElement.play();\n      } catch (error) {\n        throw new Error('[Audio] 播放音效失败：没有提供有效源');\n      }\n    }\n  } else {\n    $('#audio-player-content').css('opacity', '0.5');\n    ($('#audio_bgm')[0] as HTMLAudioElement).pause();\n    ($('#audio_ambient')[0] as HTMLAudioElement).pause();\n    toggleAudioControls('bgm', 'disable');\n    toggleAudioControls('ambient', 'disable');\n  }\n}\n\n/**\n * 播放音频\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function playAudio(type: 'bgm' | 'ambient') {\n  if (\n    !getSettingValue('enabled_extension') ||\n    !getSettingValue('audio.audio_setting') ||\n    !getSettingValue(`audio.${type}_enabled`)\n  ) {\n    return;\n  }\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement.error && audioElement.error.code === 4) {\n    console.warn(`The ${type} element has no supported sources. Trying to reload selected audio from dropdown...`);\n\n    const selectedAudio = $(`#audio_${type}_select`).val() as string;\n    if (!selectedAudio) {\n      console.error(`No audio selected for ${type}`);\n      return;\n    }\n\n    audioElement.src = selectedAudio;\n    audioElement.load();\n  }\n\n  try {\n    await audioElement.play();\n    playPauseIcon.removeClass('fa-play');\n    playPauseIcon.addClass('fa-pause');\n  } catch (error) {\n    console.error(`[Audio] 播放 ${type} 音频时出错:`, error);\n  }\n}\n\n/**\n * 点击各自音频模式按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioModeClick(type: 'bgm' | 'ambient') {\n  const modes = [\n    { mode: 'repeat', icon: 'fa-repeat' },\n    { mode: 'random', icon: 'fa-random' },\n    { mode: 'single', icon: 'fa-redo-alt' },\n    { mode: 'stop', icon: 'fa-cancel' },\n  ];\n\n  const currentModeIndex = modes.findIndex(m => m.mode === getSettingValue(`audio.${type}_mode`));\n\n  const nextModeIndex = (currentModeIndex + 1) % modes.length;\n\n  saveSettingValue(`audio.${type}_mode`, modes[nextModeIndex].mode);\n\n  $(`#audio_${type}_mode_icon`).removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n\n  $(`#audio_${type}_mode_icon`).addClass(modes[nextModeIndex].icon);\n}\n\n/**\n * 音频选择变化时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioSelectChange(type: 'bgm' | 'ambient') {\n  saveSettingValue(`audio.${type}_selected`, $(`#audio_${type}_select`).val());\n  await updateAudio(type, true);\n}\n\n/**\n * 输入冷却时间的处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioCooldownInput() {\n  saveSettingValue('audio.audio_cooldown', ~~($(`#audio_cooldown`).val() as string));\n}\n\n/**\n * 音频音量变化时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioVolumeChange(type: 'bgm' | 'ambient') {\n  saveSettingValue(`audio.${type}_volume`, ~~($(`#audio_${type}_volume_slider`).val() as string));\n  $(`#audio_${type}`).prop('volume', getSettingValue(`audio.${type}_volume`) * 0.01);\n  $(`#audio_${type}_volume`).text(getSettingValue(`audio.${type}_volume`));\n}\n\n/**\n * 点击音频静音按钮时的通用处理函数\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nasync function onAudioMuteClick(type: 'bgm' | 'ambient') {\n  saveSettingValue(`audio.${type}_muted`, !getSettingValue(`audio.${type}_muted`));\n  $(`#audio_${type}_mute_icon`).toggleClass('fa-volume-high');\n  $(`#audio_${type}_mute_icon`).toggleClass('fa-volume-mute');\n  $(`#audio_${type}`).prop('muted', !$(`#audio_${type}`).prop('muted'));\n  $(`#audio_${type}_mute`).toggleClass('redOverlayGlow');\n}\n\n/**\n * 切换播放/暂停状态\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nexport async function togglePlayPause(type: 'bgm' | 'ambient') {\n  if (!getSettingValue('audio.audio_setting')) {\n    return;\n  }\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement.paused) {\n    await playAudio(type);\n  } else {\n    audioElement.pause();\n    playPauseIcon.removeClass('fa-pause');\n    playPauseIcon.addClass('fa-play');\n  }\n}\n\n/**\n * 打开URL导入弹窗\n * @param type 音频类型\n */\nasync function openUrlImportPopup(): Promise<string[] | null> {\n  const input = await callGenericPopup('输入要导入的网络音频链接（每行一个）', POPUP_TYPE.INPUT, '') as string | null;\n\n  if (!input) {\n    console.debug('[Audio] URL import cancelled');\n    return null;\n  }\n\n  const urlArray = input\n    .trim()\n    .split('\\n')\n    .map((url: string) => url.trim())\n    .filter((url: string) => url !== '');\n\n  return Array.from(new Set(urlArray));\n}\n\n// 聊天更改时的事件处理\neventSource.on(event_types.CHAT_CHANGED, async () => {\n  const $bgmPlayer = $('#audio_bgm')[0] as HTMLAudioElement;\n  const $ambientPlayer = $('#audio_ambient')[0] as HTMLAudioElement;\n\n  if ($bgmPlayer && !$bgmPlayer.paused) {\n    $bgmPlayer.pause();\n  }\n\n  if ($ambientPlayer && !$ambientPlayer.paused) {\n    $ambientPlayer.pause();\n  }\n  await refreshAudioResources();\n  console.log('[Audio] 聊天已更改，音频资源刷新完成');\n});\n\n/** 初始化样式\n * @param type 音频类型 \"bgm\" 或 \"ambient\"\n */\nfunction initAudioStyles(type: 'bgm' | 'ambient') {\n  // 隐藏默认播放器样式\n  $(`#audio_${type}`).hide();\n\n  if (getSettingValue(`audio.${type}_muted`)) {\n    $(`#audio_${type}_mute_icon`).removeClass('fa-volume-high');\n    $(`#audio_${type}_mute_icon`).addClass('fa-volume-mute');\n    $(`#audio_${type}_mute`).addClass('redOverlayGlow');\n    $(`#audio_${type}`).prop('muted', true);\n  } else {\n    $(`#audio_${type}_mute_icon`).addClass('fa-volume-high');\n    $(`#audio_${type}_mute_icon`).removeClass('fa-volume-mute');\n    $(`#audio_${type}_mute`).removeClass('redOverlayGlow');\n    $(`#audio_${type}`).prop('muted', false);\n  }\n\n  $(`#enable_${type}`).prop('checked', getSettingValue(`audio.${type}_enabled`));\n\n  const audioElement = $(`#audio_${type}`)[0] as HTMLAudioElement;\n  const playPauseIcon = $(`#audio_${type}_play_pause_icon`);\n\n  if (audioElement && audioElement.paused) {\n    playPauseIcon.removeClass('fa-pause');\n    playPauseIcon.addClass('fa-play');\n  } else if (audioElement && !audioElement.paused) {\n    playPauseIcon.removeClass('fa-play');\n    playPauseIcon.addClass('fa-pause');\n  }\n  updateAudioSelect(type);\n  initializeProgressBar(type);\n}\n\n/**\n * 初始化所有音频相关组件和事件监听器\n */\nexport function initAudioComponents() {\n  isAudioEnabled = getSettingValue('audio.audio_enabled');\n  handleAudioToggle(isAudioEnabled, false);\n  $('#audio-enable-toggle')\n    .prop('checked', isAudioEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleAudioToggle(event.target.checked, true));\n\n  // 初始化音乐和音效样式\n  initAudioStyles('bgm');\n  initAudioStyles('ambient');\n\n  const audioTypes = ['bgm', 'ambient'] as const;\n\n  const bindTypeEvents = (\n    type: 'bgm' | 'ambient',\n    events: Array<{\n      selector: string;\n      event: string;\n      // eslint-disable-next-line no-shadow\n      handler: (type: 'bgm' | 'ambient') => void; \n    }>,\n  ) => {\n    events.forEach(({ selector, event, handler }) => {\n      $(`#${selector}`).on(event, () => handler(type));\n    });\n  };\n\n  audioTypes.forEach(type => {\n    $(`#enable_${type}`).on('click', () => onAudioEnabledClick(type));\n\n    bindTypeEvents(type, [\n      {\n        selector: `enable_${type}`,\n        event: 'click',\n        handler: onAudioEnabledClick,\n      },\n      {\n        selector: `audio_${type}_mode`,\n        event: 'click',\n        handler: onAudioModeClick,\n      },\n      {\n        selector: `audio_${type}_mute`,\n        event: 'click',\n        handler: onAudioMuteClick,\n      },\n      {\n        selector: `audio_${type}_volume_slider`,\n        event: 'input',\n        handler: onAudioVolumeChange,\n      },\n      {\n        selector: `audio_${type}_select`,\n        event: 'change',\n        handler: onAudioSelectChange,\n      },\n      {\n        selector: `audio_${type}_play_pause`,\n        event: 'click',\n        handler: togglePlayPause,\n      },\n    ]);\n\n    $('#audio_cooldown').on('input', onAudioCooldownInput).val(getSettingValue('audio.audio_cooldown'));\n\n    // 监听音频结束事件\n    initAudioEventListeners('bgm');\n    initAudioEventListeners('ambient');\n\n    const volumeSlider = $(`#audio_${type}_volume_slider`).get(0);\n    if (volumeSlider) {\n      volumeSlider.addEventListener('wheel', onVolumeSliderWheelEvent, {\n        passive: false,\n      });\n    }\n  });\n\n  $('#audio_refresh_assets').on('click', async () => {\n    await refreshAudioResources();\n  });\n\n  handleLongPress('bgm-volume-control', 'audio_bgm_mute_icon');\n  handleLongPress('ambient-volume-control', 'audio_ambient_mute_icon');\n\n  const urlManagerMap = {\n    bgm: 'bgmurl',\n    ambient: 'ambienturl',\n  };\n\n  audioTypes.forEach(type => {\n    $(`#${type}_manager_button`).on('click', async () => {\n      await openUrlManagerPopup(urlManagerMap[type] as 'bgmurl' | 'ambienturl');\n      await refreshAudioResources();\n    });\n  });\n\n  const bgmAudio = $('#audio_bgm')[0] as HTMLAudioElement;\n  const ambientAudio = $('#audio_ambient')[0] as HTMLAudioElement;\n\n  const togglePlayPauseIcon = (audioElement: HTMLAudioElement, iconSelector: string) => {\n    const icon = $(iconSelector);\n    audioElement.addEventListener('play', () => icon.removeClass('fa-play').addClass('fa-pause'));\n    audioElement.addEventListener('pause', () => icon.removeClass('fa-pause').addClass('fa-play'));\n  };\n\n  togglePlayPauseIcon(bgmAudio, '#audio_bgm_play_pause_icon');\n  togglePlayPauseIcon(ambientAudio, '#audio_ambient_play_pause_icon');\n}\n","\nimport { IframeMessage, getLogPrefix, iframe_handlers } from '@/iframe_server/_impl';\nimport { registerIframeVariableHandler } from '@/iframe_server/variables';\n\n\nimport { t } from '@sillytavern/scripts/i18n';\n\nexport async function handleIframe(event: MessageEvent<IframeMessage>): Promise<void> {\n  if (!event.data) return;\n\n  const handler = iframe_handlers[event.data.request];\n  if (!handler) {\n    return;\n  }\n\n  let result: any = undefined;\n  try {\n    result = await handler(event);\n  } catch (err) {\n    const error = err as Error;\n    toastr.error(t`${getLogPrefix(event)}${error.name + ': ' + error.message}${error.stack ? error.stack : ''}`);\n    console.error(getLogPrefix(event), error);\n  } finally {\n    (event.source as MessageEventSource).postMessage(\n      {\n        request: event.data.request + '_callback',\n        uid: event.data.uid,\n        result: result,\n      },\n      {\n        targetOrigin: '*',\n      },\n    );\n  }\n}\n\nregisterIframeVariableHandler();\n","import { chat_metadata, saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\n\ninterface VariableOption {\n  type: 'chat' | 'global'; // 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n}\n\nfunction getVariablesByType(type: 'chat' | 'global'): Record<string, any> {\n  switch (type) {\n    case 'chat': {\n      const metadata = chat_metadata as {\n        variables: Record<string, any> | undefined;\n      };\n      if (!metadata.variables) {\n        metadata.variables = {};\n      }\n      return metadata.variables;\n    }\n    case 'global':\n      return extension_settings.variables.global;\n  }\n}\n\n/**\n * 获取变量表\n *\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @returns 变量表\n *\n * @example\n * // 获取所有聊天变量并弹窗输出结果\n * const variables = getVariables();\n * alert(variables);\n *\n * @example\n * // 获取所有全局变量\n * const variables = getVariables({type: 'global'});\n * // 酒馆助手内置了 lodash 库, 你能用它做很多事, 比如查询某个变量是否存在\n * if (_.has(variables, \"神乐光.好感度\")) {\n *   ...\n * }\n */\nexport function getVariables(option: VariableOption = { type: 'chat' }): Record<string, any> {\n  const { type = 'chat' } = option;\n  const result = getVariablesByType(type);\n\n  console.info(`$获取${type == 'chat' ? `聊天` : `全局`}变量表:\\n${JSON.stringify(result, undefined, 2)}`);\n  return result;\n}\n\n/**\n * 完全替换变量表为 `variables`\n *\n * 之所以提供这么直接的函数, 是因为酒馆助手内置了 lodash 库:\n *   `insertOrAssignVariables` 等函数其实就是先 `getVariables` 获取变量表, 用 lodash 库处理, 再 `replaceVariables` 替换变量表.\n *\n * @param variables 要用于替换的变量表\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @example\n * // 执行前的聊天变量: `{爱城华恋: {好感度: 5}}`\n * await replaceVariables({神乐光: {好感度: 5, 认知度: 0}});\n * // 执行后的聊天变量: `{神乐光: {好感度: 5, 认知度: 0}}`\n *\n * @example\n * // 删除 `{神乐光: {好感度: 5}}` 变量\n * let variables = getVariables();\n * _.unset(variables, \"神乐光.好感度\");\n * replaceVariables(variables);\n */\nexport function replaceVariables(variables: Record<string, any>, option: VariableOption = { type: 'chat' }): void {\n  const { type = 'chat' } = option;\n  switch (type) {\n    case 'chat':\n      (chat_metadata as { variables: Object }).variables = variables;\n      saveMetadataDebounced();\n      break;\n    case 'global':\n      extension_settings.variables.global = variables;\n      saveSettingsDebounced();\n      break;\n  }\n\n  console.info(`将${type == 'chat' ? `聊天` : `全局`}变量表替换为:\\n${JSON.stringify(variables, undefined, 2)}`);\n}\n\ntype VariablesUpdater =\n  | ((variables: Record<string, any>) => Record<string, any>)\n  | ((variables: Record<string, any>) => Promise<Record<string, any>>);\n\n/**\n * 用 `updater` 函数更新变量表\n *\n * @param updater 用于更新变量表的函数. 它应该接收变量表作为参数, 并返回更新后的变量表.\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @returns 更新后的变量表\n *\n * @example\n * // 删除 `{神乐光: {好感度: 5}}` 变量\n * await updateVariablesWith(variables => {_.unset(variables, \"神乐光.好感度\"); return variables;});\n *\n * @example\n * // 更新 \"爱城华恋.好感度\" 为原来的 2 倍, 如果该变量不存在则设置为 0\n * await updateVariablesWith(variables => _.update(variables, \"爱城华恋.好感度\", value => value ? value * 2 : 0));\n */\nexport async function updateVariablesWith(updater: VariablesUpdater, option: VariableOption = { type: 'chat' }): Promise<Record<string, any>> {\n  const { type = 'chat' } = option;\n  let variables = await getVariables({ type });\n  variables = await updater(variables);\n  console.info(`[Chat Message][updateVariablesWith] 对${type === 'chat' ? `聊天` : `全局`}变量表进行更新`);\n  replaceVariables(variables, option);\n  return variables;\n}\n\n/**\n * 插入或修改变量值, 取决于变量是否存在.\n *\n * @param variables 要更新的变量\n *   - 如果变量不存在, 则新增该变量\n *   - 如果变量已经存在, 则修改该变量的值\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 聊天变量或全局变量, 默认为聊天变量 'chat'\n *\n * @example\n * // 执行前变量: `{爱城华恋: {好感度: 5}}`\n * await insertOrAssignVariables({爱城华恋: {好感度: 10}, 神乐光: {好感度: 5, 认知度: 0}});\n * // 执行后变量: `{爱城华恋: {好感度: 10}, 神乐光: {好感度: 5, 认知度: 0}}`\n */\nexport async function insertOrAssignVariables(variables: Record<string, any>, option: VariableOption = { type: 'chat' }): Promise<void> {\n  const { type = 'chat' } = option;\n  await updateVariablesWith(old_variables => _.merge(old_variables, variables), { type });\n}\n\n/**\n * 插入新变量, 如果变量已经存在则什么也不做\n *\n * @param variables 要插入的变量\n *   - 如果变量不存在, 则新增该变量\n *   - 如果变量已经存在, 则什么也不做\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 聊天变量或全局变量, 默认为聊天变量 'chat'\n *\n * @example\n * // 执行前变量: `{爱城华恋: {好感度: 5}}`\n * await insertVariables({爱城华恋: {好感度: 10}, 神乐光: {好感度: 5, 认知度: 0}});\n * // 执行后变量: `{爱城华恋: {好感度: 5}, 神乐光: {好感度: 5, 认知度: 0}}`\n */\nexport async function insertVariables(variables: Record<string, any>, option: VariableOption = { type: 'chat' }): Promise<void> {\n  const { type = 'chat' } = option;\n  await updateVariablesWith(old_variables => _.defaultsDeep(old_variables, variables), { type });\n}\n\n/**\n * 删除变量, 如果变量不存在则什么也不做\n *\n * @param variable_path 要删除的变量路径\n *   - 如果变量不存在, 则什么也不做\n *   - 如果变量已经存在, 则删除该变量\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 聊天变量或全局变量, 默认为聊天变量 'chat'\n *\n * @returns 是否成功删除变量\n *\n * @example\n * // 执行前变量: `{爱城华恋: {好感度: 5}}`\n * await deleteVariable(\"爱城华恋.好感度\");\n * // 执行后变量: `{爱城华恋: {}}`\n */\nexport async function deleteVariable(variable_path: string, option: VariableOption = { type: 'chat' }): Promise<boolean> {\n  const { type = 'chat' } = option;\n  let result: boolean = false;\n  await updateVariablesWith(old_variables => { result = _.unset(old_variables, variable_path); return old_variables; }, { type });\n  return result;\n}","import {\n  destroyCharacterLevelOnExtension,\n  initializeCharacterLevelOnExtension,\n} from '@/component/character_level/index';\nimport {\n  destroyMacroOnExtension,\n  initializeMacroOnExtension,\n  registerAllMacros,\n  unregisterAllMacros,\n} from '@/component/macro';\nimport {\n  addCodeToggleButtonsToAllMessages,\n  addRenderingOptimizeSettings,\n  partialRenderEvents,\n  removeRenderingOptimizeSettings,\n  renderAllIframes,\n  renderMessageAfterDelete,\n  renderPartialIframes,\n  tampermonkey_script,\n  viewport_adjust_script,\n} from '@/component/message_iframe';\nimport {\n  ScriptRepository,\n  ScriptType,\n  clearAllScriptsIframe,\n  purgeEmbeddedScripts,\n} from '@/component/script_repository/index';\nimport { iframe_client, window_functions } from '@/iframe_client/index';\nimport { handleIframe } from '@/iframe_server/index';\nimport { checkVariablesEvents, clearTempVariables, shouldUpdateVariables } from '@/iframe_server/variables';\nimport { script_url } from '@/script_url';\nimport { getSettingValue, saveSettingValue } from '@/util/extension_variables';\n\nimport { eventSource, event_types, reloadCurrentChat, saveSettingsDebounced, this_chid } from '@sillytavern/script';\n\nexport let scriptRepo: ScriptRepository;\n\nlet qrBarObserver: MutationObserver | null = null;\n\nconst handleChatChanged = async () => {\n  await scriptRepo.checkEmbeddedScripts();\n\n  await clearAllScriptsIframe();\n  scriptRepo.removeButtonsByType(ScriptType.GLOBAL);\n  scriptRepo.removeButtonsByType(ScriptType.CHARACTER);\n\n  await scriptRepo.loadScriptLibrary();\n  await scriptRepo.runScriptsByType(ScriptType.GLOBAL);\n  await scriptRepo.runScriptsByType(ScriptType.CHARACTER);\n\n  await renderAllIframes();\n  if (getSettingValue('render.rendering_optimize')) {\n    addCodeToggleButtonsToAllMessages();\n  }\n};\n\nconst handleCharacterDeleted = (character: Object) => {\n  purgeEmbeddedScripts({ character });\n};\n\nconst handlePartialRender = (mesId: string) => {\n  const mesIdNumber = parseInt(mesId, 10);\n  renderPartialIframes(mesIdNumber);\n};\n\nconst handleMessageDeleted = (mesId: string) => {\n  const mesIdNumber = parseInt(mesId, 10);\n  clearTempVariables();\n  renderMessageAfterDelete(mesIdNumber);\n  if (getSettingValue('render.rendering_optimize')) {\n    addCodeToggleButtonsToAllMessages();\n  }\n};\n\nconst handleVariableUpdated = (mesId: string) => {\n  const mesIdNumber = parseInt(mesId, 10);\n  shouldUpdateVariables(mesIdNumber);\n};\n\n/**\n * 监听#qr--bar的元素创建且发出事件\n */\nfunction MutationObserverQrBarCreated() {\n  const $qrBar = $('#qr--bar');\n  if ($qrBar.length > 0) {\n    const observer = new MutationObserver(mutations => {\n      mutations.forEach(mutation => {\n        if (mutation.type === 'childList') {\n          mutation.addedNodes.forEach(node => {\n            if (node instanceof Element && node.id === 'qr--bar') {\n              setTimeout(() => {\n                const $THbar = $(`<div class=\"qr--buttons qr--color\" id=\"TH-script-buttons\"></div>`);\n                $('#qr--bar').append($THbar);\n                scriptRepo.addButtonsByType(ScriptType.GLOBAL);\n                scriptRepo.addButtonsByType(ScriptType.CHARACTER);\n              }, 1000);\n            }\n          });\n        }\n      });\n    });\n\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true,\n    });\n  }\n}\n\n/**\n * 取消监听#qr--bar\n */\nfunction removeMutationObserverQrBarCreated() {\n  if (qrBarObserver) {\n    qrBarObserver.disconnect();\n    qrBarObserver = null;\n  }\n}\n\n/**\n * 初始化扩展主设置界面\n */\nexport function initExtensionMainPanel() {\n  const isEnabled = getSettingValue('enabled_extension');\n  if (isEnabled) {\n    handleExtensionToggle(false, true);\n  }\n  $('#extension-enable-toggle')\n    .prop('checked', isEnabled)\n    .on('change', function (event: JQuery.ChangeEvent) {\n      handleExtensionToggle(true, $(event.currentTarget).prop('checked'));\n    });\n}\n\nasync function handleExtensionToggle(userAction: boolean = true, enable: boolean = true) {\n  if (userAction) {\n    await saveSettingValue('enabled_extension', enable);\n  }\n  if (enable) {\n    // 指示器样式\n    $('#extension-status-icon').css('color', 'green').next().text('扩展已启用');\n    MutationObserverQrBarCreated();\n    scriptRepo = ScriptRepository.getInstance();\n\n    script_url.set('iframe_client', iframe_client);\n    script_url.set('window_functions', window_functions);\n    script_url.set('viewport_adjust_script', viewport_adjust_script);\n    script_url.set('tampermonkey_script', tampermonkey_script);\n\n    registerAllMacros();\n    initializeMacroOnExtension();\n    initializeCharacterLevelOnExtension();\n\n    // 重新注入前端卡优化的样式和设置\n    if (userAction && getSettingValue('render.rendering_optimize')) {\n      addRenderingOptimizeSettings();\n    }\n\n    window.addEventListener('message', handleIframe);\n\n    eventSource.on(event_types.CHAT_CHANGED, handleChatChanged);\n    eventSource.on(event_types.CHARACTER_DELETED, handleCharacterDeleted);\n\n    partialRenderEvents.forEach(eventType => {\n      eventSource.on(eventType, handlePartialRender);\n    });\n\n    checkVariablesEvents.forEach(eventType => {\n      eventSource.on(eventType, handleVariableUpdated);\n    });\n    eventSource.on(event_types.MESSAGE_DELETED, handleMessageDeleted);\n    if (userAction && this_chid !== undefined) {\n      await reloadCurrentChat();\n    }\n  } else {\n    // 指示器样式\n    $('#extension-status-icon').css('color', 'red').next().text('扩展已禁用');\n\n    removeMutationObserverQrBarCreated();\n    ScriptRepository.destroyInstance();\n\n    script_url.delete('iframe_client');\n    script_url.delete('window_functions');\n    script_url.delete('viewport_adjust_script');\n    script_url.delete('tampermonkey_script');\n\n    unregisterAllMacros();\n    destroyMacroOnExtension();\n    destroyCharacterLevelOnExtension();\n\n    if (getSettingValue('render.rendering_optimize')) {\n      removeRenderingOptimizeSettings();\n    }\n\n    window.removeEventListener('message', handleIframe);\n\n    eventSource.removeListener(event_types.CHAT_CHANGED, handleChatChanged);\n    eventSource.removeListener(event_types.CHARACTER_DELETED, handleCharacterDeleted);\n\n    partialRenderEvents.forEach(eventType => {\n      eventSource.removeListener(eventType, handlePartialRender);\n    });\n    checkVariablesEvents.forEach(eventType => {\n      eventSource.removeListener(eventType, handleVariableUpdated);\n    });\n    eventSource.removeListener(event_types.MESSAGE_DELETED, handleMessageDeleted);\n    if (userAction && this_chid !== undefined) {\n      await reloadCurrentChat();\n    }\n  }\n  $('#js_slash_runner_text').text(getSettingValue('enabled_extension') ? '关闭前端渲染' : '开启前端渲染');\n  saveSettingsDebounced();\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"MacrosParser\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__.MacrosParser), [\"getLastMessageId\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__.getLastMessageId) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"extension_settings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.extension_settings), [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.getContext), [\"renderExtensionTemplateAsync\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.renderExtensionTemplateAsync), [\"saveMetadataDebounced\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.saveMetadataDebounced), [\"writeExtensionField\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__.writeExtensionField) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"NOTE_MODULE_NAME\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.NOTE_MODULE_NAME), [\"metadata_keys\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.metadata_keys), [\"shouldWIAddPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__.shouldWIAddPrompt) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"ChatCompletion\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.ChatCompletion), [\"Message\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.Message), [\"MessageCollection\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.MessageCollection), [\"isImageInliningSupported\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.isImageInliningSupported), [\"oai_settings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.oai_settings), [\"prepareOpenAIMessages\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.prepareOpenAIMessages), [\"sendOpenAIRequest\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.sendOpenAIRequest), [\"setOpenAIMessageExamples\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setOpenAIMessageExamples), [\"setOpenAIMessages\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setOpenAIMessages), [\"setupChatCompletionPromptManager\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__.setupChatCompletionPromptManager) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"flushEphemeralStoppingStrings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.flushEphemeralStoppingStrings), [\"persona_description_positions\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.persona_description_positions), [\"power_user\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__.power_user) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"Prompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__.Prompt), [\"PromptCollection\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__.PromptCollection) });","import {\n  MAX_INJECTION_DEPTH,\n  activateSendButtons,\n  baseChatReplace,\n  characters,\n  chat,\n  chat_metadata,\n  cleanUpMessage,\n  countOccurrences,\n  deactivateSendButtons,\n  eventSource,\n  extension_prompt_roles,\n  extension_prompt_types,\n  getBiasStrings,\n  getCharacterCardFields,\n  getExtensionPromptRoleByName,\n  getMaxContextSize,\n  isOdd,\n  name1,\n  name2,\n  saveChatConditional,\n  saveSettingsDebounced,\n  setExtensionPrompt,\n  setGenerationProgress,\n  showSwipeButtons,\n  stopGeneration,\n  substituteParams,\n  this_chid,\n} from '@sillytavern/script';\nimport { NOTE_MODULE_NAME, metadata_keys, shouldWIAddPrompt } from '@sillytavern/scripts/authors-note';\nimport { extension_settings, getContext } from '@sillytavern/scripts/extensions';\nimport { getRegexedString, regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\nimport {\n  ChatCompletion,\n  Message,\n  MessageCollection,\n  isImageInliningSupported,\n  oai_settings,\n  prepareOpenAIMessages,\n  sendOpenAIRequest,\n  setOpenAIMessageExamples,\n  setOpenAIMessages,\n  setupChatCompletionPromptManager,\n} from '@sillytavern/scripts/openai';\nimport {\n  flushEphemeralStoppingStrings,\n  persona_description_positions,\n  power_user,\n} from '@sillytavern/scripts/power-user';\nimport { Prompt, PromptCollection } from '@sillytavern/scripts/PromptManager';\nimport { Stopwatch, getBase64Async } from '@sillytavern/scripts/utils';\nimport { getWorldInfoPrompt, wi_anchor_position, world_info_include_names } from '@sillytavern/scripts/world-info';\n\ninterface GenerateConfig {\n  /** 用户输入 */\n  user_input?: string;\n\n  /**\n   * 图片输入，支持以下格式：\n   * - File 对象：通过 input[type=\"file\"] 获取的文件对象\n   * - Base64 字符串：图片的 base64 编码\n   * - URL 字符串：图片的在线地址\n   */\n  image?: File | string;\n\n  /**\n   * 是否启用流式传输; 默认为 `false`.\n   *\n   * 若启用流式传输, 每次得到流式传输结果时, 函数将会发送事件:\n   * - `ifraem_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n   * - `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n   *\n   * @example\n   * eventOn(iframe_events.STREAM_TOKEN_RECEIVED_FULLY, text => console.info(text));\n   */\n  should_stream?: boolean;\n\n  /**\n   * 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词.\n   *   如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖角色描述.\n   */\n  overrides?: Overrides;\n\n  /** 要额外注入的提示词 */\n  injects?: InjectionPrompt[];\n\n  /** 最多使用多少条聊天历史; 默认为 'all' */\n  max_chat_history?: 'all' | number;\n}\n\ninterface GenerateRawConfig {\n  /**\n   * 用户输入.\n   *\n   * 如果设置, 则无论 ordered_prompts 中是否有 'user_input' 都会加入该用户输入提示词; 默认加入在 'chat_history' 末尾.\n   */\n  user_input?: string;\n\n  /**\n   * 图片输入，支持以下格式：\n   * - File 对象：通过 input[type=\"file\"] 获取的文件对象\n   * - Base64 字符串：图片的 base64 编码\n   * - URL 字符串：图片的在线地址\n   */\n  image?: File | string;\n\n  /**\n   * 是否启用流式传输; 默认为 `false`.\n\n   *\n   * 若启用流式传输, 每次得到流式传输结果时, 函数将会发送事件:\n   * - `ifraem_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n   * - `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n   *\n   * @example\n   * eventOn(iframe_events.STREAM_TOKEN_RECEIVED_FULLY, text => console.info(text));\n   */\n  should_stream?: boolean;\n\n  /**\n   * 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词.\n   *   如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖提示词\n   */\n  overrides?: Overrides;\n\n  /* 要注入的提示词 */\n  injects?: InjectionRawPrompt[];\n\n  /**\n   * 一个提示词数组, 数组元素将会按顺序发给 ai, 因而相当于自定义预设. 该数组允许存放两种类型:\n   * - `BuiltinPrompt`: 内置提示词. 由于不使用预设, 如果需要 \"角色描述\" 等提示词, 你需要自己指定要用哪些并给出顺序\n   *                      如果不想自己指定, 可通过 `builtin_prompt_default_order` 得到酒馆默认预设所使用的顺序 (但对于这种情况, 也许你更应该用 `generate`).\n   * - `RolePrompt`: 要额外给定的提示词.\n   */\n\n  ordered_prompts?: (BuiltinPrompt | RolePrompt)[];\n\n  /** 最多使用多少条聊天历史; 默认为 'all' */\n  max_chat_history?: 'all' | number;\n}\n\n//----------------------------------------------------------------------------------------------------------------------\ninterface RolePrompt {\n  role: 'system' | 'assistant' | 'user';\n  content: string;\n  image?: File | string;\n}\n\ninterface InjectionPrompt {\n  role: 'system' | 'assistant' | 'user';\n  content: string;\n\n  /** 要注入的位置. 'none' 不会发给 ai, 但能用来激活世界书条目. */\n  position: 'before_prompt' | 'in_chat' | 'after_prompt' | 'none';\n\n  depth: number;\n\n  /** 是否要加入世界书扫描中 */\n  should_scan: boolean;\n}\n\ninterface InjectionRawPrompt {\n  role: 'system' | 'assistant' | 'user';\n  content: string;\n\n  /** 要注入的位置. 'none' 不会发给 ai, 但能用来激活世界书条目. */\n  position: 'in_chat' | 'none';\n\n  depth: number;\n\n  /** 是否要加入世界书扫描中 */\n  should_scan: boolean;\n}\n\ninterface Overrides {\n  world_info_before?: string; // 世界书(角色定义前)\n  persona_description?: string; // 用户描述\n  char_description?: string; // 角色描述\n  char_personality?: string; // 角色性格\n  scenario?: string; // 场景\n  world_info_after?: string; // 世界书(角色定义后)\n  dialogue_examples?: string; // 对话示例\n\n  /**\n   * 聊天历史\n   * - `with_depth_entries`: 是否启用世界书中按深度插入的条目; 默认为 `true`\n   * - `author_note`: 若设置, 覆盖 \"作者注释\" 为给定的字符串\n   * - `prompts`: 若设置, 覆盖 \"聊天历史\" 为给定的提示词\n   */\n  chat_history?: {\n    with_depth_entries?: boolean;\n    author_note?: string;\n    prompts?: RolePrompt[];\n  };\n}\n\n/**\n * 预设为内置提示词设置的默认顺序\n */\nconst builtin_prompt_default_order: BuiltinPrompt[] = [\n  'world_info_before', // 世界书(角色定义前)\n  'persona_description', // 用户描述\n  'char_description', // 角色描述\n  'char_personality', // 角色性格\n  'scenario', // 场景\n  'world_info_after', // 世界书(角色定义后)\n  'dialogue_examples', // 对话示例\n  'chat_history', // 聊天历史 (含世界书中按深度插入的条目、作者注释)\n  'user_input', // 用户输入\n];\n\ntype BuiltinPrompt =\n  | 'world_info_before' // 世界书(角色定义前)\n  | 'persona_description' // 用户描述\n  | 'char_description' // 角色描述\n  | 'char_personality' // 角色性格\n  | 'scenario' // 场景\n  | 'world_info_after' // 世界书(角色定义后)\n  | 'dialogue_examples' // 对话示例\n  | 'chat_history' // 聊天历史 (含世界书中按深度插入的条目、作者注释)\n  | 'user_input'; // 用户输入\n\nlet abortController = new AbortController();\n\nfunction fromOverrides(overrides: Overrides): detail.OverrideConfig {\n  return {\n    world_info_before: overrides.world_info_before,\n    persona_description: overrides.persona_description,\n    char_description: overrides.char_description,\n    char_personality: overrides.char_personality,\n    scenario: overrides.scenario,\n    world_info_after: overrides.world_info_after,\n    dialogue_examples: overrides.dialogue_examples,\n\n    with_depth_entries: overrides.chat_history?.with_depth_entries,\n    author_note: overrides.chat_history?.author_note,\n    chat_history: overrides.chat_history?.prompts,\n  };\n}\n\nfunction fromInjectionPrompt(inject: InjectionPrompt): InjectionPrompt {\n  const position_map = {\n    before_prompt: 'before_prompt',\n    in_chat: 'in_chat',\n    after_prompt: 'after_prompt',\n    none: 'none',\n  } as const;\n  return {\n    role: inject.role,\n    content: inject.content,\n    position: position_map[inject.position] as 'before_prompt' | 'in_chat' | 'after_prompt' | 'none',\n    depth: inject.depth,\n    should_scan: inject.should_scan,\n  };\n}\n\nfunction fromGenerateConfig(config: GenerateConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: true,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    overrides: config.overrides !== undefined ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects !== undefined ? config.injects.map(fromInjectionPrompt) : undefined,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n  };\n}\n\nfunction fromGenerateRawConfig(config: GenerateRawConfig): detail.GenerateParams {\n  return {\n    user_input: config.user_input,\n    use_preset: false,\n    image: config.image,\n    stream: config.should_stream ?? false,\n    max_chat_history: typeof config.max_chat_history === 'number' ? config.max_chat_history : undefined,\n    overrides: config.overrides ? fromOverrides(config.overrides) : undefined,\n    inject: config.injects ? config.injects.map(fromInjectionPrompt) : undefined,\n    order: config.ordered_prompts,\n  };\n}\n\nnamespace detail {\n  export interface CustomPrompt {\n    role: 'system' | 'user' | 'assistant';\n    content: string;\n  }\n\n  // 覆盖配置类型\n  export interface OverrideConfig {\n    world_info_before?: string; // 世界书（角色定义之前的部分）\n    persona_description?: string; // 用户描述\n    char_description?: string; // 角色描述\n    char_personality?: string; // 角色高级定义-性格\n    scenario?: string; // 场景\n    world_info_after?: string; // 世界书（角色定义之后的部分）\n    dialogue_examples?: string; // 角色高级定义-对话示例\n\n    with_depth_entries?: boolean; // 世界书深度\n    author_note?: string; // 作者注释\n    chat_history?: RolePrompt[]; // 聊天历史\n  }\n\n  // 内置提示词条目类型\n  export type BuiltinPromptEntry =\n    | 'world_info_before' // 世界书(角色定义前)\n    | 'persona_description' // 用户描述\n    | 'char_description' // 角色描述\n    | 'char_personality' // 角色性格\n    | 'scenario' // 场景\n    | 'world_info_after' // 世界书(角色定义后)\n    | 'dialogue_examples' // 对话示例\n    | 'chat_history' // 聊天历史\n    | 'user_input'; // 用户输入\n\n  // 生成参数类型\n  export interface GenerateParams {\n    user_input?: string;\n    use_preset?: boolean;\n    image?: File | string;\n    stream?: boolean;\n    overrides?: OverrideConfig;\n    max_chat_history?: number;\n    inject?: InjectionPrompt[];\n    order?: Array<BuiltinPromptEntry | CustomPrompt>;\n  }\n}\n\nconst type = 'quiet';\nconst dryRun = false;\n\nconst character_names_behavior = {\n  NONE: -1,\n  DEFAULT: 0,\n  COMPLETION: 1,\n  CONTENT: 2,\n};\n\nconst roleTypes: Record<\n  'system' | 'user' | 'assistant',\n  (typeof extension_prompt_roles)[keyof typeof extension_prompt_roles]\n> = {\n  system: extension_prompt_roles.SYSTEM,\n  user: extension_prompt_roles.USER,\n  assistant: extension_prompt_roles.ASSISTANT,\n};\nconst default_order: detail.BuiltinPromptEntry[] = [\n  'world_info_before',\n  'persona_description',\n  'char_description',\n  'char_personality',\n  'scenario',\n  'world_info_after',\n  'dialogue_examples',\n  'chat_history',\n  'user_input',\n];\n\nclass StreamingProcessor {\n  public generator: () => AsyncGenerator<{ text: string }, void, void>;\n  public stoppingStrings?: any;\n  public result: string;\n  public isStopped: boolean;\n  public isFinished: boolean;\n  public abortController: AbortController;\n  private messageBuffer: string;\n\n  constructor() {\n    this.result = '';\n    this.messageBuffer = '';\n    this.isStopped = false;\n    this.isFinished = false;\n    this.generator = this.nullStreamingGeneration;\n    this.abortController = new AbortController();\n  }\n\n  onProgressStreaming(text: string, isFinal: boolean) {\n    // 计算增量文本\n    const newText = text.slice(this.messageBuffer.length);\n    this.messageBuffer = text;\n\n    let processedText = cleanUpMessage(newText, false, false, !isFinal, this.stoppingStrings);\n\n    const charsToBalance = ['*', '\"', '```'];\n    for (const char of charsToBalance) {\n      if (!isFinal && isOdd(countOccurrences(processedText, char))) {\n        const separator = char.length > 1 ? '\\n' : '';\n        processedText = processedText.trimEnd() + separator + char;\n      }\n    }\n\n    eventSource.emit('js_stream_token_received_fully', text);\n    eventSource.emit('js_stream_token_received_incrementally', processedText);\n\n    if (isFinal) {\n      const fullText = cleanUpMessage(text, false, false, false, this.stoppingStrings);\n      eventSource.emit('js_generation_ended', fullText);\n    }\n  }\n\n  onErrorStreaming() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n    this.isStopped = true;\n    unblockGeneration();\n    saveChatConditional();\n  }\n\n  // eslint-disable-next-line require-yield\n  async *nullStreamingGeneration(): AsyncGenerator<{ text: string }, void, void> {\n    throw Error('Generation function for streaming is not hooked up');\n  }\n\n  async generate() {\n    try {\n      const sw = new Stopwatch(1000 / power_user.streaming_fps);\n      const timestamps = [];\n\n      for await (const { text } of this.generator()) {\n        timestamps.push(Date.now());\n        if (this.isStopped) {\n          this.messageBuffer = '';\n          return;\n        }\n\n        this.result = text;\n        await sw.tick(() => this.onProgressStreaming(text, false));\n      }\n\n      if (!this.isStopped) {\n        this.onProgressStreaming(this.result, true);\n      } else {\n        this.messageBuffer = '';\n      }\n\n      const seconds = (timestamps[timestamps.length - 1] - timestamps[0]) / 1000;\n      console.warn(\n        `Stream stats: ${timestamps.length} tokens, ${seconds.toFixed(2)} seconds, rate: ${Number(\n          timestamps.length / seconds,\n        ).toFixed(2)} TPS`,\n      );\n    } catch (err) {\n      if (!this.isFinished) {\n        this.onErrorStreaming();\n        throw Error(`Generate method error: ${err}`);\n      }\n      this.messageBuffer = '';\n      return this.result;\n    }\n\n    this.isFinished = true;\n    return this.result;\n  }\n}\n\nasync function iframeGenerate({\n  user_input = '',\n  use_preset = true,\n  image = undefined,\n  overrides = undefined,\n  max_chat_history = undefined,\n  inject = [],\n  order = undefined,\n  stream = false,\n}: detail.GenerateParams = {}): Promise<string> {\n  //初始化\n  abortController = new AbortController();\n\n  // 1. 处理用户输入（正则，宏）\n  const processedUserInput = processUserInput(substituteParams(user_input)) || '';\n\n  // 2. 准备过滤后的基础数据\n  const baseData = await prepareAndOverrideData(\n    {\n      overrides,\n      max_chat_history,\n      inject,\n      order,\n    },\n    processedUserInput,\n  );\n\n  // 3. 根据 use_preset 分流处理\n  const generate_data = use_preset\n    ? await handlePresetPath(baseData, processedUserInput, {\n        image,\n        overrides,\n        max_chat_history,\n        inject,\n        order,\n      })\n    : await handleCustomPath(\n        baseData,\n        {\n          image,\n          overrides,\n          max_chat_history,\n          inject,\n          order,\n        },\n        processedUserInput,\n      );\n  console.log('[Generate:发送提示词]', generate_data);\n  // 4. 根据 stream 参数决定生成方式\n  return await generateResponse(generate_data, stream);\n}\n\nasync function prepareAndOverrideData(\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const getOverrideContent = (identifier: string): string | RolePrompt[] | undefined => {\n    if (!config.overrides) return undefined;\n    const value = config.overrides[identifier as keyof detail.OverrideConfig];\n    if (typeof value === 'boolean') return undefined;\n    return value;\n  };\n\n  // 1. 处理角色卡高级定义角色备注 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config)) {\n    handleCharDepthPrompt();\n  }\n\n  // 2. 设置作者注释 - 仅在chat_history未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('author_note', config)) {\n    setAuthorNotePrompt(config);\n  }\n\n  // 3. 处理user角色描述 - 仅在chat_history和persona_description都未被过滤时执行\n  if (!isPromptFiltered('chat_history', config) && !isPromptFiltered('persona_description', config)) {\n    setPersonaDescriptionExtensionPrompt();\n  }\n\n  // 4. 获取角色卡基础字段\n  const {\n    description: rawDescription,\n    personality: rawPersonality,\n    persona: rawPersona,\n    scenario: rawScenario,\n    mesExamples: rawMesExamples,\n    system,\n    jailbreak,\n  } = getCharacterCardFields();\n\n  // 判断是否被过滤,如果被过滤返回空字符串,否则返回override的值或原始值\n  const description = isPromptFiltered('char_description', config)\n    ? ''\n    : getOverrideContent('char_description') ?? rawDescription;\n\n  const personality = isPromptFiltered('char_personality', config)\n    ? ''\n    : getOverrideContent('char_personality') ?? rawPersonality;\n\n  const persona = isPromptFiltered('persona_description', config)\n    ? ''\n    : getOverrideContent('persona_description') ?? rawPersona;\n\n  const scenario = isPromptFiltered('scenario', config) ? '' : getOverrideContent('scenario') ?? rawScenario;\n\n  const mesExamples = isPromptFiltered('dialogue_examples', config)\n    ? ''\n    : (getOverrideContent('dialogue_examples') as string) ?? rawMesExamples;\n\n  let mesExamplesArray = parseMesExamples(mesExamples);\n  let oaiMessageExamples = [];\n  oaiMessageExamples = setOpenAIMessageExamples(mesExamplesArray);\n\n  // 5. 获取偏置字符串\n  const { promptBias } = getBiasStrings(processedUserInput, type);\n\n  // 6. 处理自定义注入的提示词\n  if (config.inject) {\n    await handleInjectedPrompts(config);\n  }\n\n  // 7. 处理聊天记录\n  let oaiMessages = [];\n  if (config.overrides?.chat_history) {\n    oaiMessages = [...config.overrides.chat_history].reverse();\n  } else {\n    oaiMessages = setOpenAIMessages(await processChatHistory(chat));\n    if (config.max_chat_history !== undefined) {\n      oaiMessages = oaiMessages.slice(0, config.max_chat_history);\n    }\n  }\n\n  // 添加临时消息用于激活世界书\n  addTemporaryUserMessage(processedUserInput);\n  // 8. 处理世界信息\n  const worldInfo = await processWorldInfo(oaiMessages as RolePrompt[], config);\n\n  // 移除临时消息\n  removeTemporaryUserMessage();\n\n  // 9. 处理世界书消息示例\n  mesExamplesArray = !isPromptFiltered('dialogue_examples', config)\n    ? await processMessageExamples(mesExamplesArray, worldInfo.worldInfoExamples)\n    : [];\n\n  return {\n    characterInfo: {\n      description,\n      personality,\n      persona,\n      scenario,\n      system: system,\n      jailbreak: jailbreak,\n    },\n    chatContext: {\n      oaiMessages,\n      oaiMessageExamples,\n      promptBias,\n    },\n    worldInfo,\n  };\n}\n\n//处理角色卡中的深度提示词\nfunction handleCharDepthPrompt() {\n  const depthPromptText =\n    // @ts-ignore\n    baseChatReplace(characters[this_chid]?.data?.extensions?.depth_prompt?.prompt?.trim(), name1, name2) || '';\n  // @ts-ignore\n  const depthPromptDepth = characters[this_chid]?.data?.extensions?.depth_prompt?.depth ?? '4';\n  const depthPromptRole = getExtensionPromptRoleByName(\n    // @ts-ignore\n    characters[this_chid]?.data?.extensions?.depth_prompt?.role ?? 'system',\n  );\n  setExtensionPrompt(\n    'DEPTH_PROMPT',\n    depthPromptText,\n    extension_prompt_types.IN_CHAT,\n    depthPromptDepth,\n    // @ts-ignore\n    extension_settings.note.allowWIScan,\n    depthPromptRole,\n  );\n}\n//处理作者注释\nfunction setAuthorNotePrompt(config: detail.GenerateParams) {\n  const authorNoteOverride = config?.overrides?.author_note;\n  // @ts-ignore\n  const prompt = authorNoteOverride ?? ($('#extension_floating_prompt').val() as string);\n\n  setExtensionPrompt(\n    NOTE_MODULE_NAME,\n    prompt,\n    // @ts-ignore\n    chat_metadata[metadata_keys.position],\n    // @ts-ignore\n    chat_metadata[metadata_keys.depth],\n    // @ts-ignore\n    extension_settings.note.allowWIScan,\n    // @ts-ignore\n    chat_metadata[metadata_keys.role],\n  );\n}\n//用户角色描述提示词设置为提示词管理器之外的选项的情况\nfunction setPersonaDescriptionExtensionPrompt() {\n  const description = power_user.persona_description;\n  const INJECT_TAG = 'PERSONA_DESCRIPTION';\n  setExtensionPrompt(INJECT_TAG, '', extension_prompt_types.IN_PROMPT, 0);\n\n  if (!description || power_user.persona_description_position === persona_description_positions.NONE) {\n    return;\n  }\n\n  //当user信息在作者注释前后 - 仅在作者注释未被过滤时执行\n  const promptPositions = [persona_description_positions.BOTTOM_AN, persona_description_positions.TOP_AN];\n\n  if (promptPositions.includes(power_user.persona_description_position) && shouldWIAddPrompt) {\n    // @ts-ignore\n    const originalAN = getContext().extensionPrompts[NOTE_MODULE_NAME].value;\n    const ANWithDesc =\n      power_user.persona_description_position === persona_description_positions.TOP_AN\n        ? `${description}\\n${originalAN}`\n        : `${originalAN}\\n${description}`;\n\n    setExtensionPrompt(\n      NOTE_MODULE_NAME,\n      ANWithDesc,\n      // @ts-ignore\n      chat_metadata[metadata_keys.position],\n      // @ts-ignore\n      chat_metadata[metadata_keys.depth],\n      // @ts-ignore\n      extension_settings.note.allowWIScan,\n      // @ts-ignore\n      chat_metadata[metadata_keys.role],\n    );\n  }\n\n  // user信息深度注入不依赖于作者注释的状态，直接应用\n  if (power_user.persona_description_position === persona_description_positions.AT_DEPTH) {\n    setExtensionPrompt(\n      INJECT_TAG,\n      description,\n      extension_prompt_types.IN_CHAT,\n      power_user.persona_description_depth,\n      true,\n      power_user.persona_description_role,\n    );\n  }\n}\nasync function handleInjectedPrompts(promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>) {\n  if (!promptConfig || !Array.isArray(promptConfig.inject)) return;\n\n  const injects = promptConfig.inject;\n\n  const position_map = {\n    before_prompt: extension_prompt_types.BEFORE_PROMPT,\n    in_chat: extension_prompt_types.IN_CHAT,\n    after_prompt: extension_prompt_types.IN_PROMPT,\n    none: extension_prompt_types.NONE,\n  } as const;\n\n  for (const inject of injects) {\n    const validatedInject = {\n      role: roleTypes[inject.role] ?? extension_prompt_roles.SYSTEM,\n      content: inject.content || '',\n      depth: Number(inject.depth) || 0,\n      should_scan: Boolean(inject.should_scan) || true,\n      position: position_map[inject.position as keyof typeof position_map] ?? extension_prompt_types.IN_CHAT,\n    };\n\n    // 设置用户自定义注入提示词\n    setExtensionPrompt(\n      `INJECTION-${inject.depth}-${inject.role}`,\n      validatedInject.content,\n      validatedInject.position,\n      validatedInject.depth,\n      validatedInject.should_scan,\n      validatedInject.role,\n    );\n  }\n}\n// 处理聊天记录\nasync function processChatHistory(chatHistory: any[]) {\n  const coreChat = chatHistory.filter(x => !x.is_system);\n\n  return await Promise.all(\n    coreChat.map(async (chatItem, index) => {\n      const message = chatItem.mes;\n      const regexType = chatItem.is_user ? regex_placement.USER_INPUT : regex_placement.AI_OUTPUT;\n\n      const regexedMessage = getRegexedString(message, regexType, {\n        isPrompt: true,\n        depth: coreChat.length - index - 1,\n      });\n\n      return {\n        ...chatItem,\n        mes: regexedMessage,\n        index,\n      };\n    }),\n  );\n}\n\n// 处理世界书\nasync function processWorldInfo(\n  oaiMessages: RolePrompt[],\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const chatForWI = oaiMessages\n    .filter(x => x.role !== 'system')\n    .map(x => {\n      const name = x.role === 'user' ? name1 : name2;\n      return world_info_include_names ? `${name}: ${x.content}` : x.content;\n    })\n    .reverse();\n\n  const this_max_context = getMaxContextSize();\n  const { worldInfoString, worldInfoBefore, worldInfoAfter, worldInfoExamples, worldInfoDepth } =\n    await getWorldInfoPrompt(chatForWI, this_max_context, dryRun);\n\n  await clearInjectionPrompts(['customDepthWI']);\n\n  if (!isPromptFiltered('with_depth_entries', config)) {\n    processWorldInfoDepth(worldInfoDepth);\n  }\n\n  // 先检查是否被过滤，如果被过滤直接返回null\n  const finalWorldInfoBefore = isPromptFiltered('world_info_before', config)\n    ? null\n    : config.overrides?.world_info_before !== undefined\n    ? config.overrides.world_info_before\n    : worldInfoBefore;\n\n  const finalWorldInfoAfter = isPromptFiltered('world_info_after', config)\n    ? null\n    : config.overrides?.world_info_after !== undefined\n    ? config.overrides.world_info_after\n    : worldInfoAfter;\n\n  return {\n    worldInfoString,\n    worldInfoBefore: finalWorldInfoBefore,\n    worldInfoAfter: finalWorldInfoAfter,\n    worldInfoExamples,\n    worldInfoDepth: !isPromptFiltered('with_depth_entries', config) ? worldInfoDepth : null,\n  };\n}\n// 处理世界信息深度部分\nfunction processWorldInfoDepth(worldInfoDepth: any[]) {\n  if (Array.isArray(worldInfoDepth)) {\n    worldInfoDepth.forEach(entry => {\n      const joinedEntries = entry.entries.join('\\n');\n      setExtensionPrompt(\n        `customDepthWI-${entry.depth}-${entry.role}`,\n        joinedEntries,\n        extension_prompt_types.IN_CHAT,\n        entry.depth,\n        false,\n        entry.role,\n      );\n    });\n  }\n}\n// 处理世界书中示例前后\nasync function processMessageExamples(mesExamplesArray: string[], worldInfoExamples: any[]): Promise<string[]> {\n  // 处理世界信息中的示例\n  for (const example of worldInfoExamples) {\n    if (!example.content.length) continue;\n\n    const formattedExample = baseChatReplace(example.content, name1, name2);\n    const cleanedExample = parseMesExamples(formattedExample);\n\n    if (example.position === wi_anchor_position.before) {\n      mesExamplesArray.unshift(...cleanedExample);\n    } else {\n      mesExamplesArray.push(...cleanedExample);\n    }\n  }\n\n  return mesExamplesArray;\n}\n//处理对话示例格式\nfunction parseMesExamples(examplesStr: string) {\n  if (examplesStr.length === 0 || examplesStr === '<START>') {\n    return [];\n  }\n\n  if (!examplesStr.startsWith('<START>')) {\n    examplesStr = '<START>\\n' + examplesStr.trim();\n  }\n  const blockHeading = '<START>\\n';\n  const splitExamples = examplesStr\n    .split(/<START>/gi)\n    .slice(1)\n    .map(block => `${blockHeading}${block.trim()}\\n`);\n\n  return splitExamples;\n}\n//用户输入先正则处理\nfunction processUserInput(user_input: string) {\n  if (user_input === '') {\n    user_input = oai_settings.send_if_empty.trim();\n  }\n  return getRegexedString(user_input, regex_placement.USER_INPUT, {\n    isPrompt: true,\n    depth: 0,\n  });\n}\n//使用预设\nasync function handlePresetPath(\n  baseData: any,\n  processedUserInput: string,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  // prepareOpenAIMessages会从设置里读取场景因此临时覆盖\n  let originalScenario = null;\n\n  try {\n    const scenarioOverride = config?.overrides?.scenario;\n    // @ts-ignore\n    if (scenarioOverride && characters && characters[this_chid]) {\n      // 保存原始场景\n      // @ts-ignore\n      originalScenario = characters[this_chid].scenario || null;\n      // @ts-ignore\n      characters[this_chid].scenario = scenarioOverride;\n    }\n    // 添加user消息(一次性)\n    const userMessageTemp = {\n      role: 'user',\n      content: processedUserInput,\n      image: config.image,\n    };\n\n    if (config.image) {\n      userMessageTemp.image = await convertFileToBase64(config.image);\n    }\n\n    baseData.chatContext.oaiMessages.unshift(userMessageTemp);\n\n    const messageData = {\n      name2,\n      charDescription: baseData.characterInfo.description,\n      charPersonality: baseData.characterInfo.personality,\n      Scenario: baseData.characterInfo.scenario,\n      worldInfoBefore: baseData.worldInfo.worldInfoBefore,\n      worldInfoAfter: baseData.worldInfo.worldInfoAfter,\n      extensionPrompts: getContext().extensionPrompts,\n      bias: baseData.chatContext.promptBias,\n      type: 'normal',\n      quietPrompt: '',\n      quietImage: null,\n      cyclePrompt: '',\n      systemPromptOverride: baseData.characterInfo.system,\n      jailbreakPromptOverride: baseData.characterInfo.jailbreak,\n      personaDescription: baseData.characterInfo.persona,\n      messages: baseData.chatContext.oaiMessages,\n      messageExamples: baseData.chatContext.oaiMessageExamples,\n    };\n\n    const [prompt] = await prepareOpenAIMessages(messageData as any, dryRun);\n\n    return { prompt };\n  } finally {\n    // 恢复原始场景\n    // @ts-ignore\n    if (originalScenario !== null && characters && characters[this_chid]) {\n      // @ts-ignore\n      characters[this_chid].scenario = originalScenario;\n    }\n  }\n}\nasync function convertSystemPromptsToCollection(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n) {\n  const promptCollection = new PromptCollection();\n  const examplesCollection = new MessageCollection('dialogue_examples');\n  // 处理自定义注入\n  const customPrompts = (promptConfig.order || default_order)\n    .map((item, index) => {\n      if (typeof item === 'object' && item.role && item.content) {\n        const identifier = `custom_prompt_${index}`;\n        return {\n          identifier,\n          role: item.role as 'system' | 'user' | 'assistant',\n          content: item.content,\n        };\n      }\n      return null;\n    })\n    .filter((item): item is NonNullable<typeof item> => item !== null);\n\n  for (const prompt of customPrompts) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: prompt.identifier,\n        // @ts-ignore\n        role: prompt.role,\n        content: prompt.content,\n        system_prompt: prompt.role === 'system',\n      }),\n    );\n  }\n\n  // 处理角色信息\n  const characterPrompts = [\n    {\n      id: 'char_description',\n      content: baseData.characterInfo.description,\n      role: 'system',\n    },\n    {\n      id: 'char_personality',\n      content: baseData.characterInfo.personality,\n      role: 'system',\n    },\n    {\n      id: 'scenario',\n      content: baseData.characterInfo.scenario,\n      role: 'system',\n    },\n  ];\n\n  // 添加角色相关提示词\n  characterPrompts.forEach(prompt => {\n    if (prompt.content) {\n      promptCollection.add(\n        // @ts-ignore\n        new Prompt({\n          // @ts-ignore\n          identifier: prompt.id,\n          // @ts-ignore\n          role: prompt.role,\n          // @ts-ignore\n          content: prompt.content,\n          // @ts-ignore\n          system_prompt: true,\n        }),\n      );\n    }\n  });\n\n  //当user信息在提示词管理器中时\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.IN_PROMPT\n  ) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: 'persona_description',\n        // @ts-ignore\n        role: 'system',\n        // @ts-ignore\n        content: baseData.characterInfo.persona,\n        // @ts-ignore\n        system_prompt: true,\n      }),\n    );\n  }\n\n  // 处理世界信息\n  if (baseData.worldInfo.world_info_before) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: 'world_info_before',\n        // @ts-ignore\n        role: 'system',\n        // @ts-ignore\n        content: baseData.worldInfo.world_info_before,\n        // @ts-ignore\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.worldInfo.world_info_after) {\n    promptCollection.add(\n      // @ts-ignore\n      new Prompt({\n        // @ts-ignore\n        identifier: 'world_info_after',\n        // @ts-ignore\n        role: 'system',\n        // @ts-ignore\n        content: baseData.worldInfo.world_info_after,\n        // @ts-ignore\n        system_prompt: true,\n      }),\n    );\n  }\n\n  if (baseData.chatContext.oaiMessageExamples.length > 0) {\n    // 遍历所有对话示例\n    for (const dialogue of [...baseData.chatContext.oaiMessageExamples]) {\n      const dialogueIndex = baseData.chatContext.oaiMessageExamples.indexOf(dialogue);\n      const chatMessages = [];\n\n      for (let promptIndex = 0; promptIndex < dialogue.length; promptIndex++) {\n        const prompt = dialogue[promptIndex];\n        const role = 'system';\n        const content = prompt.content || '';\n        const identifier = `dialogue_examples ${dialogueIndex}-${promptIndex}`;\n\n        const chatMessage = await Message.createAsync(role, content, identifier);\n        await chatMessage.setName(prompt.name);\n        chatMessages.push(chatMessage);\n      }\n      for (const message of chatMessages) {\n        examplesCollection.add(message);\n      }\n    }\n  }\n  return {\n    systemPrompts: promptCollection,\n    dialogue_examples: examplesCollection,\n  };\n}\n//不使用预设\nasync function handleCustomPath(\n  baseData: any,\n  config: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  processedUserInput: string,\n) {\n  const chatCompletion = new ChatCompletion();\n  chatCompletion.setTokenBudget(oai_settings.openai_max_context, oai_settings.openai_max_tokens);\n  chatCompletion.reserveBudget(3);\n  const orderArray = config.order || default_order;\n  const positionMap: Record<string, number> = orderArray.reduce((acc: Record<string, number>, item, index) => {\n    if (typeof item === 'string') {\n      acc[item.toLowerCase()] = index;\n    } else if (typeof item === 'object') {\n      acc[`custom_prompt_${index}`] = index;\n    }\n    return acc;\n  }, {});\n\n  //转换为集合\n  const { systemPrompts, dialogue_examples } = await convertSystemPromptsToCollection(baseData, config);\n  const addToChatCompletionInOrder = async (source: any, index: number) => {\n    if (typeof source === 'object') {\n      // 处理自定义注入\n      const collection = new MessageCollection(`custom_prompt_${index}`);\n      const message = await Message.createAsync(source.role, source.content, `custom_prompt_${index}`);\n      collection.add(message);\n      chatCompletion.add(collection, index);\n    } else if (systemPrompts.has(source)) {\n      // 处理普通提示词\n      const prompt = systemPrompts.get(source);\n      const collection = new MessageCollection(source);\n      const message = await Message.fromPromptAsync(prompt);\n      collection.add(message);\n      chatCompletion.add(collection, positionMap[source]);\n    }\n  };\n\n  // 处理所有类型的提示词\n  for (const [index, item] of orderArray.entries()) {\n    if (typeof item === 'string') {\n      // 使用 isPromptFiltered 替代 promptFilter 判断\n      if (!isPromptFiltered(item, config)) {\n        await addToChatCompletionInOrder(item, index);\n      }\n    } else if (typeof item === 'object' && item.role && item.content) {\n      await addToChatCompletionInOrder(item, index);\n    }\n  }\n\n  const dialogue_examplesIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'dialogue_examples',\n  );\n\n  if (dialogue_examplesIndex !== -1 && !isPromptFiltered('dialogue_examples', config)) {\n    chatCompletion.add(dialogue_examples, dialogue_examplesIndex);\n  }\n  //给user输入预留token\n  const userInputMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n  chatCompletion.reserveBudget(userInputMessage);\n\n  await processChatHistoryAndInject(baseData, config, chatCompletion, processedUserInput);\n  chatCompletion.freeBudget(userInputMessage);\n\n  //根据当前预设决定是否合并连续系统role消息\n  if (oai_settings.squash_system_messages) {\n    await chatCompletion.squashSystemMessages();\n  }\n  const prompt = chatCompletion.getChat();\n  return { prompt };\n}\n\nasync function processChatHistoryAndInject(\n  baseData: any,\n  promptConfig: Omit<detail.GenerateParams, 'user_input' | 'use_preset'>,\n  chatCompletion: ChatCompletion,\n  processedUserInput: string,\n) {\n  const orderArray = promptConfig.order || default_order;\n  const chatHistoryIndex = orderArray.findIndex(\n    item => typeof item === 'string' && item.toLowerCase() === 'chat_history',\n  );\n  const userInputIndex = orderArray.findIndex(item => typeof item === 'string' && item.toLowerCase() === 'user_input');\n\n  const hasUserInput = userInputIndex !== -1;\n  const hasChatHistory = chatHistoryIndex !== -1;\n  const isChatHistoryFiltered = isPromptFiltered('chat_history', promptConfig);\n\n  // 创建用户输入消息\n  const userMessage = await Message.createAsync('user', processedUserInput, 'user_input');\n\n  // 仅在需要时添加图像\n  if (promptConfig.image && hasUserInput) {\n    await userMessage.addImage(await convertFileToBase64(promptConfig.image));\n  }\n\n  // 如果聊天记录被过滤或不在order中，只处理用户输入\n  if (isChatHistoryFiltered || !hasChatHistory) {\n    const insertIndex = hasUserInput ? userInputIndex : orderArray.length;\n    chatCompletion.add(new MessageCollection('user_input', userMessage), insertIndex);\n    return;\n  }\n\n  // 处理聊天记录\n  const chatCollection = new MessageCollection('chat_history');\n\n  // 为新聊天指示预留token\n  const newChat = oai_settings.new_chat_prompt;\n  const newChatMessage = await Message.createAsync('system', substituteParams(newChat), 'newMainChat');\n  chatCompletion.reserveBudget(newChatMessage);\n\n  // 添加新聊天提示词到集合的最前面\n  chatCollection.add(newChatMessage);\n\n  // 处理空消息替换\n  const lastChatPrompt = baseData.chatContext.oaiMessages[baseData.chatContext.oaiMessages.length - 1];\n  const emptyMessage = await Message.createAsync('user', oai_settings.send_if_empty, 'emptyUserMessageReplacement');\n\n  if (\n    lastChatPrompt &&\n    lastChatPrompt.role === 'assistant' &&\n    oai_settings.send_if_empty &&\n    chatCompletion.canAfford(emptyMessage)\n  ) {\n    chatCollection.add(emptyMessage);\n  }\n\n  // 将用户消息添加到消息数组中准备处理注入\n  if (!hasUserInput) {\n    const userPrompt = {\n      role: 'user',\n      content: processedUserInput,\n      identifier: 'user_input',\n      image: promptConfig.image ? await convertFileToBase64(promptConfig.image) : undefined,\n    };\n    baseData.chatContext.oaiMessages.unshift(userPrompt);\n  }\n\n  // 处理注入和添加消息\n  const messages = (await populationInjectionPrompts(baseData.chatContext.oaiMessages, promptConfig.inject)).reverse();\n  const imageInlining = isImageInliningSupported();\n  // 添加聊天记录\n  const chatPool = [...messages];\n  for (const chatPrompt of chatPool) {\n    const prompt = new Prompt(chatPrompt as any);\n    prompt.identifier = `chat_history-${messages.length - chatPool.indexOf(chatPrompt)}`;\n    prompt.content = substituteParams(prompt.content);\n\n    const chatMessage = await Message.fromPromptAsync(prompt);\n    const promptManager = setupChatCompletionPromptManager(oai_settings);\n\n    if (promptManager) {\n      // @ts-ignore\n      if (promptManager.serviceSettings.names_behavior === character_names_behavior.COMPLETION && prompt.name) {\n        const messageName = promptManager.isValidName(prompt.name)\n          ? prompt.name\n          : promptManager.sanitizeName(prompt.name);\n        await chatMessage.setName(messageName);\n      }\n    }\n    if (imageInlining && chatPrompt.image) {\n      await chatMessage.addImage(chatPrompt.image as string);\n    }\n    if (chatCompletion.canAfford(chatMessage)) {\n      chatCollection.add(chatMessage);\n    } else {\n      break;\n    }\n  }\n\n  // 释放新聊天提示词的预留token\n  chatCompletion.freeBudget(newChatMessage);\n\n  if (hasUserInput) {\n    // 按各自在order中的位置添加聊天记录和用户输入\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n    chatCompletion.add(new MessageCollection('user_input', userMessage), userInputIndex);\n  } else {\n    // 聊天记录中已包含用户输入，直接添加到chat_history位置\n    chatCompletion.add(chatCollection, chatHistoryIndex);\n  }\n}\nasync function populationInjectionPrompts(messages: RolePrompt[], customInjects: InjectionPrompt[] = []) {\n  const processedMessages = [...messages];\n  let totalInsertedMessages = 0;\n  const injectionPrompts = [];\n  // @ts-ignore\n  const authorsNote = getContext().extensionPrompts[NOTE_MODULE_NAME];\n  if (authorsNote && authorsNote.value) {\n    injectionPrompts.push({\n      role: getPromptRole(authorsNote.role),\n      content: authorsNote.value,\n      identifier: 'authorsNote',\n      injection_depth: authorsNote.depth,\n      injected: true,\n    });\n  }\n\n  if (\n    power_user.persona_description &&\n    power_user.persona_description_position === persona_description_positions.AT_DEPTH\n  ) {\n    injectionPrompts.push({\n      role: 'system',\n      content: power_user.persona_description,\n      identifier: 'persona_description',\n      injection_depth: power_user.persona_description_depth,\n      injected: true,\n    });\n  }\n\n  // 处理自定义注入\n  if (Array.isArray(customInjects)) {\n    for (const inject of customInjects) {\n      injectionPrompts.push({\n        identifier: `INJECTION-${inject.role}-${inject.depth}`,\n        role: inject.role,\n        content: inject.content,\n        injection_depth: inject.depth || 0,\n        injected: true,\n      });\n    }\n  }\n\n  for (let i = 0; i <= MAX_INJECTION_DEPTH; i++) {\n    const depthPrompts = injectionPrompts.filter(prompt => prompt.injection_depth === i && prompt.content);\n\n    const roles = ['system', 'user', 'assistant'];\n    const roleMessages = [];\n    const separator = '\\n';\n\n    for (const role of roles) {\n      // 直接处理当前深度和角色的所有提示词\n      const rolePrompts = depthPrompts\n        .filter(prompt => prompt.role === role)\n        .map(x => x.content.trim())\n        .join(separator);\n\n      if (rolePrompts) {\n        roleMessages.push({\n          role: role as 'user' | 'system' | 'assistant',\n          content: rolePrompts,\n          injected: true,\n        });\n      }\n    }\n\n    if (roleMessages.length) {\n      const injectIdx = i + totalInsertedMessages;\n      processedMessages.splice(injectIdx, 0, ...roleMessages);\n      totalInsertedMessages += roleMessages.length;\n    }\n  }\n\n  return processedMessages;\n}\n\nfunction getPromptRole(role: number) {\n  switch (role) {\n    case extension_prompt_roles.SYSTEM:\n      return 'system';\n    case extension_prompt_roles.USER:\n      return 'user';\n    case extension_prompt_roles.ASSISTANT:\n      return 'assistant';\n    default:\n      return 'system';\n  }\n}\n\n//生成响应\nasync function generateResponse(generate_data: any, useStream = false): Promise<string> {\n  let result = '';\n  try {\n    deactivateSendButtons();\n\n    if (useStream) {\n      const originalStreamSetting = oai_settings.stream_openai;\n      if (!originalStreamSetting) {\n        oai_settings.stream_openai = true;\n        saveSettingsDebounced();\n      }\n      const streamingProcessor = new StreamingProcessor();\n      // @ts-ignore\n      streamingProcessor.generator = await sendOpenAIRequest('normal', generate_data.prompt, abortController.signal);\n      result = (await streamingProcessor.generate()) as string;\n      // console.log(\"getMessage\", getMessage);\n      if (originalStreamSetting !== oai_settings.stream_openai) {\n        oai_settings.stream_openai = originalStreamSetting;\n        saveSettingsDebounced();\n      }\n    } else {\n      eventSource.emit('js_generation_started');\n      const response = await sendOpenAIRequest(type, generate_data.prompt, abortController.signal);\n      result = await handleResponse(response);\n    }\n  } catch (error) {\n    console.error(error);\n  } finally {\n    unblockGeneration();\n    await clearInjectionPrompts(['INJECTION']);\n  }\n  return result;\n}\n\n// 处理响应\nasync function handleResponse(response: any) {\n  if (!response) {\n    throw Error(`未得到响应`);\n  }\n  if (response.error) {\n    if (response?.response) {\n      // @ts-ignore\n      toastr.error(response.response, t`API Error`, {\n        preventDuplicates: true,\n      });\n    }\n    throw Error(response?.response);\n  }\n  const message: string = extractMessageFromData(response);\n  eventSource.emit('js_generation_ended', message);\n  return message;\n}\n\nfunction unblockGeneration() {\n  activateSendButtons();\n  showSwipeButtons();\n  setGenerationProgress(0);\n  flushEphemeralStoppingStrings();\n}\n\n// 清理注入\nasync function clearInjectionPrompts(prefixes: string[]) {\n  const prompts: Record<string, any> = getContext().extensionPrompts;\n  Object.keys(prompts)\n    .filter(key => prefixes.some(prefix => key.startsWith(prefix)))\n    .forEach(key => delete prompts[key]);\n\n  await saveChatConditional();\n}\nfunction extractMessageFromData(data: any) {\n  if (typeof data === 'string') {\n    return data;\n  }\n\n  return (\n    data?.choices?.[0]?.message?.content ??\n    data?.choices?.[0]?.text ??\n    data?.text ??\n    data?.message?.content?.[0]?.text ??\n    data?.message?.tool_plan ??\n    ''\n  );\n}\n\nasync function convertFileToBase64(image: File | string): Promise<string> {\n  if (image instanceof File) {\n    return await getBase64Async(image);\n  }\n  return image;\n}\n\nfunction addTemporaryUserMessage(userContent: string) {\n  setExtensionPrompt('TEMP_USER_MESSAGE', userContent, extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction removeTemporaryUserMessage() {\n  setExtensionPrompt('TEMP_USER_MESSAGE', '', extension_prompt_types.IN_PROMPT, 0, true, 1);\n}\n\nfunction isPromptFiltered(promptId: string, config: { overrides?: detail.OverrideConfig }): boolean {\n  if (!config.overrides) {\n    return false;\n  }\n\n  if (promptId === 'with_depth_entries') {\n    return config.overrides.with_depth_entries === false;\n  }\n\n  // 特殊处理 chat_history\n  if (promptId === 'chat_history') {\n    const prompts = config.overrides.chat_history;\n    return prompts !== undefined && prompts.length === 0;\n  }\n\n  // 对于普通提示词，只有当它在 overrides 中存在且为空字符串时才被过滤\n  const override = config.overrides[promptId as keyof Omit<detail.OverrideConfig, 'chat_history'>];\n  return override !== undefined && override === '';\n}\n\n/**\n * 使用酒馆当前启用的预设, 让 ai 生成一段文本.\n *\n * 该函数在执行过程中将会发送以下事件:\n * - `iframe_events.GENERATION_STARTED`: 生成开始\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n * - `iframe_events.GENERATION_ENDED`: 生成结束, 监听它可以得到生成的最终文本 (当然也能通过函数返回值获得)\n *\n * @param config 提示词和生成方式设置\n *   - `user_input?:string`: 用户输入\n *   - `should_stream?:boolean`: 是否启用流式传输; 默认为 'false'\n *   - `image?:File|string`: 图片输入\n *   - `overrides?:Overrides`: 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词. 如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖角色描述\n *   - `injects?:InjectionPrompt[]`: 要额外注入的提示词\n *   - `max_chat_history?:'all'|number`: 最多使用多少条聊天历史\n * @returns 生成的最终文本\n */\nexport async function generate(config: GenerateConfig) {\n  const converted_config = fromGenerateConfig(config);\n  return await iframeGenerate(converted_config);\n}\n\n/**\n * 不使用酒馆当前启用的预设, 让 ai 生成一段文本.\n *\n * 该函数在执行过程中将会发送以下事件:\n * - `iframe_events.GENERATION_STARTED`: 生成开始\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n * - `iframe_events.GENERATION_ENDED`: 生成结束, 监听它可以得到生成的最终文本 (当然也能通过函数返回值获得)\n *\n * @param config 提示词和生成方式设置\n *   - `user_input?:string`: 用户输入\n *   - `should_stream?:boolean`: 是否启用流式传输; 默认为 'false'\n *   - `image?:File|string`: 图片输入\n *   - `overrides?:Overrides`: 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词. 如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖角色描述\n *   - `injects?:InjectionPrompt[]`: 要额外注入的提示词\n *   - `max_chat_history?:'all'|number`: 最多使用多少条聊天历史\n *   - `ordered_prompts?:(BuiltinPrompt|RolePrompt)[]`: 一个提示词数组, 数组元素将会按顺序发给 ai, 因而相当于自定义预设\n * @returns 生成的最终文本\n */\nexport async function generateRaw(config: GenerateRawConfig) {\n  const converted_config = fromGenerateRawConfig(config);\n  return await iframeGenerate(converted_config);\n}\n\n// @ts-ignore\n$(document).on('click', '#mes_stop', function () {\n  const wasStopped = stopGeneration();\n  if (wasStopped) {\n    if (abortController) {\n      abortController.abort('Clicked stop button');\n    }\n    unblockGeneration();\n  }\n});\n","import { extract } from '@/util/helper';\n\nfunction createObjectURLFromScript(code: string): string {\n  return URL.createObjectURL(new Blob([code], { type: 'application/javascript' }));\n}\n\nclass ScriptUrl {\n  private map: Map<string, string> = new Map();\n\n  public get(name: string): string | undefined {\n    return this.map.get(name);\n  }\n  public set(name: string, code: string): void {\n    this.map.set(name, createObjectURLFromScript(code));\n  }\n  public delete(name: string): string | undefined {\n    const url = extract(this.map, name);\n    if (!url) {\n      return url;\n    }\n    URL.revokeObjectURL(url);\n    return url;\n  }\n}\n\nexport let script_url = new ScriptUrl();\n","import { libraries_text } from '@/component/character_level/library';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\nimport { getCharAvatarPath, getSettingValue, getUserAvatarPath, saveSettingValue } from '@/util/extension_variables';\n\nimport { eventSource, event_types, reloadCurrentChat, updateMessageBlock } from '@sillytavern/script';\nimport { getContext } from '@sillytavern/scripts/extensions';\n\nlet tampermonkeyMessageListener: ((event: MessageEvent) => void) | null = null;\nlet isRenderEnabled: boolean;\nlet isRenderingOptimizeEnabled: boolean;\nlet renderDepth: number;\nlet isTampermonkeyEnabled: boolean;\n\nconst iframeResizeObservers = new Map();\nconst isExtensionEnabled = getSettingValue('enabled_extension');\n\n// 保存原始高亮方法\nconst originalHighlightElement = hljs.highlightElement;\n\nconst RENDER_MODES = {\n  FULL: 'FULL',\n  PARTIAL: 'PARTIAL',\n};\n\ninterface IFrameElement extends HTMLIFrameElement {\n  cleanup: () => void;\n  [prop: string]: any;\n}\n\nexport const partialRenderEvents = [\n  event_types.CHARACTER_MESSAGE_RENDERED,\n  event_types.USER_MESSAGE_RENDERED,\n  event_types.MESSAGE_UPDATED,\n  event_types.MESSAGE_SWIPED,\n];\n\nexport const defaultIframeSettings = {\n  render_enabled: true,\n  tampermonkey_compatibility: false,\n  render_depth: 3,\n  render_optimize: false,\n};\n\nexport async function handleRenderToggle(userInput: boolean = true, enable: boolean = true) {\n  if (enable) {\n    renderMessagesInIframes(RENDER_MODES.FULL);\n  }\n  if (userInput) {\n    await saveSettingValue('render.render_enabled', enable);\n  }\n}\n\n/**\n * 清理后，重新渲染所有iframe\n */\nexport async function clearAndRenderAllIframes() {\n  await clearAllIframes();\n  await reloadCurrentChat();\n  await renderAllIframes();\n}\n\n/**\n * 渲染所有iframe\n */\nexport async function renderAllIframes() {\n  await renderMessagesInIframes(RENDER_MODES.FULL);\n  console.log('[Render] 渲染所有iframe');\n}\n\n/**\n * 渲染部分iframe\n * @param mesId 消息ID\n */\nexport async function renderPartialIframes(mesId: number) {\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const context = getContext();\n  const totalMessages = context.chat.length;\n\n  if (processDepth > 0) {\n    const depthOffset = totalMessages - processDepth;\n\n    if (mesId < depthOffset) {\n      return;\n    }\n  }\n\n  await renderMessagesInIframes(RENDER_MODES.PARTIAL, mesId);\n\n  console.log('[Render] 渲染' + mesId + '号消息的iframe');\n}\n\n/**\n * 使用了min-height:vh时，自动调整iframe高度\n */\nexport const viewport_adjust_script = `\n$(window).on(\"message\", function (event) {\n    if (event.originalEvent.data.request === \"updateViewportHeight\") {\n        const newHeight = event.originalEvent.data.newHeight;\n        $(\"html\").css(\"--viewport-height\", newHeight + \"px\");\n    }\n});\n`;\n\n/**\n * 油猴脚本\n */\nexport const tampermonkey_script = `\nclass AudioManager {\n  constructor() {\n    this.currentlyPlaying = null;\n  }\n  handlePlay(audio) {\n    if (this.currentlyPlaying && this.currentlyPlaying !== audio) {\n      this.currentlyPlaying.pause();\n    }\n    window.parent.postMessage({\n      type: 'audioPlay',\n      iframeId: window.frameElement.id\n    }, '*');\n\n    this.currentlyPlaying = audio;\n  }\n  stopAll() {\n    if (this.currentlyPlaying) {\n      this.currentlyPlaying.pause();\n      this.currentlyPlaying = null;\n    }\n  }\n}\nconst audioManager = new AudioManager();\n$('.qr-button').on('click', function() {\n  const buttonName = $(this).text().trim();\n  window.parent.postMessage({ type: 'buttonClick', name: buttonName }, '*');\n});\n$('.st-text').each(function() {\n  $(this).on('input', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  $(this).on('change', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  const textarea = this;\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'value') {\n        window.parent.postMessage({ type: 'textInput', text: $(textarea).val() }, '*');\n      }\n    });\n  });\n  observer.observe(textarea, { attributes: true });\n});\n$('.st-send-button').on('click', function() {\n  window.parent.postMessage({ type: 'sendClick' }, '*');\n});\n$('.st-audio').on('play', function() {\n  audioManager.handlePlay(this);\n});\n$(window).on('message', function(event) {\n  if (event.originalEvent.data.type === 'stopAudio' &&\n    event.originalEvent.data.iframeId !== window.frameElement.id) {\n    audioManager.stopAll();\n  }\n});\n`;\n\n/**\n * 转换代码块中的min-height:vh\n * @param htmlContent 代码块内容\n * @returns 转换后的代码块内容\n */\nfunction processVhUnits(htmlContent: string) {\n  const hasMinVh = /min-height:\\s*[^;]*vh/.test(htmlContent);\n\n  if (!hasMinVh) {\n    return htmlContent;\n  }\n\n  const viewportHeight = window.innerHeight;\n  const processedContent = htmlContent.replace(/min-height:\\s*([^;]*vh[^;]*);/g, expression => {\n    const processedExpression = expression.replace(\n      /(\\d+)vh/g,\n      `calc(var(--viewport-height, ${viewportHeight}px) * $1 / 100)`,\n    );\n    return `${processedExpression};`;\n  });\n\n  return processedContent;\n}\n\n/**\n * 使用了min-height:vh时，更新iframe的viewport高度\n */\nfunction updateIframeViewportHeight() {\n  $(window).on('resize', function () {\n    if ($('iframe[data-needs-vh=\"true\"]').length) {\n      const viewportHeight = window.innerHeight;\n      $('iframe[data-needs-vh=\"true\"]').each(function () {\n        const iframe = this as HTMLIFrameElement;\n        if (iframe.contentWindow) {\n          iframe.contentWindow.postMessage(\n            {\n              request: 'updateViewportHeight',\n              newHeight: viewportHeight,\n            },\n            '*',\n          );\n        }\n      });\n    }\n  });\n}\n\n/**\n * 渲染消息到iframe\n * @param mode 渲染模式\n * @param specificMesId 指定消息ID\n */\nasync function renderMessagesInIframes(mode = RENDER_MODES.FULL, specificMesId: number | null = null) {\n  if (!isExtensionEnabled || !isRenderEnabled) {\n    return;\n  }\n\n  const context = getContext();\n  const totalMessages = context.chat.length;\n  const processDepth = renderDepth || 0;\n  const depthLimit = processDepth > 0 ? processDepth : totalMessages;\n  const depthLimitedMessageIds = [...Array(totalMessages).keys()].slice(-depthLimit);\n\n  let messagesToRenderIds: number[] = [];\n  const messagesToCancelIds: number[] = [...Array(totalMessages).keys()].filter(\n    id => !depthLimitedMessageIds.includes(id),\n  );\n\n  if (mode === RENDER_MODES.FULL) {\n    messagesToRenderIds = depthLimitedMessageIds;\n  } else if (mode === RENDER_MODES.PARTIAL && specificMesId !== null) {\n    if (depthLimitedMessageIds.includes(specificMesId)) {\n      messagesToRenderIds = [specificMesId];\n    } else {\n      return;\n    }\n  }\n\n  for (const messageId of messagesToCancelIds) {\n    const message = context.chat[messageId];\n    const $iframes = $(`[id^=\"message-iframe-${messageId}-\"]`);\n    if ($iframes.length > 0) {\n      await Promise.all(\n        $iframes.toArray().map(async iframe => {\n          await destroyIframe(iframe as IFrameElement);\n        }),\n      );\n      updateMessageBlock(messageId, message);\n    }\n    if (isRenderingOptimizeEnabled) {\n      const $mesText = $(`.mes[mesid=\"${messageId}\"] .mes_block .mes_text`);\n      addToggleButtonsToMessage($mesText);\n    }\n  }\n\n  const renderedMessages = [];\n  for (const messageId of messagesToRenderIds) {\n    const $messageElement = $(`.mes[mesid=\"${messageId}\"]`);\n    if (!$messageElement.length) {\n      console.debug(`未找到 mesid: ${messageId} 对应的消息元素。`);\n      continue;\n    }\n\n    const $codeElements = $messageElement.find('pre');\n    if (!$codeElements.length) {\n      continue;\n    }\n\n    let iframeCounter = 1;\n\n    $codeElements.each(function () {\n      let extractedText = extractTextFromCode(this);\n      if (!extractedText.includes('<body') || !extractedText.includes('</body>')) {\n        if (isRenderingOptimizeEnabled) {\n          addCodeToggleButtons(messageId);\n        }\n        return;\n      }\n      const disableLoading = /<!--\\s*disable-default-loading\\s*-->/.test(extractedText);\n      const hasMinVh = /min-height:\\s*[^;]*vh/.test(extractedText);\n      extractedText = hasMinVh ? processVhUnits(extractedText) : extractedText;\n\n      let $wrapper = $('<div>').css({\n        position: 'relative',\n        width: '100%',\n      });\n\n      const $iframe = $('<iframe>')\n        .attr({\n          id: `message-iframe-${messageId}-${iframeCounter}`,\n          srcdoc: '',\n          loading: 'lazy',\n        })\n        .css({\n          margin: '5px auto',\n          border: 'none',\n          width: '100%',\n        });\n\n      iframeCounter++;\n\n      if (hasMinVh) {\n        $iframe.attr('data-needs-vh', 'true');\n      }\n\n      let loadingTimeout: NodeJS.Timeout | null = null;\n      if (!disableLoading) {\n        const $loadingOverlay = $('<div>').addClass('iframe-loading-overlay').html(`\n            <div class=\"iframe-loading-content\">\n              <i class=\"fa-solid fa-spinner fa-spin\"></i>\n              <span class=\"loading-text\">Loading...</span>\n            </div>`);\n\n        loadingTimeout = setTimeout(() => {\n          const $loadingText = $loadingOverlay.find('.loading-text');\n          if ($loadingText.length) {\n            $loadingText.text('如加载时间过长，请检查网络');\n          }\n        }, 10000);\n\n        $wrapper.append($loadingOverlay);\n      }\n\n      $wrapper.append($iframe);\n\n      const srcdocContent = `\n        <html>\n        <head>\n          <style>\n          ${hasMinVh ? `:root{--viewport-height:${window.innerHeight}px;}` : ``}\n          html,body{margin:0;padding:0;overflow:hidden;max-width:100%!important;box-sizing:border-box}\n          .user_avatar,.user-avatar{background-image:url('${getUserAvatarPath()}')}\n          .char_avatar,.char-avatar{background-image:url('${getCharAvatarPath()}')}\n          </style>\n          ${third_party}\n          <script src=\"${script_url.get('window_functions')}\"></script>\n          <script src=\"${script_url.get('iframe_client')}\"></script>\n          ${libraries_text}\n        </head>\n        <body>\n          ${extractedText}\n          ${hasMinVh ? `<script src=\"${script_url.get('viewport_adjust_script')}\"></script>` : ``}\n          ${\n            getSettingValue('render.tampermonkey_compatibility')\n              ? `<script src=\"${script_url.get('tampermonkey_script')}\"></script>`\n              : ``\n          }\n        </body>\n        </html>\n      `;\n      $iframe.attr('srcdoc', srcdocContent);\n\n      $iframe.on('load', function () {\n        observeIframeContent(this as IFrameElement);\n\n        $wrapper = $(this).parent();\n        if ($wrapper.length) {\n          const $loadingOverlay = $wrapper.find('.iframe-loading-overlay');\n          if ($loadingOverlay.length) {\n            $loadingOverlay.css('opacity', '0');\n            setTimeout(() => $loadingOverlay.remove(), 300);\n          }\n        }\n\n        if ($(this).attr('data-needs-vh') === 'true') {\n          const iframe = this as HTMLIFrameElement;\n          if (iframe.contentWindow) {\n            iframe.contentWindow.postMessage(\n              {\n                request: 'updateViewportHeight',\n                newHeight: window.innerHeight,\n              },\n              '*',\n            );\n          }\n        }\n\n        eventSource.emitAndWait('message_iframe_render_ended', this.id);\n\n        if (isRenderingOptimizeEnabled) {\n          removeCodeToggleButtonsByMesId(messageId);\n        }\n\n        if (loadingTimeout) {\n          clearTimeout(loadingTimeout);\n        }\n      });\n\n      eventSource.emitAndWait('message_iframe_render_started', $iframe.attr('id'));\n      $(this).replaceWith($wrapper);\n    });\n\n    renderedMessages.push(messageId);\n  }\n}\n\n/**\n * 观察iframe内容用于自动调整高度\n * @param iframe iframe元素\n */\nfunction observeIframeContent(iframe: IFrameElement) {\n  const $iframe = $(iframe);\n  if (!$iframe.length || !$iframe[0].contentWindow || !$iframe[0].contentWindow.document.body) {\n    return;\n  }\n  const docBody = $iframe[0].contentWindow.document.body;\n  const iframeId = $iframe.attr('id');\n\n  let resizeObserver = null;\n\n  adjustIframeHeight(iframe);\n\n  try {\n    if (window.ResizeObserver) {\n      resizeObserver = new ResizeObserver(() => {\n        adjustIframeHeight(iframe);\n      });\n      resizeObserver.observe(docBody);\n\n      if (iframeId) {\n        iframeResizeObservers.set(iframeId, resizeObserver);\n      }\n    }\n  } catch (e) {\n    console.error('ResizeObserver初始化错误:', e);\n  }\n\n  iframe.cleanup = () => {\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      if (iframeId) {\n        iframeResizeObservers.delete(iframeId);\n      }\n    }\n  };\n}\n\n/**\n * 销毁iframe\n * @param iframe iframe元素\n */\nexport function destroyIframe(iframe: IFrameElement): Promise<void> {\n  return new Promise(resolve => {\n    const $iframe = $(iframe);\n\n    if (!$iframe.length) {\n      resolve();\n      return;\n    }\n\n    const iframeId = $iframe.attr('id');\n\n    $iframe.off();\n\n    try {\n      if ($iframe[0].contentWindow) {\n        const iframeDoc = $iframe[0].contentWindow.document;\n        if (iframeDoc) {\n          $(iframeDoc).find('*').off();\n          $(iframeDoc).off();\n        }\n      }\n    } catch (e) {\n      console.debug('清理iframe内部事件时出错:', e);\n    }\n\n    try {\n      const $mediaElements = $iframe.contents().find('audio, video');\n      $mediaElements.each(function () {\n        if (this instanceof HTMLMediaElement) {\n          this.pause();\n          this.src = '';\n          this.load();\n          $(this).off();\n        }\n      });\n    } catch (e) {\n      console.debug('清理媒体元素时出错:', e);\n    }\n\n    if ($iframe[0].contentWindow && 'stop' in $iframe[0].contentWindow) {\n      $iframe[0].contentWindow.stop();\n    }\n\n    // 清空iframe内容\n    if ($iframe[0].contentWindow) {\n      try {\n        if (iframeId && typeof eventSource.removeListener === 'function') {\n          eventSource.removeListener('message_iframe_render_ended', iframeId as any);\n          eventSource.removeListener('message_iframe_render_started', iframeId as any);\n        }\n\n        $iframe.attr('src', 'about:blank');\n      } catch (e) {\n        console.debug('清空iframe内容时出错:', e);\n      }\n    }\n\n    // 断开ResizeObserver连接\n    if (iframe.cleanup && typeof iframe.cleanup === 'function') {\n      iframe.cleanup();\n    } else if (iframeId && iframeResizeObservers.has(iframeId)) {\n      const observer = iframeResizeObservers.get(iframeId);\n      observer.disconnect();\n      iframeResizeObservers.delete(iframeId);\n    }\n\n    // 从DOM中移除并清除引用\n    const $clone = $iframe.clone(false);\n    if ($iframe.parent().length) {\n      $iframe.replaceWith($clone);\n    }\n    if ($clone.parent().length) {\n      $clone.remove();\n    }\n\n    // 移除jQuery数据缓存\n    try {\n      $iframe.removeData();\n    } catch (e) {\n      console.debug('移除jQuery数据缓存时出错:', e);\n    }\n\n    // 清空iframe的属性\n    for (const prop in iframe) {\n      if (Object.prototype.hasOwnProperty.call(iframe, prop)) {\n        try {\n          iframe[prop] = null;\n        } catch (e) {\n          console.debug('清空iframe的属性时出错:', e);\n        }\n      }\n    }\n\n    // 确保所有清理操作都完成后再resolve\n    setTimeout(() => {\n      resolve();\n    }, 0);\n  });\n}\n\n/**\n * 清理所有iframe\n * @returns {Promise<void>}\n */\nexport async function clearAllIframes(): Promise<void> {\n  const $iframes = $('iframe[id^=\"message-iframe\"]');\n  await Promise.all(\n    $iframes.toArray().map(async iframe => {\n      await destroyIframe(iframe as IFrameElement);\n    }),\n  );\n\n  // 清理相关的事件监听器\n  try {\n    if (typeof eventSource.removeListener === 'function') {\n      eventSource.removeListener('message_iframe_render_started', null as any);\n      eventSource.removeListener('message_iframe_render_ended', null as any);\n    }\n  } catch (e) {\n    console.debug('清理事件监听器时出错:', e);\n  }\n\n  // 尝试主动触发垃圾回收\n  try {\n    let arr = [];\n    for (let i = 0; i < 10; i++) {\n      arr.push(new Array(1000000).fill(1));\n    }\n    arr = null as any;\n\n    if (window.gc) {\n      window.gc();\n    }\n  } catch (e) {\n    console.debug('尝试触发垃圾回收时出错:', e);\n  }\n}\n\n/**\n * 处理油猴脚本兼容模式传来的消息\n * @param event 消息事件\n */\nfunction handleTampermonkeyMessages(event: MessageEvent): void {\n  if (event.data.type === 'buttonClick') {\n    const buttonName = event.data.name;\n    $('.qr--button.menu_button').each(function () {\n      if ($(this).find('.qr--button-label').text().trim() === buttonName) {\n        $(this).trigger('click');\n      }\n    });\n  } else if (event.data.type === 'textInput') {\n    const $sendTextarea = jQuery('#send_textarea');\n    if ($sendTextarea.length) {\n      $sendTextarea.val(event.data.text).trigger('input').trigger('change');\n    }\n  } else if (event.data.type === 'sendClick') {\n    const $sendButton = jQuery('#send_but');\n    if ($sendButton.length) {\n      $sendButton.trigger('click');\n    }\n  }\n}\n\n/**\n * 油猴兼容模式-创建全局音频管理器\n */\nfunction createGlobalAudioManager() {\n  let currentPlayingIframeId: string | null = null;\n\n  window.addEventListener('message', function (event) {\n    if (event.data.type === 'audioPlay') {\n      const newIframeId = event.data.iframeId;\n\n      if (currentPlayingIframeId && currentPlayingIframeId !== newIframeId) {\n        $('iframe').each(function () {\n          const iframe = this as HTMLIFrameElement;\n          if (iframe.contentWindow) {\n            iframe.contentWindow.postMessage(\n              {\n                type: 'stopAudio',\n                iframeId: newIframeId,\n              },\n              '*',\n            );\n          }\n        });\n      }\n\n      currentPlayingIframeId = newIframeId;\n    }\n  });\n}\n\n/**\n * 调整iframe高度\n * @param iframe iframe元素\n */\nfunction adjustIframeHeight(iframe: IFrameElement) {\n  const $iframe = $(iframe);\n  if (!$iframe.length || !$iframe[0].contentWindow || !$iframe[0].contentWindow.document.body) {\n    return;\n  }\n\n  const doc = $iframe[0].contentWindow.document;\n\n  const bodyHeight = doc.body.offsetHeight;\n  const htmlHeight = doc.documentElement.offsetHeight;\n\n  const newHeight = Math.max(bodyHeight, htmlHeight);\n  const currentHeight = parseFloat($iframe.css('height')) || 0;\n\n  if (Math.abs(currentHeight - newHeight) > 5) {\n    $iframe.css('height', newHeight + 'px');\n\n    if ($iframe.attr('data-needs-vh') === 'true' && iframe.contentWindow) {\n      iframe.contentWindow.postMessage(\n        {\n          request: 'updateViewportHeight',\n          newHeight: window.innerHeight,\n        },\n        '*',\n      );\n    }\n  }\n}\n\n/**\n * 提取代码块中的文本\n * @param codeElement 代码块元素\n * @returns 提取的文本\n */\nfunction extractTextFromCode(codeElement: HTMLElement) {\n  let textContent = '';\n\n  $(codeElement)\n    .contents()\n    .each(function () {\n      if (this.nodeType === Node.TEXT_NODE) {\n        textContent += this.textContent;\n      } else if (this.nodeType === Node.ELEMENT_NODE) {\n        textContent += extractTextFromCode(this as HTMLElement);\n      }\n    });\n\n  return textContent;\n}\n\n/**\n * 删除消息后重新渲染\n * @param mesId 消息ID\n */\nexport async function renderMessageAfterDelete(mesId: number) {\n  const context = getContext();\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const totalMessages = context.chat.length;\n  const maxRemainId = mesId - 1;\n  // 考虑到高楼层的情况，深度为0时，只渲染最后一个消息\n  if (processDepth === 0) {\n    const message = context.chat[maxRemainId];\n\n    const hasCodeBlock = /```[\\s\\S]*?```/.test(message);\n    const $iframe = $('[id^=\"message-iframe-' + maxRemainId + '-\"]');\n\n    if (!hasCodeBlock && $iframe.length === 0) {\n      return;\n    }\n    await destroyIframe($iframe.get(0) as IFrameElement);\n    updateMessageBlock(maxRemainId, message);\n    renderPartialIframes(maxRemainId);\n  } else {\n    const startRenderIndex = totalMessages - processDepth;\n    for (let i = startRenderIndex; i <= maxRemainId; i++) {\n      const message = context.chat[i];\n      const hasCodeBlock = /```[\\s\\S]*?```/.test(message);\n      const $iframe = $('[id^=\"message-iframe-' + i + '-\"]');\n\n      if (!hasCodeBlock && $iframe.length === 0) {\n        continue;\n      }\n      await destroyIframe($iframe.get(0) as IFrameElement);\n      updateMessageBlock(i, message);\n      renderPartialIframes(i);\n    }\n  }\n}\n\n/**\n * 处理油猴兼容性设置改变\n */\nasync function handleTampermonkeyCompatibilityChange(enable: boolean, userInput: boolean = true) {\n  if (userInput) {\n    await saveSettingValue('render.tampermonkey_compatibility', enable);\n  }\n\n  if (!getSettingValue('enabled_extension')) {\n    return;\n  }\n\n  if (enable) {\n    if (!tampermonkeyMessageListener) {\n      tampermonkeyMessageListener = handleTampermonkeyMessages;\n      window.addEventListener('message', tampermonkeyMessageListener);\n      createGlobalAudioManager();\n    }\n  } else if (tampermonkeyMessageListener) {\n    window.removeEventListener('message', tampermonkeyMessageListener);\n    tampermonkeyMessageListener = null;\n  }\n\n  await clearAndRenderAllIframes();\n}\n\n/**\n * 处理深度输入改变时\n */\nasync function onDepthInput(value: string) {\n  const processDepth = parseInt(value, 10);\n  renderDepth = processDepth;\n\n  if (processDepth < 0) {\n    toastr.warning('处理深度不能为负数');\n    $('#render-depth').val(getSettingValue('render.render_depth'));\n    return;\n  }\n\n  await saveSettingValue('render.render_depth', processDepth);\n\n  await clearAndRenderAllIframes();\n}\n\nexport const handlePartialRender = (mesId: number) => {\n  console.log('[Render] PARTIAL render event triggered for message ID:', mesId);\n  const processDepth = parseInt($('#process_depth').val() as string, 10);\n  const context = getContext();\n  const totalMessages = context.chat.length;\n\n  if (processDepth > 0) {\n    const depthOffset = totalMessages - processDepth;\n\n    if (mesId < depthOffset) {\n      return;\n    }\n  }\n\n  setTimeout(() => {\n    renderMessagesInIframes(RENDER_MODES.PARTIAL, mesId);\n  }, 100);\n};\n\n/**\n * 注入加载样式\n */\nexport function injectLoadingStyles() {\n  if ($('#iframe-loading-styles').length) return;\n\n  const styleSheet = $('<style>', {\n    id: 'iframe-loading-styles',\n    text: `\n      .iframe-loading-overlay{\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n        background:rgba(0,0,0,.7);\n        display:flex;\n        justify-content:center;\n        align-items:center;\n        z-index:1000;\n        transition:opacity .3s ease\n      }\n      .iframe-loading-content{\n        color:#fff;\n        display:flex;\n        align-items:center;\n        gap:10px;\n        font-size:16px\n      }\n      .iframe-loading-content i{\n        font-size:20px\n      }\n      .loading-text {\n        transition: opacity 0.3s ease;\n      }`,\n  });\n\n  $('head').append(styleSheet);\n}\n\n/**\n * 注入代码块隐藏样式\n */\nexport function injectCodeBlockHideStyles() {\n  const styleId = 'hidden-code-block-styles';\n  let style = document.getElementById(styleId);\n  if (!style) {\n    style = document.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.setAttribute('id', styleId);\n    document.head.appendChild(style);\n  }\n  style.innerHTML = `\n    pre {\n      display: none;\n    }\n    .code-toggle-button {\n      display: inline-block;\n      margin: 5px 0;\n      padding: 5px 10px;\n      background-color: rgba(0, 0, 0, 0.1);\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 0.9em;\n      user-select: none;\n      transition: background-color 0.3s;\n    }\n    .code-toggle-button:hover {\n      background-color: rgba(0, 0, 0, 0.2);\n    }\n  `;\n}\n\n/**\n * 移除代码块隐藏样式\n */\nfunction removeCodeBlockHideStyles() {\n  const styleId = 'hidden-code-block-styles';\n  const style = document.getElementById(styleId);\n  if (style) {\n    style.remove();\n  }\n}\n\n/**\n * 为消息添加折叠控件\n * @param $mesText 消息文本元素\n */\nfunction addToggleButtonsToMessage($mesText: JQuery<HTMLElement>) {\n  if ($mesText.find('.code-toggle-button').length > 0 || $mesText.find('pre').length === 0) {\n    return;\n  }\n\n  $mesText.find('pre').each(function () {\n    const $pre = $(this);\n    const $toggleButton = $(\n      '<div class=\"code-toggle-button\" title=\"取消选中‘前端卡渲染优化’关闭此折叠功能\">显示代码块</div>',\n    );\n\n    $toggleButton.on('click', function () {\n      const isVisible = $pre.is(':visible');\n\n      if (isVisible) {\n        $pre.hide();\n        $(this).text('显示代码块');\n      } else {\n        $pre.show();\n        $(this).text('隐藏代码块');\n      }\n    });\n\n    $pre.before($toggleButton);\n  });\n}\n\n/**\n * 给所有消息添加折叠控件\n */\nexport function addCodeToggleButtonsToAllMessages() {\n  const $chat = $('#chat');\n  if (!$chat.length) {\n    return;\n  }\n\n  $chat.find('.mes .mes_block .mes_text').each(function () {\n    const $mesText = $(this);\n    addToggleButtonsToMessage($mesText);\n  });\n}\n\n/**\n * 根据mesId为消息添加折叠控件\n * @param mesId 消息ID\n */\nfunction addCodeToggleButtons(mesId: number) {\n  const $chat = $('#chat');\n  if (!$chat.length) {\n    return;\n  }\n  const $mesText = $chat.find(`div[mesid=\"${mesId}\"] .mes_block .mes_text`);\n  addToggleButtonsToMessage($mesText);\n}\n\n/**\n * 根据mesId移除折叠控件\n * @param mesId 消息ID\n */\nfunction removeCodeToggleButtonsByMesId(mesId: number) {\n  $(`div[mesid=\"${mesId}\"] .code-toggle-button`).each(function () {\n    $(this).off('click').remove();\n  });\n}\n\n/**\n * 移除所有折叠控件\n */\nfunction removeAllCodeToggleButtons() {\n  $('.code-toggle-button').each(function () {\n    $(this).off('click').remove();\n  });\n  // 去掉所有pre的display:none\n  $('pre').css('display', 'block');\n}\n\n/**\n * 添加前端卡渲染优化设置\n */\nexport function addRenderingOptimizeSettings() {\n  injectCodeBlockHideStyles();\n  hljs.highlightElement = function () {\n    return;\n  };\n}\n\n/**\n * 移除前端卡渲染优化设置\n */\nexport function removeRenderingOptimizeSettings() {\n  hljs.highlightElement = originalHighlightElement;\n  removeCodeBlockHideStyles();\n  removeAllCodeToggleButtons();\n}\n\n/**\n * 处理重型前端卡渲染优化\n * @param enable 是否启用重型前端卡渲染优化\n * @param userInput 是否由用户手动触发\n */\nasync function handleRenderingOptimizationToggle(enable: boolean, userInput: boolean = true) {\n  if (userInput) {\n    await saveSettingValue('render.render_optimize', enable);\n    isRenderingOptimizeEnabled = enable;\n  }\n\n  if (!isRenderEnabled) {\n    return;\n  }\n\n  if (enable) {\n    addRenderingOptimizeSettings();\n    if (userInput) {\n      await clearAndRenderAllIframes();\n    }\n  } else {\n    removeRenderingOptimizeSettings();\n    if (userInput) {\n      await clearAndRenderAllIframes();\n    }\n  }\n}\n/**\n * 处理渲染器启用设置改变\n * @param enable 是否启用渲染器\n * @param userInput 是否由用户手动触发\n */\nasync function handleRenderEnableToggle(enable: boolean, userInput: boolean = true) {\n  if (userInput) {\n    await saveSettingValue('render.render_enabled', enable);\n    isRenderEnabled = enable;\n  }\n  if (enable) {\n    $('#render-settings-content .extension-content-item').not(':first').css('opacity', 1);\n    if (isRenderingOptimizeEnabled) {\n      addRenderingOptimizeSettings();\n    }\n    await renderAllIframes();\n  } else {\n    $('#render-settings-content .extension-content-item').not(':first').css('opacity', 0.5);\n    if (isRenderingOptimizeEnabled) {\n      removeRenderingOptimizeSettings();\n    }\n    await clearAllIframes();\n    await reloadCurrentChat();\n  }\n}\n\n/**\n * 添加前端渲染快速按钮\n */\nfunction addRenderQuickButton() {\n  const buttonHtml = $(`\n  <div id=\"tavern-helper-container\" class=\"list-group-item flex-container flexGap5 interactable\">\n      <div class=\"fa-solid fa-puzzle-piece extensionsMenuExtensionButton\" /></div>\n      <span id=\"tavern-helper-text\">${isRenderEnabled ? '关闭前端渲染' : '开启前端渲染'}</span>\n  </div>`);\n  buttonHtml.css('display', 'flex');\n  $('#extensionsMenu').append(buttonHtml);\n  $('#tavern-helper-container').on('click', async function () {\n    $('#tavern-helper-text').text(!isRenderEnabled ? '关闭前端渲染' : '开启前端渲染');\n    await handleRenderEnableToggle(!isRenderEnabled, true);\n    $('#render-enable-toggle').prop('checked', isRenderEnabled);\n  });\n}\n\n/**\n * 初始化iframe控制面板\n */\nexport const initIframePanel = () => {\n  // 处理处理深度设置\n  renderDepth = getSettingValue('render.render_depth');\n  $('#render-depth')\n    .val(renderDepth || defaultIframeSettings.render_depth)\n    .on('input', function (event) {\n      onDepthInput((event.target as HTMLInputElement).value);\n    });\n\n  isRenderEnabled = getSettingValue('render.render_enabled');\n  handleRenderEnableToggle(isRenderEnabled, false);\n  $('#render-enable-toggle')\n    .prop('checked', isRenderEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleRenderEnableToggle(event.target.checked, true));\n\n  addRenderQuickButton();\n\n  // 处理重型前端卡渲染优化\n  isRenderingOptimizeEnabled = getSettingValue('render.render_optimize');\n  if (isRenderingOptimizeEnabled) {\n    handleRenderingOptimizationToggle(true, false);\n  }\n  $('#render-optimize-toggle')\n    .prop('checked', isRenderingOptimizeEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleRenderingOptimizationToggle(event.target.checked, true));\n\n  // 处理油猴兼容性设置\n  isTampermonkeyEnabled = getSettingValue('render.tampermonkey_compatibility');\n  if (isTampermonkeyEnabled) {\n    handleTampermonkeyCompatibilityChange(true, false);\n  }\n  $('#tampermonkey-compatibility-toggle')\n    .prop('checked', isTampermonkeyEnabled)\n    .on('click', (event: JQuery.ClickEvent) => handleTampermonkeyCompatibilityChange(event.target.checked, true));\n\n\n  $(window).on('resize', function () {\n    if ($('iframe[data-needs-vh=\"true\"]').length) {\n      updateIframeViewportHeight();\n    }\n  });\n  injectLoadingStyles();\n};\n","export { SetMultimap, ArrayMultimap };\n\nabstract class Multimap<K, V, I extends Iterable<V>> implements Iterable<[K, V]> {\n  private size_ = 0;\n  private map: Map<K, I> = new Map();\n  private operator: CollectionOperator<V, I>;\n\n  constructor(operator: CollectionOperator<V, I>, iterable?: Iterable<[K, V]>) {\n    this.operator = operator;\n    if (iterable) {\n      for (const [key, value] of iterable) {\n        this.put(key, value);\n      }\n    }\n    return this;\n  }\n\n  abstract get [Symbol.toStringTag](): string;\n\n  get size(): number {\n    return this.size_;\n  }\n\n  get(key: K): I {\n    const values = this.map.get(key);\n    if (values) {\n      return this.operator.clone(values);\n    } else {\n      return this.operator.create();\n    }\n  }\n\n  put(key: K, value: V): boolean {\n    let values = this.map.get(key);\n    if (!values) {\n      values = this.operator.create();\n    }\n    if (!this.operator.add(value, values)) {\n      return false;\n    }\n    this.map.set(key, values);\n    this.size_++;\n    return true;\n  }\n\n  putAll(key: K, values: I): boolean;\n  putAll(multimap: Multimap<K, V, I>): boolean;\n  putAll(arg1: K | Multimap<K, V, I>, arg2?: I): boolean {\n    let pushed = 0;\n    if (arg2) {\n      const key = arg1 as K;\n      const values = arg2;\n      for (const value of values) {\n        this.put(key, value);\n        pushed++;\n      }\n    } else if (arg1 instanceof Multimap) {\n      for (const [key, value] of arg1.entries()) {\n        this.put(key, value);\n        pushed++;\n      }\n    } else {\n      throw new TypeError('unexpected arguments');\n    }\n    return pushed > 0;\n  }\n\n  has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  hasEntry(key: K, value: V): boolean {\n    return this.operator.has(value, this.get(key));\n  }\n\n  delete(key: K): boolean {\n    this.size_ -= this.operator.size(this.get(key));\n    return this.map.delete(key);\n  }\n\n  deleteEntry(key: K, value: V): boolean {\n    const current = this.get(key);\n    if (!this.operator.delete(value, current)) {\n      return false;\n    }\n    this.map.set(key, current);\n    this.size_--;\n    return true;\n  }\n\n  clear(): void {\n    this.map.clear();\n    this.size_ = 0;\n  }\n\n  keys(): IterableIterator<K> {\n    return this.map.keys();\n  }\n\n  entries(): IterableIterator<[K, V]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    function* gen(): IterableIterator<[K, V]> {\n      for (const [key, values] of self.map.entries()) {\n        for (const value of values) {\n          yield [key, value];\n        }\n      }\n    }\n    return gen();\n  }\n\n  values(): IterableIterator<V> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    function* gen(): IterableIterator<V> {\n      for (const [, value] of self.entries()) {\n        yield value;\n      }\n    }\n    return gen();\n  }\n\n  forEach<T>(callback: (this: T | this, value: V, key: K, map: this) => void, thisArg?: T): void {\n    for (const [key, value] of this.entries()) {\n      callback.call(thisArg === undefined ? this : thisArg, value, key, this);\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.entries();\n  }\n\n  asMap(): Map<K, I> {\n    const ret = new Map<K, I>();\n    for (const key of this.keys()) {\n      ret.set(key, this.operator.clone(this.get(key)));\n    }\n    return ret;\n  }\n}\n\ninterface CollectionOperator<V, I> {\n  create(): I;\n  clone(collection: I): I;\n  add(value: V, collection: I): boolean;\n  size(collection: I): number;\n  delete(value: V, collection: I): boolean;\n  has(value: V, collection: I): boolean;\n}\n\nclass ArrayMultimap<K, V> extends Multimap<K, V, V[]> {\n  constructor(iterable?: Iterable<[K, V]>) {\n    super(new ArrayOperator(), iterable);\n  }\n\n  get [Symbol.toStringTag](): string {\n    return 'ArrayMultimap';\n  }\n}\n\nclass ArrayOperator<V> implements CollectionOperator<V, V[]> {\n  create(): V[] {\n    return [];\n  }\n\n  clone(collection: V[]): V[] {\n    return collection.slice();\n  }\n\n  add(value: V, collection: V[]): boolean {\n    collection.push(value);\n    return true;\n  }\n\n  size(collection: V[]): number {\n    return collection.length;\n  }\n\n  delete(value: V, collection: V[]): boolean {\n    const index = collection.indexOf(value);\n    if (index > -1) {\n      collection.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n  has(value: V, collection: V[]): boolean {\n    return collection.includes(value);\n  }\n}\n\nclass SetMultimap<K, V> extends Multimap<K, V, Set<V>> {\n  constructor(iterable?: Iterable<[K, V]>) {\n    super(new SetOperator(), iterable);\n  }\n  get [Symbol.toStringTag](): string {\n    return 'SetMultimap';\n  }\n}\n\nclass SetOperator<V> implements CollectionOperator<V, Set<V>> {\n  create(): Set<V> {\n    return new Set();\n  }\n  clone(collection: Set<V>): Set<V> {\n    return new Set(collection);\n  }\n  add(value: V, collection: Set<V>): boolean {\n    const prev = collection.size;\n    collection.add(value);\n    return prev !== collection.size;\n  }\n  size(collection: Set<V>): number {\n    return collection.size;\n  }\n  delete(value: V, collection: Set<V>): boolean {\n    return collection.delete(value);\n  }\n  has(value: V, collection: Set<V>): boolean {\n    return collection.has(value);\n  }\n}\n","import { SetMultimap } from '@/util/multimap';\n\nexport function partition<T>(array: T[], predicate: (item: T) => boolean): [T[], T[]] {\n  return array.reduce(\n    ([pass, fail], item) => {\n      if (predicate(item)) {\n        pass.push(item);\n      } else {\n        fail.push(item);\n      }\n      return [pass, fail];\n    },\n    [[], []] as [T[], T[]],\n  );\n}\n\nexport function set_or_add<K1, K2, V>(map: Map<K1, SetMultimap<K2, V>>, k1: K1, k2: K2, v: V): boolean {\n  if (map.has(k1)) {\n    // @ts-ignore 2532\n    map.get(k1).put(k2, v);\n    return false;\n  }\n\n  map.set(k1, new SetMultimap([[k2, v]]));\n  return true;\n}\n\nexport function try_set<K, V>(map: Map<K, V>, key: K, value: V): boolean {\n  if (map.has(key)) {\n    return false;\n  }\n  map.set(key, value);\n  return true;\n}\n\nexport function get_or_set<K, V>(map: Map<K, V>, key: K, defaulter: () => V): V {\n  const existing_value = map.get(key);\n  if (existing_value) {\n    return existing_value;\n  }\n  const default_value = defaulter();\n  map.set(key, default_value);\n  return default_value;\n}\n\nexport function extract<K, V>(map: Map<K, V>, key: K): V | undefined {\n  const value = map.get(key);\n  if (!value) {\n    return undefined;\n  }\n  map.delete(key);\n  return value;\n}\n\nexport function with_fallback<T extends Object>(data: Partial<T>, fallback: T): T {\n  const result = { ...fallback };\n  for (const key in data) {\n    if (data[key] !== undefined) {\n      result[key] = data[key];\n    }\n  }\n  return result;\n}\n","import { getLogPrefix, IframeMessage, registerIframeHandler } from '@/iframe_server/_impl';\n\nimport { chat_metadata, event_types } from '@sillytavern/script';\nimport { getContext, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\n\ninterface IframeSetVariables extends IframeMessage {\n  request: '[Variables][setVariables]';\n  message_id: number;\n  variables: Record<string, any>;\n}\nlet latest_set_variables_message_id: number | null = null;\n\nexport function registerIframeVariableHandler() {\n  registerIframeHandler('[Variables][setVariables]', async (event: MessageEvent<IframeSetVariables>): Promise<void> => {\n    const variables = event.data.variables;\n    const message_id = event.data.message_id;\n\n    if (isNaN(message_id)) {\n      return;\n    }\n    const chat_length = getContext().chat.length;\n    const latest_message_id = chat_length - 1;\n\n    if (message_id !== latest_message_id) {\n      console.info(\n        `因为 ${message_id} 楼不是最新楼层 ${latest_message_id} 楼, 取消设置聊天变量. 原本要设置的变量:\\n${JSON.stringify(\n          variables,\n          undefined,\n          2,\n        )} `,\n      );\n      return;\n    }\n    latest_set_variables_message_id = message_id;\n    if (\n      // @ts-ignore\n      !chat_metadata.variables ||\n      // @ts-ignore\n      typeof chat_metadata.variables !== 'object'\n    ) {\n      // @ts-ignore\n      chat_metadata.variables = {};\n    }\n    if (\n      // @ts-ignore\n      !chat_metadata.variables.tempVariables ||\n      // @ts-ignore\n      typeof chat_metadata.variables.tempVariables !== 'object'\n    ) {\n      // @ts-ignore\n      chat_metadata.variables.tempVariables = {};\n    }\n    if (variables.hasOwnProperty('tempVariables')) {\n      // @ts-ignore\n      delete variables.tempVariables;\n    }\n    // @ts-ignore\n    const tempVariables = chat_metadata.variables.tempVariables;\n    // @ts-ignore\n    const currentVariables = chat_metadata.variables;\n    Object.keys(variables).forEach(key => {\n      // @ts-ignore\n      const newValue = variables[key];\n      const currentValue = currentVariables[key];\n      if (newValue !== currentValue) {\n        tempVariables[key] = newValue;\n      }\n    });\n    // @ts-ignore\n    chat_metadata.variables.tempVariables = tempVariables;\n    saveMetadataDebounced();\n\n    console.info(`${getLogPrefix(event)}设置聊天变量, 要设置的变量:\\n${JSON.stringify(variables, undefined, 2)} `);\n  });\n}\n\nexport function clearTempVariables() {\n  if (\n    chat_metadata.variables &&\n    chat_metadata.variables.tempVariables &&\n    Object.keys(chat_metadata.variables.tempVariables).length > 0\n  ) {\n    console.log('[Var]Clearing tempVariables.');\n    chat_metadata.variables.tempVariables = {};\n    saveMetadataDebounced();\n  }\n}\n\nexport function shouldUpdateVariables(eventMesId: number) {\n  if (\n    !chat_metadata.variables ||\n    !chat_metadata.variables.tempVariables ||\n    Object.keys(chat_metadata.variables.tempVariables).length === 0\n  ) {\n    return;\n  }\n  if (eventMesId === latest_set_variables_message_id) {\n    console.log('[Var]MesId matches the latest setVariables, skipping ST variable update.');\n    return;\n  } else if (latest_set_variables_message_id !== null && eventMesId > latest_set_variables_message_id) {\n    console.log('[Var]Event mesId is newer than setVariables mesId, updating ST variables.');\n    const newVariables = { ...chat_metadata.variables.tempVariables };\n    updateVariables(newVariables);\n\n    chat_metadata.variables.tempVariables = {};\n    console.log('[Var]TempVariables cleared.');\n  } else {\n    console.log('[Var]Event mesId is older than setVariables mesId, ignoring.');\n  }\n}\n\nfunction updateVariables(newVariables: Record<string, any>) {\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  const currentVariables = chat_metadata.variables;\n\n  for (let key in newVariables) {\n    if (newVariables.hasOwnProperty(key)) {\n      currentVariables[key] = newVariables[key];\n    }\n  }\n\n  chat_metadata.variables = currentVariables;\n\n  saveMetadataDebounced();\n}\n\nexport const checkVariablesEvents = [event_types.CHARACTER_MESSAGE_RENDERED, event_types.USER_MESSAGE_RENDERED];\n","import { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\nimport {\n  SlashCommandNamedArgument,\n} from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { executeSlashCommandsWithOptions } from '@sillytavern/scripts/slash-commands';\n\nimport third_party from '@/third_party.html';\n\nfunction formatSlashCommands(): string {\n  const cmdList = Object.keys(SlashCommandParser.commands)\n    .filter(key => SlashCommandParser.commands[key].name === key) // exclude aliases\n    .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n    .map(key => SlashCommandParser.commands[key]);\n  const transform_arg = (arg: SlashCommandNamedArgument) => {\n    const transformers = {\n      name: (value: SlashCommandNamedArgument['name']) => ({ name: value }),\n      // description: (value: SlashCommandNamedArgument['description']) => ({ description: value }),\n      isRequired: (value: SlashCommandNamedArgument['isRequired']) => ({\n        is_required: value,\n      }),\n      defaultValue: (value: SlashCommandNamedArgument['defaultValue']) =>\n        value !== null ? { default_value: value } : {},\n      acceptsMultiple: (value: SlashCommandNamedArgument['acceptsMultiple']) => ({ accepts_multiple: value }),\n      enumList: (value: SlashCommandNamedArgument['enumList']) =>\n        value.length > 0 ? { enum_list: value.map(e => e.value) } : {},\n      typeList: (value: SlashCommandNamedArgument['typeList']) => (value.length > 0 ? { type_list: value } : {}),\n    };\n\n    return Object.entries(arg)\n      .filter(([_, value]) => value !== undefined)\n      .reduce(\n        (result, [key, value]) => ({\n          ...result,\n          // @ts-ignore\n          ...transformers[key]?.(value),\n        }),\n        {},\n      );\n  };\n  const transform_help_string = (help_string: string) => {\n    const content = $('<span>').html(help_string);\n    return content\n      .text()\n      .split('\\n')\n      .map(line => line.trim())\n      .filter(line => line !== '')\n      .join(' ');\n  };\n\n  return cmdList\n    .map(cmd => ({\n      name: cmd.name,\n      named_args: cmd.namedArgumentList.map(transform_arg) ?? [],\n      unnamed_args: cmd.unnamedArgumentList.map(transform_arg) ?? [],\n      return_type: cmd.returns ?? 'void',\n      help_string: transform_help_string(cmd.helpString) ?? 'NO DETAILS',\n    }))\n    .map(\n      cmd =>\n        `/${cmd.name}${cmd.named_args.length > 0 ? ` ` : ``}${cmd.named_args\n          .map(\n            arg =>\n              `[${arg.accepts_multiple ? `...` : ``}${arg.name}=${\n                arg.enum_list ? arg.enum_list.join('|') : arg.type_list.join('|')\n              }]${arg.is_required ? `` : `?`}${arg.default_value ? `=${arg.default_value}` : ``}`,\n          )\n          .join(' ')}${cmd.unnamed_args.length > 0 ? ` ` : ``}${cmd.unnamed_args\n          .map(\n            arg =>\n              `(${arg.accepts_multiple ? `...` : ``}${\n                arg.enum_list ? arg.enum_list.join('|') : arg.type_list.join('|')\n              })${arg.is_required ? `` : `?`}${arg.default_value ? `=${arg.default_value}` : ``}`,\n          )\n          .join(' ')} // ${cmd.help_string}`,\n    )\n    .join('\\n');\n}\n\n/**\n * 初始化编写参考\n */\nexport function initReference() {\n\n  $('#copy_third_party_installation').on('pointerup', function () {\n    navigator.clipboard.writeText(\n      'npm install --save-dev @types/file-saver @types/jquery @types/jqueryui @types/lodash @types/yamljs',\n    );\n    executeSlashCommandsWithOptions('/echo severity=success 已复制到剪贴板!');\n  });\n  $('#copy_third_party_tag').on('pointerup', function () {\n    navigator.clipboard.writeText(third_party);\n    executeSlashCommandsWithOptions('/echo severity=success 已复制到剪贴板!');\n  });\n\n  $('#download_slash_commands').on('click', function () {\n    const url = URL.createObjectURL(new Blob([formatSlashCommands()], { type: 'text/plain' }));\n    $(this).attr('href', url);\n    $(this).attr('download', 'slash_command.txt');\n    setTimeout(() => URL.revokeObjectURL(url), 0);\n  });\n}","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"getRegexedString\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__.getRegexedString), [\"regex_placement\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__.regex_placement) });","import { chat, messageFormatting } from '@sillytavern/script';\nimport { getLastMessageId } from '@sillytavern/scripts/macros';\n\ninterface FormatAsDisplayedMessageOption {\n  message_id?: 'last' | 'last_user' | 'last_char' | number;  // 消息所在的楼层, 要求该楼层已经存在, 即在 `[0, await getLastMessageId()]` 范围内; 默认为 'last'\n};\n\n/**\n * 将字符串处理为酒馆用于显示的 html 格式. 将会,\n * 1. 替换字符串中的酒馆宏\n * 2. 对字符串应用对应的酒馆正则\n * 3. 将字符串调整为 html 格式\n *\n * @param text 要处理的字符串\n * @param option 可选选项\n *   - `message_id?:number`: 消息所在的楼层, 要求该楼层已经存在, 即在 `[0, await getLastMessageId()]` 范围内; 默认为最新楼层\n *\n * @returns 处理结果\n */\nexport function formatAsDisplayedMessage(text: string, option: FormatAsDisplayedMessageOption = { message_id: 'last' }): string {\n  let { message_id = 'last' } = option;\n  if (typeof message_id !== 'number' && !['last', 'last_user', 'last_char'].includes(message_id)) {\n    throw Error(\n      `提供的 message_id 无效, 请提供 'last', 'last_user', 'last_char' 或楼层消息号, 你提供的是: ${message_id}`,\n    );\n  }\n  const last_message_id = getLastMessageId();\n  if (last_message_id === null) {\n    throw Error(`未找到任何消息楼层, 你提供的是: ${message_id}`);\n  }\n  switch (message_id) {\n    case 'last':\n      message_id = last_message_id;\n      break;\n    case 'last_user': {\n      const last_user_message_id = getLastMessageId({ filter: (m: any) => m.is_user && !m.is_system }) as number;\n      if (last_user_message_id === null) {\n        throw Error(`未找到任何 user 消息楼层, 你提供的是: ${message_id}`);\n      }\n      message_id = last_user_message_id;\n      break;\n    }\n    case 'last_char': {\n      const last_char_message_id = getLastMessageId({ filter: (m: any) => !m.is_user && !m.is_system }) as number;\n      if (last_char_message_id === null) {\n        throw Error(`未找到任何 char 消息楼层, 你提供的是: ${message_id}`);\n      }\n      message_id = last_char_message_id;\n      break;\n    }\n  }\n  if (message_id < 0 || message_id > last_message_id) {\n    throw Error(`提供的 message_id 不在 [0, ${last_message_id}] 内, 你提供的是: ${message_id} `);\n  }\n\n  const chat_message = chat[message_id];\n  const result = messageFormatting(\n    text,\n    chat_message.name,\n    chat_message.is_system,\n    chat_message.is_user,\n    message_id,\n  );\n\n  console.info(\n    `将字符串处理为酒馆用于显示的 html 格式, 字符串: '${text}', 选项: '${JSON.stringify({ message_id })}', 结果: '${result}'`,\n  );\n  return result;\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"createNewWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.createNewWorldInfo), [\"createWorldInfoEntry\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.createWorldInfoEntry), [\"deleteWIOriginalDataValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.deleteWIOriginalDataValue), [\"deleteWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.deleteWorldInfo), [\"getWorldInfoPrompt\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.getWorldInfoPrompt), [\"getWorldInfoSettings\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.getWorldInfoSettings), [\"loadWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.loadWorldInfo), [\"originalWIDataKeyMap\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.originalWIDataKeyMap), [\"saveWorldInfo\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.saveWorldInfo), [\"selected_world_info\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.selected_world_info), [\"setWIOriginalDataValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.setWIOriginalDataValue), [\"setWorldInfoButtonClass\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.setWorldInfoButtonClass), [\"wi_anchor_position\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.wi_anchor_position), [\"world_info\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_info), [\"world_info_include_names\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_info_include_names), [\"world_names\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__.world_names) });","import { libraries_text } from '@/component/character_level/library';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\nimport { loadScripts, Script } from '@/util/load_script';\n\nlet script_map: Map<string, HTMLIFrameElement> = new Map();\n\nfunction makeScriptIframe(script: Script): { iframe: HTMLIFrameElement; load_promise: Promise<void> } {\n  const iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.id = `script-iframe-${script.name}`;\n\n  const srcdocContent = `\n    <html>\n    <head>\n      ${third_party}\n      <script src=\"${script_url.get('window_functions')}\"></script>\n      <script src=\"${script_url.get('iframe_client')}\"></script>\n      ${libraries_text}\n    </head>\n    <body>\n      ${script.code}\n    </body>\n    </html>\n  `;\n\n  iframe.srcdoc = srcdocContent;\n\n  const load_promise = new Promise<void>(resolve => {\n    iframe.onload = () => {\n      console.info(`[Script](${iframe.id}) 加载完毕`);\n      resolve();\n    };\n  });\n\n  document.body.appendChild(iframe);\n\n  return { iframe, load_promise };\n}\n\nexport function destroy(): void {\n  if (script_map.size !== 0) {\n    console.log(`[Script] 清理全局脚本...`);\n    script_map.forEach((iframe, _) => {\n      iframe.remove();\n    });\n    script_map.clear();\n    console.log(`[Script] 全局脚本清理完成!`);\n  }\n}\n\nexport async function initialize(): Promise<void> {\n  try {\n    destroy();\n\n    const scripts = loadScripts('脚本-');\n    console.info(`[Script] 加载全局脚本: ${JSON.stringify(scripts.map(script => script.name))}`);\n\n    const load_promises: Promise<void>[] = [];\n\n    scripts.forEach(script => {\n      const { iframe, load_promise } = makeScriptIframe(script);\n      script_map.set(script.name, iframe);\n      load_promises.push(load_promise);\n    });\n\n    await Promise.allSettled(load_promises);\n  } catch (error) {\n    console.error('[Script] 全局脚本加载失败:', error);\n    throw error;\n  }\n}\n","import { destroy as destroyLibrary, initialize as initializeLibrary } from '@/component/character_level/library';\nimport {\n  destroy as destroyScriptIframe,\n  initialize as initializeScriptIframe,\n} from '@/component/character_level/script_iframe';\n\nimport { event_types, eventSource } from '@sillytavern/script';\n\nconst load_events = [event_types.CHAT_CHANGED] as const;\n\nexport function initializeCharacterLevelOnExtension() {\n  // FIXME: 在无角色卡的情况下, 修改正则并不会触发 CHAT_CHANGED 事件, 因而不会加载这些内容\n  load_events.forEach(eventType => {\n    eventSource.makeFirst(eventType, initializeScriptIframe);\n    eventSource.makeFirst(eventType, initializeLibrary);\n  });\n}\n\nexport function destroyCharacterLevelOnExtension() {\n  load_events.forEach(eventType => {\n    eventSource.removeListener(eventType, initializeScriptIframe);\n    eventSource.removeListener(eventType, initializeLibrary);\n  });\n  destroyScriptIframe();\n  destroyLibrary();\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"commonEnumProviders\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__.commonEnumProviders), [\"enumIcons\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__.enumIcons) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"SlashCommandEnumValue\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__.SlashCommandEnumValue), [\"enumTypes\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__.enumTypes) });","import { getSettingValue, saveSettingValue } from '@/util/extension_variables';\n\nimport { chat_metadata, saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, saveMetadataDebounced } from '@sillytavern/scripts/extensions';\nimport { SlashCommand } from '@sillytavern/scripts/slash-commands/SlashCommand';\nimport {\n  ARGUMENT_TYPE,\n  SlashCommandArgument,\n  SlashCommandNamedArgument,\n} from '@sillytavern/scripts/slash-commands/SlashCommandArgument';\nimport { commonEnumProviders, enumIcons } from '@sillytavern/scripts/slash-commands/SlashCommandCommonEnumsProvider';\nimport { SlashCommandEnumValue, enumTypes } from '@sillytavern/scripts/slash-commands/SlashCommandEnumValue';\nimport { SlashCommandParser } from '@sillytavern/scripts/slash-commands/SlashCommandParser';\n\nimport {\n  list_BGMS,\n  list_ambients,\n  onAudioEnabledClick,\n  playAudio,\n  updateAudio,\n  updateAudioSelect,\n} from '../component/audio';\n\ninterface AudioElement extends HTMLElement {\n  pause(): void;\n}\n\n/**\n * 切换音频播放模式\n */\nexport async function audioMode(args: { type: string; mode: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const mode = args.mode.toLowerCase();\n\n  if (!['bgm', 'ambient'].includes(type) || !['repeat', 'random', 'single', 'stop'].includes(mode)) {\n    console.warn('WARN: Invalid arguments for /audiomode command');\n    return '';\n  }\n\n  if (type === 'bgm') {\n    await saveSettingValue('audio.bgm_mode', mode);\n    const iconMap: Record<string, string> = {\n      repeat: 'fa-repeat',\n      random: 'fa-random',\n      single: 'fa-redo-alt',\n      stop: 'fa-cancel',\n    };\n    $('#audio_bgm_mode_icon').removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n    $('#audio_bgm_mode_icon').addClass(iconMap[mode]);\n  } else if (type === 'ambient') {\n    await saveSettingValue('audio.ambient_mode', mode);\n    const iconMap: Record<string, string> = {\n      repeat: 'fa-repeat',\n      random: 'fa-random',\n      single: 'fa-redo-alt',\n      stop: 'fa-cancel',\n    };\n    $('#audio_ambient_mode_icon').removeClass('fa-repeat fa-random fa-redo-alt fa-cancel');\n    $('#audio_ambient_mode_icon').addClass(iconMap[mode]);\n  }\n\n  saveSettingsDebounced();\n  return '';\n}\n\n/**\n * 切换播放器开关状态\n */\nexport async function audioEnable(args: { type: string; state?: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const state = (args.state || 'true').toLowerCase();\n\n  if (!type) {\n    console.warn('WARN: Missing arguments for /audioenable command');\n    return '';\n  }\n\n  if (type === 'bgm') {\n    if (state === 'true') {\n      $('#enable_bgm').prop('checked', true);\n      await onAudioEnabledClick('bgm');\n    } else if (state === 'false') {\n      $('#enable_bgm').prop('checked', false);\n      await onAudioEnabledClick('bgm');\n    }\n  } else if (type === 'ambient') {\n    if (state === 'true') {\n      $('#enable_ambient').prop('checked', true);\n      await onAudioEnabledClick('ambient');\n    } else if (state === 'false') {\n      $('#enable_ambient').prop('checked', false);\n      await onAudioEnabledClick('ambient');\n    }\n  }\n\n  return '';\n}\n\n/**\n * 切换播放/暂停状态\n */\nexport async function audioPlay(args: { type: string; play?: string }): Promise<void> {\n  const type = args.type.toLowerCase();\n  const play = (args.play || 'true').toLowerCase();\n\n  if (!type) {\n    console.warn('WARN: Missing arguments for /audioplaypause command');\n    return '';\n  }\n\n  if (type === 'bgm') {\n    if (play === 'true') {\n      await playAudio('bgm');\n    } else if (play === 'false') {\n      const audioElement = $('#audio_bgm')[0] as AudioElement;\n      audioElement.pause();\n    }\n  } else if (type === 'ambient') {\n    if (play === 'true') {\n      await playAudio('ambient');\n    } else if (play === 'false') {\n      const audioElement = $('#audio_ambient')[0] as AudioElement;\n      audioElement.pause();\n    }\n  }\n\n  return '';\n}\n\n/**\n * 导入音频链接\n */\nexport async function audioImport(args: { type: string; play?: string }, url: string): Promise<void> {\n  const type = args.type.toLowerCase();\n  const play = (args.play || 'true').toLowerCase();\n\n  if (!type || !url) {\n    console.warn('WARN: Missing arguments for /audioimport command');\n    return '';\n  }\n\n  const urlArray = url\n    .split(',')\n    .map((url: string) => url.trim())\n    .filter((url: string) => url !== '')\n    .filter((url: string, index: number, self: string[]) => self.indexOf(url) === index);\n  if (urlArray.length === 0) {\n    console.warn('WARN: Invalid or empty URLs provided.');\n    return '';\n  }\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n  const existingUrls = chat_metadata.variables[typeKey] || [];\n  const mergedUrls = [...new Set([...urlArray, ...existingUrls])];\n\n  chat_metadata.variables[typeKey] = mergedUrls;\n  saveMetadataDebounced();\n\n  if (type === 'bgm') {\n    updateAudioSelect('bgm');\n  } else if (type === 'ambient') {\n    updateAudioSelect('ambient');\n  }\n\n  if (play === 'true' && urlArray[0]) {\n    const selectedUrl = urlArray[0];\n    if (type === 'bgm') {\n      await saveSettingValue('audio.bgm_selected', selectedUrl);\n      await updateAudio('bgm', true);\n    } else if (type === 'ambient') {\n      await saveSettingValue('audio.ambient_selected', selectedUrl);\n      await updateAudio('ambient', true);\n    }\n  }\n\n  return '';\n}\n\n/**\n * 选择并播放音频\n */\nexport async function audioSelect(args: { type: string }, url: string): Promise<void> {\n  const type = args.type.toLowerCase();\n\n  if (!url) {\n    console.warn('WARN: Missing URL for /audioselect command');\n    return '';\n  }\n\n  if (!chat_metadata.variables) {\n    chat_metadata.variables = {};\n  }\n\n  let playlist = type === 'bgm' ? list_BGMS : list_ambients;\n  const typeKey = type === 'bgm' ? 'bgmurl' : 'ambienturl';\n\n  if (playlist && playlist.includes(url)) {\n    if (type === 'bgm') {\n      await saveSettingValue('audio.bgm_selected', url);\n      await updateAudio('bgm', true);\n    } else if (type === 'ambient') {\n      await saveSettingValue('audio.ambient_selected', url);\n      await updateAudio('ambient', true);\n    }\n    return '';\n  }\n\n  const existingUrls = chat_metadata.variables[typeKey] || [];\n\n  const mergedUrls = [...new Set([url, ...existingUrls])];\n  chat_metadata.variables[typeKey] = mergedUrls;\n  saveMetadataDebounced();\n\n  if (type === 'bgm') {\n    updateAudioSelect('bgm');\n    await saveSettingValue('audio.bgm_selected', url);\n    await updateAudio('bgm', true);\n  } else if (type === 'ambient') {\n    updateAudioSelect('ambient');\n    await saveSettingValue('audio.ambient_selected', url);\n    await updateAudio('ambient', true);\n  }\n\n  return '';\n}\n\n/**\n * 初始化音频相关的 slash command\n */\nexport function initAudioSlashCommands() {\n  // 注册 audioselect 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioselect',\n      callback: audioSelect,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择播放器类型 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n      ],\n      unnamedArgumentList: [new SlashCommandArgument('url', [ARGUMENT_TYPE.STRING], true)],\n      helpString: `\n        <div>\n            选择并播放音频。如果音频链接不存在，则先导入再播放。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioselect type=bgm https://example.com/song.mp3</code></pre>\n                    选择并播放指定的音乐。\n                </li>\n                <li>\n                    <pre><code>/audioselect type=ambient https://example.com/sound.mp3</code></pre>\n                    选择并播放指定的音效。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioimport 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioimport',\n      callback: audioImport,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择导入类型 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'play',\n          description: '导入后是否立即播放第一个链接',\n          typeList: [ARGUMENT_TYPE.BOOLEAN],\n          defaultValue: 'true',\n          isRequired: false,\n        }),\n      ],\n      unnamedArgumentList: [new SlashCommandArgument('url', [ARGUMENT_TYPE.STRING], true)],\n      helpString: `\n        <div>\n            导入音频或音乐链接，并决定是否立即播放，默认为自动播放。可批量导入链接，使用英文逗号分隔。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioimport type=bgm https://example.com/song1.mp3,https://example.com/song2.mp3</code></pre>\n                    导入 BGM 音乐并立即播放第一个链接。\n                </li>\n                <li>\n                    <pre><code>/audioimport type=ambient play=false url=https://example.com/sound1.mp3,https://example.com/sound2.mp3 </code></pre>\n                    导入音效链接 (不自动播放)。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioplay 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioplay',\n      callback: audioPlay,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        new SlashCommandNamedArgument(\n          'play',\n          '播放或暂停',\n          [ARGUMENT_TYPE.STRING],\n          true,\n          false,\n          'true',\n          commonEnumProviders.boolean('trueFalse')(),\n        ),\n      ],\n      helpString: `\n        <div>\n            控制音乐播放器或音效播放器的播放与暂停。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioplay type=bgm</code></pre>\n                    播放当前音乐。\n                </li>\n                <li>\n                    <pre><code>/audioplay type=ambient play=false</code></pre>\n                    暂停当前音效。\n                </li>\n            </ul>\n        </div>\n      `,\n    }),\n  );\n\n  // 注册 audioenable 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audioenable',\n      callback: audioEnable,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        new SlashCommandNamedArgument(\n          'state',\n          '打开或关闭播放器',\n          [ARGUMENT_TYPE.STRING],\n          false,\n          false,\n          'true',\n          commonEnumProviders.boolean('trueFalse')(),\n        ),\n      ],\n      helpString: `\n        <div>\n            控制音乐播放器或音效播放器的开启与关闭。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioenable type=bgm state=true</code></pre>\n                    打开音乐播放器。\n                </li>\n                <li>\n                    <pre><code>/audioenable type=ambient state=false</code></pre>\n                    关闭音效播放器。\n                </li>\n            </ul>\n        </div>\n    `,\n    }),\n  );\n\n  // 注册 audiomode 命令\n  SlashCommandParser.addCommandObject(\n    SlashCommand.fromProps({\n      name: 'audiomode',\n      callback: audioMode,\n      namedArgumentList: [\n        SlashCommandNamedArgument.fromProps({\n          name: 'type',\n          description: '选择控制的播放器 (bgm 或 ambient)',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('bgm', null, enumTypes.enum, enumIcons.file),\n            new SlashCommandEnumValue('ambient', null, enumTypes.enum, enumIcons.file),\n          ],\n          isRequired: true,\n        }),\n        SlashCommandNamedArgument.fromProps({\n          name: 'mode',\n          description: '选择播放模式',\n          typeList: [ARGUMENT_TYPE.STRING],\n          enumList: [\n            new SlashCommandEnumValue('repeat', null, enumTypes.enum, enumIcons.loop),\n            new SlashCommandEnumValue('random', null, enumTypes.enum, enumIcons.shuffle),\n            new SlashCommandEnumValue('single', null, enumTypes.enum, enumIcons.redo),\n            new SlashCommandEnumValue('stop', null, enumTypes.enum, enumIcons.stop),\n          ],\n          isRequired: true,\n        }),\n      ],\n      helpString: `\n        <div>\n            设置音频播放模式。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=repeat</code></pre>\n                    设置音乐为循环播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=random</code></pre>\n                    设置音效为随机播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=single</code></pre>\n                    设置音乐为单曲循环模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=stop</code></pre>\n                    设置音效为停止播放模式。\n                </li>\n            </ul>\n        </div>\n    `,\n    }),\n  );\n}\n","import { handlePartialRender } from '@/component/message_iframe';\n\nimport {\n  chat,\n  messageFormatting,\n  reloadCurrentChat,\n  saveChatConditional,\n  substituteParamsExtended,\n  system_message_types,\n} from '@sillytavern/script';\nimport { stringToRange } from '@sillytavern/scripts/utils';\n\ninterface ChatMessage {\n  message_id: number;\n  name: string;\n  role: 'system' | 'assistant' | 'user';\n  is_hidden: boolean;\n\n  swipe_id: number; // 当前被使用的消息页页号\n  message: string; // 当前被使用的消息页文本\n  data: Record<string, any>; // 当前被使用的消息页所绑定的数据\n\n  swipes: string[];\n  swipes_data: Record<string, any>[];\n\n  is_user: boolean;\n  is_system_or_hidden: boolean;\n}\n\ninterface GetChatMessagesOption {\n  role?: 'all' | 'system' | 'assistant' | 'user'; // 按 role 筛选消息; 默认为 `'all'`\n  hide_state?: 'all' | 'hidden' | 'unhidden'; // 按是否被隐藏筛选消息; 默认为 `'all'`\n}\n\ninterface ChatMessageToSet {\n  message?: string;\n  data?: Record<string, any>;\n}\n\ninterface SetChatMessageOption {\n  /**\n   * 要替换的消息页 (`'current'` 来替换当前使用的消息页, 或从 0 开始的序号来替换对应消息页), 如果消息中还没有该消息页, 则会创建该页; 默认为 `'current'`\n   */\n  swipe_id?: 'current' | number;\n\n  /**\n   * 是否更新页面的显示和 iframe 渲染, 只会更新已经被加载显示在网页的楼层, 更新显示时会触发被更新楼层的 \"仅格式显示\" 正则; 默认为 `'display_and_render_current'`\n   * - `'none'`: 不更新页面的显示和 iframe 渲染\n   * - `'display_current'`: 仅更新当前被替换楼层的显示, 如果替换的是没被使用的消息页, 则会自动切换为使用那一页\n   * - `'display_and_render_current'`: 与 `display_current` 相同, 但还会重新渲染该楼的 iframe\n   * - `'all'`: 重新载入整个聊天消息, 将会触发 `tavern_events.CHAT_CHANGED` 进而重新加载全局脚本和楼层消息\n   */\n  refresh?: 'none' | 'display_current' | 'display_and_render_current' | 'all';\n}\n\n/**\n * 获取聊天消息\n *\n * @param range 要获取的消息楼层号或楼层范围, 与 `/messages` 相同\n * @param option 可选选项\n *   - `role:'all'|'system'|'assistant'|'user'`: 按 role 筛选消息; 默认为 `'all'`\n *   - `hide_state:'all'|'hidden'|'unhidden'`: 按是否被隐藏筛选消息; 默认为 `'all'`\n *\n * @returns 一个数组, 数组的元素是每楼的消息 `ChatMessage`. 该数组依据按 message_id 从低到高排序.\n */\nexport async function getChatMessages(\n  range: string | number,\n  option: GetChatMessagesOption = { role: 'all', hide_state: 'all' },\n): Promise<ChatMessage[]> {\n  const { role = 'all', hide_state = 'all' } = option;\n  const range_demacroed = substituteParamsExtended(range.toString());\n  const rangeNumber = stringToRange(range_demacroed, 0, chat.length - 1);\n  if (!rangeNumber) {\n    throw Error(`提供的消息范围 range 无效: ${range}`);\n  }\n  if (!['all', 'system', 'assistant', 'user'].includes(role)) {\n    throw Error(`提供的 role 无效, 请提供 'all', 'system', 'assistant' 或 'user', 你提供的是: ${role}`);\n  }\n  if (!['all', 'hidden', 'unhidden'].includes(hide_state)) {\n    throw Error(`提供的 hide_state 无效, 请提供 'all', 'hidden' 或 'unhidden', 你提供的是: ${hide_state}`);\n  }\n\n  const { start, end } = rangeNumber;\n\n  const getRole = (chat_message: any) => {\n    const is_narrator = chat_message.extra?.type === system_message_types.NARRATOR;\n    if (is_narrator) {\n      if (chat_message.is_user) {\n        return 'unknown';\n      }\n      return 'system';\n    }\n    if (chat_message.is_user) {\n      return 'user';\n    }\n    return 'assistant';\n  };\n\n  const process_message = async (message_id: number): Promise<ChatMessage | null> => {\n    const message = chat[message_id];\n    if (!message) {\n      console.warn(`没找到第 ${message_id} 楼的消息`);\n      return null;\n    }\n\n    const messageRole = getRole(message);\n    if (role !== 'all' && messageRole !== role) {\n      console.debug(`筛去了第 ${message_id} 楼的消息因为它的身份不是 ${role}`);\n      return null;\n    }\n\n    if (hide_state !== 'all' && (hide_state === 'hidden') !== message.is_system) {\n      console.debug(`筛去了第 ${message_id} 楼的消息因为它${hide_state === 'hidden' ? `` : `没`} 被隐藏`);\n      return null;\n    }\n\n    const swipe_id = message?.swipe_id ?? 0;\n    const swipes = message?.swipes ?? [message.mes];\n    const swipes_data = message?.variables ?? [];\n    const data = swipes_data[swipe_id] ?? {};\n\n    return {\n      message_id: message_id,\n      name: message.name,\n      role: role as 'system' | 'assistant' | 'user',\n      is_hidden: message.is_system,\n      message: message.mes,\n      data: data,\n\n      swipe_id: swipe_id,\n      swipes: swipes,\n      swipes_data: swipes_data,\n\n      is_user: message.is_user,\n      is_system_or_hidden: message.is_system,\n    };\n  };\n\n  const promises: Promise<ChatMessage | null>[] = [];\n  for (let i: number = start; i <= end; ++i) {\n    promises.push(process_message(i));\n  }\n\n  const chat_messages: ChatMessage[] = (await Promise.all(promises)).filter(chat_message => chat_message !== null);\n\n  console.info(\n    `获取${start == end ? `第 ${start} ` : ` ${start}-${end} `}楼的消息, 选项: ${JSON.stringify({\n      role,\n      hide_state,\n    })} `,\n  );\n  return chat_messages;\n}\n\n/**\n * 设置某消息楼层某聊天消息页的信息. 如果设置了当前会被发送给 ai 的消息文本 (正被使用且没被隐藏的消息页文本), 则 \"仅格式提示词\" 正则将会使用它而不是原来的消息.\n *\n * @param field_values 要设置的信息\n *   - message?: 消息页要设置的消息文本\n *   - data?: 消息页要绑定的数据\n * @param message_id 消息楼层id\n * @param option 可选选项:\n *   - `swipe_id?:'current'|number`: 要替换的消息页 (`'current'` 来替换当前使用的消息页, 或从 0 开始的序号来替换对应消息页), 如果消息中还没有该消息页, 则会创建该页; 默认为 `'current'`\n *   - `refresh?:'none'|'display_current'|'display_and_render_current'|'all'`: 是否更新页面的显示和 iframe 渲染, 只会更新已经被加载显示在网页的楼层, 更新显示时会触发被更新楼层的 \"仅格式显示\" 正则; 默认为 `'display_and_render_current'`\n */\nexport async function setChatMessage(\n  field_values: ChatMessageToSet,\n  message_id: number,\n  option: SetChatMessageOption = { swipe_id: 'current', refresh: 'display_and_render_current' },\n): Promise<void> {\n  const { swipe_id = 'current', refresh = 'display_and_render_current' } = option;\n  field_values = typeof field_values === 'string' ? { message: field_values } : field_values;\n  if (typeof swipe_id !== 'number' && swipe_id !== 'current') {\n    throw Error(`提供的 swipe_id 无效, 请提供 'current' 或序号, 你提供的是: ${swipe_id} `);\n  }\n  if (!['none', 'display_current', 'display_and_render_current', 'all'].includes(refresh)) {\n    throw Error(\n      `提供的 refresh 无效, 请提供 'none', 'display_current', 'display_and_render_current' 或 'all', 你提供的是: ${refresh} `,\n    );\n  }\n\n  const chat_message = chat[message_id];\n  if (!chat_message) {\n    console.warn(`未找到第 ${message_id} 楼的消息`);\n    return;\n  }\n\n  const add_swipes_if_required = (): boolean => {\n    if (swipe_id === 'current') {\n      return false;\n    }\n\n    // swipe_id 对应的消息页存在\n    if (swipe_id == 0 || (chat_message.swipes && swipe_id < chat_message.swipes.length)) {\n      return true;\n    }\n\n    if (!chat_message.swipes) {\n      chat_message.swipe_id = 0;\n      chat_message.swipes = [chat_message.mes];\n      chat_message.swipe_info = [{}];\n    }\n    for (let i = chat_message.swipes.length; i <= swipe_id; ++i) {\n      chat_message.swipes.push('');\n      chat_message.swipe_info.push({});\n    }\n    return true;\n  };\n\n  const swipe_id_previous_index: number = chat_message.swipe_id ?? 0;\n  const swipe_id_to_set_index: number = swipe_id == 'current' ? swipe_id_previous_index : swipe_id;\n  const swipe_id_to_use_index: number = refresh != 'none' ? swipe_id_to_set_index : swipe_id_previous_index;\n  const message: string =\n    field_values.message ??\n    (chat_message.swipes ? chat_message.swipes[swipe_id_to_set_index] : undefined) ??\n    chat_message.mes;\n\n  const update_chat_message = () => {\n    const message_demacroed = substituteParamsExtended(message);\n\n    if (field_values.data) {\n      if (!chat_message.variables) {\n        chat_message.variables = [];\n      }\n      chat_message.variables[swipe_id_to_set_index] = field_values.data;\n    }\n\n    if (chat_message.swipes) {\n      chat_message.swipes[swipe_id_to_set_index] = message_demacroed;\n      chat_message.swipe_id = swipe_id_to_use_index;\n    }\n\n    if (swipe_id_to_use_index === swipe_id_to_set_index) {\n      chat_message.mes = message_demacroed;\n    }\n  };\n\n  const update_partial_html = (should_update_swipe: boolean) => {\n    // @ts-ignore\n    const mes_html = $(`div.mes[mesid = \"${message_id}\"]`);\n    if (!mes_html) {\n      return;\n    }\n\n    if (should_update_swipe) {\n      // FIXME: 只有一条消息时, swipes-counter 不会正常显示; 此外还要考虑 swipes-counter 的 \"Swipe # for All Messages\" 选项\n      mes_html.find('.swipes-counter').text(`${swipe_id_to_use_index + 1}\\u200b/\\u200b${chat_message.swipes.length}`);\n    }\n    if (refresh != 'none') {\n      mes_html\n        .find('.mes_text')\n        .empty()\n        .append(\n          messageFormatting(message, chat_message.name, chat_message.is_system, chat_message.is_user, message_id),\n        );\n      if (refresh == 'display_and_render_current') {\n        handlePartialRender(message_id);\n      }\n    }\n  };\n\n  const should_update_swipe: boolean = add_swipes_if_required();\n  update_chat_message();\n  if (refresh == 'all') {\n    await reloadCurrentChat();\n  } else {\n    update_partial_html(should_update_swipe);\n    // QUESTION: saveChatDebounced 还是 await saveChatConditional?\n    await saveChatConditional();\n  }\n\n  console.info(\n    `设置第 ${message_id} 楼消息, 选项: ${JSON.stringify({ swipe_id, refresh })}, 设置前使用的消息页: ${swipe_id_previous_index}, 设置的消息页: ${swipe_id_to_set_index}, 现在使用的消息页: ${swipe_id_to_use_index} `,\n  );\n}\n","import { defaultAudioSettings, initAudioComponents } from '@/component/audio';\nimport { initExtensionMainPanel, scriptRepo } from '@/component/main';\nimport { defaultIframeSettings, initIframePanel } from '@/component/message_iframe';\nimport { defaultScriptSettings, initScriptRepository } from '@/component/script_repository';\nimport { initTavernHelperObject } from '@/function';\nimport { initAudioSlashCommands } from '@/slash_command/audio';\nimport { initSlashEventEmit } from '@/slash_command/event';\nimport {\n  addVersionUpdateElement,\n  getFileContentByPath,\n  handleUpdateButton,\n  parseVersionFromFile,\n  runCheckWithPath,\n  VERSION_FILE_PATH,\n} from '@/util/check_update';\nimport { extensionFolderPath, extensionName, extensionSettingName } from '@/util/extension_variables';\nimport { initReference } from '@/component/reference';\n\nimport { saveSettingsDebounced } from '@sillytavern/script';\nimport { extension_settings, renderExtensionTemplateAsync } from '@sillytavern/scripts/extensions';\n\nconst defaultSettings = {\n  enabled_extension: true,\n  render: {\n    ...defaultIframeSettings,\n  },\n  script: {\n    ...defaultScriptSettings,\n  },\n  audio: {\n    ...defaultAudioSettings,\n  },\n};\n\n/**\n * 设置页面切换\n *  @param event 事件对象\n * */\nfunction handleSettingPageChange(event: JQuery.ClickEvent) {\n  const target = $(event.currentTarget);\n  let id = target.attr('id');\n  if (id === undefined) {\n    return;\n  }\n  id = id.replace('-settings-title', '');\n\n  function resetAllTitleClasses() {\n    $('#main-settings-title').removeClass('title-item-active');\n    $('#render-settings-title').removeClass('title-item-active');\n    $('#script-settings-title').removeClass('title-item-active');\n    $('#audio-settings-title').removeClass('title-item-active');\n  }\n\n  function hideAllContentPanels() {\n    $('#main-settings-content').hide();\n    $('#render-settings-content').hide();\n    $('#script-settings-content').hide();\n    $('#audio-settings-content').hide();\n  }\n\n  resetAllTitleClasses();\n  hideAllContentPanels();\n\n  switch (id) {\n    case 'main':\n      $('#main-settings-title').addClass('title-item-active');\n      $('#main-settings-content').show();\n      break;\n    case 'render':\n      $('#render-settings-title').addClass('title-item-active');\n      $('#render-settings-content').show();\n      break;\n    case 'script':\n      $('#script-settings-title').addClass('title-item-active');\n      $('#script-settings-content').show();\n      break;\n    case 'audio':\n      $('#audio-settings-title').addClass('title-item-active');\n      $('#audio-settings-content').show();\n      break;\n  }\n}\n\n/**\n * 版本控制\n */\nasync function handleVersionUpdate() {\n  const currentVersion = parseVersionFromFile(await getFileContentByPath(VERSION_FILE_PATH));\n  $('.version').text(`Ver ${currentVersion}`);\n  const isNeedUpdate = await runCheckWithPath();\n  if (isNeedUpdate) {\n    addVersionUpdateElement();\n  }\n  $('#update-extension').on('click', async () => await handleUpdateButton());\n}\n\n/**\n * 初始化扩展面板\n */\njQuery(async () => {\n  const getContainer = () => $('#extensions_settings');\n  const windowHtml = await renderExtensionTemplateAsync(`${extensionFolderPath}`, 'settings');\n  getContainer().append(windowHtml);\n  //@ts-ignore\n  if (!extension_settings[extensionSettingName]) {\n    //@ts-ignore\n    extension_settings[extensionSettingName] = defaultSettings;\n    // 删除旧版配置\n    if (extension_settings[extensionName]) {\n      delete extension_settings[extensionName];\n    }\n    saveSettingsDebounced();\n  }\n\n  initTavernHelperObject();\n\n  // 默认显示主设置界面\n  $('#main-settings-title').addClass('title-item-active');\n  $('#main-settings-content').show();\n  $('#render-settings-content').hide();\n  $('#script-settings-content').hide();\n  $('#audio-settings-content').hide();\n\n  // 监听设置选项卡切换\n  $('#main-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n  $('#render-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n  $('#script-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n  $('#audio-settings-title').on('click', (event: JQuery.ClickEvent) => handleSettingPageChange(event));\n\n  handleVersionUpdate();\n  initExtensionMainPanel();\n  initIframePanel();\n  initScriptRepository(scriptRepo);\n  initAudioComponents();\n  initAudioSlashCommands();\n  initSlashEventEmit();\n  initReference();\n});\n","import { libraries_text } from '@/component/character_level/library';\nimport { destroyIframe } from '@/component/message_iframe';\nimport { script_url } from '@/script_url';\nimport third_party from '@/third_party.html';\nimport { extensionFolderPath, getSettingValue, saveSettingValue } from '@/util/extension_variables';\nimport { renderMarkdown } from '@/util/render_markdown';\nimport { characters, eventSource, this_chid } from '@sillytavern/script';\nimport { renderExtensionTemplateAsync, writeExtensionField } from '@sillytavern/scripts/extensions';\nimport { createDefaultScripts } from './default_scripts/index';\n//@ts-ignore\nimport { selected_group } from '@sillytavern/scripts/group-chats';\nimport { POPUP_TYPE, callGenericPopup } from '@sillytavern/scripts/popup';\nimport { download, getFileText, getSortableDelay, uuidv4 } from '@sillytavern/scripts/utils';\n\ninterface IFrameElement extends HTMLIFrameElement {\n  cleanup: () => void;\n  [prop: string]: any;\n}\n\nexport const defaultScriptSettings = {\n  global_script_enabled: true,\n  scope_script_enabled: true,\n  scriptsRepository: [] as Script[],\n  characters_with_scripts: [] as string[],\n};\n\nconst templatePath = `${extensionFolderPath}/src/component/script_repository`;\nconst baseTemplate = $(\n  await renderExtensionTemplateAsync(`${templatePath}`, 'script_item_template', {\n    scriptName: '',\n    id: '',\n    moveTo: '',\n    faIcon: '',\n  }),\n);\n\nconst defaultScriptTemplate = $(\n  await renderExtensionTemplateAsync(`${templatePath}`, 'script_default_repository', {\n    scriptName: '',\n    id: '',\n  }),\n);\n\nlet isGlobalScriptEnabled: boolean;\nlet isScopedScriptEnabled: boolean;\n\nclass Script {\n  id: string;\n  name: string;\n  content: string;\n  info: string;\n  buttons: { name: string; visible: boolean }[];\n  enabled: boolean;\n\n  constructor(data?: Partial<Script>) {\n    this.id = data?.id || uuidv4();\n    this.name = data?.name || '';\n    this.content = data?.content || '';\n    this.info = data?.info || '';\n    this.enabled = data?.enabled || false;\n    this.buttons = data?.buttons || [];\n  }\n\n  hasName(): boolean {\n    return Boolean(this.name);\n  }\n}\n\nexport enum ScriptType {\n  GLOBAL = 'global',\n  CHARACTER = 'scope',\n}\n\nexport class ScriptRepository {\n  private static instance: ScriptRepository;\n  private globalScripts: Script[] = [];\n  private characterScripts: Script[] = [];\n\n  private constructor() {\n    this.loadScripts();\n  }\n\n  public static getInstance(): ScriptRepository {\n    if (!ScriptRepository.instance) {\n      ScriptRepository.instance = new ScriptRepository();\n    }\n    return ScriptRepository.instance;\n  }\n\n  public static destroyInstance(): void {\n    if (ScriptRepository.instance) {\n      ScriptRepository.instance = undefined as unknown as ScriptRepository;\n    }\n  }\n\n  /**\n   * 脚本库原始数据\n   */\n  async loadScripts() {\n    this.globalScripts = getSettingValue('script.scriptsRepository') || [];\n    this.characterScripts = characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n  }\n\n  /**\n   * 获取脚本\n   * @param id 脚本id\n   * @returns 脚本\n   */\n  getScriptById(id: string) {\n    return (\n      this.globalScripts.find((s: Script) => s.id === id) || this.characterScripts.find((s: Script) => s.id === id)\n    );\n  }\n\n  /**\n   * 添加单个脚本到脚本库UI首位并保存到设置中\n   * @param script 脚本\n   * @param type 脚本类型\n   */\n  async addScript(script: Script, type: ScriptType) {\n    if (!script.hasName()) {\n      toastr.error('[ScriptRepository] 保存失败，脚本名称为空');\n    }\n    await this.saveScript(script, type);\n    await this.renderScript(script, type);\n  }\n\n  /**\n   * 加载脚本库到界面\n   */\n  async loadScriptLibrary() {\n    $('#global-script-list').empty();\n    $('#scoped-script-list').empty();\n\n    const $emptyTip = `<small>暂无可用脚本</small>`;\n    const globalScriptArray = getSettingValue('script.scriptsRepository') ?? [];\n    const scopedScriptArray = characters[this_chid]?.data?.extensions?.TavernHelper_scripts ?? [];\n\n    if (globalScriptArray.length > 0) {\n      const globalScripts = globalScriptArray.map((scriptData: Script) => new Script(scriptData));\n      globalScripts.forEach(async (script: Script) => {\n        const scriptHtml = await this.cloneTemplate(script, ScriptType.GLOBAL);\n        $('#global-script-list').append(scriptHtml);\n      });\n    } else {\n      $('#global-script-list').append($emptyTip);\n    }\n    if (scopedScriptArray.length > 0) {\n      const scopedScripts = scopedScriptArray.map((scriptData: Script) => new Script(scriptData));\n      scopedScripts.forEach(async (script: Script) => {\n        const scriptHtml = await this.cloneTemplate(script, ScriptType.CHARACTER);\n        $('#scoped-script-list').append(scriptHtml);\n      });\n    } else {\n      $('#scoped-script-list').append($emptyTip);\n    }\n    this.makeDraggable($(`#global-script-list`), ScriptType.GLOBAL);\n    this.makeDraggable($(`#scoped-script-list`), ScriptType.CHARACTER);\n  }\n\n  /**\n   * 运行指定类型的脚本\n   * @param type 脚本类型\n   */\n  async runScriptsByType(type: ScriptType) {\n    if (!getSettingValue('enabled_extension')) {\n      toastr.error('[ScriptRepository] 酒馆助手未启用，无法运行脚本');\n      return;\n    }\n    if (type === ScriptType.GLOBAL && !isGlobalScriptEnabled) {\n      return;\n    }\n    if (type === ScriptType.CHARACTER && !isScopedScriptEnabled) {\n      return;\n    }\n\n    const scripts = type === ScriptType.GLOBAL ? this.globalScripts : this.characterScripts;\n    const enabledScripts = scripts.map((script, index) => ({ script, index })).filter(({ script }) => script.enabled);\n\n    for (const { script } of enabledScripts) {\n      // 不要保存设置\n      await this.runScript(script, type, false);\n    }\n  }\n\n  /**\n   * 取消运行指定类型的脚本\n   * @param type 脚本类型\n   */\n  async cancelRunScriptsByType(type: ScriptType) {\n    const scripts = type === ScriptType.GLOBAL ? this.globalScripts : this.characterScripts;\n    const disabledScripts = scripts.map((script, index) => ({ script, index })).filter(({ script }) => !script.enabled);\n\n    for (const { script } of disabledScripts) {\n      // 不要保存设置\n      await this.cancelRunScript(script, type, false);\n    }\n  }\n\n  /**\n   * 运行单个脚本\n   * @param script 脚本\n   * @param type 脚本类型\n   * @param userInput 是否由用户输入,为true时,会设置enabled为true,并保存设置\n   */\n  async runScript(script: Script, type: ScriptType, userInput: boolean = true) {\n    if (!getSettingValue('enabled_extension')) {\n      toastr.error('[ScriptRepository] 扩展未启用');\n      return;\n    }\n    const typeName = type === ScriptType.GLOBAL ? '全局' : '局部';\n    const index = script.id.startsWith('global')\n      ? this.globalScripts.findIndex(s => s.id === script.id)\n      : this.characterScripts.findIndex(s => s.id === script.id);\n    if (index !== -1) {\n      if (userInput) {\n        script.enabled = true;\n        await this.saveScript(script, type);\n      }\n    }\n\n    if (type === ScriptType.GLOBAL && !isGlobalScriptEnabled) {\n      return;\n    }\n    if (type === ScriptType.CHARACTER && !isScopedScriptEnabled) {\n      return;\n    }\n\n    try {\n      const iframeElement = $('iframe').filter(\n        (_index, element) => $(element).data('scriptId') === script.id,\n      )[0] as IFrameElement;\n      if (iframeElement) {\n        await destroyIframe(iframeElement);\n      }\n      if (script.buttons) {\n        this.removeButton(script);\n      }\n\n      const htmlContent = `\n        <html>\n        <head>\n          ${third_party}\n          ${libraries_text}\n          <script>\n            (function($) {\n  var original$ = $;\n  window.$ = function(selector, context){\n    // 如果 context 没有被明确提供\n    if (context === undefined || context === null) {\n      // 检查 window.parent 是否存在并且有 document 属性\n      if (window.parent && window.parent.document) {\n        context = window.parent.document;\n      } else {\n        // Fallback: 如果父窗口或其 document 不可用，\n        // 可以选择使用 iframe 自己的 document 作为备选，\n        // 或者根据你的逻辑决定是否应该报错或返回空结果。\n        // 使用 iframe 自己的 document 通常更安全：\n        console.warn(\"无法访问 window.parent.document，将使用当前 iframe 的 document 作为上下文。\");\n        context = window.document; // 或者 document\n        // 如果默认不应该访问父窗口，这里甚至可以直接设为 window.document\n        // context = document;\n      }\n    }\n    // 使用原始的 jQuery 函数执行选择\n    return original$(selector, context);\n  }\n})(jQuery);\n\n            SillyTavern = window.parent.SillyTavern.getContext();\n            TavernHelper = window.parent.TavernHelper;\n            for (const key in TavernHelper) {\n              window[key] = TavernHelper[key];\n            }\n          </script>\n          <script src=\"${script_url.get('iframe_client')}\"></script>\n        </head>\n        <body>\n          <script type=\"module\">\n            $(async () => {\n              try {\n                ${script.content}\n              } catch (error) {\n                console.error('[ScriptRepository] 脚本执行错误:', error);\n              }\n            });\n          </script>\n        </body>\n        </html>\n      `;\n\n      const $iframe = $('<iframe>', {\n        style: 'display: none;',\n        id: `tavern-helper-script-${script.name}`,\n        srcdoc: htmlContent,\n      }).data({\n        scriptId: script.id,\n      });\n\n      $iframe.on('load', () => {\n        console.info(`[ScriptRepository] 启用${typeName}脚本[\"${script.name}\"]`);\n      });\n\n      $('body').append($iframe);\n    } catch (error) {\n      console.error(`[ScriptRepository] ${typeName}脚本启用失败:[\"${script.name}\"]`, error);\n      toastr.error(`${typeName}脚本启用失败:[\"${script.name}\"]`);\n    }\n  }\n\n  /**\n   * 取消运行单个脚本\n   * @param script 脚本\n   */\n  async cancelRunScript(script: Script, type: ScriptType, userInput: boolean = true) {\n    const typeName = type === ScriptType.GLOBAL ? '全局' : '局部';\n    const index =\n      type === ScriptType.GLOBAL\n        ? this.globalScripts.findIndex(s => s.id === script.id)\n        : this.characterScripts.findIndex(s => s.id === script.id);\n    if (index !== -1) {\n      if (userInput) {\n        script.enabled = false;\n        await this.saveScript(script, type);\n      }\n      const iframeElement = $('iframe').filter(\n        (_index, element) => $(element).data('scriptId') === script.id,\n      )[0] as IFrameElement;\n      if (iframeElement) {\n        await destroyIframe(iframeElement);\n      }\n      this.removeButton(script);\n      console.info(`[ScriptRepository] ${typeName}脚本[\"${script.name}\"] 已禁用`);\n    }\n  }\n\n  /**\n   * 渲染单个脚本到界面\n   * @param script 脚本\n   * @param type 类型\n   */\n  async renderScript(script: Script, type: ScriptType) {\n    const scriptHtml = await this.cloneTemplate(script, type);\n    const $emptyTip =\n      type === ScriptType.GLOBAL ? $(`#global-script-list`).find('small') : $(`#scoped-script-list`).find('small');\n    if (type === ScriptType.GLOBAL) {\n      $('#global-script-list').prepend(scriptHtml);\n    } else {\n      $('#scoped-script-list').prepend(scriptHtml);\n    }\n\n    if ($emptyTip.length > 0) {\n      $emptyTip.remove();\n    }\n  }\n\n  /**\n   * 打开脚本编辑器\n   * @param type 类型\n   * @param scriptId 脚本ID\n   */\n  async openScriptEditor(type: ScriptType, scriptId?: string) {\n    const $editorHtml = $(await renderExtensionTemplateAsync(`${templatePath}`, 'script_editor'));\n    let script: Script | undefined;\n    if (scriptId) {\n      if (type === ScriptType.GLOBAL) {\n        script = getSettingValue('script.scriptsRepository').find((s: Script) => s.id === scriptId);\n      } else {\n        script = characters[this_chid]?.data?.extensions?.TavernHelper_scripts.find((s: Script) => s.id === scriptId);\n      }\n\n      if (script) {\n        $editorHtml.find('#script-name-input').val(script.name);\n        $editorHtml.find('#script-content-textarea').val(script.content);\n        $editorHtml.find('#script-info-textarea').val(script.info);\n        if (script.buttons && script.buttons.length > 0) {\n          script.buttons.forEach((button, index) => {\n            const buttonId = `button-${index}`;\n            const $buttonContent = $(`<div class=\"button-item\" id=\"${buttonId}\">\n              <span class=\"drag-handle menu-handle\">☰</span>\n              <input type=\"checkbox\" id=\"checkbox-${buttonId}\" ${button.visible ? 'checked' : ''} />\n              <input class=\"text_pole\" type=\"text\" id=\"text-${buttonId}\" value=\"${button.name}\"/>\n              <div class=\"delete-button menu_button interactable\">\n                <i class=\"fa-solid fa-trash\"></i>\n              </div>\n            </div>`);\n            $editorHtml.find('.button-list').append($buttonContent);\n            $(`#text-${buttonId}`).val(button.name);\n            $(`#checkbox-${buttonId}`).prop('checked', button.visible);\n          });\n        }\n      }\n    }\n\n    $editorHtml.find('#add-button-trigger').on('click', () => {\n      const buttonId = `button-${$editorHtml.find('.button-list .button-item').length}`;\n      const $buttonContent = $(`<div class=\"button-item\" id=\"${buttonId}\">\n        <span class=\"drag-handle menu-handle\">☰</span>\n        <input type=\"checkbox\" id=\"checkbox-${buttonId}\"/>\n        <input class=\"text_pole\" type=\"text\" id=\"text-${buttonId}\"/>\n        <div class=\"delete-button menu_button interactable\">\n          <i class=\"fa-solid fa-trash\"></i>\n        </div>\n      </div>`);\n      $editorHtml.find('.button-list').append($buttonContent);\n    });\n\n    $editorHtml.find('#script-button-content').sortable({\n      handle: '.drag-handle',\n      items: '.button-item',\n    });\n\n    $editorHtml.on('click', '.delete-button', (e: JQuery.ClickEvent) => {\n      $(e.currentTarget).closest('.button-item').remove();\n    });\n\n    const popupResult = await callGenericPopup($editorHtml, POPUP_TYPE.CONFIRM, '', {\n      okButton: '确认',\n      cancelButton: '取消',\n      wide: true,\n      large: true,\n    });\n\n    if (popupResult) {\n      const scriptName = $editorHtml.find('#script-name-input').val() as string;\n      const scriptContent = $editorHtml.find('#script-content-textarea').val() as string;\n      const scriptInfo = $editorHtml.find('#script-info-textarea').val() as string;\n      const buttonArray = $editorHtml\n        .find('.button-list')\n        .find('.button-item')\n        .map((_index, element) => {\n          const buttonId = $(element).attr('id');\n          if (!buttonId) return null;\n          const buttonText = $(element).find(`#text-${buttonId}`).val() as string;\n          const isVisible = $(element).find(`#checkbox-${buttonId}`).prop('checked');\n          return {\n            text: buttonText,\n            visible: isVisible,\n          };\n        })\n        .toArray()\n        .filter(button => button && button.text && button.text.trim() !== '');\n\n      if (scriptId && script) {\n        if (script.buttons) {\n          this.removeButton(script);\n        }\n\n        script.name = scriptName;\n        script.content = scriptContent;\n        script.info = scriptInfo;\n        script.buttons = buttonArray.map(button => ({ name: button.text, visible: button.visible }));\n        $(`#${script.id}`).find('.script-item-name').text(script.name);\n        await this.saveScript(script, type);\n        if (script.enabled) {\n          await this.runScript(script, type, false);\n          this.addButton(script);\n        }\n      } else {\n        const newScript = new Script({\n          id: uuidv4(),\n          name: scriptName,\n          content: scriptContent,\n          info: scriptInfo,\n          enabled: false,\n          buttons: buttonArray.map(button => ({ name: button.text, visible: button.visible })),\n        });\n        await this.addScript(newScript, type);\n      }\n    }\n  }\n\n  /**\n   * 打开变量编辑器\n   */\n  async openVariableEditor() {\n    const $editorHtml = $(await renderExtensionTemplateAsync(`${templatePath}`, 'script_variable_editor'));\n    const $variableList = $editorHtml.find('#variable-list');\n    const $addVariableTrigger = $editorHtml.find('#add-variable-trigger');\n\n    if (this_chid) {\n      const existingVariables = characters[this_chid]?.data?.extensions?.TavernHelper_characterScriptVariables || {};\n      Object.entries(existingVariables).forEach(([name, value]) => {\n        const $variableItem = $(\n          `\n        <div class=\"variable-item flex-container flexFlowColumn gap10\">\n        <div class=\"divider\"></div>\n          <div class=\"flex-container\">\n            <div class=\"flex spaceBetween alignItemsCenter width100p\">\n            <span>名称:</span>\n              <i class=\"fa-solid fa-trash\" style=\"font-size: calc(var(--mainFontSize) * 0.8); cursor: pointer; margin-right:5px;\"></i>\n            </div>\n            <input type=\"text\" value=\"${name}\"/>\n          </div>\n          <div class=\"flex-container\">\n            <span>值:</span>\n            <textarea rows=\"1\">${value}</textarea>\n          </div>\n        </div>`,\n        );\n        $variableList.append($variableItem);\n      });\n    }\n\n    $addVariableTrigger.on('click', () => {\n      const $variableItem = $(\n        `\n        <div class=\"variable-item flex-container flexFlowColumn gap10\">\n        <div class=\"divider\"></div>\n          <div class=\"flex-container\">\n            <div class=\"flex spaceBetween alignItemsCenter width100p\">\n            <span>名称:</span>\n              <i class=\"fa-solid fa-trash\" style=\"font-size: calc(var(--mainFontSize) * 0.8); cursor: pointer; margin-right:5px;\"></i>\n            </div>\n            <input type=\"text\"/>\n          </div>\n          <div class=\"flex-container\">\n            <span>值:</span>\n            <textarea rows=\"1\"></textarea>\n          </div>\n        </div>`,\n      );\n      $variableList.append($variableItem);\n    });\n\n    $editorHtml.on('click', '.fa-trash', function () {\n      $(this).closest('.variable-item').remove();\n    });\n\n    const popupResult = await callGenericPopup($editorHtml, POPUP_TYPE.CONFIRM, '', {\n      okButton: '确认',\n      cancelButton: '取消',\n      large: true,\n    });\n\n    if (popupResult) {\n      const variables: Record<string, string> = {};\n      $variableList.find('.variable-item').each((_index, element) => {\n        const $item = $(element);\n        const name = $item.find('input[type=\"text\"]').val()?.toString().trim();\n        const value = $item.find('textarea').val()?.toString() || '';\n\n        if (name) {\n          variables[name] = value;\n        }\n      });\n\n      if (this_chid) {\n        await writeExtensionField(this_chid, 'TavernHelper_characterScriptVariables', variables);\n      } else {\n        toastr.error('保存失败，当前角色为空');\n      }\n    }\n  }\n\n  /**\n   * 删除脚本\n   * @param id 脚本ID\n   * @param type 类型\n   */\n  async deleteScript(id: string, type: ScriptType): Promise<void> {\n    try {\n      const script = this.getScriptById(id);\n      if (!script) {\n        throw new Error('[ScriptRepository] 脚本不存在');\n      }\n      const array =\n        type === ScriptType.GLOBAL\n          ? getSettingValue('script.scriptsRepository') || []\n          : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n      // eslint-disable-next-line no-shadow\n      const existingScriptIndex = array.findIndex((script: Script) => script.id === id);\n      if (existingScriptIndex !== -1) {\n        array.splice(existingScriptIndex, 1);\n\n        if (type === ScriptType.GLOBAL) {\n          $('#global-script-list').find(`#${id}`).remove();\n          await this.saveGlobalScripts(array);\n        } else {\n          $('#scoped-script-list').find(`#${id}`).remove();\n          await this.saveCharacterScripts(array);\n        }\n        if (array.length === 0) {\n          const $emptyTip = `<small>暂无可用脚本</small>`;\n          type === ScriptType.GLOBAL\n            ? $(`#global-script-list`).append($emptyTip)\n            : $(`#scoped-script-list`).append($emptyTip);\n        }\n\n        this.cancelRunScript(script, type, false);\n        console.info(`[ScriptRepository] 删除脚本[\"${script.name}\"]`);\n      }\n    } catch (error) {\n      console.error('[ScriptRepository] 删除脚本时发生错误:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 保存单个脚本到设置中\n   * @param script 脚本\n   * @param type 脚本类型\n   */\n  async saveScript(script: Script, type: ScriptType) {\n    const array =\n      type === ScriptType.GLOBAL\n        ? getSettingValue('script.scriptsRepository') || []\n        : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n    const index = array.findIndex((s: Script) => s.id === script.id);\n    if (index === -1) {\n      array.unshift(script);\n    } else {\n      array[index] = script;\n    }\n    if (type === ScriptType.GLOBAL) {\n      await saveSettingValue('script.scriptsRepository', array);\n    } else {\n      await this.saveCharacterScripts(array);\n    }\n  }\n\n  /**\n   * 保存脚本数组到扩展数据\n   * @param array 脚本数组\n   */\n  async saveGlobalScripts(array: Script[]) {\n    await saveSettingValue('script.scriptsRepository', array);\n  }\n\n  /**\n   * 保存脚本数组到角色卡数据\n   * @param array 脚本数组\n   */\n  async saveCharacterScripts(array: Script[]) {\n    if (this_chid) {\n      await writeExtensionField(this_chid, 'TavernHelper_scripts', array);\n    } else {\n      toastr.error('保存失败，当前角色为空');\n    }\n  }\n  /**\n   * 使脚本库可拖拽调整顺序\n   * @param list 脚本库列表\n   * @param type 脚本类型\n   */\n  makeDraggable(list: JQuery<HTMLElement>, type: ScriptType) {\n    list.sortable({\n      delay: getSortableDelay(),\n      handle: '.drag-handle',\n      items: '.script-item',\n      stop: async () => {\n        const newOrder: string[] = [];\n\n        list.find('> .script-item').each(function (this: HTMLElement) {\n          const id = $(this).attr('id');\n          if (id) {\n            newOrder.push(id);\n          }\n        });\n\n        const array =\n          type === ScriptType.GLOBAL\n            ? getSettingValue('script.scriptsRepository') || []\n            : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n        const updatedScripts = newOrder\n          .map(id => {\n            return array.find((script: Script) => script.id === id);\n          })\n          .filter(Boolean);\n\n        if (type === ScriptType.GLOBAL) {\n          await this.saveGlobalScripts(updatedScripts);\n        } else {\n          await this.saveCharacterScripts(updatedScripts);\n        }\n      },\n    });\n  }\n  /**\n   * 移动到另一类仓库\n   */\n  async moveScriptToOtherType(script: Script, type: ScriptType) {\n    try {\n      const sourceArray =\n        type === ScriptType.GLOBAL\n          ? getSettingValue('script.scriptsRepository') || []\n          : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n      const sourceIndex = sourceArray.findIndex((s: Script) => s.id === script.id);\n      if (sourceIndex !== -1) {\n        sourceArray.splice(sourceIndex, 1);\n\n        if (type === ScriptType.GLOBAL) {\n          await this.saveGlobalScripts(sourceArray);\n          $('#global-script-list').find(`#${script.id}`).remove();\n        } else {\n          await this.saveCharacterScripts(sourceArray);\n          $('#scoped-script-list').find(`#${script.id}`).remove();\n        }\n\n        const targetType = type === ScriptType.GLOBAL ? ScriptType.CHARACTER : ScriptType.GLOBAL;\n        const targetArray =\n          targetType === ScriptType.GLOBAL\n            ? getSettingValue('script.scriptsRepository') || []\n            : characters[this_chid]?.data?.extensions?.TavernHelper_scripts || [];\n\n        targetArray.unshift(script);\n\n        if (targetType === ScriptType.GLOBAL) {\n          await this.saveGlobalScripts(targetArray);\n          await this.renderScript(script, targetType);\n        } else {\n          await this.saveCharacterScripts(targetArray);\n          await this.renderScript(script, targetType);\n        }\n      } else {\n        throw new Error('[ScriptRepository] 脚本不存在');\n      }\n    } catch (error) {\n      console.error('[ScriptRepository] 移动脚本时发生错误:', error);\n      toastr.error('移动脚本失败');\n      throw error;\n    }\n  }\n\n  /**\n   * 克隆显示模板\n   * @param script 脚本\n   * @param type 类型,global 全局,scope 局部\n   */\n  async cloneTemplate(script: Script, type: ScriptType.GLOBAL | ScriptType.CHARACTER) {\n    const scriptHtml = baseTemplate.clone();\n\n    scriptHtml.attr('id', script.id);\n\n    scriptHtml.find('.script-item-name').text(script.name);\n    scriptHtml.find('.script-storage-location').addClass(type === 'global' ? 'move-to-scoped' : 'move-to-global');\n    scriptHtml.find('.script-storage-location i').addClass(type === 'global' ? 'fa-arrow-down' : 'fa-arrow-up');\n\n    const toggleId = `toggle-script-${script.id}`;\n    scriptHtml.find('label').attr('for', toggleId);\n\n    scriptHtml\n      .find('.toggle-script')\n      .attr('id', toggleId)\n      .prop('checked', script.enabled)\n      .on('change', async e => {\n        const isChecked = !!$(e.target).prop('checked');\n\n        scriptHtml.find('.script-toggle-on').toggle(isChecked);\n        scriptHtml.find('.script-toggle-off').toggle(!isChecked);\n        script.enabled = isChecked;\n        await this.saveScript(script, type);\n        // 不需要再保存一次\n        if (isChecked) {\n          await this.runScript(script, type, false);\n          this.addButton(script);\n        } else {\n          await this.cancelRunScript(script, type, false);\n          this.removeButton(script);\n        }\n      });\n\n    scriptHtml\n      .find('.script-toggle-on')\n      .toggle(script.enabled)\n      .on('click', async function () {\n        $(this).hide();\n        scriptHtml.find('.script-toggle-off').show();\n      });\n\n    scriptHtml\n      .find('.script-toggle-off')\n      .toggle(!script.enabled)\n      .on('click', async function () {\n        $(this).hide();\n        scriptHtml.find('.script-toggle-on').show();\n      });\n    scriptHtml.find('.script-info').on('click', async () => {\n      const scriptInfo = this.getScriptById(script.id)?.info || '';\n      const htmlText = renderMarkdown(scriptInfo);\n      await callGenericPopup(htmlText, POPUP_TYPE.DISPLAY);\n    });\n\n    scriptHtml.find('.edit-script').on('click', () => this.openScriptEditor(type, script.id));\n    scriptHtml.find('.script-storage-location').on('click', () => this.moveScriptToOtherType(script, type));\n    scriptHtml.find('.export-script').on('click', async function () {\n      // eslint-disable-next-line no-control-regex\n      const fileName = `${script.name.replace(/[\\s.<>:\"/\\\\|?*\\x00-\\x1F\\x7F]/g, '_').toLowerCase()}.json`;\n      const { id, enabled, ...scriptData } = script;\n      const fileData = JSON.stringify(scriptData, null, 4);\n      download(fileData, fileName, 'application/json');\n    });\n    scriptHtml.find('.delete-script').on('click', async () => {\n      const confirm = await callGenericPopup('确定要删除这个脚本吗？', POPUP_TYPE.CONFIRM);\n\n      if (!confirm) {\n        return;\n      }\n\n      await this.deleteScript(script.id, type);\n\n      scriptHtml.remove();\n    });\n    return scriptHtml;\n  }\n\n  /**\n   * 克隆默认脚本模板\n   * @param script 脚本\n   * @param type 类型,global 全局,scope 局部\n   */\n  async cloneDefaultScriptTemplate(script: Script) {\n    const scriptHtml = defaultScriptTemplate.clone();\n\n    scriptHtml.attr('id', script.id);\n\n    scriptHtml.find('.script-item-name').text(script.name);\n    scriptHtml.find('.script-info').on('click', () => {\n      const htmlText = renderMarkdown(script.info);\n      callGenericPopup(htmlText, POPUP_TYPE.DISPLAY);\n    });\n    scriptHtml.find('.add-script').on('click', async () => {\n      let target = 'global';\n      const template = $(await renderExtensionTemplateAsync(`${templatePath}`, 'script_import_target'));\n      template.find('#script-import-target-global').on('input', () => (target = 'global'));\n      template.find('#script-import-target-scoped').on('input', () => (target = 'scoped'));\n      await callGenericPopup(template, POPUP_TYPE.TEXT);\n\n      const convertedScript = new Script({\n        id: script.id,\n        name: script.name,\n        content: script.content,\n        info: script.info,\n        enabled: script.enabled,\n      });\n\n      const type = target === 'global' ? ScriptType.GLOBAL : ScriptType.CHARACTER;\n      // 检查是否已存在相同id的脚本\n      const existingScript = this.getScriptById(convertedScript.id);\n      if (existingScript) {\n        const confirm = await callGenericPopup(`脚本 ${existingScript.name} 已存在，是否要覆盖？`, POPUP_TYPE.CONFIRM);\n        if (!confirm) {\n          return;\n        } else {\n          await this.saveScript(convertedScript, type);\n        }\n      } else {\n        await this.addScript(convertedScript, type);\n      }\n    });\n    return scriptHtml;\n  }\n\n  /**\n   * 加载默认脚本库\n   */\n  async loadDefaultScriptsRepository() {\n    const defaultScriptList = $('<div id=\"default-script-list\" class=\"flex-container flexFlowColumn\"></div>');\n    const defaultScripts = await createDefaultScripts();\n    for (const script of defaultScripts) {\n      const template = await this.cloneDefaultScriptTemplate(script);\n      defaultScriptList.append(template);\n    }\n    await callGenericPopup(defaultScriptList, POPUP_TYPE.TEXT);\n  }\n\n  /**\n   * 处理脚本启用开关的点击事件\n   * @param type 类型,global 全局,scope 局部\n   * @param enable 是否启用\n   * @param userInput 是否由用户输入\n   */\n  async handleScriptToggle(type: ScriptType, enable: boolean, userInput: boolean = true) {\n    if (type === ScriptType.GLOBAL) {\n      if (userInput) {\n        await saveSettingValue('script.global_script_enabled', enable);\n      }\n      isGlobalScriptEnabled = enable;\n      if (enable) {\n        this.runScriptsByType(ScriptType.GLOBAL);\n        this.addButtonsByType(ScriptType.GLOBAL);\n      } else {\n        this.cancelRunScriptsByType(ScriptType.GLOBAL);\n        this.removeButtonsByType(ScriptType.GLOBAL);\n      }\n    } else {\n      if (userInput) {\n        await saveSettingValue('script.scope_script_enabled', enable);\n      }\n      isScopedScriptEnabled = enable;\n      if (enable) {\n        this.runScriptsByType(ScriptType.CHARACTER);\n        this.addButtonsByType(ScriptType.CHARACTER);\n      } else {\n        this.cancelRunScriptsByType(ScriptType.CHARACTER);\n        this.removeButtonsByType(ScriptType.CHARACTER);\n      }\n    }\n  }\n\n  /**\n   * 导入脚本文件\n   * @param {File} file 文件\n   * @param {boolean} type 脚本类型\n   */\n  async onScriptImportFileChange(file: File, type: ScriptType) {\n    if (!file) {\n      toastr.error('未提供文件。');\n      return;\n    }\n\n    try {\n      const fileText = await getFileText(file);\n      const script = JSON.parse(fileText);\n      if (!script.name) {\n        throw new Error('[ScriptRepository] 未提供脚本名称。');\n      }\n\n      const newScript = new Script(script);\n      // 分配一个新的id\n      newScript.id = uuidv4();\n      newScript.enabled = false;\n\n      await this.saveScript(newScript, type);\n      await this.renderScript(newScript, type);\n      toastr.success(`脚本 \"${newScript.name}\" 导入成功。`);\n    } catch (error) {\n      console.error(error);\n      toastr.error('无效的JSON文件。');\n      return;\n    }\n  }\n\n  /**\n   * 检查角色中的嵌入式脚本\n   */\n  async checkEmbeddedScripts() {\n    const chid = this_chid;\n\n    if (chid !== undefined && !selected_group) {\n      const avatar = characters[chid]?.avatar;\n      const scripts = characters[chid]?.data?.extensions?.TavernHelper_scripts;\n\n      if (Array.isArray(scripts) && scripts.length > 0) {\n        const charactersWithScripts = getSettingValue('script.characters_with_scripts');\n        if (avatar && !charactersWithScripts.includes(avatar)) {\n          const characterScripts = characters[chid]?.data?.extensions?.TavernHelper_scripts;\n          if (Array.isArray(characterScripts) && characterScripts.length > 0) {\n            const scopedScripts = characterScripts.map((scriptData: Script) => new Script(scriptData));\n            scopedScripts.forEach(async (script: Script) => {\n              const scriptHtml = await this.cloneTemplate(script, ScriptType.CHARACTER);\n              $('#scoped-script-list').append(scriptHtml);\n            });\n\n            const template = await renderExtensionTemplateAsync(`${templatePath}`, 'script_allow_popup');\n            const result = await callGenericPopup(template, POPUP_TYPE.CONFIRM, '', { okButton: 'Yes' });\n\n            if (result) {\n              $('#scoped-script-list')\n                .find('.toggle-script')\n                .each(function () {\n                  $(this).prop('checked', !$(this).prop('checked')).trigger('change');\n                });\n            }\n            charactersWithScripts.push(avatar);\n            await saveSettingValue('script.characters_with_scripts', charactersWithScripts);\n          }\n        }\n      }\n    }\n  }\n\n  addButton(script: Script) {\n    if (script.buttons && script.buttons.length > 0) {\n      this.removeButton(script);\n\n      script.buttons.forEach(button => {\n        if (button.visible) {\n          initButtonContainer();\n\n          $('#TH-script-buttons').append(\n            `<div class=\"qr--button menu_button interactable\" id=\"${button.name}_${script.id}\">${button.name}</div>`,\n          );\n          $(`#${button.name}_${script.id}`).on('click', () => {\n            eventSource.emit(`${button.name}_${script.id}`);\n          });\n        }\n      });\n    } else {\n      return;\n    }\n  }\n\n  addButtonsByType(type: ScriptType) {\n    const scripts = type === ScriptType.GLOBAL ? this.globalScripts : this.characterScripts;\n    for (const script of scripts) {\n      this.addButton(script);\n    }\n  }\n\n  removeButton(script: Script) {\n    $(`[id$=_${script.id}]`).remove();\n  }\n\n  removeButtonsByType(type: ScriptType) {\n    const scripts = type === ScriptType.GLOBAL ? this.globalScripts : this.characterScripts;\n    for (const script of scripts) {\n      this.removeButton(script);\n    }\n  }\n}\n\n/**\n * 从脚本允许列表中删除角色\n * @param param0\n */\n\nexport async function purgeEmbeddedScripts({ character }) {\n  const avatar = character?.avatar;\n  const charactersWithScripts = getSettingValue('script.characters_with_scripts');\n  if (avatar && charactersWithScripts?.includes(avatar)) {\n    const index = charactersWithScripts.indexOf(avatar);\n    if (index !== -1) {\n      charactersWithScripts.splice(index, 1);\n      await saveSettingValue('script.characters_with_scripts', charactersWithScripts);\n    }\n  }\n}\n\n/**\n * 清理所有脚本iframe\n */\nexport async function clearAllScriptsIframe() {\n  const $iframes = $('iframe[id^=\"tavern-helper-script-\"]');\n  for (const iframe of $iframes) {\n    await destroyIframe(iframe as IFrameElement);\n  }\n}\n\n/**\n * 获取脚本库局部变量\n * @returns 局部变量\n */\nexport function getCharacterScriptVariables() {\n  return characters[this_chid]?.data?.extensions?.TavernHelper_characterScriptVariables || {};\n}\n\n/**\n * 初始化按钮容器\n */\nfunction initButtonContainer() {\n  const $qrBar = $('#qr--bar');\n  if (!$qrBar.length) {\n    $('#send_form').append(\n      '<div class=\"flex-container flexGap5\" id=\"qr--bar\"><div class=\"qr--buttons qr--color\" id=\"TH-script-buttons\"></div></div>',\n    );\n  }\n}\n\nexport async function initScriptRepository(scriptRepo: ScriptRepository) {\n  initButtonContainer();\n  isGlobalScriptEnabled = getSettingValue('script.global_script_enabled');\n  isScopedScriptEnabled = getSettingValue('script.scope_script_enabled');\n\n  scriptRepo.handleScriptToggle(ScriptType.GLOBAL, isGlobalScriptEnabled, false);\n  scriptRepo.handleScriptToggle(ScriptType.CHARACTER, isScopedScriptEnabled, false);\n\n  $('#global-script-enable-toggle')\n    .prop('checked', isGlobalScriptEnabled)\n    .on('click', (event: JQuery.ClickEvent) =>\n      scriptRepo.handleScriptToggle(ScriptType.GLOBAL, event.target.checked, true),\n    );\n  $('#scoped-script-enable-toggle')\n    .prop('checked', isScopedScriptEnabled)\n    .on('click', (event: JQuery.ClickEvent) =>\n      scriptRepo.handleScriptToggle(ScriptType.CHARACTER, event.target.checked, true),\n    );\n\n  $('#open-global-script-editor').on('click', () => scriptRepo.openScriptEditor(ScriptType.GLOBAL, undefined));\n  $('#open-scoped-script-editor').on('click', () => scriptRepo.openScriptEditor(ScriptType.CHARACTER, undefined));\n\n  $('#scope-variable').on('click', () => scriptRepo.openVariableEditor());\n\n  $('#import-script-file').on('change', async function () {\n    let target = 'global';\n    const template = $(await renderExtensionTemplateAsync(`${templatePath}`, 'script_import_target'));\n    template.find('#script-import-target-global').on('input', () => (target = 'global'));\n    template.find('#script-import-target-scoped').on('input', () => (target = 'scoped'));\n    await callGenericPopup(template, POPUP_TYPE.TEXT);\n    const inputElement = this instanceof HTMLInputElement && this;\n    if (inputElement && inputElement.files) {\n      for (const file of inputElement.files) {\n        await scriptRepo.onScriptImportFileChange(file, target === 'global' ? ScriptType.GLOBAL : ScriptType.CHARACTER);\n      }\n\n      inputElement.value = '';\n    }\n  });\n\n  $('#import-script').on('click', function () {\n    $('#import-script-file').trigger('click');\n  });\n\n  $('#default-script').on('click', () => scriptRepo.loadDefaultScriptsRepository());\n}\n","import { executeSlashCommandsWithOptions } from '@sillytavern/scripts/slash-commands';\n\n/**\n * 运行 Slash 命令, 注意如果命令写错了将不会有任何反馈\n *\n * @param command 要运行的 Slash 命令\n * @returns Slash 管道结果, 如果命令出错或执行了 `/abort` 则返回 `undefined`\n */\nexport async function triggerSlash(command: string): Promise<string> {\n  const result = await executeSlashCommandsWithOptions(command);\n  if (result.isError) {\n    throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n  }\n\n  console.info(`运行 Slash 命令: ${command}`);\n  return result.pipe;\n}\n\n// QUESTION: 弃用？保留实现但是只推荐使用triggerSlash\nexport async function triggerSlashWithResult(command: string): Promise<string> {\nconst result = await executeSlashCommandsWithOptions(command);\n      if (result.isError) {\n        throw Error(`运行 Slash 命令 '${command}' 时出错: ${result.errorMessage}`);\n      }\n\n  console.info(`运行 Slash 命令 '${command}', 结果: ${result.pipe}`);\n  return result.pipe;\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"SlashCommandParser\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandParser_js_585e5f4d__.SlashCommandParser) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"Stopwatch\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.Stopwatch), [\"debounce\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.debounce), [\"download\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.download), [\"ensureImageFormatSupported\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.ensureImageFormatSupported), [\"equalsIgnoreCaseAndAccents\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.equalsIgnoreCaseAndAccents), [\"getBase64Async\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getBase64Async), [\"getCharaFilename\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getCharaFilename), [\"getFileText\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getFileText), [\"getSortableDelay\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.getSortableDelay), [\"setValueByPath\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.setValueByPath), [\"stringToRange\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.stringToRange), [\"uuidv4\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__.uuidv4) });","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"selected_group\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_group_chats_js_79178f54__.selected_group) });","import { getCharAvatarPath, getCharData, getChatHistoryBrief, getChatHistoryDetail } from '@/function/character';\nimport { getChatMessages, setChatMessage } from '@/function/chat_message';\nimport { formatAsDisplayedMessage } from '@/function/displayed_message';\nimport { updateFrontendVersion } from '@/function/frontend_version';\nimport { generate, generateRaw } from '@/function/generate';\nimport {\n  createLorebook,\n  deleteLorebook,\n  getCharLorebooks,\n  getLorebooks,\n  getLorebookSettings,\n  setCurrentCharLorebooks,\n  setLorebookSettings,\n  getCurrentCharPrimaryLorebook,\n} from '@/function/lorebook';\nimport {\n  activateLorebookEntries,\n  createLorebookEntry,\n  deleteLorebookEntry,\n  getLorebookEntries,\n  setLorebookEntries,\n} from '@/function/lorebook_entry';\nimport { triggerSlash, triggerSlashWithResult } from '@/function/slash';\nimport { getTavernRegexes, isCharacterTavernRegexesEnabled, replaceTavernRegexes } from '@/function/tavern_regex';\nimport { substitudeMacros } from '@/function/util';\nimport {\n  getVariables,\n  replaceVariables,\n  updateVariablesWith,\n  insertOrAssignVariables,\n  deleteVariable,\n  insertVariables,\n} from '@/function/variables';\nimport { audioEnable, audioImport, audioMode, audioPlay, audioSelect } from '@/slash_command/audio';\nimport { getCharacterScriptVariables } from '@/component/script_repository/index';\n\n/**\n * 初始化TavernHelper全局对象\n * 将各种功能函数暴露到全局作用域\n */\nexport function initTavernHelperObject() {\n  (globalThis as unknown as { TavernHelper: Record<string, any> }).TavernHelper = {\n    // 变量\n    getVariables,\n    replaceVariables,\n    updateVariablesWith,\n    insertOrAssignVariables,\n    deleteVariable,\n    insertVariables,\n    // 音频\n    audioEnable,\n    audioImport,\n    audioMode,\n    audioPlay,\n    audioSelect,\n    // 角色\n    getCharData,\n    getCharAvatarPath,\n    getChatHistoryBrief,\n    getChatHistoryDetail,\n    // 消息\n    getChatMessages,\n    setChatMessage,\n    // 显示消息\n    formatAsDisplayedMessage,\n    // 更新前端版本\n    updateFrontendVersion,\n    // 工具\n    substitudeMacros,\n    // 生成\n    generate,\n    generateRaw,\n    // 世界书\n    getLorebookEntries,\n    setLorebookEntries,\n    createLorebookEntry,\n    deleteLorebookEntry,\n    activateLorebookEntries,\n    // 世界书设置\n    getLorebookSettings,\n    setLorebookSettings,\n    getCharLorebooks,\n    setCurrentCharLorebooks,\n    getLorebooks,\n    deleteLorebook,\n    createLorebook,\n    getCurrentCharPrimaryLorebook,\n    // 触发命令\n    triggerSlash,\n    triggerSlashWithResult,\n    // 酒馆正则\n    isCharacterTavernRegexesEnabled,\n    getTavernRegexes,\n    replaceTavernRegexes,\n    // 脚本库\n    getCharacterScriptVariables,\n  };\n}\n","import { charsPath } from '@/util/extension_variables';\nimport { characters, getPastCharacterChats, getRequestHeaders, getThumbnailUrl, this_chid } from '@sillytavern/script';\n\ntype v1CharData = (typeof characters)[number];\n\n/**\n * 角色卡管理类\n * 用于封装角色卡数据操作和提供便捷的访问方法\n */\nexport class Character {\n  /**\n   * v1CharData类型的角色卡数据\n   * @see char-data.js 中的 v1CharData 类型定义\n   */\n  private charData: v1CharData;\n\n  constructor(characterData: v1CharData) {\n    this.charData = characterData;\n  }\n\n  /**\n   * 根据名称或头像id查找角色卡数据\n   * @param options 查找选项\n   * @returns 找到的角色卡数据，找不到为null\n   */\n  static find({ name, allowAvatar = true }: { name?: string; allowAvatar?: boolean } = {}): any {\n    if (name === undefined) {\n      // @ts-ignore\n      const currentChar = characters[this_chid];\n      if (currentChar) {\n        name = currentChar.avatar;\n        // 确保allowAvatar为true，以便可以通过avatar准确查找角色\n        allowAvatar = true;\n      }\n    }\n\n    const matches = (char: { avatar: string; name: string }) =>\n      !name || char.name === name || (allowAvatar && char.avatar === name);\n\n    const filteredCharacters = characters;\n\n    // 如果有确定的角色头像id提供，则返回该角色\n    if (allowAvatar && name) {\n      const characterByAvatar = filteredCharacters.find(char => char.avatar === name);\n      if (characterByAvatar) {\n        return characterByAvatar;\n      }\n    }\n\n    // 查找所有匹配的角色\n    const matchingCharacters = name ? filteredCharacters.filter(matches) : filteredCharacters;\n    if (matchingCharacters.length > 1) {\n      console.warn(`[Character] [findCharacter] 找到多个符合条件的角色，返回导入时间最早的角色: ${name}`);\n    }\n\n    if (matchingCharacters.length === 0) {\n      throw new Error(`[Character] [findCharacter] 提供的名称或头像ID为: ${name}，未找到符合条件的角色`);\n    }\n\n    return matchingCharacters[0];\n  }\n\n  /**\n   * 根据名称查找角色卡数据在characters数组中的索引（类似this_chid）\n   * @param name 角色名称\n   * @returns 角色卡数据在characters数组中的索引，未找到返回-1\n   */\n\n  static findCharacterIndex(name: string) {\n    const matchTypes = [\n      (a: string, b: string) => a === b,\n      (a: string, b: string) => a.startsWith(b),\n      (a: string, b: string) => a.includes(b),\n    ];\n\n    const exactAvatarMatch = characters.findIndex(x => x.avatar === name);\n\n    if (exactAvatarMatch !== -1) {\n      return exactAvatarMatch;\n    }\n\n    for (const matchType of matchTypes) {\n      const index = characters.findIndex(x => matchType(x.name.toLowerCase(), name.toLowerCase()));\n      if (index !== -1) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * 从服务器获取每个聊天文件的聊天内容，并将其编译成字典。\n   * 该函数遍历提供的聊天元数据列表，并请求每个聊天的实际聊天内容，\n   *\n   * @param {Array} data - 包含每个聊天的元数据的数组，例如文件名。\n   * @param {boolean} isGroupChat - 一个标志，指示聊天是否为群组聊天。\n   * @returns {Promise<Object>} chat_dict - 一个字典，其中每个键是文件名，值是\n   * 从服务器获取的相应聊天内容。\n   */\n  static async getChatsFromFiles(data: any[], isGroupChat: boolean) {\n    const chat_dict: Record<string, any> = {};\n    const chat_list = Object.values(data)\n      .sort((a, b) => a['file_name'].localeCompare(b['file_name']))\n      .reverse();\n\n    const chat_promise = chat_list.map(({ file_name }) => {\n      // eslint-disable-next-line no-async-promise-executor\n      return new Promise<void>(async (res, _rej) => {\n        try {\n          // 从文件名中提取角色名称（破折号前的部分）\n          const ch_name = isGroupChat ? '' : file_name.split(' - ')[0];\n\n          // 使用Character.find方法查找角色，获取头像\n          let characterData = null;\n          let avatar_url = '';\n\n          if (!isGroupChat && ch_name) {\n            characterData = Character.find({ name: ch_name });\n            if (characterData) {\n              avatar_url = characterData.avatar;\n            }\n          }\n\n          const endpoint = isGroupChat ? '/api/chats/group/get' : '/api/chats/get';\n          const requestBody = isGroupChat\n            ? JSON.stringify({ id: file_name })\n            : JSON.stringify({\n                ch_name: ch_name,\n                file_name: file_name.replace('.jsonl', ''),\n                avatar_url: avatar_url,\n              });\n\n          const chatResponse = await fetch(endpoint, {\n            method: 'POST',\n            headers: getRequestHeaders(),\n            body: requestBody,\n            cache: 'no-cache',\n          });\n\n          if (!chatResponse.ok) {\n            return res();\n          }\n\n          const currentChat = await chatResponse.json();\n          if (!isGroupChat) {\n            // remove the first message, which is metadata, only for individual chats\n            currentChat.shift();\n          }\n          chat_dict[file_name] = currentChat;\n        } catch (error) {\n          console.error(error);\n        }\n\n        return res();\n      });\n    });\n\n    await Promise.all(chat_promise);\n\n    return chat_dict;\n  }\n\n  /**\n   * 获取角色管理内的数据\n   * @returns 完整的角色管理内的数据对象\n   */\n  getCardData(): v1CharData {\n    return this.charData;\n  }\n\n  /**\n   * 获取角色头像ID\n   * @returns 头像ID/文件名\n   */\n  getAvatarId(): string {\n    return this.charData.avatar || '';\n  }\n\n  /**\n   * 获取正则脚本\n   * @returns 正则脚本数组\n   */\n  getRegexScripts(): Array<{\n    id: string;\n    scriptName: string;\n    findRegex: string;\n    replaceString: string;\n    trimStrings: string[];\n    placement: number[];\n    disabled: boolean;\n    markdownOnly: boolean;\n    promptOnly: boolean;\n    runOnEdit: boolean;\n    substituteRegex: number | boolean;\n    minDepth: number;\n    maxDepth: number;\n  }> {\n    return this.charData.data?.extensions?.regex_scripts || [];\n  }\n\n  /**\n   * 获取角色书\n   * @returns 角色书数据对象或null\n   */\n  getCharacterBook(): {\n    name: string;\n    entries: Array<{\n      keys: string[];\n      secondary_keys?: string[];\n      comment: string;\n      content: string;\n      constant: boolean;\n      selective: boolean;\n      insertion_order: number;\n      enabled: boolean;\n      position: string;\n      extensions: any;\n      id: number;\n    }>;\n  } | null {\n    return this.charData.data?.character_book || null;\n  }\n\n  /**\n   * 获取角色世界名称\n   * @returns 世界名称\n   */\n  getWorldName(): string {\n    return this.charData.data?.extensions?.world || '';\n  }\n}\n\n/**\n * 获取角色卡数据\n * @param name 角色名称或头像ID\n * @param allowAvatar 是否允许通过头像ID查找\n * @returns 角色卡数据\n */\nexport function getCharData(name?: string, allowAvatar: boolean = true): v1CharData | null {\n  try {\n    const characterData = Character.find({ name, allowAvatar });\n    if (!characterData) return null;\n\n    const character = new Character(characterData);\n    console.info(`获取角色卡数据成功, 角色: ${name || '未知'}`);\n    return character.getCardData();\n  } catch (error) {\n    console.error(`获取角色卡数据失败, 角色: ${name || '未知'}`, error);\n    return null;\n  }\n}\n\n/**\n * 获取角色头像路径\n * @param name 角色名称或头像ID\n * @param allowAvatar 是否允许通过头像ID查找\n * @returns 角色头像路径\n */\nexport function getCharAvatarPath(name?: string, allowAvatar: boolean = true): string | null {\n  try {\n    const characterData = Character.find({ name, allowAvatar });\n    if (!characterData) return null;\n\n    const character = new Character(characterData);\n    const avatarId = character.getAvatarId();\n\n    // 使用getThumbnailUrl获取缩略图URL，然后提取实际文件名\n    const thumbnailPath = getThumbnailUrl('avatar', avatarId);\n    const targetAvatarImg = thumbnailPath.substring(thumbnailPath.lastIndexOf('=') + 1);\n\n    // 假设charsPath在其他地方定义\n    console.info(`获取角色头像路径成功, 角色: ${name || '未知'}`);\n    return charsPath + targetAvatarImg;\n  } catch (error) {\n    console.error(`获取角色头像路径失败, 角色: ${name || '未知'}`, error);\n    return null;\n  }\n}\n\n/**\n * 获取角色聊天历史摘要\n * @param name 角色名称或头像ID\n * @param allowAvatar 是否允许通过头像ID查找\n * @returns 聊天历史摘要数组\n */\nexport async function getChatHistoryBrief(name?: string, allowAvatar: boolean = true): Promise<any[] | null> {\n  try {\n    const characterData = Character.find({ name, allowAvatar });\n    if (!characterData) return null;\n\n    const character = new Character(characterData);\n    const index = Character.findCharacterIndex(character.getAvatarId());\n\n    if (index === -1) return null;\n\n    const chats = await getPastCharacterChats(index);\n    console.info(`获取角色聊天历史摘要成功, 角色: ${name || '未知'}`);\n    return chats;\n  } catch (error) {\n    console.error(`获取角色聊天历史摘要失败, 角色: ${name || '未知'}`, error);\n    return null;\n  }\n}\n\n/**\n * 获取聊天历史详情\n * @param data 聊天数据数组\n * @param isGroupChat 是否为群组聊天\n * @returns 聊天历史详情\n */\nexport async function getChatHistoryDetail(\n  data: any[],\n  isGroupChat: boolean = false,\n): Promise<Record<string, any> | null> {\n  try {\n    const result = await Character.getChatsFromFiles(data, isGroupChat);\n    console.info(`获取聊天文件详情成功`);\n    return result;\n  } catch (error) {\n    console.error(`获取聊天文件详情失败`, error);\n    return null;\n  }\n}\n","import { partition } from '@/util/helper';\n\nimport { characters, reloadCurrentChat, saveChatConditional, saveSettings, this_chid } from '@sillytavern/script';\nimport { RegexScriptData } from '@sillytavern/scripts/char-data';\nimport { extension_settings, writeExtensionField } from '@sillytavern/scripts/extensions';\nimport { regex_placement } from '@sillytavern/scripts/extensions/regex/engine';\n\ninterface TavernRegex {\n  id: string;\n  script_name: string;\n  enabled: boolean;\n  run_on_edit: boolean;\n  scope: 'global' | 'character';\n\n  find_regex: string;\n  replace_string: string;\n\n  source: {\n    user_input: boolean;\n    ai_output: boolean;\n    slash_command: boolean;\n    world_info: boolean;\n  };\n\n  destination: {\n    display: boolean;\n    prompt: boolean;\n  };\n\n  min_depth: number | null;\n  max_depth: number | null;\n}\n\ninterface GetTavernRegexesOption {\n  scope?: 'all' | 'global' | 'character'; // 按所在区域筛选正则\n  enable_state?: 'all' | 'enabled' | 'disabled'; // 按是否被开启筛选正则\n}\n\nexport function isCharacterTavernRegexEnabled(): boolean {\n  // @ts-ignore 2345\n  return extension_settings?.character_allowed_regex?.includes(characters?.[this_chid]?.avatar);\n}\n\nexport function getGlobalRegexes(): RegexScriptData[] {\n  return extension_settings.regex ?? [];\n}\n\nexport function getCharacterRegexes(): RegexScriptData[] {\n  if (this_chid === undefined) {\n    throw new Error('当前没有选中角色，无法获取角色正则');\n  }\n  // @ts-ignore\n  return characters[this_chid]?.data?.extensions?.regex_scripts ?? [];\n}\n\nfunction toTavernRegex(regex_script_data: RegexScriptData, scope: 'global' | 'character'): TavernRegex {\n  return {\n    id: regex_script_data.id,\n    script_name: regex_script_data.scriptName,\n    enabled: !regex_script_data.disabled,\n    run_on_edit: regex_script_data.runOnEdit,\n    scope: scope,\n\n    find_regex: regex_script_data.findRegex,\n    replace_string: regex_script_data.replaceString,\n\n    source: {\n      user_input: regex_script_data.placement.includes(regex_placement.USER_INPUT),\n      ai_output: regex_script_data.placement.includes(regex_placement.AI_OUTPUT),\n      slash_command: regex_script_data.placement.includes(regex_placement.SLASH_COMMAND),\n      world_info: regex_script_data.placement.includes(regex_placement.WORLD_INFO),\n    },\n\n    destination: {\n      display: regex_script_data.markdownOnly,\n      prompt: regex_script_data.promptOnly,\n    },\n\n    min_depth: typeof regex_script_data.minDepth === 'number' ? regex_script_data.minDepth : null,\n    max_depth: typeof regex_script_data.maxDepth === 'number' ? regex_script_data.maxDepth : null,\n  };\n}\n\nfunction fromTavernRegex(tavern_regex: TavernRegex): RegexScriptData {\n  return {\n    id: tavern_regex.id,\n    scriptName: tavern_regex.script_name,\n    disabled: !tavern_regex.enabled,\n    runOnEdit: tavern_regex.run_on_edit,\n\n    findRegex: tavern_regex.find_regex,\n    replaceString: tavern_regex.replace_string,\n    trimStrings: [], // TODO: handle this?\n\n    placement: [\n      ...(tavern_regex.source.user_input ? [regex_placement.USER_INPUT] : []),\n      ...(tavern_regex.source.ai_output ? [regex_placement.AI_OUTPUT] : []),\n      ...(tavern_regex.source.slash_command ? [regex_placement.SLASH_COMMAND] : []),\n      ...(tavern_regex.source.world_info ? [regex_placement.WORLD_INFO] : []),\n    ],\n\n    substituteRegex: 0, // TODO: handle this?\n\n    // @ts-ignore\n    minDepth: tavern_regex.min_depth,\n    // @ts-ignore\n    maxDepth: tavern_regex.max_depth,\n\n    markdownOnly: tavern_regex.destination.display,\n    promptOnly: tavern_regex.destination.prompt,\n  };\n}\n\ninterface ReplaceTavernRegexesOption {\n  scope?: 'all' | 'global' | 'character'; // 要替换的酒馆正则部分\n}\n\n/**\n * 判断局部正则是否启用\n * @returns 布尔值\n */\nexport function isCharacterTavernRegexesEnabled(): boolean {\n  const result = isCharacterTavernRegexEnabled();\n\n  console.info(`查询到局部正则${result ? '被启用' : '被禁用'}`);\n  return result;\n}\n\n/**\n * 获取酒馆正则\n *\n * @param option 可选选项\n *   - `scope?:'all'|'global'|'character'`:         // 按所在区域筛选酒馆正则; 默认为 `'all'`\n *   - `enable_state?:'all'|'enabled'|'disabled'`:  // 按是否被开启筛选酒馆正则; 默认为 `'all'`\n *\n * @returns 一个数组, 数组的元素是酒馆正则 `TavernRegex`. 该数组依据正则作用于文本的顺序排序, 也就是酒馆显示正则的地方从上到下排列.\n */\nexport function getTavernRegexes(option: GetTavernRegexesOption = { scope: 'all', enable_state: 'all' }): TavernRegex[] {\n  const { scope = 'all', enable_state = 'all' } = option;\n\n  if (!['all', 'enabled', 'disabled'].includes(enable_state)) {\n    throw Error(`提供的 enable_state 无效, 请提供 'all', 'enabled' 或 'disabled', 你提供的是: ${enable_state}`);\n  }\n  if (!['all', 'global', 'character'].includes(scope)) {\n    throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${scope}`);\n  }\n\n  let regexes: TavernRegex[] = [];\n  if (scope === 'all' || scope === 'global') {\n    regexes = [...regexes, ...getGlobalRegexes().map(regex => toTavernRegex(regex, 'global'))];\n  }\n  if (scope === 'all' || scope === 'character') {\n    regexes = [...regexes, ...getCharacterRegexes().map(regex => toTavernRegex(regex, 'character'))];\n  }\n  if (enable_state !== 'all') {\n    regexes = regexes.filter(regex => regex.enabled === (enable_state === 'enabled'));\n  }\n\n  return regexes;\n}\n\n/**\n * 完全替换酒馆正则为 `regexes`.\n * - **这是一个很慢的操作!** 尽量对正则做完所有事后再一次性 replaceTavernRegexes.\n * - **为了重新应用正则, 它会重新载入整个聊天消息**, 将会触发 `tavern_events.CHAT_CHANGED` 进而重新加载全局脚本和楼层消息.\n *     这意味着如果你在全局脚本中运行本函数, 则该函数之后的内容将不会被执行.\n *\n * 之所以提供这么直接的函数, 是因为你可能需要调换正则顺序等.\n *\n * @param regexes 要用于替换的酒馆正则\n * @param option 可选选项\n *   - scope?: 'all' | 'global' | 'character';  // 要替换的酒馆正则部分; 默认为 'all'\n */\nexport async function replaceTavernRegexes(\n  regexes: TavernRegex[],\n  option: ReplaceTavernRegexesOption = { scope: 'all' },\n): Promise<void> {\n  const { scope = 'all' } = option;\n\n  if (!['all', 'global', 'character'].includes(scope)) {\n    throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${scope}`);\n  }\n\n  // FIXME: `trimStrings` and `substituteRegex` are not considered\n  const emptied_regexes = regexes.filter(regex => regex.script_name == '');\n  if (emptied_regexes.length > 0) {\n    throw Error(`不能将酒馆正则的名称设置为空字符串:\\n${JSON.stringify(emptied_regexes.map(regex => regex.id))}`);\n  }\n  const [global_regexes, character_regexes] = partition(regexes, regex => regex.scope === 'global').map(regexes =>\n    regexes.map(fromTavernRegex),\n  );\n\n  if (this_chid === undefined) {\n    throw new Error('当前没有选中角色，无法获取角色正则');\n  }\n  // @ts-ignore\n  const character = characters[this_chid];\n  if (scope === 'all' || scope === 'global') {\n    extension_settings.regex = global_regexes;\n  }\n  if (scope === 'all' || scope === 'character') {\n    if (character) {\n      // @ts-ignore\n      characters[this_chid].data.extensions.regex_scripts = character_regexes;\n      // @ts-ignore\n      await writeExtensionField(this_chid, 'regex_scripts', character_regexes);\n    }\n  }\n  await saveSettings();\n  if (character) {\n    await saveChatConditional();\n  }\n  await reloadCurrentChat();\n\n  console.info(`替换酒馆正则\\\n${scope === 'all' || scope === 'global' ? `, 全局正则:\\n${JSON.stringify(global_regexes, undefined, 2)}` : ``}\\\n${scope === 'all' || scope === 'character' ? `, 局部正则:\\n${JSON.stringify(character_regexes, undefined, 2)}` : ``}`);\n}\n","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = x({ [\"t\"]: () => (__WEBPACK_EXTERNAL_MODULE__scripts_i18n_js_b4bbac2e__.t) });","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(799);\n"],"names":["webpackQueues","webpackExports","webpackError","resolveQueue","iframe_client","join","window_functions","DEFAULT_SCRIPT_CONFIGS","auto_fix_options","name","auto_open_scope_regex","auto_toggle_by_preset","auto_import_qr","resource_preload","auto_install_plugins","async","loadScriptContent","scriptId","response","fetch","ok","Error","statusText","text","error","console","loadScriptInfo","createDefaultScript","config","id","content","info","enabled","createDefaultScripts","scripts","Object","keys","script","push","toLorebookEntry","entry","uid","display_index","displayIndex","comment","disable","type","constant","vectorized","position","role","depth","order","probability","key","logic","selectiveLogic","filter","keysecondary","scan_depth","scanDepth","case_sensitive","caseSensitive","match_whole_words","matchWholeWords","use_group_scoring","useGroupScoring","automation_id","automationId","exclude_recursion","excludeRecursion","prevent_recursion","preventRecursion","delay_until_recursion","delayUntilRecursion","group","group_prioritized","groupOverride","group_weight","groupWeight","sticky","cooldown","delay","fromPartialLorebookEntry","transformers","value","before_character_definition","after_character_definition","before_example_messages","after_example_messages","before_author_note","after_author_note","at_depth_as_system","at_depth_as_user","at_depth_as_assistant","and_any","and_all","not_any","not_all","entries","_","undefined","reduce","result","field","assignFieldValuesToWiEntry","data","wi_entry","field_values","forEach","original_wi_mapped_key","originalWIDataKeyMap","setWIOriginalDataValue","reloadEditorDebounced","debounce","file","currentIndex","Number","$","val","selectedIndex","world_names","indexOf","trigger","getLorebookEntries","lorebook","option","includes","values","loadWorldInfo","map","every","expected_value","entry_value","Array","isArray","JSON","stringify","setLorebookEntries","Promise","all","saveWorldInfo","createLorebookEntry","createWorldInfoEntry","partial_lorebook_entry","deleteLorebookEntry","lorebook_uid","deleted","deleteWIOriginalDataValue","activateLorebookEntries","eventSource","emit","event_types","WORLDINFO_FORCE_ACTIVATE","world","module","exports","y","x","__webpack_require__","d","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_js_aacea5c1__","libraries_text","initialize","libraries","library","code","destroy","renderMarkdown","markdown","htmlText","reloadMarkdownProcessor","makeHtml","getLogPrefix","event","request","window","source","frameElement","getIframeName","iframe_handlers","registerIframeHandler","handler","substitudeMacros","text_demacroed","substituteParamsExtended","loadScripts","prefix","filterScriptFromRegex","scriptName","replace","startsWith","isEnabled","disabled","toName","enabled_global_regexes","enabled_character_regexes","runOnEdit","replaceString","slashEventEmit","named_args","initSlashEventEmit","SlashCommandParser","addCommandObject","SlashCommand","fromProps","callback","returns","namedArgumentList","SlashCommandNamedArgument","description","typeList","ARGUMENT_TYPE","STRING","isRequired","acceptsMultiple","unnamedArgumentList","helpString","updateFrontendVersion","method","headers","getRequestHeaders","body","extensionName","toastr","t","timeOut","json","isUpToDate","success","shortCommitHash","extensionSettingName","extensionFolderPath","charsPath","getUserAvatarPath","user_avatar","getCharAvatarPath","thumbnailPath","getThumbnailUrl","characters","this_chid","avatar","targetAvatarImg","substring","lastIndexOf","getSettingValue","split","extension_settings","k","saveSettingValue","setValueByPath","saveSettingsDebounced","__WEBPACK_EXTERNAL_MODULE__scripts_popup_js_d782a329__","GITLAB_INSTANCE_URL","GITLAB_PROJECT_PATH","GITLAB_BRANCH","VERSION_FILE_PATH_GITLAB","CHANGELOG_FILE_PATH_GITLAB","VERSION_FILE_PATH","CURRENT_VERSION","LATEST_VERSION","CHANGELOG_CONTENT","fetchRawFileContentFromGitLab","filePath","idOrPathForUrl","encodeURIComponent","encodedFilePath","url","errorBody","e","status","trim","parseVersionFromFile","parse","version","SyntaxError","message","String","compareSemVer","versionA","versionB","cleanVersionA","cleanVersionB","partsA","partsB","i","numA","numB","isNaN","warn","getFileContentByPath","runCheckWithPath","comparisonResult","addVersionUpdateElement","append","handleUpdateButton","changelogContent","logs","currentVersion","latestVersion","matches","matchAll","length","latestVersionMatch","find","match","startIndex","index","nextVersionMatch","endIndex","currentVersionMatch","parseChangelogBetweenVersions","getChangelog","callGenericPopup","POPUP_TYPE","CONFIRM","okButton","cancelButton","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommand_js_7714abe5__","__WEBPACK_EXTERNAL_MODULE__scripts_tags_js_fe93ed66__","getLorebookSettings","lorebook_settings","selected_global_lorebooks","world_info_settings","getWorldInfoSettings","world_info","globalSelect","world_info_depth","context_percentage","world_info_budget","budget_cap","world_info_budget_cap","min_activations","world_info_min_activations","max_depth","world_info_min_activations_depth_max","max_recursion_steps","world_info_max_recursion_steps","insertion_strategy","world_info_character_strategy","include_names","world_info_include_names","recursive","world_info_recursive","world_info_case_sensitive","world_info_match_whole_words","world_info_use_group_scoring","overflow_alert","world_info_overflow_alert","setLorebookSettings","settings","inexisting_lorebooks","for_eachs","remove","item","selected_world_info","saveSettings","converted_value","evenly","character_first","global_first","prop","assignPartialLorebookSettings","getCharLorebooks","selected_group","filename","character","allowAvatar","insensitive","filteredByTags","preferCurrentChar","quiet","char","equalsIgnoreCaseAndAccents","filteredCharacters","charTags","getTagsList","tagName","some","currentChars","groups","members","member","preferredCharSearch","warning","characterByAvatar","matchingCharacters","findChar","books","primary","additional","extensions","extraCharLore","charLore","extraBooks","setCurrentCharLorebooks","lorebooks","getCharaFilename","previous_primary","character_book","html","form_data","FormData","get","raw_file","File","converted_file","ensureImageFormatSupported","set","delete","chid","alternate_greetings","cache","getOneCharacter","replaceWith","clone","attr","editCurrentCharacter","setWorldInfoButtonClass","char_lore","existing_char_index","findIndex","splice","assign","saveCharacterDebounced","getLorebooks","deleteLorebook","deleteWorldInfo","createLorebook","createNewWorldInfo","interactive","getCurrentCharPrimaryLorebook","predefinedMacros","Map","registerAllMacros","MacrosParser","registerMacro","log","unregisterAllMacros","unregisterMacro","demacro","event_data","get_global_variable","variables","global","get_chat_variable","chat_metadata","get_message_variable","chat","swipe_id","at","messages","replaceAll","_substring","path","object","default_value","get_property_from_path","initializeMacroOnExtension","on","CHAT_COMPLETION_PROMPT_READY","destroyMacroOnExtension","removeListener","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandArgument_js_9ae1817d__","__WEBPACK_EXTERNAL_MODULE__script_js_588e7203__","__WEBPACK_EXTERNAL_MODULE__scripts_RossAscends_mods_js_224b6398__","isAudioEnabled","list_BGMS","list_ambients","bgmEnded","ambientEnded","isExtensionEnabled","templatePath","defaultAudioSettings","audio_enabled","bgm_enabled","ambient_enabled","bgm_mode","bgm_muted","bgm_volume","bgm_selected","bgm_current_time","ambient_mode","ambient_muted","ambient_volume","ambient_selected","ambient_current_time","audio_cooldown","updateAudio","isUserInput","audioEnded","audioSelector","audio_url","playlist","getAudioUrl","mode","currentFile","filteredPlaylist","Math","floor","random","getNextFileByMode","audio","cleanAudioSrc","src","cleanAudioUrl","decodeURIComponent","load","resolve","canPlayHandler","removeEventListener","readyState","HTMLMediaElement","HAVE_ENOUGH_DATA","addEventListener","playAudio","audioUrlWithCacheBusting","originalUrl","cacheBuster","Date","getTime","separator","getAudioUrlWithCacheBusting","selectElement","updateAudioSelect","empty","audioList","selectedSetting","fileLabel","Option","toUpperCase","typeKey","toggleAudioControls","shouldEnable","onAudioEnabledClick","pause","initAudioEventListeners","onVolumeSliderWheelEvent","slider","this","preventDefault","stopPropagation","delta","deltaY","newVal","handleLongPress","volumeControlId","iconId","$volumeControl","$icon","pressTimer","isMobile","setTimeout","css","clearTimeout","document","is","target","has","refreshAudioResources","openUrlManagerPopup","urlManager","renderExtensionTemplateAsync","prepend","savedAudioUrl","urlTemplate","urlValue","addClass","updatedUrls","newUrlOrder","renderUrl","container","urlHtml","fileName","parts","currentUrl","inputUrl","INPUT","newFileName","pop","newId","newUrls","input","debug","urlArray","from","Set","openUrlImportPopup","removeClass","sortable","getSortableDelay","handle","stop","each","newUrl","newUrlList","currentBgmUrl","currentAmbientUrl","saveMetadataDebounced","handleAudioToggle","enable","userInput","bgmUrl","ambientUrl","bgmAudioElement","play","ambientAudioElement","audioElement","playPauseIcon","selectedAudio","onAudioModeClick","modes","icon","nextModeIndex","m","onAudioSelectChange","onAudioCooldownInput","onAudioVolumeChange","onAudioMuteClick","toggleClass","togglePlayPause","paused","initAudioStyles","hide","$audioElement","$progressSlider","duration","progressPercent","currentTime","cooldownBGM","remainingTime","isFadingOut","fadeStep","volume","fadeOutInterval","setInterval","max","clearInterval","targetVolume","fadeInInterval","min","initializeProgressBar","initAudioComponents","checked","audioTypes","events","selector","bindTypeEvents","volumeSlider","passive","urlManagerMap","bgm","ambient","bgmAudio","ambientAudio","togglePlayPauseIcon","iconSelector","CHAT_CHANGED","$bgmPlayer","$ambientPlayer","handleIframe","err","stack","postMessage","targetOrigin","getVariables","metadata","getVariablesByType","replaceVariables","updateVariablesWith","updater","insertOrAssignVariables","old_variables","merge","insertVariables","defaultsDeep","deleteVariable","variable_path","unset","scriptRepo","qrBarObserver","handleChatChanged","checkEmbeddedScripts","removeButtonsByType","GLOBAL","CHARACTER","loadScriptLibrary","runScriptsByType","handleCharacterDeleted","handlePartialRender","mesId","mesIdNumber","parseInt","handleMessageDeleted","handleVariableUpdated","MutationObserverQrBarCreated","MutationObserver","mutations","mutation","addedNodes","node","Element","$THbar","addButtonsByType","observe","childList","subtree","initExtensionMainPanel","handleExtensionToggle","currentTarget","userAction","next","getInstance","CHARACTER_DELETED","eventType","MESSAGE_DELETED","reloadCurrentChat","disconnect","destroyInstance","__WEBPACK_EXTERNAL_MODULE__scripts_macros_js_3c1c7442__","__WEBPACK_EXTERNAL_MODULE__scripts_extensions_js_86ff8498__","__WEBPACK_EXTERNAL_MODULE__scripts_authors_note_js_60883899__","__WEBPACK_EXTERNAL_MODULE__scripts_openai_js_991751fb__","__WEBPACK_EXTERNAL_MODULE__scripts_power_user_js_8eb57d1d__","__WEBPACK_EXTERNAL_MODULE__scripts_PromptManager_js_3415be00__","abortController","AbortController","fromOverrides","overrides","world_info_before","persona_description","char_description","char_personality","scenario","world_info_after","dialogue_examples","with_depth_entries","chat_history","author_note","prompts","fromInjectionPrompt","inject","before_prompt","in_chat","after_prompt","none","should_scan","dryRun","character_names_behavior","NONE","DEFAULT","COMPLETION","CONTENT","roleTypes","system","extension_prompt_roles","SYSTEM","user","USER","assistant","ASSISTANT","default_order","StreamingProcessor","generator","stoppingStrings","isStopped","isFinished","messageBuffer","constructor","nullStreamingGeneration","onProgressStreaming","isFinal","newText","slice","processedText","cleanUpMessage","charsToBalance","isOdd","countOccurrences","trimEnd","fullText","onErrorStreaming","abort","unblockGeneration","saveChatConditional","generate","sw","Stopwatch","power_user","streaming_fps","timestamps","now","tick","seconds","toFixed","iframeGenerate","user_input","use_preset","image","max_chat_history","stream","processedUserInput","oai_settings","send_if_empty","getRegexedString","regex_placement","USER_INPUT","isPrompt","processUserInput","substituteParams","baseData","getOverrideContent","identifier","isPromptFiltered","depthPromptText","baseChatReplace","depth_prompt","prompt","name1","name2","depthPromptDepth","depthPromptRole","getExtensionPromptRoleByName","setExtensionPrompt","extension_prompt_types","IN_CHAT","note","allowWIScan","handleCharDepthPrompt","authorNoteOverride","NOTE_MODULE_NAME","metadata_keys","setAuthorNotePrompt","INJECT_TAG","IN_PROMPT","persona_description_position","persona_description_positions","BOTTOM_AN","TOP_AN","shouldWIAddPrompt","originalAN","getContext","extensionPrompts","ANWithDesc","AT_DEPTH","persona_description_depth","persona_description_role","setPersonaDescriptionExtensionPrompt","rawDescription","personality","rawPersonality","persona","rawPersona","rawScenario","mesExamples","rawMesExamples","jailbreak","getCharacterCardFields","mesExamplesArray","parseMesExamples","oaiMessageExamples","setOpenAIMessageExamples","promptBias","getBiasStrings","promptConfig","injects","position_map","BEFORE_PROMPT","validatedInject","Boolean","handleInjectedPrompts","oaiMessages","reverse","setOpenAIMessages","chatHistory","coreChat","is_system","chatItem","mes","regexType","is_user","AI_OUTPUT","regexedMessage","processChatHistory","userContent","worldInfo","chatForWI","this_max_context","getMaxContextSize","worldInfoString","worldInfoBefore","worldInfoAfter","worldInfoExamples","worldInfoDepth","getWorldInfoPrompt","clearInjectionPrompts","joinedEntries","processWorldInfoDepth","finalWorldInfoBefore","finalWorldInfoAfter","processWorldInfo","removeTemporaryUserMessage","example","cleanedExample","wi_anchor_position","before","unshift","processMessageExamples","characterInfo","chatContext","prepareAndOverrideData","generate_data","originalScenario","scenarioOverride","userMessageTemp","convertFileToBase64","messageData","charDescription","charPersonality","Scenario","bias","quietPrompt","quietImage","cyclePrompt","systemPromptOverride","jailbreakPromptOverride","personaDescription","messageExamples","prepareOpenAIMessages","handlePresetPath","chatCompletion","ChatCompletion","setTokenBudget","openai_max_context","openai_max_tokens","reserveBudget","orderArray","positionMap","acc","toLowerCase","systemPrompts","promptCollection","PromptCollection","examplesCollection","MessageCollection","customPrompts","add","Prompt","system_prompt","characterPrompts","dialogue","dialogueIndex","chatMessages","promptIndex","chatMessage","Message","createAsync","setName","convertSystemPromptsToCollection","addToChatCompletionInOrder","collection","fromPromptAsync","dialogue_examplesIndex","userInputMessage","chatHistoryIndex","userInputIndex","hasUserInput","hasChatHistory","isChatHistoryFiltered","userMessage","addImage","insertIndex","chatCollection","newChat","new_chat_prompt","newChatMessage","lastChatPrompt","emptyMessage","canAfford","userPrompt","customInjects","processedMessages","totalInsertedMessages","injectionPrompts","authorsNote","getPromptRole","injection_depth","injected","MAX_INJECTION_DEPTH","depthPrompts","roles","roleMessages","rolePrompts","injectIdx","populationInjectionPrompts","imageInlining","isImageInliningSupported","chatPool","chatPrompt","promptManager","setupChatCompletionPromptManager","serviceSettings","names_behavior","messageName","isValidName","sanitizeName","freeBudget","processChatHistoryAndInject","squash_system_messages","squashSystemMessages","getChat","handleCustomPath","useStream","deactivateSendButtons","originalStreamSetting","stream_openai","streamingProcessor","sendOpenAIRequest","signal","preventDuplicates","choices","tool_plan","extractMessageFromData","handleResponse","generateResponse","examplesStr","block","activateSendButtons","showSwipeButtons","setGenerationProgress","flushEphemeralStoppingStrings","prefixes","getBase64Async","promptId","override","converted_config","should_stream","fromGenerateConfig","generateRaw","ordered_prompts","fromGenerateRawConfig","stopGeneration","script_url","URL","createObjectURL","Blob","createObjectURLFromScript","revokeObjectURL","isRenderEnabled","isRenderingOptimizeEnabled","renderDepth","isTampermonkeyEnabled","tampermonkeyMessageListener","iframeResizeObservers","originalHighlightElement","hljs","highlightElement","RENDER_MODES","FULL","PARTIAL","partialRenderEvents","CHARACTER_MESSAGE_RENDERED","USER_MESSAGE_RENDERED","MESSAGE_UPDATED","MESSAGE_SWIPED","defaultIframeSettings","render_enabled","tampermonkey_compatibility","render_depth","render_optimize","clearAndRenderAllIframes","clearAllIframes","renderAllIframes","renderMessagesInIframes","renderPartialIframes","processDepth","totalMessages","viewport_adjust_script","tampermonkey_script","processVhUnits","htmlContent","test","viewportHeight","innerHeight","expression","specificMesId","context","depthLimit","depthLimitedMessageIds","messagesToRenderIds","messagesToCancelIds","messageId","$iframes","toArray","iframe","destroyIframe","updateMessageBlock","addToggleButtonsToMessage","renderedMessages","$messageElement","$codeElements","iframeCounter","extractedText","extractTextFromCode","addCodeToggleButtons","disableLoading","hasMinVh","$wrapper","width","$iframe","srcdoc","loading","margin","border","loadingTimeout","$loadingOverlay","$loadingText","srcdocContent","observeIframeContent","parent","contentWindow","newHeight","emitAndWait","off","docBody","iframeId","resizeObserver","adjustIframeHeight","ResizeObserver","cleanup","iframeDoc","contents","$clone","removeData","prototype","hasOwnProperty","call","arr","fill","gc","handleTampermonkeyMessages","buttonName","$sendTextarea","jQuery","$sendButton","doc","bodyHeight","offsetHeight","htmlHeight","documentElement","currentHeight","parseFloat","abs","codeElement","textContent","nodeType","Node","TEXT_NODE","ELEMENT_NODE","renderMessageAfterDelete","maxRemainId","hasCodeBlock","handleTampermonkeyCompatibilityChange","currentPlayingIframeId","newIframeId","createGlobalAudioManager","$mesText","$pre","$toggleButton","show","addCodeToggleButtonsToAllMessages","$chat","addRenderingOptimizeSettings","styleId","style","getElementById","createElement","setAttribute","head","appendChild","innerHTML","injectCodeBlockHideStyles","removeRenderingOptimizeSettings","removeCodeBlockHideStyles","handleRenderingOptimizationToggle","handleRenderEnableToggle","not","initIframePanel","onDepthInput","buttonHtml","addRenderQuickButton","styleSheet","injectLoadingStyles","Multimap","size_","operator","iterable","put","size","create","putAll","arg1","arg2","pushed","TypeError","hasEntry","deleteEntry","current","clear","self","gen","thisArg","Symbol","iterator","asMap","ret","toStringTag","partition","array","predicate","pass","fail","extract","latest_set_variables_message_id","registerIframeVariableHandler","message_id","latest_message_id","tempVariables","currentVariables","newValue","clearTempVariables","shouldUpdateVariables","eventMesId","newVariables","updateVariables","checkVariablesEvents","formatSlashCommands","cmdList","commands","sort","a","b","localeCompare","transform_arg","arg","is_required","defaultValue","accepts_multiple","enumList","enum_list","type_list","cmd","unnamed_args","return_type","help_string","line","initReference","navigator","clipboard","writeText","executeSlashCommandsWithOptions","__WEBPACK_EXTERNAL_MODULE__scripts_extensions_regex_engine_js_bce0a3be__","formatAsDisplayedMessage","last_message_id","getLastMessageId","last_user_message_id","last_char_message_id","chat_message","messageFormatting","__WEBPACK_EXTERNAL_MODULE__scripts_world_info_js_1b945dbf__","script_map","load_promises","load_promise","display","third_party","onload","makeScriptIframe","allSettled","load_events","initializeCharacterLevelOnExtension","makeFirst","destroyCharacterLevelOnExtension","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandCommonEnumsProvider_js_56229d14__","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandEnumValue_js_4a448917__","audioMode","args","iconMap","repeat","single","audioEnable","state","audioPlay","audioImport","existingUrls","mergedUrls","selectedUrl","audioSelect","initAudioSlashCommands","SlashCommandEnumValue","enumTypes","enum","enumIcons","SlashCommandArgument","BOOLEAN","commonEnumProviders","boolean","loop","shuffle","redo","getChatMessages","range","hide_state","range_demacroed","toString","rangeNumber","stringToRange","start","end","process_message","messageRole","extra","system_message_types","NARRATOR","swipes","swipes_data","is_hidden","is_system_or_hidden","promises","chat_messages","setChatMessage","refresh","swipe_id_previous_index","swipe_id_to_set_index","swipe_id_to_use_index","should_update_swipe","swipe_info","add_swipes_if_required","message_demacroed","update_chat_message","mes_html","update_partial_html","defaultSettings","enabled_extension","render","handleSettingPageChange","handleVersionUpdate","windowHtml","defaultScriptSettings","global_script_enabled","scope_script_enabled","scriptsRepository","characters_with_scripts","baseTemplate","moveTo","faIcon","defaultScriptTemplate","isGlobalScriptEnabled","isScopedScriptEnabled","Script","buttons","uuidv4","hasName","ScriptType","ScriptRepository","static","globalScripts","characterScripts","instance","TavernHelper_scripts","getScriptById","s","addScript","saveScript","renderScript","$emptyTip","globalScriptArray","scopedScriptArray","scriptData","scriptHtml","cloneTemplate","makeDraggable","enabledScripts","runScript","cancelRunScriptsByType","disabledScripts","cancelRunScript","typeName","iframeElement","_index","element","removeButton","openScriptEditor","$editorHtml","button","buttonId","$buttonContent","visible","items","closest","wide","large","scriptContent","scriptInfo","buttonArray","addButton","newScript","openVariableEditor","$variableList","$addVariableTrigger","existingVariables","TavernHelper_characterScriptVariables","$variableItem","$item","writeExtensionField","deleteScript","existingScriptIndex","saveGlobalScripts","saveCharacterScripts","list","newOrder","updatedScripts","moveScriptToOtherType","sourceArray","sourceIndex","targetType","targetArray","toggleId","isChecked","toggle","DISPLAY","fileData","download","cloneDefaultScriptTemplate","template","TEXT","convertedScript","existingScript","loadDefaultScriptsRepository","defaultScriptList","defaultScripts","handleScriptToggle","onScriptImportFileChange","fileText","getFileText","charactersWithScripts","initButtonContainer","purgeEmbeddedScripts","clearAllScriptsIframe","getCharacterScriptVariables","initScriptRepository","inputElement","HTMLInputElement","files","triggerSlash","command","isError","errorMessage","pipe","triggerSlashWithResult","__WEBPACK_EXTERNAL_MODULE__scripts_slash_commands_SlashCommandParser_js_585e5f4d__","__WEBPACK_EXTERNAL_MODULE__scripts_utils_js_ee651b62__","__WEBPACK_EXTERNAL_MODULE__scripts_group_chats_js_79178f54__","initTavernHelperObject","globalThis","TavernHelper","getCharData","getChatHistoryBrief","getChatHistoryDetail","isCharacterTavernRegexesEnabled","getTavernRegexes","replaceTavernRegexes","Character","charData","characterData","currentChar","findCharacterIndex","matchTypes","exactAvatarMatch","matchType","getChatsFromFiles","isGroupChat","chat_dict","chat_promise","file_name","res","_rej","ch_name","avatar_url","endpoint","requestBody","chatResponse","currentChat","shift","getCardData","getAvatarId","getRegexScripts","regex_scripts","getCharacterBook","getWorldName","avatarId","chats","getPastCharacterChats","isCharacterTavernRegexEnabled","character_allowed_regex","getGlobalRegexes","regex","getCharacterRegexes","toTavernRegex","regex_script_data","scope","script_name","run_on_edit","find_regex","findRegex","replace_string","placement","ai_output","slash_command","SLASH_COMMAND","WORLD_INFO","destination","markdownOnly","promptOnly","min_depth","minDepth","maxDepth","fromTavernRegex","tavern_regex","trimStrings","substituteRegex","enable_state","regexes","emptied_regexes","global_regexes","character_regexes","__WEBPACK_EXTERNAL_MODULE__scripts_i18n_js_b4bbac2e__","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","queue","fn","r","hasAwait","currentDeps","outerResolve","reject","depQueues","promise","rej","deps","dep","then","obj","wrapDeps","getResult","fnQueue","q","definition","o","defineProperty","enumerable","__webpack_exports__"],"sourceRoot":""}