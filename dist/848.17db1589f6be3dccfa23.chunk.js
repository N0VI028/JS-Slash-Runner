export const __webpack_id__=848;export const __webpack_ids__=[848];export const __webpack_modules__={848:n=>{n.exports="async function e(e, n = {}) {\n  const t = n.scope ?? 'disable',\n    a =\n      (n.button,\n      (function (e) {\n        try {\n          return new URL(e);\n        } catch (e) {\n          return;\n        }\n      })(e));\n  a && (e = await fetch(a).then(e => e.text()));\n  const r = (function (e) {\n    try {\n      return JSON.parse(e);\n    } catch (e) {\n      return;\n    }\n  })(e);\n  if (!r)\n    return void console.warn(\n      '[自动导入快速回复] 未能成功导入快速回复, 请确认所给的内容是一个正确的快速回复文件内容, 或是快速回复文件的链接网址',\n    );\n  const c = r.qrList;\n  triggerSlash(\n    `\\n    /parser-flag STRICT_ESCAPING on ||\\n    /qr-set-off \"${r.name}\" ||\\n    /qr-chat-set-off \"${\n      r.name\n    }\" ||\\n    /qr-set-delete ${r.name} ||\\n    /qr-set-create nosend=${r.disableSend} before=${\n      r.placeBeforeInput\n    } inject=${r.injectInput} ${r.name} ||\\n    ${c\n      .map(\n        e =>\n          `/qr-create set=${r.name} label=${e.label} ${e.icon ? `icon=${e.icon}` : ''} showlabel=${\n            e.showLabel\n          } hidden=${e.isHidden} startup=${e.executeOnStartup} user=${e.executeOnUser} bot=${e.executeOnAi} load=${\n            e.executeOnChatChange\n          } new=${e.executeOnNewChat} group=${e.executeOnGroupMemberDraft} title=${e.title} \"${e.message\n            .replaceAll('\"', '\\\\\"')\n            .replaceAll('<user>', '{{user}}')\n            .replaceAll('<char>', '{{char}}')\n            .replaceAll('{{', '\\\\{\\\\{')}\" ||\\n`,\n      )\n      .join('')}\\n    ${c\n      .filter(e => e.contextList.length !== 0)\n      .map(e =>\n        e.contextList\n          .map(n => `/qr-contextadd set=${r.name} label=${e.label} id=${e.id} chain=${n.isChained} \"${n.set}\" ||\\n`)\n          .join(''),\n      )}\\n    ${\n      {\n        disable: '',\n        character: `/qr-chat-set-on visible=${n.button} \"${r.name}\" ||\\n`,\n        global: `/qr-set-on visible=${n.button} \"${r.name}\" ||\\n`,\n      }[t]\n    }\\n    /parser-flag STRICT_ESCAPING off ||\\n`,\n  );\n}\n$(),\n  (async function () {\n    $('#qr--isEnabled').prop('checked', !0)[0].dispatchEvent(new Event('click'));\n    const variables = await getCharacterScriptVariables();\n    if (!variables) return;\n    for (const [key, value] of Object.entries(variables)) {\n      const t = key.match(/^快速回复-(不启用|聊天|全局)-(显示按钮|不显示按钮)-.*$/);\n      if (!t) continue;\n      const a = {\n        scope: { 不启用: 'disable', 聊天: 'character', 全局: 'global' }[t[1]],\n        button: { 显示按钮: !0, 不显示按钮: !1 }[t[2]],\n      };\n      console.info(`[自动导入快速回复] 从 ${key} 中导入快速回复, 选项: ${JSON.stringify(a)}`);\n      e(value, a);\n    }\n  })();\n"}};