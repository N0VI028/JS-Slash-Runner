import*as e from"../../../../../scripts/popup.js";import*as n from"../../../../../scripts/slash-commands/SlashCommand.js";import*as a from"../../../../../scripts/slash-commands/SlashCommandArgument.js";import*as r from"../../../../../script.js";import*as s from"../../../../../scripts/power-user.js";import*as o from"../../../../../scripts/macros.js";import*as i from"../../../../../scripts/extensions.js";import*as l from"../../../../../scripts/RossAscends-mods.js";import*as c from"../../../../../scripts/authors-note.js";import*as d from"../../../../../scripts/openai.js";import*as p from"../../../../../scripts/PromptManager.js";import*as u from"../../../../../scripts/extensions/regex/engine.js";import*as m from"../../../../../scripts/tags.js";import*as _ from"../../../../../scripts/slash-commands.js";import*as g from"../../../../../scripts/world-info.js";import*as f from"../../../../../scripts/slash-commands/SlashCommandParser.js";import*as h from"../../../../../scripts/slash-commands/SlashCommandCommonEnumsProvider.js";import*as v from"../../../../../scripts/utils.js";import*as y from"../../../../../scripts/group-chats.js";import*as b from"../../../../../scripts/slash-commands/SlashCommandEnumValue.js";import*as w from"../../../../../scripts/i18n.js";var E,x,S,C,T={29:(e,n,t)=>{t.a(e,(async(e,a)=>{try{t.d(n,{Gy:()=>h,SP:()=>_,nW:()=>f,oS:()=>g,xI:()=>v,y7:()=>y});var r=t(799),s=t(365),o=t(489),i=t(320),l=t(361),c=t(874),d=t(948),p=t(853),u=t(629),m=e([r,u]);async function _(e){const n=e.type.toLowerCase(),t=e.mode.toLowerCase();if(!["bgm","ambient"].includes(n)||!["repeat","random","single","stop"].includes(t))return console.warn("WARN: Invalid arguments for /audiomode command"),"";if("bgm"===n){o.extension_settings[r.Zi].audio.bgm_mode=t;const e={repeat:"fa-repeat",random:"fa-random",single:"fa-redo-alt",stop:"fa-cancel"};$("#audio_bgm_mode_icon").removeClass("fa-repeat fa-random fa-redo-alt fa-cancel"),$("#audio_bgm_mode_icon").addClass(e[t])}else if("ambient"===n){o.extension_settings[r.Zi].audio.ambient_mode=t;const e={repeat:"fa-repeat",random:"fa-random",single:"fa-redo-alt",stop:"fa-cancel"};$("#audio_ambient_mode_icon").removeClass("fa-repeat fa-random fa-redo-alt fa-cancel"),$("#audio_ambient_mode_icon").addClass(e[t])}return(0,s.saveSettingsDebounced)(),""}async function g(e){const n=e.type.toLowerCase(),t=(e.state||"true").toLowerCase();return n?("bgm"===n?"true"===t?($("#enable_bgm").prop("checked",!0),await(0,u.fX)("bgm")):"false"===t&&($("#enable_bgm").prop("checked",!1),await(0,u.fX)("bgm")):"ambient"===n&&("true"===t?($("#enable_ambient").prop("checked",!0),await(0,u.fX)("ambient")):"false"===t&&($("#enable_ambient").prop("checked",!1),await(0,u.fX)("ambient"))),""):(console.warn("WARN: Missing arguments for /audioenable command"),"")}async function f(e){const n=e.type.toLowerCase(),t=(e.play||"true").toLowerCase();if(!n)return console.warn("WARN: Missing arguments for /audioplaypause command"),"";if("bgm"===n){if("true"===t)await(0,u.Tq)("bgm");else if("false"===t){$("#audio_bgm")[0].pause()}}else if("ambient"===n)if("true"===t)await(0,u.Tq)("ambient");else if("false"===t){$("#audio_ambient")[0].pause()}return""}async function h(e,n){const t=e.type.toLowerCase(),a=(e.play||"true").toLowerCase();if(!t||!n)return console.warn("WARN: Missing arguments for /audioimport command"),"";const i=n.split(",").map((e=>e.trim())).filter((e=>""!==e)).filter(((e,n,t)=>t.indexOf(e)===n));if(0===i.length)return console.warn("WARN: Invalid or empty URLs provided."),"";s.chat_metadata.variables||(s.chat_metadata.variables={});const l="bgm"===t?"bgmurl":"ambienturl",c=s.chat_metadata.variables[l]||[],d=[...new Set([...i,...c])];if(s.chat_metadata.variables[l]=d,(0,o.saveMetadataDebounced)(),"bgm"===t?(0,u.Mc)("bgm"):"ambient"===t&&(0,u.Mc)("ambient"),"true"===a&&i[0]){const e=i[0];"bgm"===t?(o.extension_settings[r.Zi].audio.bgm_selected=e,await(0,u.YS)("bgm",!0)):"ambient"===t&&(o.extension_settings[r.Zi].audio.ambient_selected=e,await(0,u.YS)("ambient",!0))}return""}async function v(e,n){const t=e.type.toLowerCase();if(!n)return console.warn("WARN: Missing URL for /audioselect command"),"";s.chat_metadata.variables||(s.chat_metadata.variables={});let a="bgm"===t?u.NM:u.$S;const i="bgm"===t?"bgmurl":"ambienturl";if(a&&a.includes(n))return"bgm"===t?(o.extension_settings[r.Zi].audio.bgm_selected=n,await(0,u.YS)("bgm",!0)):"ambient"===t&&(o.extension_settings[r.Zi].audio.ambient_selected=n,await(0,u.YS)("ambient",!0)),"";const l=s.chat_metadata.variables[i]||[],c=[...new Set([n,...l])];return s.chat_metadata.variables[i]=c,(0,o.saveMetadataDebounced)(),"bgm"===t?((0,u.Mc)("bgm"),o.extension_settings[r.Zi].audio.bgm_selected=n,await(0,u.YS)("bgm",!0)):"ambient"===t&&((0,u.Mc)("ambient"),o.extension_settings[r.Zi].audio.ambient_selected=n,await(0,u.YS)("ambient",!0)),""}function y(){p.SlashCommandParser.addCommandObject(i.SlashCommand.fromProps({name:"audioselect",callback:v,namedArgumentList:[l.SlashCommandNamedArgument.fromProps({name:"type",description:"选择播放器类型 (bgm 或 ambient)",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("bgm",null,d.enumTypes.enum,c.enumIcons.file),new d.SlashCommandEnumValue("ambient",null,d.enumTypes.enum,c.enumIcons.file)],isRequired:!0})],unnamedArgumentList:[new l.SlashCommandArgument("url",[l.ARGUMENT_TYPE.STRING],!0)],helpString:"\n        <div>\n            选择并播放音频。如果音频链接不存在，则先导入再播放。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioselect type=bgm https://example.com/song.mp3</code></pre>\n                    选择并播放指定的音乐。\n                </li>\n                <li>\n                    <pre><code>/audioselect type=ambient https://example.com/sound.mp3</code></pre>\n                    选择并播放指定的音效。\n                </li>\n            </ul>\n        </div>\n      "})),p.SlashCommandParser.addCommandObject(i.SlashCommand.fromProps({name:"audioimport",callback:h,namedArgumentList:[l.SlashCommandNamedArgument.fromProps({name:"type",description:"选择导入类型 (bgm 或 ambient)",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("bgm",null,d.enumTypes.enum,c.enumIcons.file),new d.SlashCommandEnumValue("ambient",null,d.enumTypes.enum,c.enumIcons.file)],isRequired:!0}),l.SlashCommandNamedArgument.fromProps({name:"play",description:"导入后是否立即播放第一个链接",typeList:[l.ARGUMENT_TYPE.BOOLEAN],defaultValue:"true",isRequired:!1})],unnamedArgumentList:[new l.SlashCommandArgument("url",[l.ARGUMENT_TYPE.STRING],!0)],helpString:"\n        <div>\n            导入音频或音乐链接，并决定是否立即播放，默认为自动播放。可批量导入链接，使用英文逗号分隔。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioimport type=bgm https://example.com/song1.mp3,https://example.com/song2.mp3</code></pre>\n                    导入 BGM 音乐并立即播放第一个链接。\n                </li>\n                <li>\n                    <pre><code>/audioimport type=ambient play=false url=https://example.com/sound1.mp3,https://example.com/sound2.mp3 </code></pre>\n                    导入音效链接 (不自动播放)。\n                </li>\n            </ul>\n        </div>\n      "})),p.SlashCommandParser.addCommandObject(i.SlashCommand.fromProps({name:"audioplay",callback:f,namedArgumentList:[l.SlashCommandNamedArgument.fromProps({name:"type",description:"选择控制的播放器 (bgm 或 ambient)",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("bgm",null,d.enumTypes.enum,c.enumIcons.file),new d.SlashCommandEnumValue("ambient",null,d.enumTypes.enum,c.enumIcons.file)],isRequired:!0}),new l.SlashCommandNamedArgument("play","播放或暂停",[l.ARGUMENT_TYPE.STRING],!0,!1,"true",c.commonEnumProviders.boolean("trueFalse")())],helpString:"\n        <div>\n            控制音乐播放器或音效播放器的播放与暂停。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioplay type=bgm</code></pre>\n                    播放当前音乐。\n                </li>\n                <li>\n                    <pre><code>/audioplay type=ambient play=false</code></pre>\n                    暂停当前音效。\n                </li>\n            </ul>\n        </div>\n      "})),p.SlashCommandParser.addCommandObject(i.SlashCommand.fromProps({name:"audioenable",callback:g,namedArgumentList:[l.SlashCommandNamedArgument.fromProps({name:"type",description:"选择控制的播放器 (bgm 或 ambient)",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("bgm",null,d.enumTypes.enum,c.enumIcons.file),new d.SlashCommandEnumValue("ambient",null,d.enumTypes.enum,c.enumIcons.file)],isRequired:!0}),new l.SlashCommandNamedArgument("state","打开或关闭播放器",[l.ARGUMENT_TYPE.STRING],!1,!1,"true",c.commonEnumProviders.boolean("trueFalse")())],helpString:"\n        <div>\n            控制音乐播放器或音效播放器的开启与关闭。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audioenable type=bgm state=true</code></pre>\n                    打开音乐播放器。\n                </li>\n                <li>\n                    <pre><code>/audioenable type=ambient state=false</code></pre>\n                    关闭音效播放器。\n                </li>\n            </ul>\n        </div>\n    "})),p.SlashCommandParser.addCommandObject(i.SlashCommand.fromProps({name:"audiomode",callback:_,namedArgumentList:[l.SlashCommandNamedArgument.fromProps({name:"type",description:"选择控制的播放器 (bgm 或 ambient)",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("bgm",null,d.enumTypes.enum,c.enumIcons.file),new d.SlashCommandEnumValue("ambient",null,d.enumTypes.enum,c.enumIcons.file)],isRequired:!0}),l.SlashCommandNamedArgument.fromProps({name:"mode",description:"选择播放模式",typeList:[l.ARGUMENT_TYPE.STRING],enumList:[new d.SlashCommandEnumValue("repeat",null,d.enumTypes.enum,c.enumIcons.loop),new d.SlashCommandEnumValue("random",null,d.enumTypes.enum,c.enumIcons.shuffle),new d.SlashCommandEnumValue("single",null,d.enumTypes.enum,c.enumIcons.redo),new d.SlashCommandEnumValue("stop",null,d.enumTypes.enum,c.enumIcons.stop)],isRequired:!0})],helpString:"\n        <div>\n            设置音频播放模式。\n        </div>\n        <div>\n            <strong>Example:</strong>\n            <ul>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=repeat</code></pre>\n                    设置音乐为循环播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=random</code></pre>\n                    设置音效为随机播放模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=bgm mode=single</code></pre>\n                    设置音乐为单曲循环模式。\n                </li>\n                <li>\n                    <pre><code>/audiomode type=ambient mode=stop</code></pre>\n                    设置音效为停止播放模式。\n                </li>\n            </ul>\n        </div>\n    "}))}[r,u]=m.then?(await m)():m,a()}catch(b){a(b)}}))},30:(e,n,t)=>{t.d(n,{R:()=>d});var a=t(121),r=t(892),s=t(706);function o(e){return{uid:e.uid,display_index:e.displayIndex,comment:e.comment,enabled:!e.disable,type:e.constant?"constant":e.vectorized?"vectorized":"selective",position:{0:"before_character_definition",1:"after_character_definition",5:"before_example_messages",6:"after_example_messages",2:"before_author_note",3:"after_author_note"}[e.position]??(0===e.role?"at_depth_as_system":1===e.role?"at_depth_as_user":"at_depth_as_assistant"),depth:4===e.position?e.depth:null,order:e.order,probability:e.probability,key:e.key,logic:{0:"and_any",1:"and_all",2:"not_any",3:"not_all"}[e.selectiveLogic],filter:e.keysecondary,scan_depth:e.scanDepth??"same_as_global",case_sensitive:e.caseSensitive??"same_as_global",match_whole_words:e.matchWholeWords??"same_as_global",use_group_scoring:e.useGroupScoring??"same_as_global",automation_id:e.automationId||null,exclude_recursion:e.excludeRecursion,prevent_recursion:e.preventRecursion,delay_until_recursion:e.delayUntilRecursion,content:e.content,group:e.group,group_prioritized:e.groupOverride,group_weight:e.groupWeight,sticky:e.sticky||null,cooldown:e.cooldown||null,delay:e.delay||null}}function i(e){const n={uid:e=>({uid:e}),display_index:e=>({displayIndex:e}),comment:e=>({comment:e}),enabled:e=>({disable:!e}),type:e=>({constant:"constant"===e,vectorized:"vectorized"===e}),position:e=>({position:{before_character_definition:0,after_character_definition:1,before_example_messages:5,after_example_messages:6,before_author_note:2,after_author_note:3,at_depth_as_system:4,at_depth_as_user:4,at_depth_as_assistant:4}[e],role:{at_depth_as_system:0,at_depth_as_user:1,at_depth_as_assistant:2}[e]??null}),depth:e=>({depth:null===e?4:e}),order:e=>({order:e}),probability:e=>({probability:e}),key:e=>({key:e}),logic:e=>({selectiveLogic:{and_any:0,and_all:1,not_any:2,not_all:3}[e]}),filter:e=>({keysecondary:e}),scan_depth:e=>({scanDepth:"same_as_global"===e?null:e}),case_sensitive:e=>({caseSensitive:"same_as_global"===e?null:e}),match_whole_words:e=>({matchWholeWords:"same_as_global"===e?null:e}),use_group_scoring:e=>({useGroupScoring:"same_as_global"===e?null:e}),automation_id:e=>({automationId:null===e?"":e}),exclude_recursion:e=>({excludeRecursion:e}),prevent_recursion:e=>({preventRecursion:e}),delay_until_recursion:e=>({delayUntilRecursion:e}),content:e=>({content:e}),group:e=>({group:e}),group_prioritized:e=>({groupOverride:e}),group_weight:e=>({groupWeight:e}),sticky:e=>({sticky:null===e?0:e}),cooldown:e=>({cooldown:null===e?0:e}),delay:e=>({delay:null===e?0:e})};return Object.entries(e).filter((([e,n])=>void 0!==n)).reduce(((e,[t,a])=>({...e,...n[t]?.(a)})),{})}function l(e,n,t){Object.entries(t).forEach((([t,a])=>{n[t]=a;const r=s.originalWIDataKeyMap[t];r&&(0,s.setWIOriginalDataValue)(e,n.uid,r,a)}))}const c=(0,r.debounce)((function(e){const n=Number($("#world_editor_select").val()),t=s.world_names.indexOf(e);-1!==t&&n===t&&$("#world_editor_select").val(t).trigger("change")}));function d(){(0,a.cB)("[LorebookEntry][getLorebookEntries]",(async e=>{const n=e.data.lorebook,t=e.data.option;if(!s.world_names.includes(n))throw Error(`未能找到世界书 '${n}'`);let r=Object.values((await(0,s.loadWorldInfo)(n)).entries).map(o);return"none"!==t.filter&&(r=r.filter((e=>Object.entries(t.filter).every((([n,t])=>{const a=e[n];return Array.isArray(a)?t.every((e=>a.includes(e))):"string"==typeof a?a.includes(t):a===t}))))),console.info(`${(0,a.Jn)(e)}获取世界书 '${n}' 中的条目, 选项: ${JSON.stringify(t)}`),r})),(0,a.cB)("[LorebookEntry][setLorebookEntries]",(async e=>{const n=e.data.lorebook,t=e.data.entries;if(!s.world_names.includes(n))throw Error(`未能找到世界书 '${n}'`);const r=await(0,s.loadWorldInfo)(n);await Promise.all(t.map((async e=>{const t=r.entries[e.uid];if(!t)throw Error(`未能在世界书 '${n}' 中找到 uid=${e.uid} 的条目`);l(r,t,i(e))}))),await(0,s.saveWorldInfo)(n,r),c(n),console.info(`${(0,a.Jn)(e)}修改世界书 '${n}' 中以下条目的以下字段:\n${JSON.stringify(t,void 0,2)}`)})),(0,a.cB)("[LorebookEntry][createLorebookEntry]",(async e=>{const n=e.data.lorebook,t=e.data.field_values;if(!s.world_names.includes(n))throw Error(`未能找到世界书 '${n}'`);const r=await(0,s.loadWorldInfo)(n),o=(0,s.createWorldInfoEntry)(n,r),d=i(t);return d.uid&&delete d.uid,l(r,o,d),await(0,s.saveWorldInfo)(n,r),c(n),console.info(`${(0,a.Jn)(e)}在世界书 '${n}' 中新建 uid='${o.uid}' 条目, 并设置内容:\n${JSON.stringify(t,void 0,2)}`),o.uid})),(0,a.cB)("[LorebookEntry][deleteLorebookEntry]",(async e=>{const n=e.data.lorebook,t=e.data.lorebook_uid,r=await(0,s.loadWorldInfo)(n);let o=!1;return r.entries[t]&&(delete r.entries[t],o=!0),o&&((0,s.deleteWIOriginalDataValue)(r,t),await(0,s.saveWorldInfo)(n,r),c(n)),console.info(`${(0,a.Jn)(e)}删除世界书 '${n}' 中的 uid='${t}' 条目${o?"成功":"失败"}`),o}))}},44:(e,n,t)=>{t.a(e,(async(e,a)=>{try{t.d(n,{u:()=>i});var r=t(121),s=t(29),o=e([s]);function i(){(0,r.cB)("[Audio][audioMode]",(async e=>{const n=e.data.type,t=e.data.mode;await(0,s.SP)({type:n,mode:t}),console.info(`${(0,r.Jn)(e)} 切换音频模式: ${n}-${t}`)})),(0,r.cB)("[Audio][audioEnable]",(async e=>{const n=e.data.type,t=e.data.state;await(0,s.oS)({type:n,state:t}),console.info(`${(0,r.Jn)(e)} 切换音频状态: ${n}-${t}`)})),(0,r.cB)("[Audio][audioPlay]",(async e=>{const n=e.data.type,t=e.data.play;await(0,s.nW)({type:n,play:t}),console.info(`${(0,r.Jn)(e)} 切换音频播放状态: ${n}-${t}`)})),(0,r.cB)("[Audio][audioImport]",(async e=>{const n=e.data.type,t=e.data.url,a=e.data.play;await(0,s.Gy)({type:n,play:a},t),console.info(`${(0,r.Jn)(e)} 导入音频: ${n}-${t}-${a}`)})),(0,r.cB)("[Audio][audioSelect]",(async e=>{const n=e.data.type,t=e.data.url;await(0,s.xI)({type:n},t),console.info(`${(0,r.Jn)(e)} 选择音频: ${n}-${t}`)}))}s=(o.then?(await o)():o)[0],a()}catch(l){a(l)}}))},117:(e,n,t)=>{t.d(n,{Sh:()=>r,n_:()=>s,zr:()=>o});var a=t(142);let r="";function s(){const e=(0,a.P)("库-");console.info(`[Library] 加载库: ${JSON.stringify(e.map((e=>e.name)))}`),r=e.map((e=>e.code)).join("\n")}function o(){r=""}},121:(e,n,t)=>{function a(e){const n=e.source;return n.frameElement?.id}function r(e){return`${e.data.request}(${a(e)}) `}t.d(n,{Ed:()=>a,Jn:()=>r,XK:()=>s,cB:()=>o});const s={};function o(e,n){s[e]=n}},142:(e,n,t)=>{t.d(n,{P:()=>r});var a=t(518);function r(e){const n=n=>n.scriptName.replace(/^【.*】/,"").startsWith(e),t=e=>!e.disabled,r=n=>n.scriptName.replace(/^【.*】/,"").replace(e,"");let s=[];const o=(0,a.TE)().filter(n).filter(t);s.push(...o);const i=(0,a.XT)().filter(n).filter(t).filter((e=>!!(0,a.il)()||e.runOnEdit));s.push(...i);return s.map((e=>({name:r(e),code:e.replaceString})))}},159:(e,n,t)=>{t.d(n,{h:()=>l});var a=t(365),r=t(320),s=t(361),o=t(853);async function i(e){const n=e.event,t=e.data??[];return a.eventSource.emit(n,...t),console.info(`[Event][/event-emit] 发送 '${n}' 事件, 携带数据: ${JSON.stringify(t)}`),n}function l(){o.SlashCommandParser.addCommandObject(r.SlashCommand.fromProps({name:"event-emit",callback:i,returns:"发送的事件名称",namedArgumentList:[s.SlashCommandNamedArgument.fromProps({name:"event",description:"事件名称",typeList:[s.ARGUMENT_TYPE.STRING],isRequired:!0}),s.SlashCommandNamedArgument.fromProps({name:"data",description:"要传输的数据",typeList:[s.ARGUMENT_TYPE.STRING],isRequired:!1,acceptsMultiple:!0})],unnamedArgumentList:[],helpString:'\n    <div>\n        发送 `event` 事件, 同时可以发送一些数据.\n        所有正在监听该消息频道的 listener 函数都会自动运行, 并能用函数参数接收发送来的数据.\n        由于酒馆 STScript 输入方式的局限性, 所有数据将会以字符串 string 类型接收; 如果需要 number 等类型, 请自行转换.\n    </div>\n    <div>\n        <strong>Example:</strong>\n        <ul>\n            <li>\n                <pre><code class="language-stscript">/event-emit event="读档"</code></pre>\n            </li>\n            <li>\n                <pre><code class="language-stscript">/event-emit event="存档" data={{getvar::数据}} data=8 data=你好 {{user}}</code></pre>\n            </li>\n            <li>\n                <pre><code class="language-stscript">/event-emit event="随便什么名称" data="这是一个 数据" data={{user}}</code></pre>\n            </li>\n        </ul>\n    </div>\n  '}))}},189:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(121),r=t(365),s=t(476);function o(){(0,a.cB)("[DisplayedMessage][formatAsDisplayedMessage]",(async e=>{const n=e.data.text,t=e.data.option;if("number"!=typeof t.message_id&&!["last","last_user","last_char"].includes(t.message_id))throw Error(`提供的 message_id 无效, 请提供 'last', 'last_user', 'last_char' 或楼层消息号, 你提供的是: ${t.message_id}`);const o=(0,s.getLastMessageId)();if(null===o)throw Error(`未找到任何消息楼层, 你提供的是: ${t.message_id}`);switch(t.message_id){case"last":t.message_id=o;break;case"last_user":const e=(0,s.getLastMessageId)({filter:e=>e.is_user&&!e.is_system});if(null===e)throw Error(`未找到任何 user 消息楼层, 你提供的是: ${t.message_id}`);t.message_id=e;break;case"last_char":const n=(0,s.getLastMessageId)({filter:e=>!e.is_user&&!e.is_system});if(null===n)throw Error(`未找到任何 char 消息楼层, 你提供的是: ${t.message_id}`);t.message_id=n}if(t.message_id<0||t.message_id>o)throw Error(`提供的 message_id 不在 [0, ${o}] 内, 你提供的是: ${t.message_id} `);const i=r.chat[t.message_id],l=(0,r.messageFormatting)(n,i.name,i.is_system,i.is_user,t.message_id);return console.info(`${(0,a.Jn)(e)}将字符串处理为酒馆用于显示的 html 格式, 字符串: '${n}', 选项: '${JSON.stringify(t)}', 结果: '${l}'`),l}))}},224:(e,n,t)=>{t.d(n,{A:()=>a});const a='<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer"/> <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/themes/base/jquery-ui.min.css" integrity="sha512-TFee0335YRJoyiqz8hA8KV3P0tXa5CpRBSoM0Wnkn7JoJx1kaq1yXL/rb8YFpWXkMOjRcv5txv+C6UluttluCQ==" crossorigin="anonymous" referrerpolicy="no-referrer"/> <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js" integrity="sha512-Qlv6VSKh1gDKGoJbnyA5RMXYcvnpIqhO++MhIM2fStMcGT9i2T//tSwYFlcyoRRDcDZ+TYHpH8azBBCyhpSeqw==" crossorigin="anonymous" referrerpolicy="no-referrer"><\/script> <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"><\/script> <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js" integrity="sha512-MSOo1aY+3pXCOCdGAYoBZ6YGI0aragoQsg1mKKBHXCYPIWxamwOE7Drh+N5CPgGI5SA9IEKJiPjdfqWFWmZtRA==" crossorigin="anonymous" referrerpolicy="no-referrer"><\/script> <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js" integrity="sha512-WFN04846sdKMIP5LKNphMaWzU7YpMyCU245etK3g/2ARYbPK9Ub18eG+ljU96qKRCWh+quCY7yefSmlkQw1ANQ==" crossorigin="anonymous" referrerpolicy="no-referrer"><\/script> <script src="https://cdnjs.cloudflare.com/ajax/libs/yamljs/0.3.0/yaml.min.js" integrity="sha512-f/K0Q5lZ1SrdNdjc2BO2I5kTx8E5Uw1EU3PhSUB9fYPohap5rPWEmQRCjtpDxNmQB4/+MMI/Cf+nvh1VSiwrTA==" crossorigin="anonymous" referrerpolicy="no-referrer"><\/script> '},249:(n,t,a)=>{n.exports=(e=>{var n={};return a.d(n,e),n})({POPUP_TYPE:()=>e.POPUP_TYPE,callGenericPopup:()=>e.callGenericPopup})},287:(e,n,t)=>{t.d(n,{c:()=>o});var a=t(121),r=t(365),s=t(983);function o(){(0,a.cB)("[FrontendVersion][updateFrontendVersion]",(async e=>{const n=await fetch("/api/extensions/update",{method:"POST",headers:(0,r.getRequestHeaders)(),body:JSON.stringify({extensionName:"JS-Slash-Runner"})});if(!n.ok){const t=await n.text();return toastr.error(t||n.statusText,s.t`更新前端助手失败`,{timeOut:5e3}),console.error(`${(0,a.Jn)(e)}更新前端助手失败: ${t}`),!1}const t=await n.json();return t.isUpToDate?console.info(`${(0,a.Jn)(e)}前端助手已是最新版本, 无需更新`):(toastr.success(s.t`成功更新前端助手为 ${t.shortCommitHash}`,s.t`请刷新页面`),console.info(`${(0,a.Jn)(e)}成功更新前端助手为  ${t.shortCommitHash}, 请刷新页面`)),!0}))}},320:(e,t,a)=>{e.exports=(e=>{var n={};return a.d(n,e),n})({SlashCommand:()=>n.SlashCommand})},335:(e,n,t)=>{t.a(e,(async(e,a)=>{try{t.d(n,{PN:()=>_,eX:()=>d,lh:()=>g,tf:()=>p});var r=t(587),s=t(365),o=t(489),i=t(476),l=e([r]);r=(l.then?(await l)():l)[0];const c=new Map([["userAvatarPath",r.mv],["charAvatarPath",r.$Z]]);function d(){for(const[e,n]of c.entries())i.MacrosParser.registerMacro(e,n),console.log(`[Macro] 宏 "${e}" 注册成功`)}function p(){for(const e of c.keys())i.MacrosParser.unregisterMacro(e),console.log(`[Macro] 宏 "${e}" 注销成功`)}function u(e,n,t){let a=e;for(const e of n.split(".")){if(void 0===a)return t;a=a[e]}return a??t}function m(e){const n={get_global_variable:o.extension_settings.variables.global,get_chat_variable:s.chat_metadata.variables,get_message_variable:s.chat.filter((e=>void 0!==e.variables?.[e.swipe_id??0])).map((e=>e.variables[e.swipe_id??0])).at(-1)??{}};e.chat.forEach((e=>{e.content=e.content.replaceAll(/\{\{(get_global_variable|get_chat_variable|get_message_variable)::(.*?)\}\}/g,((e,t,a)=>JSON.stringify(u(n[t],a,null))))}))}function _(){s.eventSource.on(s.event_types.CHAT_COMPLETION_PROMPT_READY,m)}function g(){s.eventSource.removeListener(s.event_types.CHAT_COMPLETION_PROMPT_READY,m)}a()}catch(f){a(f)}}))},361:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({ARGUMENT_TYPE:()=>a.ARGUMENT_TYPE,SlashCommandArgument:()=>a.SlashCommandArgument,SlashCommandNamedArgument:()=>a.SlashCommandNamedArgument})},365:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({MAX_INJECTION_DEPTH:()=>r.MAX_INJECTION_DEPTH,activateSendButtons:()=>r.activateSendButtons,baseChatReplace:()=>r.baseChatReplace,characters:()=>r.characters,chat:()=>r.chat,chat_metadata:()=>r.chat_metadata,cleanUpMessage:()=>r.cleanUpMessage,countOccurrences:()=>r.countOccurrences,deactivateSendButtons:()=>r.deactivateSendButtons,eventSource:()=>r.eventSource,event_types:()=>r.event_types,extension_prompt_roles:()=>r.extension_prompt_roles,extension_prompt_types:()=>r.extension_prompt_types,getBiasStrings:()=>r.getBiasStrings,getCharacterCardFields:()=>r.getCharacterCardFields,getExtensionPromptRoleByName:()=>r.getExtensionPromptRoleByName,getMaxContextSize:()=>r.getMaxContextSize,getOneCharacter:()=>r.getOneCharacter,getPastCharacterChats:()=>r.getPastCharacterChats,getRequestHeaders:()=>r.getRequestHeaders,getThumbnailUrl:()=>r.getThumbnailUrl,isOdd:()=>r.isOdd,messageFormatting:()=>r.messageFormatting,name1:()=>r.name1,name2:()=>r.name2,reloadCurrentChat:()=>r.reloadCurrentChat,saveCharacterDebounced:()=>r.saveCharacterDebounced,saveChatConditional:()=>r.saveChatConditional,saveSettings:()=>r.saveSettings,saveSettingsDebounced:()=>r.saveSettingsDebounced,setExtensionPrompt:()=>r.setExtensionPrompt,setGenerationProgress:()=>r.setGenerationProgress,showSwipeButtons:()=>r.showSwipeButtons,stopGeneration:()=>r.stopGeneration,substituteParams:()=>r.substituteParams,substituteParamsExtended:()=>r.substituteParamsExtended,system_message_types:()=>r.system_message_types,this_chid:()=>r.this_chid,updateMessageBlock:()=>r.updateMessageBlock,user_avatar:()=>r.user_avatar})},406:(e,n,t)=>{t.a(e,(async(e,a)=>{try{t.d(n,{V:()=>y});var r=t(44),s=t(869),o=t(678),i=t(189),l=t(287),c=t(617),d=t(648),p=t(30),u=t(686),m=t(518),_=t(516),g=t(599),f=t(121),h=t(983),v=e([r,s,o]);async function y(e){if(!e.data)return;const n=f.XK[e.data.request];if(!n)return;let t;try{t=await n(e)}catch(n){const t=n;toastr.error(h.t`${(0,f.Jn)(e)}${t.name+": "+t.message}${t.stack?t.stack:""}`),console.error((0,f.Jn)(e),t)}finally{e.source.postMessage({request:e.data.request+"_callback",uid:e.data.uid,result:t},{targetOrigin:"*"})}}[r,s,o]=v.then?(await v)():v,(0,o.D)(),(0,i.A)(),(0,l.c)(),(0,c.d)(),(0,p.R)(),(0,d.Z)(),(0,u.d)(),(0,m.Pi)(),(0,_.Y)(),(0,g.Ah)(),(0,s.D)(),(0,r.u)(),a()}catch(b){a(b)}}))},434:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({flushEphemeralStoppingStrings:()=>s.flushEphemeralStoppingStrings,persona_description_positions:()=>s.persona_description_positions,power_user:()=>s.power_user})},456:(e,n,t)=>{t.d(n,{J:()=>a});const a=['"use strict";\n// @ts-expect-error\nvar detail;\n(function (detail) {\n    ;\n    async function make_iframe_promise(message) {\n        return new Promise((resolve, _) => {\n            const uid = Date.now() + Math.random();\n            function handleMessage(event) {\n                if (event.data?.request === (message.request + "_callback") && event.data.uid == uid) {\n                    window.removeEventListener("message", handleMessage);\n                    resolve(event.data.result);\n                }\n            }\n            window.addEventListener("message", handleMessage);\n            window.parent.postMessage({\n                uid: uid,\n                ...message,\n            }, "*");\n        });\n    }\n    detail.make_iframe_promise = make_iframe_promise;\n    function format_function_to_string(fn) {\n        const string = fn.toString();\n        const index = string.indexOf(\'\\n\');\n        if (index > -1) {\n            return string.slice(0, index);\n        }\n        else {\n            return string;\n        }\n    }\n    detail.format_function_to_string = format_function_to_string;\n    function get_or_set(map, key, defaulter) {\n        const existing_value = map.get(key);\n        if (existing_value) {\n            return existing_value;\n        }\n        const default_value = defaulter();\n        map.set(key, default_value);\n        return default_value;\n    }\n    detail.get_or_set = get_or_set;\n    function extract(map, key) {\n        const value = map.get(key);\n        if (!value) {\n            return undefined;\n        }\n        map.delete(key);\n        return value;\n    }\n    detail.extract = extract;\n})(detail || (detail = {}));\n','"use strict";\n// 命名为 _multimap.ts, 保证它被插入在开头, 虽然最好换一种 iframe 内代码的做法\nclass Multimap {\n    size_ = 0;\n    map = new Map();\n    operator;\n    constructor(operator, iterable) {\n        this.operator = operator;\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.put(key, value);\n            }\n        }\n        return this;\n    }\n    get size() {\n        return this.size_;\n    }\n    get(key) {\n        const values = this.map.get(key);\n        if (values) {\n            return this.operator.clone(values);\n        }\n        else {\n            return this.operator.create();\n        }\n    }\n    put(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = this.operator.create();\n        }\n        if (!this.operator.add(value, values)) {\n            return false;\n        }\n        this.map.set(key, values);\n        this.size_++;\n        return true;\n    }\n    putAll(arg1, arg2) {\n        let pushed = 0;\n        if (arg2) {\n            const key = arg1;\n            const values = arg2;\n            for (const value of values) {\n                this.put(key, value);\n                pushed++;\n            }\n        }\n        else if (arg1 instanceof Multimap) {\n            for (const [key, value] of arg1.entries()) {\n                this.put(key, value);\n                pushed++;\n            }\n        }\n        else {\n            throw new TypeError("unexpected arguments");\n        }\n        return pushed > 0;\n    }\n    has(key) {\n        return this.map.has(key);\n    }\n    hasEntry(key, value) {\n        return this.operator.has(value, this.get(key));\n    }\n    delete(key) {\n        this.size_ -= this.operator.size(this.get(key));\n        return this.map.delete(key);\n    }\n    deleteEntry(key, value) {\n        const current = this.get(key);\n        if (!this.operator.delete(value, current)) {\n            return false;\n        }\n        this.map.set(key, current);\n        this.size_--;\n        return true;\n    }\n    clear() {\n        this.map.clear();\n        this.size_ = 0;\n    }\n    keys() {\n        return this.map.keys();\n    }\n    entries() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        function* gen() {\n            for (const [key, values] of self.map.entries()) {\n                for (const value of values) {\n                    yield [key, value];\n                }\n            }\n        }\n        return gen();\n    }\n    values() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        function* gen() {\n            for (const [, value] of self.entries()) {\n                yield value;\n            }\n        }\n        return gen();\n    }\n    forEach(callback, thisArg) {\n        for (const [key, value] of this.entries()) {\n            callback.call(thisArg === undefined ? this : thisArg, value, key, this);\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    asMap() {\n        const ret = new Map();\n        for (const key of this.keys()) {\n            ret.set(key, this.operator.clone(this.get(key)));\n        }\n        return ret;\n    }\n}\nclass ArrayMultimap extends Multimap {\n    constructor(iterable) {\n        super(new ArrayOperator(), iterable);\n    }\n    get [Symbol.toStringTag]() {\n        return "ArrayMultimap";\n    }\n}\nclass ArrayOperator {\n    create() {\n        return [];\n    }\n    clone(collection) {\n        return collection.slice();\n    }\n    add(value, collection) {\n        collection.push(value);\n        return true;\n    }\n    size(collection) {\n        return collection.length;\n    }\n    delete(value, collection) {\n        const index = collection.indexOf(value);\n        if (index > -1) {\n            collection.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n    has(value, collection) {\n        return collection.includes(value);\n    }\n}\nclass SetMultimap extends Multimap {\n    constructor(iterable) {\n        super(new SetOperator(), iterable);\n    }\n    get [Symbol.toStringTag]() {\n        return "SetMultimap";\n    }\n}\nclass SetOperator {\n    create() {\n        return new Set();\n    }\n    clone(collection) {\n        return new Set(collection);\n    }\n    add(value, collection) {\n        const prev = collection.size;\n        collection.add(value);\n        return prev !== collection.size;\n    }\n    size(collection) {\n        return collection.size;\n    }\n    delete(value, collection) {\n        return collection.delete(value);\n    }\n    has(value, collection) {\n        return collection.has(value);\n    }\n}\n',"\"use strict\";\nasync function audioMode(params) {\n    return detail.make_iframe_promise({\n        request: '[Audio][audioMode]',\n        type: params.type,\n        mode: params.mode,\n    });\n}\nasync function audioEnable(params) {\n    return detail.make_iframe_promise({\n        request: '[Audio][audioEnable]',\n        type: params.type,\n        state: params.state,\n    });\n}\nasync function audioPlay(params) {\n    return detail.make_iframe_promise({\n        request: '[Audio][audioPlay]',\n        type: params.type,\n        play: params.play,\n    });\n}\nasync function audioImport(params, url) {\n    return detail.make_iframe_promise({\n        request: '[Audio][audioImport]',\n        type: params.type,\n        url: url,\n        play: params.play,\n    });\n}\nasync function audioSelect(params, url) {\n    return detail.make_iframe_promise({\n        request: '[Audio][audioSelect]',\n        type: params.type,\n        url: url,\n    });\n}\n","\"use strict\";\nasync function getCharData(name, allowAvatar = false) {\n    return detail.make_iframe_promise({\n        request: '[Character][getCharData]',\n        name: name,\n        allowAvatar: allowAvatar,\n    });\n}\nasync function getCharAvatarPath(name, allowAvatar = false) {\n    return detail.make_iframe_promise({\n        request: '[Character][getCharAvatarPath]',\n        name: name,\n        allowAvatar: allowAvatar,\n    });\n}\nasync function getChatHistoryBrief(name, allowAvatar = false) {\n    return detail.make_iframe_promise({\n        request: '[Character][getChatHistoryBrief]',\n        name: name,\n        allowAvatar: allowAvatar,\n    });\n}\nasync function getChatHistoryDetail(data, isGroupChat = false) {\n    return detail.make_iframe_promise({\n        request: '[Character][getChatHistoryDetail]',\n        data: data,\n        isGroupChat: isGroupChat,\n    });\n}\n","\"use strict\";\n/**\n * 获取聊天消息\n *\n * @param range 要获取的消息楼层号或楼层范围, 与 `/messages` 相同\n * @param option 可选选项\n *   - `role:'all'|'system'|'assistant'|'user'`: 按 role 筛选消息; 默认为 `'all'`\n *   - `hide_state:'all'|'hidden'|'unhidden'`: 按是否被隐藏筛选消息; 默认为 `'all'`\n *\n * @returns 一个数组, 数组的元素是每楼的消息 `ChatMessage`. 该数组依据按 message_id 从低到高排序.\n *\n * @example\n * // 获取第 10 楼的所有消息页\n * const messages = await getChatMessages(10);\n * const messages = await getChatMessages(\"10\");\n * // 获取所有楼层的所有消息页\n * const messages = await getChatMessages(\"0-{{lastMessageId}}\");\n */\nasync function getChatMessages(range, option = {}) {\n    /** @todo @deprecated 在未来移除它 */\n    if (Object.hasOwn(option, 'hidden')) {\n        console.warn(\"`hidden` 已经被弃用, 请使用 `hide_state`\");\n        if (Object.hasOwn(option, 'include_swipe')) {\n            console.warn(\"不要同时使用 hide_state 和 hidden, 请只使用 hide_state\");\n        }\n        else {\n            option.hide_state = option.hidden ? 'all' : 'unhidden';\n        }\n    }\n    option = {\n        role: option.role ?? 'all',\n        hide_state: option.hide_state ?? 'all',\n    };\n    return detail.make_iframe_promise({\n        request: \"[ChatMessage][getChatMessages]\",\n        range: range.toString(),\n        option: option,\n    });\n}\n;\nasync function setChatMessage(field_values, message_id, option = {}) {\n    const required_option = {\n        swipe_id: option.swipe_id ?? 'current',\n        refresh: option.refresh ?? 'display_and_render_current',\n    };\n    return detail.make_iframe_promise({\n        request: \"[ChatMessage][setChatMessage]\",\n        field_values: typeof field_values === 'string' ? { message: field_values } : field_values,\n        message_id: message_id,\n        option: required_option,\n    });\n}\n",'"use strict";\n;\n/**\n * 将字符串处理为酒馆用于显示的 html 格式. 将会,\n * 1. 替换字符串中的酒馆宏\n * 2. 对字符串应用对应的酒馆正则\n * 3. 将字符串调整为 html 格式\n *\n * @param text 要处理的字符串\n * @param option 可选选项\n *   - `message_id?:number`: 消息所在的楼层, 要求该楼层已经存在, 即在 `[0, await getLastMessageId()]` 范围内; 默认为最新楼层\n *\n * @returns 处理结果\n *\n * @example\n * const text = await formatAsDisplayedMessage("{{char}} speaks in {{lastMessageId}}");\n * text == "<p>少女歌剧 speaks in 5</p>";\n */\nasync function formatAsDisplayedMessage(text, option = {}) {\n    option = {\n        message_id: option.message_id ?? \'last\',\n    };\n    return detail.make_iframe_promise({\n        request: \'[DisplayedMessage][formatAsDisplayedMessage]\',\n        text: text,\n        option: option,\n    });\n}\n/**\n * 获取消息楼层号对应的消息内容 JQuery\n *\n * 相比于一个实用函数, 这更像是一个告诉你可以这样用 JQuery 的示例\n *\n * @param message_id 要获取的消息楼层号, 必须要酒馆页面显示了该消息楼层才能获取到\n * @returns 如果能获取到该消息楼层的 html, 则返回对应的 JQuery; 否则返回空 JQuery\n *\n * @example\n * // 获取第 0 楼的消息内容文本\n * const text = retrieveDisplayedMessage(0).text();\n *\n * @example\n * // 修改第 0 楼的消息内容文本\n * // - 这样的修改只会影响本次显示, 不会保存到消息文件中, 因此重新加载消息或刷新网页等操作后就会回到原样;\n * // - 如果需要实际修改消息文件, 请使用 `setChatMessage`\n * retrieveDisplayedMessage(0).text("new text");\n * retrieveDisplayedMessage(0).append("<pre>new text</pre>");\n * retrieveDisplayedMessage(0).append(formatAsDisplayedMessage("{{char}} speaks in {{lastMessageId}}"));\n */\nfunction retrieveDisplayedMessage(message_id) {\n    return $(`div.mes[mesid = "${message_id}"]`, window.parent.document).find(`div.mes_text`);\n}\n',"\"use strict\";\n/**\n * 让 `listener` 监听 `event_type`, 当事件发生时自动运行 `listener`.\n *\n * - 如果 `listener` 已经在监听 `event_type`, 则调用本函数不会有任何效果.\n *\n * @param event_type 要监听的事件\n * @param listener 要注册的函数\n *\n * @example\n * function hello() { alert(\"hello\"); }\n * eventOn(要监听的事件, hello);\n *\n * @example\n * // 消息被修改时监听是哪一条消息被修改\n * // 能这么做是因为酒馆 MESSAGE_UPDATED 会发送消息 id 回来, 但是这个发送太自由了, 我还没整理出每种消息会发送什么\n * function detectMessageUpdated(message_id) {\n *   alert(`你刚刚修改了第 ${message_id} 条聊天消息对吧😡`);\n * }\n * eventOn(tavern_events.MESSAGE_UPDATED, detectMessageUpdated);\n */\nfunction eventOn(event_type, listener) {\n    if (detail.try_get_wrapper(listener, event_type)) {\n        console.warn(`[Event][eventOn](${getIframeName()}) 函数已经在监听 '${event_type}' 事件, 调用无效\\n\\n  ${detail.format_function_to_string(listener)}`);\n        return;\n    }\n    sillyTavern().eventSource.on(event_type, detail.get_or_make_wrapper(listener, event_type, false));\n    console.info(`[Event][eventOn](${getIframeName()}) 函数开始监听 '${event_type}' 事件并将随事件触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n}\n/**\n * 让 `listener` 监听 `event_type`, 当事件发生时自动在最后运行 `listener`.\n *\n * - 如果 `listener` 已经在监听 `event_type`, 则调用本函数会将 `listener` 调整为最后运行.\n *\n * @param event_type 要监听的事件\n * @param listener 要注册/调整到最后运行的函数\n *\n * @example\n * eventMakeLast(要监听的事件, 要注册的函数);\n */\nfunction eventMakeLast(event_type, listener) {\n    const is_listening = detail.try_get_wrapper(listener, event_type) !== undefined;\n    sillyTavern().eventSource.makeLast(event_type, detail.get_or_make_wrapper(listener, event_type, false));\n    if (is_listening) {\n        console.info(`[Event][eventMakeLast](${getIframeName()}) 函数调整为监听到 '${event_type}' 事件时最后触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n    }\n    else {\n        console.info(`[Event][eventMakeLast](${getIframeName()}) 函数开始监听 '${event_type}' 事件并将随事件最后触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n    }\n}\n/**\n * 让 `listener` 监听 `event_type`, 当事件发生时自动在最先运行 `listener`.\n *\n * - 如果 `listener` 已经在监听 `event_type`, 则调用本函数会将 `listener` 调整为最先运行.\n *\n * @param event_type 要监听的事件\n * @param listener 要注册/调整为最先运行的函数\n *\n * @example\n * eventMakeFirst(要监听的事件, 要注册的函数);\n */\nfunction eventMakeFirst(event_type, listener) {\n    const is_listening = detail.try_get_wrapper(listener, event_type) !== undefined;\n    sillyTavern().eventSource.makeFirst(event_type, detail.get_or_make_wrapper(listener, event_type, false));\n    if (is_listening) {\n        console.info(`[Event][eventMakeFirst](${getIframeName()}) 函数调整为监听到 '${event_type}' 事件时最先触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n    }\n    else {\n        console.info(`[Event][eventMakeFirst](${getIframeName()}) 函数开始监听 '${event_type}' 事件并将随事件最先触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n    }\n}\n/**\n * 让 `listener` 仅监听下一次 `event_type`, 当该次事件发生时运行 `listener`, 此后取消监听.\n *\n * - 如果 `listener` 已经在监听 `event_type`, 则调用本函数不会有任何效果.\n *\n * @param event_type 要监听的事件\n * @param listener 要注册的函数\n *\n * @example\n * eventOnce(要监听的事件, 要注册的函数);\n */\nfunction eventOnce(event_type, listener) {\n    if (detail.try_get_wrapper(listener, event_type)) {\n        console.warn(`[Event][eventOnce](${getIframeName()}) 函数已经在监听 '${event_type}' 事件, 调用无效\\n\\n  ${detail.format_function_to_string(listener)}`);\n        return;\n    }\n    sillyTavern().eventSource.once(event_type, detail.get_or_make_wrapper(listener, event_type, true));\n    console.info(`[Event][eventOnce](${getIframeName()}) 函数开始监听下一次 '${event_type}' 事件并仅在该次事件时触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n}\nasync function eventWaitOnce(event_type, listener) {\n    if (!listener) {\n        const do_nothing = () => { };\n        eventOnce(event_type, do_nothing);\n        return await eventWaitOnce(event_type, do_nothing);\n    }\n    const entry = `${event_type}#${listener.toString()}`;\n    return new Promise((resolve, _) => {\n        const uid = Date.now() + Math.random();\n        function handleMessage(event) {\n            if (event.data?.request === \"iframe_event_wait_callback\" && event.data.uid == uid) {\n                window.removeEventListener(\"message\", handleMessage);\n                resolve(event.data.result);\n                detail.waiting_event_map.deleteEntry(entry, uid);\n                console.info(`[Event][eventWaitOnce](${getIframeName()}) 等待到函数因 '${event_type}' 事件触发后的执行结果: ${JSON.stringify(event.data.result)}\\n\\n  ${detail.format_function_to_string(listener)}`);\n            }\n        }\n        window.addEventListener(\"message\", handleMessage);\n        detail.waiting_event_map.put(entry, uid);\n        console.info(`[Event][eventWaitOnce](${getIframeName()}) 等待函数被 '${event_type}' 事件触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n    });\n}\n/**\n * 发送 `event_type` 事件, 同时可以发送一些数据 `data`.\n *\n * 所有正在监听 `event_type` 消息频道的都会收到该消息并接收到 `data`.\n *\n * @param event_type 要发送的事件\n * @param data 要随着事件发送的数据\n *\n * @example\n * // 发送 \"角色阶段更新完成\" 事件, 所有监听该事件的 `listener` 都会被运行\n * eventEmit(\"角色阶段更新完成\");\n *\n * @example\n * // 发送 \"存档\" 事件, 并等待所有 `listener` (也许是负责存档的函数) 执行完毕后才继续\n * await eventEmit(\"存档\");\n *\n * @example\n * // 发送时携带数据 [\"你好\", 0]\n * eventEmit(\"事件\", \"你好\", 0);\n */\nasync function eventEmit(event_type, ...data) {\n    await sillyTavern().eventSource.emit(event_type, ...data);\n    console.info(`[Event][eventEmit](${getIframeName()}) 发送 '${event_type}' 事件, 携带数据: ${JSON.stringify(data)}`);\n}\n/**\n * 让 `listener` 取消对 `event_type` 的监听.\n *\n * - 如果 `listener` 没有监听 `event_type`, 则调用本函数不会有任何效果.\n *\n * @param event_type 要监听的事件\n * @param listener 要取消注册的函数\n *\n * @example\n * eventRemoveListener(要监听的事件, 要取消注册的函数);\n */\nfunction eventRemoveListener(event_type, listener) {\n    const wrapper = detail.try_get_wrapper(listener, event_type);\n    if (!wrapper) {\n        console.warn(`[Event][eventRemoveListener](${getIframeName()}) 函数没有监听 '${event_type}' 事件, 调用无效\\n\\n  ${detail.format_function_to_string(listener)}`);\n        return;\n    }\n    sillyTavern().eventSource.removeListener(event_type, wrapper);\n    detail.remove_wrapper(listener, event_type);\n    console.info(`[Event][eventRemoveListener](${getIframeName()}) 函数不再监听 '${event_type}' 事件\\n\\n  ${detail.format_function_to_string(listener)}`);\n}\n/**\n * 取消本 iframe 中对 `event_type` 的所有监听\n *\n * @param event_type 要取消监听的事件\n */\nfunction eventClearEvent(event_type) {\n    detail.listener_event_wrapper_map.forEach((event_wrapper_map, _) => {\n        const wrapper = event_wrapper_map.get(event_type);\n        if (wrapper) {\n            sillyTavern().eventSource.removeListener(event_type, wrapper);\n            event_wrapper_map.delete(event_type);\n        }\n    });\n    console.info(`[Event][eventClearEvent](${getIframeName()})所有函数都不再监听 '${event_type}' 事件`);\n}\n/**\n * 取消本 iframe 中 `listener` 的的所有监听\n *\n * @param listener 要取消注册的函数\n */\nfunction eventClearListener(listener) {\n    const event_callback_map = detail.extract(detail.listener_event_wrapper_map, listener);\n    if (event_callback_map) {\n        event_callback_map.forEach((callback, event_type) => {\n            sillyTavern().eventSource.removeListener(event_type, callback);\n        });\n    }\n    console.info(`[Event][eventClearListener](${getIframeName()}) 函数不再监听任何事件\\n\\n  ${detail.format_function_to_string(listener)}`);\n}\n/**\n * 取消本 iframe 中对所有事件的所有监听\n */\nfunction eventClearAll() {\n    detail.listener_event_wrapper_map.forEach((event_wrapper_map, _) => {\n        event_wrapper_map.forEach((wrapper, event_type) => {\n            sillyTavern().eventSource.removeListener(event_type, wrapper);\n        });\n    });\n    detail.listener_event_wrapper_map.clear();\n    console.info(`[Event][eventClearAll](${getIframeName()}) 取消所有函数对所有事件的监听`);\n}\n// iframe 事件\nconst iframe_events = {\n    MESSAGE_IFRAME_RENDER_STARTED: 'message_iframe_render_started',\n    MESSAGE_IFRAME_RENDER_ENDED: 'message_iframe_render_ended',\n    GENERATION_STARTED: 'js_generation_started', // `generate` 函数开始生成\n    STREAM_TOKEN_RECEIVED_FULLY: 'js_stream_token_received_fully', // 启用流式传输的 `generate` 函数传输当前完整文本: \"这是\", \"这是一条\", \"这是一条流式传输\"\n    STREAM_TOKEN_RECEIVED_INCREMENTALLY: 'js_stream_token_received_incrementally', // 启用流式传输的 `generate` 函数传输当前增量文本: \"这是\", \"一条\", \"流式传输\"\n    GENERATION_ENDED: 'js_generation_ended', // `generate` 函数完成生成\n};\n// 酒馆事件. **不建议自己发送酒馆事件, 因为你并不清楚它需要发送什么数据**\nconst tavern_events = {\n    APP_READY: 'app_ready',\n    EXTRAS_CONNECTED: 'extras_connected',\n    MESSAGE_SWIPED: 'message_swiped',\n    MESSAGE_SENT: 'message_sent',\n    MESSAGE_RECEIVED: 'message_received',\n    MESSAGE_EDITED: 'message_edited',\n    MESSAGE_DELETED: 'message_deleted',\n    MESSAGE_UPDATED: 'message_updated',\n    MESSAGE_FILE_EMBEDDED: 'message_file_embedded',\n    IMPERSONATE_READY: 'impersonate_ready',\n    CHAT_CHANGED: 'chat_id_changed',\n    GENERATION_AFTER_COMMANDS: 'GENERATION_AFTER_COMMANDS',\n    GENERATION_STARTED: 'generation_started',\n    GENERATION_STOPPED: 'generation_stopped',\n    GENERATION_ENDED: 'generation_ended',\n    EXTENSIONS_FIRST_LOAD: 'extensions_first_load',\n    EXTENSION_SETTINGS_LOADED: 'extension_settings_loaded',\n    SETTINGS_LOADED: 'settings_loaded',\n    SETTINGS_UPDATED: 'settings_updated',\n    GROUP_UPDATED: 'group_updated',\n    MOVABLE_PANELS_RESET: 'movable_panels_reset',\n    SETTINGS_LOADED_BEFORE: 'settings_loaded_before',\n    SETTINGS_LOADED_AFTER: 'settings_loaded_after',\n    CHATCOMPLETION_SOURCE_CHANGED: 'chatcompletion_source_changed',\n    CHATCOMPLETION_MODEL_CHANGED: 'chatcompletion_model_changed',\n    OAI_PRESET_CHANGED_BEFORE: 'oai_preset_changed_before',\n    OAI_PRESET_CHANGED_AFTER: 'oai_preset_changed_after',\n    OAI_PRESET_EXPORT_READY: 'oai_preset_export_ready',\n    OAI_PRESET_IMPORT_READY: 'oai_preset_import_ready',\n    WORLDINFO_SETTINGS_UPDATED: 'worldinfo_settings_updated',\n    WORLDINFO_UPDATED: 'worldinfo_updated',\n    CHARACTER_EDITED: 'character_edited',\n    CHARACTER_PAGE_LOADED: 'character_page_loaded',\n    CHARACTER_GROUP_OVERLAY_STATE_CHANGE_BEFORE: 'character_group_overlay_state_change_before',\n    CHARACTER_GROUP_OVERLAY_STATE_CHANGE_AFTER: 'character_group_overlay_state_change_after',\n    USER_MESSAGE_RENDERED: 'user_message_rendered',\n    CHARACTER_MESSAGE_RENDERED: 'character_message_rendered',\n    FORCE_SET_BACKGROUND: 'force_set_background',\n    CHAT_DELETED: 'chat_deleted',\n    CHAT_CREATED: 'chat_created',\n    GROUP_CHAT_DELETED: 'group_chat_deleted',\n    GROUP_CHAT_CREATED: 'group_chat_created',\n    GENERATE_BEFORE_COMBINE_PROMPTS: 'generate_before_combine_prompts',\n    GENERATE_AFTER_COMBINE_PROMPTS: 'generate_after_combine_prompts',\n    GENERATE_AFTER_DATA: 'generate_after_data',\n    GROUP_MEMBER_DRAFTED: 'group_member_drafted',\n    WORLD_INFO_ACTIVATED: 'world_info_activated',\n    TEXT_COMPLETION_SETTINGS_READY: 'text_completion_settings_ready',\n    CHAT_COMPLETION_SETTINGS_READY: 'chat_completion_settings_ready',\n    CHAT_COMPLETION_PROMPT_READY: 'chat_completion_prompt_ready',\n    CHARACTER_FIRST_MESSAGE_SELECTED: 'character_first_message_selected',\n    // TODO: Naming convention is inconsistent with other events\n    CHARACTER_DELETED: 'characterDeleted',\n    CHARACTER_DUPLICATED: 'character_duplicated',\n    STREAM_TOKEN_RECEIVED: 'stream_token_received',\n    FILE_ATTACHMENT_DELETED: 'file_attachment_deleted',\n    WORLDINFO_FORCE_ACTIVATE: 'worldinfo_force_activate',\n    OPEN_CHARACTER_LIBRARY: 'open_character_library',\n    ONLINE_STATUS_CHANGED: 'online_status_changed',\n    IMAGE_SWIPED: 'image_swiped',\n    CONNECTION_PROFILE_LOADED: 'connection_profile_loaded',\n    TOOL_CALLS_PERFORMED: 'tool_calls_performed',\n    TOOL_CALLS_RENDERED: 'tool_calls_rendered',\n};\n//------------------------------------------------------------------------------------------------------------------------\n// @ts-expect-error\nvar detail;\n(function (detail) {\n    detail.listener_event_wrapper_map = new Map();\n    function try_get_wrapper(listener, event_type) {\n        return detail.listener_event_wrapper_map.get(listener)?.get(event_type);\n    }\n    detail.try_get_wrapper = try_get_wrapper;\n    function remove_wrapper(listener, event_type) {\n        detail.listener_event_wrapper_map.get(listener)?.delete(event_type);\n    }\n    detail.remove_wrapper = remove_wrapper;\n    function get_or_make_wrapper(listener, event_type, once) {\n        const default_wrapper = async (...args) => {\n            if (once) {\n                remove_wrapper(listener, event_type);\n            }\n            const result = await listener(...args);\n            console.info(`[Event][callback '${event_type}'](${getIframeName()}) 函数因监听到 '${event_type}' 事件而触发\\n\\n  ${detail.format_function_to_string(listener)}`);\n            const uid = detail.waiting_event_map.get(`${event_type}#${listener.toString()}`)[0];\n            if (uid) {\n                window.postMessage({\n                    request: 'iframe_event_wait_callback',\n                    uid: uid,\n                    result: result,\n                }, '*');\n            }\n            return result;\n        };\n        const default_event_wrapper_map = new Map([[event_type, default_wrapper]]);\n        const event_wrapper = detail.get_or_set(detail.listener_event_wrapper_map, listener, () => default_event_wrapper_map);\n        const wrapper = detail.get_or_set(event_wrapper, event_type, () => default_wrapper);\n        return wrapper;\n    }\n    detail.get_or_make_wrapper = get_or_make_wrapper;\n    detail.waiting_event_map = new ArrayMultimap();\n    $(window).on('unload', eventClearAll);\n})(detail || (detail = {}));\n//------------------------------------------------------------------------------------------------------------------------\n// 已被弃用的接口, 请尽量按照指示更新它们\n/**\n * @deprecated 已弃用, 请使用 eventOn\n */\nconst tavernOn = eventOn;\n/**\n * @deprecated 已弃用, 请使用 eventMakeLast\n */\nconst tavernMakeLast = eventMakeLast;\n/**\n * @deprecated 已弃用, 请使用 eventMakeFirst\n */\nconst tavernMakeFirst = eventMakeFirst;\n/**\n * @deprecated 已弃用, 请使用 eventOnce\n */\nconst tavernOnce = eventOnce;\n/**\n * @deprecated 已弃用, 请使用 eventRemoveListener\n */\nconst tavernRemoveListener = eventRemoveListener;\n",'"use strict";\n/**\n * 酒馆提供给插件的稳定接口, 具体内容见于 https://github.com/SillyTavern/SillyTavern/blob/release/public/scripts/st-context.js#L76\n * 你也可以在酒馆页面按 f12, 在控制台中输入 `window.SillyTavern.getContext()` 来查看当前酒馆所提供的接口\n */\nconst SillyTavern = window.parent.SillyTavern.getContext();\n/**\n * 酒馆助手提供的额外功能, 具体内容见于 https://n0vi028.github.io/JS-Slash-Runner-Doc\n * 你也可以在酒馆页面按 f12, 在控制台中输入 `window.TavernHelper` 来查看当前酒馆助手所提供的接口\n * TODO: 怎么导出 TavernHelper 的类型声明\n */\nconst TavernHelper = window.parent.TavernHelper;\n//======================================================================================================================\n/**\n * @deprecated 请使用 SillyTavern 而不是 sillyTavern()\n */\nfunction sillyTavern() {\n    return SillyTavern;\n}\n',"\"use strict\";\n/**\n * 获取前端助手版本号\n *\n * 自然地, 旧版本前端助手并没有这个函数. 为了让该功能在旧版本下正常使用, 你可以直接使用该函数内部的实现.\n */\nfunction getFrontendVersion() {\n    const version = $(\".js-settings\", window.parent.document).find('.extension_info.flex-container.spaceBetween > small').text().replace('Ver ', '');\n    console.info(`[FrontendVersion][getFrontendVersion] 获取前端助手版本号: ${version}`);\n    return version;\n}\n/**\n * 尝试主动更新前端助手\n */\nasync function updateFrontendVersion() {\n    return detail.make_iframe_promise({\n        request: \"[FrontendVersion][updateFrontendVersion]\",\n    });\n}\n","\"use strict\";\n;\n/**\n * 使用酒馆当前启用的预设, 让 ai 生成一段文本.\n *\n * 该函数在执行过程中将会发送以下事件:\n * - `iframe_events.GENERATION_STARTED`: 生成开始\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n * - `iframe_events.GENERATION_ENDED`: 生成结束, 监听它可以得到生成的最终文本 (当然也能通过函数返回值获得)\n *\n * @param config 提示词和生成方式设置\n *   - `user_input?:string`: 用户输入\n *   - `should_stream?:boolean`: 是否启用流式传输; 默认为 'false'\n *   - `overrides?:Overrides`: 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词. 如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖角色描述\n *   - `injects?:InjectionPrompt[]`: 要额外注入的提示词\n *   - `max_chat_history?:'all'|number`: 最多使用多少条聊天历史\n * @returns 生成的最终文本\n *\n * @example\n * // 流式生成\n * const result = await generate({ user_input: '你好', should_stream: true });\n *\n * @example\n * // 注入、覆盖提示词\n * const result = await generate({\n *   user_input: '你好',\n *   injects: [{ role: 'system', content: '思维链...', position: 'in_chat', depth: 0, should_scan: true, }]\n *   overrides: {\n *     char_personality: '温柔',\n *     world_info_before: '',\n *     chat_history: {\n *       prompts: [],\n *     }\n *   }\n * });\n */\nasync function generate(config) {\n    return await detail.make_iframe_promise({\n        request: '[Generate][generate]',\n        config: config,\n    });\n}\n;\n/**\n * 不使用酒馆当前启用的预设, 让 ai 生成一段文本.\n *\n * 该函数在执行过程中将会发送以下事件:\n * - `iframe_events.GENERATION_STARTED`: 生成开始\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_FULLY`: 监听它可以得到流式传输的当前完整文本 (\"这是\", \"这是一条\", \"这是一条流式传输\")\n * - 若启用流式传输, `iframe_events.STREAM_TOKEN_RECEIVED_INCREMENTALLY`: 监听它可以得到流式传输的当前增量文本 (\"这是\", \"一条\", \"流式传输\")\n * - `iframe_events.GENERATION_ENDED`: 生成结束, 监听它可以得到生成的最终文本 (当然也能通过函数返回值获得)\n *\n * @param config 提示词和生成方式设置\n *   - `user_input?:string`: 用户输入\n *   - `should_stream?:boolean`: 是否启用流式传输; 默认为 'false'\n *   - `overrides?:Overrides`: 覆盖选项. 若设置, 则 `overrides` 中给出的字段将会覆盖对应的提示词. 如 `overrides.char_description = '覆盖的角色描述';` 将会覆盖角色描述\n *   - `injects?:InjectionPrompt[]`: 要额外注入的提示词\n *   - `ordered_prompts?:(BuiltinPrompt|RolePrompt)[]`: 一个提示词数组, 数组元素将会按顺序发给 ai, 因而相当于自定义预设\n *   - `max_chat_history?:'all'|number`: 最多使用多少条聊天历史\n * @returns 生成的最终文本\n *\n * @example\n * // 自定义内置提示词顺序, 未在 ordered_prompts 中给出的将不会被使用\n\n * const result = await generateRaw({\n *   user_input: '你好',\n *   ordered_prompts: [\n *     'char_description',\n *     { role: 'system', content: '系统提示' },\n *     'chat_history',\n *     'user_input',\n *   ]\n * })\n */\nasync function generateRaw(config) {\n    return await detail.make_iframe_promise({\n        request: '[Generate][generateRaw]',\n        config: config,\n    });\n}\n;\n;\n;\n;\n/**\n * 预设为内置提示词设置的默认顺序\n */\nconst builtin_prompt_default_order = [\n    'world_info_before', // 世界书(角色定义前)\n    'persona_description', // 用户描述\n    'char_description', // 角色描述\n    'char_personality', // 角色性格\n    'scenario', // 场景\n    'world_info_after', // 世界书(角色定义后)\n    'dialogue_examples', // 对话示例\n    'chat_history', // 聊天历史 (含世界书中按深度插入的条目、作者注释)\n    'user_input', // 用户输入\n];\n",'"use strict";\n// TODO: 没给接口做不到设置世界书全局设置, 服了\n// TODO: 查询哪些条目被激活?\n// TODO: 绑定/解绑世界书?\n;\n/**\n * 获取当前的世界书全局设置\n *\n * @returns 当前的世界书全局设置\n *\n * @example\n * // 获取全局启用的世界书\n * const settings = await getLorebookSettings();\n * alert(settings.selected_global_lorebooks);\n */\nasync function getLorebookSettings() {\n    return detail.make_iframe_promise({\n        request: "[Lorebook][getLorebookSettings]",\n    });\n}\n/**\n * 修改世界书全局设置\n *\n * @returns 修改世界书全局设置\n *\n * @example\n * // 修改上下文百分比为 100%, 启用递归扫描\n * await setLorebookSettings({context_percentage: 100, recursive: true});\n *\n * @example\n * // setLorebookSettings 因为酒馆问题很慢, 建议先 getLorebookSetting, 进行比较, 再 setLorebookSettings\n * const expected_settings = { 预期设置 };\n * const settings = await getLorebookSettings();\n * if (_.isEqual(_.merge({}, settings, expected_settings), settings)) {\n *   setLorebookSettings(expected_settings);\n * }\n */\nasync function setLorebookSettings(settings) {\n    return detail.make_iframe_promise({\n        request: "[Lorebook][setLorebookSettings]",\n        settings: settings,\n    });\n}\n;\n/**\n * 获取角色卡绑定的世界书\n *\n * @param option 可选选项\n *   - `name?:string`: 要查询的角色卡名称; 默认为当前角色卡\n *\n * @returns 角色卡绑定的世界书\n */\nasync function getCharLorebooks(option = {}) {\n    option = {\n        name: option.name,\n    };\n    return detail.make_iframe_promise({\n        request: "[Lorebook][getCharLorebooks]",\n        option: option\n    });\n}\n/**\n * 获取当前角色卡绑定的主要世界书\n *\n * @returns 如果当前角色卡有绑定并使用世界书 (地球图标呈绿色), 返回该世界书的名称; 否则返回 `null`\n */\nasync function getCurrentCharPrimaryLorebook() {\n    return (await getCharLorebooks()).primary;\n}\n/**\n * 将当前角色卡换为绑定 `lorebooks`\n *\n * @param lorebooks 要新绑定的世界书, 不指明 primary 或 additional 字段则表示不变\n */\nasync function setCurrentCharLorebooks(lorebooks) {\n    return detail.make_iframe_promise({\n        request: \'[Lorebook][setCurrentCharLorebooks]\',\n        lorebooks: lorebooks,\n    });\n}\n/**\n * 获取或创建当前聊天绑定的世界书\n *\n * @returns 聊天世界书的名称\n */\nasync function getOrCreateChatLorebook() {\n    return triggerSlashWithResult("/getchatbook");\n}\n/**\n * 获取世界书列表\n *\n * @returns 世界书名称列表\n */\nasync function getLorebooks() {\n    return detail.make_iframe_promise({\n        request: "[Lorebook][getLorebooks]",\n    });\n}\n/**\n * 新建世界书\n *\n * @param lorebook 世界书名称\n *\n * @returns 是否成功创建, 如果已经存在同名世界书会失败\n */\nasync function createLorebook(lorebook) {\n    return detail.make_iframe_promise({\n        request: "[Lorebook][createLorebook]",\n        lorebook: lorebook,\n    });\n}\n/**\n * 删除世界书\n *\n * @param lorebook 世界书名称\n * @returns 是否成功删除, 可能因世界书不存在等原因而失败\n */\nasync function deleteLorebook(lorebook) {\n    return detail.make_iframe_promise({\n        request: "[Lorebook][deleteLorebook]",\n        lorebook: lorebook,\n    });\n    ;\n}\n','"use strict";\n;\n/**\n * 获取世界书中的条目信息. **请务必阅读示例**.\n *\n * @param lorebook 世界书名称\n * @param option 可选选项\n *   - `filter:\'none\'|LorebookEntry的一个子集`: 按照指定字段值筛选条目, 要求对应字段值包含制定的内容; 默认为不进行筛选.\n *                                       如 `{content: \'神乐光\'}` 表示内容中必须有 `\'神乐光\'`, `{type: \'selective\'}` 表示仅获取绿灯条目.\n *                                       由于实现限制, 只能做到这样的简单筛选; 如果需要更复杂的筛选, 请获取所有条目然后自己筛选.\n *\n * @returns 一个数组, 元素是各条目信息.\n *\n * @example\n * // 获取世界书中所有条目的所有信息\n * const entries = await getLorebookEntries("eramgt少女歌剧");\n *\n * @example\n * // 按内容筛选, content 中必须出现 `\'神乐光\'`\n * const entries = await getLorebookEntries("eramgt少女歌剧", {filter: {content: \'神乐光\'}})\n */\nasync function getLorebookEntries(lorebook, option = {}) {\n    option = {\n        filter: option.filter ?? \'none\',\n    };\n    return detail.make_iframe_promise({\n        request: "[LorebookEntry][getLorebookEntries]",\n        lorebook: lorebook,\n        option: option,\n    });\n}\n/**\n * 将条目信息修改回对应的世界书中, 如果某个字段不存在, 则该字段采用原来的值.\n *\n * 这只是修改信息, 不能创建新的条目, 因此要求条目必须已经在世界书中.\n *\n * @param lorebook 条目所在的世界书名称\n * @param entries 一个数组, 元素是各条目信息. 其中必须有 `uid`, 而其他字段可选.\n *\n * @example\n * const lorebook = "eramgt少女歌剧";\n *\n * // 你可以自己指定 uid 来设置\n * await setLorebookEntries(lorebook, [{uid: 0, comment: "新标题"}]);\n *\n * // 也可以用从 `getLorebookEntries` 获取的条目\n * const entries = await getLorebookEntries(lorebook);\n * entries[0].sticky = 5;\n * entries[1].enabled = false;\n * await setLorebookEntries(lorebook, [entries[0], entries[1]]);\n *\n * @example\n * const lorebook = "eramgt少女歌剧";\n *\n * // 禁止所有条目递归, 保持其他设置不变\n * const entries = await getLorebookEntries(lorebook);\n * // `...entry` 表示展开 `entry` 中的内容; 而 `prevent_recursion: true` 放在后面会覆盖或设置 `prevent_recursion` 字段\n * await setLorebookEntries(lorebook, entries.map(entry => ({ ...entry, prevent_recursion: true })));\n *\n * // 实际上我们只需要为条目指出它的 uid, 并设置 `prevent_recursion: true`\n * const entries = await getLorebookEntries(lorebook);\n * await setLorebookEntries(lorebook, entries.map(entry => ({ uid: entry.uid, prevent_recursion: true })));\n *\n * // 当然你也可以做一些更复杂的事, 比如不再是禁用, 而是反转开关\n * const entries = await getLorebookEntries(lorebook);\n * await setLorebookEntries(lorebook, entries.map(entry => ({ uid: entry.uid, prevent_recursion: !entry.prevent_recursion })));\n */\nasync function setLorebookEntries(lorebook, entries) {\n    return detail.make_iframe_promise({\n        request: "[LorebookEntry][setLorebookEntries]",\n        lorebook: lorebook,\n        entries: entries,\n    });\n}\n/**\n * 向世界书中新增一个条目\n *\n * @param lorebook 世界书名称\n * @param field_values 要对新条目设置的字段值, 如果不设置则采用酒馆给的默认值. **不能设置 `uid`**.\n *\n * @returns 新条目的 `uid`\n *\n * @example\n * const uid = await createLorebookEntry("eramgt少女歌剧", {comment: "revue", content: "歌唱吧跳舞吧相互争夺吧"});\n */\nasync function createLorebookEntry(lorebook, field_values) {\n    return detail.make_iframe_promise({\n        request: "[LorebookEntry][createLorebookEntry]",\n        lorebook: lorebook,\n        field_values: field_values,\n    });\n}\n/**\n * 删除世界书中的某个条目\n *\n * @param lorebook 世界书名称\n * @param uid 要删除的条目 uid\n *\n * @returns 是否成功删除, 可能因世界书不存在、对应条目不存在等原因失败\n */\nasync function deleteLorebookEntry(lorebook, uid) {\n    return detail.make_iframe_promise({\n        request: "[LorebookEntry][deleteLorebookEntry]",\n        lorebook: lorebook,\n        lorebook_uid: uid,\n    });\n}\n;\n',"\"use strict\";\n/**\n * 运行 Slash 命令, 注意如果命令写错了将不会有任何反馈.\n *\n * @param command 要运行的 Slash 命令\n *\n * @example\n * // 在酒馆界面弹出提示语 `hello!`\n * await triggerSlash('/echo hello!');\n */\nasync function triggerSlash(command) {\n    return detail.make_iframe_promise({\n        request: '[Slash][triggerSlash]',\n        command: command,\n    });\n}\n/**\n * 运行 Slash 命令, 并返回命令管道的结果.\n *\n * @param command 要运行的 Slash 命令\n * @returns Slash 管道结果, 如果命令出错或执行了 `/abort` 则返回 `undefined`\n *\n * @example\n * // 获取当前聊天消息最后一条消息对应的 id\n * const last_message_id = await triggerSlashWithResult('/pass {{lastMessageId}}');\n */\nasync function triggerSlashWithResult(command) {\n    return detail.make_iframe_promise({\n        request: '[Slash][triggerSlashWithResult]',\n        command: command,\n    });\n}\n","\"use strict\";\n/**\n * 判断酒馆局部正则是否被启用. 注意, 前端插件已经更新了 \"自动启用局部正则\" 选项, 所以你其实没必要用这个?\n *\n * 如果你是在局部正则中调用这个函数, **请保证\"在编辑时运行\"被启用**, 这样这个脚本才会无视局部正则开启情况而运行.\n *\n * @returns 局部正则是否被启用\n */\nasync function isCharacterTavernRegexEnabled() {\n    return detail.make_iframe_promise({\n        request: \"[TavernRegex][isCharacterTavernRegexesEnabled]\",\n    });\n}\n/**\n * 获取酒馆正则\n *\n * @param option 可选选项\n *   - `scope?:'all'|'global'|'character'`:         // 按所在区域筛选酒馆正则; 默认为 `'all'`\n *   - `enable_state?:'all'|'enabled'|'disabled'`:  // 按是否被开启筛选酒馆正则; 默认为 `'all'`\n *\n * @returns 一个数组, 数组的元素是酒馆正则 `TavernRegex`. 该数组依据正则作用于文本的顺序排序, 也就是酒馆显示正则的地方从上到下排列.\n *\n * @example\n * // 获取所有酒馆正则\n * const regexes = await getTavernRegexes();\n *\n * @example\n * // 获取当前角色卡目前被启用的局部正则\n * const regexes = await getTavernRegexes({scope: 'character', enable_state: 'enabled'});\n */\nasync function getTavernRegexes(option = {}) {\n    option = {\n        scope: option.scope ?? 'all',\n        enable_state: option.enable_state ?? 'all',\n    };\n    return detail.make_iframe_promise({\n        request: \"[TavernRegex][getTavernRegexes]\",\n        option: option,\n    });\n}\n/**\n * 完全替换酒馆正则为 `regexes`.\n * - **这是一个很慢的操作!** 尽量对正则做完所有事后再一次性 replaceTavernRegexes.\n * - **为了重新应用正则, 它会重新载入整个聊天消息**, 将会触发 `tavern_events.CHAT_CHANGED` 进而重新加载全局脚本和楼层消息.\n *     这意味着如果你在全局脚本中运行本函数, 则该函数之后的内容将不会被执行.\n *\n * 之所以提供这么直接的函数, 是因为你可能需要调换正则顺序等.\n *\n * @param regexes 要用于替换的酒馆正则\n * @param option 可选选项\n *   - scope?: 'all' | 'global' | 'character';  // 要替换的酒馆正则部分; 默认为 'all'\n *\n * @example\n * // 开启所有名字里带 \"舞台少女\" 的正则\n * let regexes = await getTavernRegexes();\n * regexes.forEach(regex => {\n *   if (regex.script_name.includes('舞台少女')) {\n *     regex.enabled = true;\n *   }\n * });\n * await replaceTavernRegexes(regexes);\n */\nasync function replaceTavernRegexes(regexes, option = {}) {\n    option = {\n        scope: option.scope ?? 'all',\n    };\n    return detail.make_iframe_promise({\n        request: '[TavernRegex][replaceTavernRegexes]',\n        regexes: regexes,\n        option: option,\n    });\n}\n/**\n * 用 `updater` 函数更新酒馆正则\n *\n * @param updater 用于更新酒馆正则的函数. 它应该接收酒馆正则作为参数, 并返回更新后的酒馆正则.\n * @param option 可选选项\n *   - scope?: 'all' | 'global' | 'character';  // 要替换的酒馆正则部分; 默认为 'all'\n *\n * @returns 更新后的酒馆正则\n *\n * @example\n * // 开启所有名字里带 \"舞台少女\" 的正则\n * await updateTavernRegexesWith(regexes => {\n *   regexes.forEach(regex => {\n *     if (regex.script_name.includes('舞台少女')) {\n *       regex.enabled = true;\n *     }\n *   });\n *   return regexes;\n * });\n */\nasync function updateTavernRegexesWith(updater, option = {}) {\n    const defaulted_option = {\n        scope: option.scope ?? 'all',\n    };\n    let regexes = await getTavernRegexes(defaulted_option);\n    regexes = await updater(regexes);\n    console.info(`[Chat Message][updateVariablesWith](${getIframeName()}) 用函数对${{ all: '全部', global: '全局', character: '局部' }[defaulted_option.scope]}变量表进行更新, 使用的函数:\\n\\n ${JSON.stringify(detail.format_function_to_string(updater))}`);\n    await replaceTavernRegexes(regexes, defaulted_option);\n    return regexes;\n}\n//----------------------------------------------------------------------------------------------------------------------\n// 已被弃用的接口, 请尽量按照指示更新它们\n/**\n * @deprecated 已弃用, 请使用 isCharacterTavernRegexEnabled\n */\nconst isCharacterRegexEnabled = isCharacterTavernRegexEnabled;\n/**\n * @deprecated 已弃用, 请使用 getTavernRegexes\n */\nconst getRegexData = getTavernRegexes;\n",'"use strict";\n/**\n * 获取 iframe 的名称\n *\n * @returns 对于楼层消息是 `message-iframe-楼层id-是该楼层第几个iframe`; 对于全局脚本是 `script-iframe-脚本名称`\n */\nfunction getIframeName() {\n    return window.frameElement.id;\n}\n/**\n * 从消息楼层 iframe 的 `iframe_name` 获取它所在楼层的楼层 id, **只能对楼层消息 iframe** 使用\n *\n * @param iframe_name 消息楼层 iframe 的名称\n * @returns 楼层 id\n */\nfunction getMessageId(iframe_name) {\n    const match = iframe_name.match(/^message-iframe-(\\d+)-\\d+$/);\n    if (!match) {\n        throw Error(`获取 ${iframe_name} 所在楼层 id 时出错: 不要对全局脚本 iframe 调用 getMessageId!`);\n    }\n    return parseInt(match[1].toString());\n}\n/**\n * 获取本消息楼层 iframe 所在楼层的楼层 id, **只能对楼层消息 iframe** 使用\n *\n * @returns 楼层 id\n */\nfunction getCurrentMessageId() {\n    return getMessageId(getIframeName());\n}\n/**\n * 替换字符串中的酒馆宏\n *\n * @param text 要替换的字符串\n * @returns 替换结果\n *\n * @example\n * const text = substitudeMacros("{{char}} speaks in {{lastMessageId}}");\n * text == "少女歌剧 speaks in 5";\n */\nasync function substitudeMacros(text) {\n    // QUESTION: 像这样额外编写一个 request, 还是直接用 `await triggerSlashWithResult(\'/pass "{{char}} speaks in {{lastMessageId}}"\')`?\n    return detail.make_iframe_promise({\n        request: \'[Utils][substitudeMacros]\',\n        text: text,\n    });\n}\n/**\n * 获取最新楼层 id\n *\n * @returns 最新楼层id\n */\nasync function getLastMessageId() {\n    const result = await substitudeMacros("{{lastMessageId}}");\n    if (result === "") {\n        throw Error("[Util][getLastMessageId] 未找到任何消息楼层");\n    }\n    return parseInt(result);\n}\n/**\n * 生成唯一的 uuidv4 标识符\n *\n * @returns 唯一的 uuidv4 标识符\n */\nfunction generateUuidv4() {\n    return \'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\'.replace(/[xy]/g, function (c) {\n        const r = Math.random() * 16 | 0;\n        const v = c === \'x\' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n/**\n * 包装 `fn` 函数，返回一个会将报错消息通过酒馆通知显示出来的同功能函数\n *\n * @param fn 要包装的函数\n * @returns 包装后的函数\n *\n * @example\n * // 包装 `test` 函数从而在酒馆通知中显示 \'test\' 文本\n * async function test() {\n *   throw Error(`test`);\n * }\n * errorCatched(test)();\n */\nfunction errorCatched(fn) {\n    const onError = (error) => {\n        triggerSlash(`/echo severity=error (${getIframeName()})${error.stack ? error.stack : error.name + \': \' + error.message}`);\n        throw error;\n    };\n    return (...args) => {\n        try {\n            const result = fn(...args);\n            if (result instanceof Promise) {\n                return result.catch(error => {\n                    onError(error);\n                });\n            }\n            return result;\n        }\n        catch (error) {\n            return onError(error);\n        }\n    };\n}\n',"\"use strict\";\n;\n/**\n * 获取变量表\n *\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @returns 变量表\n *\n * @example\n * // 获取所有聊天变量并弹窗输出结果\n * const variables = await getVariables();\n * alert(variables);\n *\n * @example\n * // 获取所有全局变量\n * const variables = await getVariables({type: 'global'});\n * // 前端助手内置了 lodash 库, 你能用它做很多事, 比如查询某个变量是否存在\n * if (_.has(variables, \"神乐光.好感度\")) {\n *   ...\n * }\n */\nasync function getVariables(option = {}) {\n    return TavernHelper.getVariables(option);\n}\n/**\n * 完全替换变量表为 `variables`\n *\n * 之所以提供这么直接的函数, 是因为前端助手内置了 lodash 库:\n *   `insertOrAssignVariables` 等函数其实就是先 `getVariables` 获取变量表, 用 lodash 库处理, 再 `replaceVariables` 替换变量表.\n *\n * @param variables 要用于替换的变量表\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @example\n * // 执行前的聊天变量: `{爱城华恋: {好感度: 5}}`\n * await replaceVariables({神乐光: {好感度: 5, 认知度: 0}});\n * // 执行后的聊天变量: `{神乐光: {好感度: 5, 认知度: 0}}`\n *\n * @example\n * // 删除 `{神乐光: {好感度: 5}}` 变量\n * let variables = await getVariables();\n * _.unset(variables, \"神乐光.好感度\");\n * await replaceVariables(variables);\n */\nasync function replaceVariables(variables, option = {}) {\n    TavernHelper.replaceVariables(variables, option);\n}\n/**\n * 用 `updater` 函数更新变量表\n *\n * @param updater 用于更新变量表的函数. 它应该接收变量表作为参数, 并返回更新后的变量表.\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 对聊天变量表 (`'chat'`) 或全局变量表 (`'global'`) 进行操作, 默认为 `'chat'`\n *\n * @returns 更新后的变量表\n *\n * @example\n * // 删除 `{神乐光: {好感度: 5}}` 变量\n * await updateVariablesWith(variables => {_.unset(variables, \"神乐光.好感度\"); return variables;});\n *\n * @example\n * // 更新 \"爱城华恋.好感度\" 为原来的 2 倍, 如果该变量不存在则设置为 0\n * await updateVariablesWith(variables => _.update(variables, \"爱城华恋.好感度\", value => value ? value * 2 : 0));\n */\nasync function updateVariablesWith(updater, option = {}) {\n    option = {\n        type: option.type ?? 'chat',\n    };\n    let variables = await getVariables(option);\n    variables = await updater(variables);\n    console.info(`[Chat Message][updateVariablesWith](${getIframeName()}) 用函数对${option.type === 'chat' ? `聊天` : `全局`}变量表进行更新, 使用的函数:\\n\\n ${JSON.stringify(detail.format_function_to_string(updater))}`);\n    await replaceVariables(variables, option);\n    return variables;\n}\n/**\n * 插入或修改变量值, 取决于变量是否存在.\n *\n * @param variables 要更新的变量\n *   - 如果变量不存在, 则新增该变量\n *   - 如果变量已经存在, 则修改该变量的值\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 聊天变量或全局变量, 默认为聊天变量 'chat'\n *\n * @example\n * // 执行前变量: `{爱城华恋: {好感度: 5}}`\n * await insertOrAssignVariables({爱城华恋: {好感度: 10}, 神乐光: {好感度: 5, 认知度: 0}});\n * // 执行后变量: `{爱城华恋: {好感度: 10}, 神乐光: {好感度: 5, 认知度: 0}}`\n */\nasync function insertOrAssignVariables(variables, option = {}) {\n    await updateVariablesWith(old_variables => _.merge(old_variables, variables), option);\n}\n/**\n * 插入新变量, 如果变量已经存在则什么也不做\n *\n * @param variables 要插入的变量\n *   - 如果变量不存在, 则新增该变量\n *   - 如果变量已经存在, 则什么也不做\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 聊天变量或全局变量, 默认为聊天变量 'chat'\n *\n * @example\n * // 执行前变量: `{爱城华恋: {好感度: 5}}`\n * await insertVariables({爱城华恋: {好感度: 10}, 神乐光: {好感度: 5, 认知度: 0}});\n * // 执行后变量: `{爱城华恋: {好感度: 5}, 神乐光: {好感度: 5, 认知度: 0}}`\n */\nasync function insertVariables(variables, option = {}) {\n    await updateVariablesWith(old_variables => _.defaultsDeep(old_variables, variables), option);\n}\n/**\n * 删除变量, 如果变量不存在则什么也不做\n *\n * @param variable_path 要删除的变量路径\n *   - 如果变量不存在, 则什么也不做\n *   - 如果变量已经存在, 则删除该变量\n * @param option 可选选项\n *   - `type?:'chat'|'global'`: 聊天变量或全局变量, 默认为聊天变量 'chat'\n *\n * @returns 是否成功删除变量\n *\n * @example\n * // 执行前变量: `{爱城华恋: {好感度: 5}}`\n * await deleteVariable(\"爱城华恋.好感度\");\n * // 执行后变量: `{爱城华恋: {}}`\n */\nasync function deleteVariable(variable_path, option = {}) {\n    let result = false;\n    await updateVariablesWith(old_variables => { result = _.unset(old_variables, variable_path); return old_variables; }, option);\n    return result;\n}\nasync function setVariables(message_id, new_or_updated_variables) {\n    let actual_message_id;\n    let actual_variables;\n    if (new_or_updated_variables) {\n        actual_message_id = message_id;\n        actual_variables = new_or_updated_variables;\n    }\n    else {\n        actual_message_id = getCurrentMessageId();\n        actual_variables = message_id;\n    }\n    if (typeof actual_message_id !== 'number' || typeof actual_variables !== 'object') {\n        console.error(\"[Variables][setVariables] 调用出错, 请检查你的参数类型是否正确\");\n        return;\n    }\n    return detail.make_iframe_promise({\n        request: \"[Variables][setVariables]\",\n        message_id: actual_message_id,\n        variables: actual_variables,\n    });\n}\n"].join("\n")},476:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({MacrosParser:()=>o.MacrosParser,getLastMessageId:()=>o.getLastMessageId})},489:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({extension_settings:()=>i.extension_settings,getContext:()=>i.getContext,renderExtensionTemplateAsync:()=>i.renderExtensionTemplateAsync,saveMetadataDebounced:()=>i.saveMetadataDebounced,writeExtensionField:()=>i.writeExtensionField})},516:(e,n,t)=>{t.d(n,{Y:()=>s});var a=t(121),r=t(365);function s(){(0,a.cB)("[Utils][substitudeMacros]",(async e=>{const n=e.data.text,t=(0,r.substituteParamsExtended)(n);return console.info(`${(0,a.Jn)(e)}替换字符串中的宏, 字符串: '${n}', 结果: '${t}'`),t}))}},518:(e,n,t)=>{t.d(n,{Pi:()=>m,TE:()=>c,XT:()=>d,il:()=>l});var a=t(121),r=t(595),s=t(365),o=t(489),i=t(628);function l(){return o.extension_settings?.character_allowed_regex?.includes(s.characters?.[s.this_chid]?.avatar)}function c(){return o.extension_settings.regex??[]}function d(){return s.characters[s.this_chid]?.data?.extensions?.regex_scripts??[]}function p(e,n){return{id:e.id,script_name:e.scriptName,enabled:!e.disabled,run_on_edit:e.runOnEdit,scope:n,find_regex:e.findRegex,replace_string:e.replaceString,source:{user_input:e.placement.includes(i.regex_placement.USER_INPUT),ai_output:e.placement.includes(i.regex_placement.AI_OUTPUT),slash_command:e.placement.includes(i.regex_placement.SLASH_COMMAND),world_info:e.placement.includes(i.regex_placement.WORLD_INFO)},destination:{display:e.markdownOnly,prompt:e.promptOnly},min_depth:"number"==typeof e.minDepth?e.minDepth:null,max_depth:"number"==typeof e.maxDepth?e.maxDepth:null}}function u(e){return{id:e.id,scriptName:e.script_name,disabled:!e.enabled,runOnEdit:e.run_on_edit,findRegex:e.find_regex,replaceString:e.replace_string,trimStrings:[],placement:[...e.source.user_input?[i.regex_placement.USER_INPUT]:[],...e.source.ai_output?[i.regex_placement.AI_OUTPUT]:[],...e.source.slash_command?[i.regex_placement.SLASH_COMMAND]:[],...e.source.world_info?[i.regex_placement.WORLD_INFO]:[]],substituteRegex:0,minDepth:e.min_depth,maxDepth:e.max_depth,markdownOnly:e.destination.display,promptOnly:e.destination.prompt}}function m(){(0,a.cB)("[TavernRegex][isCharacterTavernRegexesEnabled]",(async e=>{const n=l();return console.info(`${(0,a.Jn)(e)}查询到局部正则${n?"被启用":"被禁用"}`),n})),(0,a.cB)("[TavernRegex][getTavernRegexes]",(async e=>{const n=e.data.option;if(!["all","enabled","disabled"].includes(n.enable_state))throw Error(`提供的 enable_state 无效, 请提供 'all', 'enabled' 或 'disabled', 你提供的是: ${n.enable_state}`);if(!["all","global","character"].includes(n.scope))throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${n.scope}`);let t=[];return"all"!==n.scope&&"global"!==n.scope||(t=[...t,...c().map((e=>p(e,"global")))]),"all"!==n.scope&&"character"!==n.scope||(t=[...t,...d().map((e=>p(e,"character")))]),"all"!==n.enable_state&&(t=t.filter((e=>e.enabled===("enabled"===n.enable_state)))),console.info(`${(0,a.Jn)(e)}获取酒馆正则数据, 选项: ${JSON.stringify(n)}`),t})),(0,a.cB)("[TavernRegex][replaceTavernRegexes]",(async e=>{const n=e.data.regexes,t=e.data.option;if(!["all","global","character"].includes(t.scope))throw Error(`提供的 scope 无效, 请提供 'all', 'global' 或 'character', 你提供的是: ${t.scope}`);const i=n.filter((e=>""==e.script_name));if(i.length>0)throw Error(`不能将酒馆正则的名称设置为空字符串:\n${JSON.stringify(i.map((e=>e.id)))}`);const[l,c]=(0,r.jB)(n,(e=>"global"===e.scope)).map((e=>e.map(u))),d=s.characters[s.this_chid];"all"!==t.scope&&"global"!==t.scope||(o.extension_settings.regex=l),"all"!==t.scope&&"character"!==t.scope||d&&(s.characters[s.this_chid].data.extensions.regex_scripts=c,await(0,o.writeExtensionField)(s.this_chid,"regex_scripts",c)),await(0,s.saveSettings)(),d&&await(0,s.saveChatConditional)(),await(0,s.reloadCurrentChat)(),console.info(`${(0,a.Jn)(e)}替换酒馆正则${"all"===t.scope||"global"===t.scope?`, 全局正则:\n${JSON.stringify(l,void 0,2)}`:""}${"all"===t.scope||"character"===t.scope?`, 局部正则:\n${JSON.stringify(c,void 0,2)}`:""}`)}))}},538:(e,n,t)=>{t.d(n,{S:()=>r});var a=t(595);let r=new class{map=new Map;get(e){return this.map.get(e)}set(e,n){this.map.set(e,function(e){return URL.createObjectURL(new Blob([e],{type:"application/javascript"}))}(n))}delete(e){const n=(0,a.o6)(this.map,e);return n?(URL.revokeObjectURL(n),n):n}}},547:(e,n,t)=>{t.a(e,(async(e,a)=>{try{t.d(n,{y8:()=>d,yW:()=>b});var r=t(799),s=t(365),o=t(489),i=(t(916),t(249)),l=(t(434),t(892)),c=e([r]);r=(c.then?(await c)():c)[0];const d={script_enabled:!0,global_script_enabled:!0,scope_script_enabled:!0,scriptsRepository:[]},p="third-party/JS-Slash-Runner",u=$(await(0,o.renderExtensionTemplateAsync)(`${p}`,"script_item_template",{scriptName:"",id:"",moveTo:"",faIcon:""}));async function m(e="global",n=null){const t=$(await(0,o.renderExtensionTemplateAsync)(`${p}`,"script_editor"));if(n){let a;a="global"===e?(0,r.CN)("script.scriptsRepository").find((e=>e.id===n)):s.characters[s.this_chid]?.data?.extensions?.TavernHelper_scripts.find((e=>e.id===n)),a&&(t.find("#script-name-input").val(a.name),t.find("#script-content-textarea").val(a.content),t.find("#script-info-textarea").val(a.info))}if(await(0,i.callGenericPopup)(t,i.POPUP_TYPE.CONFIRM,"",{okButton:"确认",cancelButton:"取消"})){const e=t.find("#script-name-input").val(),a=t.find("#script-content-textarea").val(),r=t.find("#script-info-textarea").val();if(null===n){const n={id:(0,l.uuidv4)(),name:e,content:a,info:r,enabled:!1};await _(n,!0,"global")}}}async function _(e,n=!1,t="global"){if(e.name){if(n)if("global"===t){const n=await y(e,"global");$("#global-script-list").prepend(n);const t=(0,r.CN)("script.scriptsRepository");t.unshift(e),await g(t)}else if(s.this_chid){const n=await y(e,"scope");$("#scoped-script-list").prepend(n);const t=s.characters[s.this_chid]?.data?.extensions?.TavernHelper_scripts||[];t.unshift(e),await f(t)}else toastr.error("保存失败，当前角色为空")}else toastr.error("保存失败，脚本名称为空")}async function g(e){await(0,r.P1)("script.scriptsRepository",e)}async function f(e){s.this_chid?await(0,o.writeExtensionField)(s.this_chid,"TavernHelper_scripts",e):toastr.error("保存失败，当前角色为空")}async function h(e){const n=$(`#${e}`),t=!n.find(".script-storage-location").hasClass("move-to-scoped"),a=(t?s.characters[s.this_chid]?.data?.extensions?.TavernHelper_scripts:(0,r.CN)("script.scriptsRepository"))??[],o=a.findIndex((n=>n.id===e));o&&-1===o||(a.splice(o,1),t?await f(a):await g(a),await v()),n.remove()}async function v(){$("#global-script-list").empty(),$("#scoped-script-list").empty();const e=(0,r.CN)("script.scriptsRepository")??[],n=s.characters[s.this_chid]?.data?.extensions?.TavernHelper_scripts??[];e.length>0&&e.forEach((async e=>{const n=await y(e,"global");$("#global-script-list").prepend(n)})),n.length>0&&n.forEach((async e=>{const n=await y(e,"scope");$("#scoped-script-list").prepend(n)}))}async function y(e,n){const t=u.clone();return t.attr("id",e.id),t.find(".script-item-name").text(e.name),t.find(".script-storage-location").addClass("global"===n?"move-to-scoped":"move-to-global"),t.find(".script-storage-location i").addClass("global"===n?"fa-arrow-down":"fa-arrow-up"),t.find(".edit-script").on("click",(()=>m(n,e.id))),t.find(".delete-script").on("click",(async()=>{await(0,i.callGenericPopup)("确定要删除这个脚本吗？",i.POPUP_TYPE.CONFIRM)&&await h(e.id)})),t}async function b(){$("#open-global-script-editor").on("click",(()=>m("global",null))),$("#open-scoped-script-editor").on("click",(()=>m("scope",null))),v()}a()}catch(w){a(w)}}),1)},553:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({isMobile:()=>l.isMobile})},587:(e,n,t)=>{t.a(e,(async(e,a)=>{try{t.d(n,{$Z:()=>E,E6:()=>F,FF:()=>y,LV:()=>S,R:()=>b,RV:()=>X,Vl:()=>v,YL:()=>W,hL:()=>T,hk:()=>j,jV:()=>q,mL:()=>J,mv:()=>w,rp:()=>A,v2:()=>C});var r=t(117),s=t(799),o=t(538),i=t(224),l=t(365),c=t(489),d=e([s]);s=(d.then?(await d)():d)[0];let p,u,m,_=null;const g=new Map,f=hljs.highlightElement,h={FULL:"FULL",PARTIAL:"PARTIAL"},v=[l.event_types.CHARACTER_MESSAGE_RENDERED,l.event_types.USER_MESSAGE_RENDERED,l.event_types.MESSAGE_UPDATED,l.event_types.MESSAGE_SWIPED],y={render_enabled:!0,auto_enable_character_regex:!0,auto_disable_incompatible_options:!0,tampermonkey_compatibility:!1,render_depth:3,render_optimize:!1};const b="/characters/",w=()=>`./User Avatars/${l.user_avatar}`,E=()=>{const e=(0,l.getThumbnailUrl)("avatar",l.characters[l.this_chid].avatar),n=e.substring(e.lastIndexOf("=")+1);return b+n};async function x(){await N(),await(0,l.reloadCurrentChat)(),await S()}async function S(){await I(h.FULL),console.log("[Render] 渲染所有iframe")}async function C(e){const n=parseInt($("#process_depth").val(),10),t=(0,c.getContext)().chat.length;if(n>0){if(e<t-n)return}await I(h.PARTIAL,e),console.log("[Render] 渲染"+e+"号消息的iframe")}const T='\n$(window).on("message", function (event) {\n    if (event.originalEvent.data.request === "updateViewportHeight") {\n        const newHeight = event.originalEvent.data.newHeight;\n        $("html").css("--viewport-height", newHeight + "px");\n    }\n});\n',A="\nclass AudioManager {\n  constructor() {\n    this.currentlyPlaying = null;\n  }\n  handlePlay(audio) {\n    if (this.currentlyPlaying && this.currentlyPlaying !== audio) {\n      this.currentlyPlaying.pause();\n    }\n    window.parent.postMessage({\n      type: 'audioPlay',\n      iframeId: window.frameElement.id\n    }, '*');\n\n    this.currentlyPlaying = audio;\n  }\n  stopAll() {\n    if (this.currentlyPlaying) {\n      this.currentlyPlaying.pause();\n      this.currentlyPlaying = null;\n    }\n  }\n}\nconst audioManager = new AudioManager();\n$('.qr-button').on('click', function() {\n  const buttonName = $(this).text().trim();\n  window.parent.postMessage({ type: 'buttonClick', name: buttonName }, '*');\n});\n$('.st-text').each(function() {\n  $(this).on('input', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  $(this).on('change', function() {\n    window.parent.postMessage({ type: 'textInput', text: $(this).val() }, '*');\n  });\n  const textarea = this;\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'value') {\n        window.parent.postMessage({ type: 'textInput', text: $(textarea).val() }, '*');\n      }\n    });\n  });\n  observer.observe(textarea, { attributes: true });\n});\n$('.st-send-button').on('click', function() {\n  window.parent.postMessage({ type: 'sendClick' }, '*');\n});\n$('.st-audio').on('play', function() {\n  audioManager.handlePlay(this);\n});\n$(window).on('message', function(event) {\n  if (event.originalEvent.data.type === 'stopAudio' &&\n    event.originalEvent.data.iframeId !== window.frameElement.id) {\n    audioManager.stopAll();\n  }\n});\n";function k(e){if(!/min-height:\s*[^;]*vh/.test(e))return e;const n=window.innerHeight;return e.replace(/min-height:\s*([^;]*vh[^;]*);/g,(e=>`${e.replace(/(\d+)vh/g,`calc(var(--viewport-height, ${n}px) * $1 / 100)`)};`))}async function I(e=h.FULL,n=null){if(!s.Jl||!p)return;const t=(0,c.getContext)(),a=t.chat.length,d=m||0,_=d>0?d:a,g=[...Array(a).keys()].slice(-_);let f=[],v=[...Array(a).keys()].filter((e=>!g.includes(e)));if(e===h.FULL)f=g;else if(e===h.PARTIAL&&null!==n){if(!g.includes(n))return;f=[n]}for(const e of v){const n=t.chat[e],a=$(`[id^="message-iframe-${e}-"]`);if(a.length>0&&(await Promise.all(a.toArray().map((async e=>{R(e)}))),(0,l.updateMessageBlock)(e,n)),u){U($(`.mes[mesid="${e}"] .mes_block .mes_text`))}}const y=[];for(const e of f){const n=$(`.mes[mesid="${e}"]`);if(!n.length){console.debug(`未找到 mesid: ${e} 对应的消息元素。`);continue}const t=n.find("pre");if(!t.length)continue;let a=1;t.each((function(){let n=D(this);if(!n.includes("<body")||!n.includes("</body>"))return void(u&&H(e));const t=/<!--\s*disable-default-loading\s*-->/.test(n),c=/min-height:\s*[^;]*vh/.test(n);n=c?k(n):n;const d=$("<div>").css({position:"relative",width:"100%"}),p=$("<iframe>").attr({id:`message-iframe-${e}-${a}`,srcdoc:"",loading:"lazy"}).css({margin:"5px auto",border:"none",width:"100%"});a++,c&&p.attr("data-needs-vh","true");let m=null;if(!t){const e=$("<div>").addClass("iframe-loading-overlay").html('\n            <div class="iframe-loading-content">\n              <i class="fa-solid fa-spinner fa-spin"></i>\n              <span class="loading-text">Loading...</span>\n            </div>');m=setTimeout((()=>{const n=e.find(".loading-text");n.length&&n.text("如加载时间过长，请检查网络")}),1e4),d.append(e)}d.append(p);const _=`\n        <html>\n        <head>\n          <style>\n          ${c?`:root{--viewport-height:${window.innerHeight}px;}`:""}\n          html,body{margin:0;padding:0;overflow:hidden;max-width:100%!important;box-sizing:border-box}\n          .user_avatar,.user-avatar{background-image:url('${w()}')}\n          .char_avatar,.char-avatar{background-image:url('${E()}')}\n          </style>\n          ${i.A}\n          <script src="${o.S.get("iframe_client")}"><\/script>\n          ${r.Sh}\n        </head>\n        <body>\n          ${n}\n          ${c?`<script src="${o.S.get("viewport_adjust_script")}"><\/script>`:""}\n          ${(0,s.CN)("render.tampermonkey_compatibility")?`<script src="${o.S.get("tampermonkey_script")}"><\/script>`:""}\n        </body>\n        </html>\n      `;p.attr("srcdoc",_),p.on("load",(function(){M(this);const n=$(this).parent();if(n.length){const e=n.find(".iframe-loading-overlay");e.length&&(e.css("opacity","0"),setTimeout((()=>e.remove()),300))}if("true"===$(this).attr("data-needs-vh")){const e=this;e.contentWindow&&e.contentWindow.postMessage({request:"updateViewportHeight",newHeight:window.innerHeight},"*")}l.eventSource.emitAndWait("message_iframe_render_ended",this.id),u&&$(`div[mesid="${e}"] .code-toggle-button`).each((function(){$(this).off("click").remove()})),m&&clearTimeout(m)})),l.eventSource.emitAndWait("message_iframe_render_started",p.attr("id")),$(this).replaceWith(d)})),y.push(e)}}function M(e){const n=$(e);if(!n.length||!n[0].contentWindow||!n[0].contentWindow.document.body)return;const t=n[0].contentWindow.document.body,a=n.attr("id");let r=null;L(e);try{window.ResizeObserver&&(r=new ResizeObserver((()=>{L(e)})),r.observe(t),a&&g.set(a,r))}catch(e){console.error("ResizeObserver初始化错误:",e)}e.cleanup=()=>{r&&(r.disconnect(),a&&g.delete(a))}}function R(e){const n=$(e);if(!n.length)return;const t=n.attr("id");n.off();try{if(n[0].contentWindow){const e=n[0].contentWindow.document;e&&($(e).find("*").off(),$(e).off())}}catch(e){console.debug("清理iframe内部事件时出错:",e)}try{n.contents().find("audio, video").each((function(){this instanceof HTMLMediaElement&&(this.pause(),this.src="",this.load(),$(this).off())}))}catch(e){console.debug("清理媒体元素时出错:",e)}if(n[0].contentWindow&&"stop"in n[0].contentWindow&&n[0].contentWindow.stop(),n[0].contentWindow)try{t&&"function"==typeof l.eventSource.removeListener&&(l.eventSource.removeListener("message_iframe_render_ended",t),l.eventSource.removeListener("message_iframe_render_started",t)),n.attr("src","about:blank")}catch(e){console.debug("清空iframe内容时出错:",e)}if(e.cleanup&&"function"==typeof e.cleanup)e.cleanup();else if(t&&g.has(t)){g.get(t).disconnect(),g.delete(t)}const a=n.clone(!1);n.parent().length&&n.replaceWith(a),a.parent().length&&a.remove();try{n.removeData()}catch(e){console.debug("移除jQuery数据缓存时出错:",e)}for(let n in e)if(e.hasOwnProperty(n))try{e[n]=null}catch(e){}return null}async function N(){$('iframe[id^="message-iframe"]').each((function(){R(this)}));try{"function"==typeof l.eventSource.removeListener&&(l.eventSource.removeListener("message_iframe_render_started",null),l.eventSource.removeListener("message_iframe_render_ended",null))}catch(e){console.debug("清理事件监听器时出错:",e)}try{let e=[];for(let n=0;n<10;n++)e.push(new Array(1e6).fill(1));e=null,window.gc&&window.gc()}catch(e){console.debug("尝试触发垃圾回收时出错:",e)}}function O(e){if("buttonClick"===e.data.type){const n=e.data.name;$(".qr--button.menu_button").each((function(){$(this).find(".qr--button-label").text().trim()===n&&$(this).trigger("click")}))}else if("textInput"===e.data.type){const n=jQuery("#send_textarea");n.length&&n.val(e.data.text).trigger("input").trigger("change")}else if("sendClick"===e.data.type){const e=jQuery("#send_but");e.length&&e.trigger("click")}}function P(){let e=null;window.addEventListener("message",(function(n){if("audioPlay"===n.data.type){const t=n.data.iframeId;e&&e!==t&&$("iframe").each((function(){const e=this;e.contentWindow&&e.contentWindow.postMessage({type:"stopAudio",iframeId:t},"*")})),e=t}}))}function L(e){const n=$(e);if(!n.length||!n[0].contentWindow||!n[0].contentWindow.document.body)return;const t=n[0].contentWindow.document,a=t.body.offsetHeight,r=t.documentElement.offsetHeight,s=Math.max(a,r),o=parseFloat(n.css("height"))||0;Math.abs(o-s)>5&&(n.css("height",s+"px"),"true"===n.attr("data-needs-vh")&&e.contentWindow&&e.contentWindow.postMessage({request:"updateViewportHeight",newHeight:window.innerHeight},"*"))}function D(e){let n="";return $(e).contents().each((function(){this.nodeType===Node.TEXT_NODE?n+=this.textContent:this.nodeType===Node.ELEMENT_NODE&&(n+=D(this))})),n}async function j(e){const n=(0,c.getContext)(),t=parseInt($("#process_depth").val(),10),a=n.chat.length,r=e-1;if(0===t){const e=n.chat[r],t=/```[\s\S]*?```/.test(e),a=$('[id^="message-iframe-'+r+'-"]');if(!t&&0===a.length)return;R(a.get(0)),(0,l.updateMessageBlock)(r,e),C(r)}else{for(let e=a-t;e<=r;e++){const t=n.chat[e],a=/```[\s\S]*?```/.test(t),r=$('[id^="message-iframe-'+e+'-"]');(a||0!==r.length)&&(R(r.get(0)),(0,l.updateMessageBlock)(e,t),C(e))}}}async function G(){const e=Boolean($("#tampermonkey_compatibility").prop("checked"));await(0,s.P1)("render.tampermonkey_compatibility",e),(0,s.CN)("activate_setting")&&(e?_||(_=O,window.addEventListener("message",_),P()):_&&(window.removeEventListener("message",_),_=null),await x())}async function V(e){const n=parseInt(e,10);if(m=n,n<0)return toastr.warning("处理深度不能为负数"),void $("#render-depth").val((0,s.CN)("render.render_depth"));await(0,s.P1)("render.render_depth",n),await x()}const W=e=>{console.log("[Render] PARTIAL render event triggered for message ID:",e);const n=parseInt($("#process_depth").val(),10),t=(0,c.getContext)().chat.length;if(n>0){if(e<t-n)return}setTimeout((()=>{I(h.PARTIAL,e)}),100)};function B(){if($("#iframe-loading-styles").length)return;const e=$("<style>",{id:"iframe-loading-styles",text:"\n      .iframe-loading-overlay{\n        position:absolute;\n        top:0;\n        left:0;\n        right:0;\n        bottom:0;\n        background:rgba(0,0,0,.7);\n        display:flex;\n        justify-content:center;\n        align-items:center;\n        z-index:1000;\n        transition:opacity .3s ease\n      }\n      .iframe-loading-content{\n        color:#fff;\n        display:flex;\n        align-items:center;\n        gap:10px;\n        font-size:16px\n      }\n      .iframe-loading-content i{\n        font-size:20px\n      }\n      .loading-text {\n        transition: opacity 0.3s ease;\n      }"});$("head").append(e)}function U(e){e.find(".code-toggle-button").length>0||0===e.find("pre").length||e.find("pre").each((function(){const e=$(this),n=$('<div class="code-toggle-button" title="取消选中‘前端卡渲染优化’关闭此折叠功能">显示代码块</div>');n.on("click",(function(){e.is(":visible")?(e.hide(),$(this).text("显示代码块")):(e.show(),$(this).text("隐藏代码块"))})),e.before(n)}))}function F(){const e=$("#chat");e.length&&e.find(".mes .mes_block .mes_text").each((function(){U($(this))}))}function H(e){const n=$("#chat");if(!n.length)return;U(n.find(`div[mesid="${e}"] .mes_block .mes_text`))}function J(){var e,n;e="hidden-code-block-styles",(n=document.getElementById(e))||((n=document.createElement("style")).setAttribute("type","text/css"),n.setAttribute("id",e),document.head.appendChild(n)),n.innerHTML="\n    pre {\n      display: none;\n    }\n    .code-toggle-button {\n      display: inline-block;\n      margin: 5px 0;\n      padding: 5px 10px;\n      background-color: rgba(0, 0, 0, 0.1);\n      border-radius: 4px;\n      cursor: pointer;\n      font-size: 0.9em;\n      user-select: none;\n      transition: background-color 0.3s;\n    }\n    .code-toggle-button:hover {\n      background-color: rgba(0, 0, 0, 0.2);\n    }\n  ",hljs.highlightElement=function(){}}function q(){var e;hljs.highlightElement=f,(e=document.getElementById("hidden-code-block-styles"))&&e.remove(),$(".code-toggle-button").each((function(){$(this).off("click").remove()})),$("pre").css("display","block")}async function Y(e=!0,n=!0){e&&(await(0,s.P1)("render.render_optimize",n),u=n),p&&(n?(J(),e&&await x()):(q(),e&&await x()))}async function Z(e,n=!0){n&&(await(0,s.P1)("render.render_enabled",e),p=e),e?($("#render-settings-content .extension-content-item").not(":first").css("opacity",1),u&&J(),await S()):($("#render-settings-content .extension-content-item").not(":first").css("opacity",.5),u&&q(),await N(),await(0,l.reloadCurrentChat)())}function z(){const e=$(`\n  <div id="tavern-helper-container" class="list-group-item flex-container flexGap5 interactable">\n      <div class="fa-solid fa-puzzle-piece extensionsMenuExtensionButton" /></div>\n      <span id="tavern-helper-text">${p?"关闭前端渲染":"开启前端渲染"}</span>\n  </div>`);e.css("display","flex"),$("#extensionsMenu").append(e),$("#tavern-helper-container").on("click",(async function(){$("#tavern-helper-text").text(p?"开启前端渲染":"关闭前端渲染"),await Z(!p,!0),$("#render-enable-toggle").prop("checked",p)}))}const X=()=>{m=(0,s.CN)("render.render_depth"),$("#render-depth").val(m||y.render_depth).on("input",(function(e){V(e.target.value)})),p=(0,s.CN)("render.render_enabled"),Z(p,!1),$("#render-enable-toggle").prop("checked",p).on("click",(e=>Z(e.target.checked,!0))),z(),u=(0,s.CN)("render.render_optimize"),u&&Y(!1,!0),$("#render-optimize-toggle").prop("checked",u).on("click",(e=>Y(!0,e.target.checked)));const e=(0,s.CN)("render.tampermonkey_compatibility");$("#tampermonkey_compatibility").prop("checked",e).on("click",G),e&&G(),$(window).on("resize",(function(){$('iframe[data-needs-vh="true"]').length&&$(window).on("resize",(function(){if($('iframe[data-needs-vh="true"]').length){const e=window.innerHeight;$('iframe[data-needs-vh="true"]').each((function(){const n=this;n.contentWindow&&n.contentWindow.postMessage({request:"updateViewportHeight",newHeight:e},"*")}))}}))})),B()};a()}catch(K){a(K)}}))},595:(e,n,t)=>{t.d(n,{o6:()=>s,jB:()=>r});class a{size_=0;map=new Map;operator;constructor(e,n){if(this.operator=e,n)for(const[e,t]of n)this.put(e,t);return this}get size(){return this.size_}get(e){const n=this.map.get(e);return n?this.operator.clone(n):this.operator.create()}put(e,n){let t=this.map.get(e);return t||(t=this.operator.create()),!!this.operator.add(n,t)&&(this.map.set(e,t),this.size_++,!0)}putAll(e,n){let t=0;if(n){const a=e,r=n;for(const e of r)this.put(a,e),t++}else{if(!(e instanceof a))throw new TypeError("unexpected arguments");for(const[n,a]of e.entries())this.put(n,a),t++}return t>0}has(e){return this.map.has(e)}hasEntry(e,n){return this.operator.has(n,this.get(e))}delete(e){return this.size_-=this.operator.size(this.get(e)),this.map.delete(e)}deleteEntry(e,n){const t=this.get(e);return!!this.operator.delete(n,t)&&(this.map.set(e,t),this.size_--,!0)}clear(){this.map.clear(),this.size_=0}keys(){return this.map.keys()}entries(){const e=this;return function*(){for(const[n,t]of e.map.entries())for(const e of t)yield[n,e]}()}values(){const e=this;return function*(){for(const[,n]of e.entries())yield n}()}forEach(e,n){for(const[t,a]of this.entries())e.call(void 0===n?this:n,a,t,this)}[Symbol.iterator](){return this.entries()}asMap(){const e=new Map;for(const n of this.keys())e.set(n,this.operator.clone(this.get(n)));return e}}Symbol.toStringTag;Symbol.toStringTag;function r(e,n){return e.reduce((([e,t],a)=>(n(a)?e.push(a):t.push(a),[e,t])),[[],[]])}function s(e,n){const t=e.get(n);if(t)return e.delete(n),t}},599:(e,n,t)=>{t.d(n,{Ah:()=>i,Ji:()=>l,Km:()=>c,NU:()=>d});var a=t(121),r=t(365),s=t(489);let o=null;function i(){(0,a.cB)("[Variables][setVariables]",(async e=>{const n=e.data.variables,t=e.data.message_id;if(isNaN(t))return;const i=(0,s.getContext)().chat.length-1;if(t!==i)return void console.info(`因为 ${t} 楼不是最新楼层 ${i} 楼, 取消设置聊天变量. 原本要设置的变量:\n${JSON.stringify(n,void 0,2)} `);o=t,r.chat_metadata.variables&&"object"==typeof r.chat_metadata.variables||(r.chat_metadata.variables={}),r.chat_metadata.variables.tempVariables&&"object"==typeof r.chat_metadata.variables.tempVariables||(r.chat_metadata.variables.tempVariables={}),n.hasOwnProperty("tempVariables")&&delete n.tempVariables;const l=r.chat_metadata.variables.tempVariables,c=r.chat_metadata.variables;Object.keys(n).forEach((e=>{const t=n[e];t!==c[e]&&(l[e]=t)})),r.chat_metadata.variables.tempVariables=l,(0,s.saveMetadataDebounced)(),console.info(`${(0,a.Jn)(e)}设置聊天变量, 要设置的变量:\n${JSON.stringify(n,void 0,2)} `)}))}function l(){r.chat_metadata.variables&&r.chat_metadata.variables.tempVariables&&Object.keys(r.chat_metadata.variables.tempVariables).length>0&&(console.log("[Var]Clearing tempVariables."),r.chat_metadata.variables.tempVariables={},(0,s.saveMetadataDebounced)())}function c(e){if(r.chat_metadata.variables&&r.chat_metadata.variables.tempVariables&&0!==Object.keys(r.chat_metadata.variables.tempVariables).length)if(e!==o)if(null!==o&&e>o){console.log("[Var]Event mesId is newer than setVariables mesId, updating ST variables.");!function(e){r.chat_metadata.variables||(r.chat_metadata.variables={});const n=r.chat_metadata.variables;for(let t in e)e.hasOwnProperty(t)&&(n[t]=e[t]);r.chat_metadata.variables=n,(0,s.saveMetadataDebounced)()}({...r.chat_metadata.variables.tempVariables}),r.chat_metadata.variables.tempVariables={},console.log("[Var]TempVariables cleared.")}else console.log("[Var]Event mesId is older than setVariables mesId, ignoring.");else console.log("[Var]MesId matches the latest setVariables, skipping ST variable update.")}const d=[r.event_types.CHARACTER_MESSAGE_RENDERED,r.event_types.USER_MESSAGE_RENDERED]},617:(e,n,a)=>{a.d(n,{d:()=>O});var r=a(121),s=a(365);const o=(e=>{var n={};return a.d(n,e),n})({NOTE_MODULE_NAME:()=>c.NOTE_MODULE_NAME,metadata_keys:()=>c.metadata_keys,shouldWIAddPrompt:()=>c.shouldWIAddPrompt});var i=a(489),l=a(628);const u=(e=>{var n={};return a.d(n,e),n})({ChatCompletion:()=>d.ChatCompletion,Message:()=>d.Message,MessageCollection:()=>d.MessageCollection,isImageInliningSupported:()=>d.isImageInliningSupported,oai_settings:()=>d.oai_settings,prepareOpenAIMessages:()=>d.prepareOpenAIMessages,sendOpenAIRequest:()=>d.sendOpenAIRequest,setOpenAIMessageExamples:()=>d.setOpenAIMessageExamples,setOpenAIMessages:()=>d.setOpenAIMessages,setupChatCompletionPromptManager:()=>d.setupChatCompletionPromptManager});var m=a(434);const _=(e=>{var n={};return a.d(n,e),n})({Prompt:()=>p.Prompt,PromptCollection:()=>p.PromptCollection});var g=a(892),f=a(706);let h=new AbortController;function v(e){return{world_info_before:e.world_info_before,persona_description:e.persona_description,char_description:e.char_description,char_personality:e.char_personality,scenario:e.scenario,world_info_after:e.world_info_after,dialogue_examples:e.dialogue_examples,with_depth_entries:e.chat_history?.with_depth_entries,author_note:e.chat_history?.author_note,chat_history:e.chat_history?.prompts}}function y(e){return{role:e.role,content:e.content,position:{before_prompt:"BEFORE_PROMPT",in_chat:"IN_CHAT",after_prompt:"IN_PROMPT",none:"NONE"}[e.position],depth:e.depth,scan:e.should_scan}}const b="quiet",w=!1,E={NONE:-1,DEFAULT:0,COMPLETION:1,CONTENT:2},x={system:s.extension_prompt_roles.SYSTEM,user:s.extension_prompt_roles.USER,assistant:s.extension_prompt_roles.ASSISTANT},S=["world_info_before","persona_description","char_description","char_personality","scenario","world_info_after","dialogue_examples","chat_history","user_input"];class C{generator;stoppingStrings;result;isStopped;isFinished;abortController;messageBuffer;constructor(){this.result="",this.messageBuffer="",this.isStopped=!1,this.isFinished=!1,this.generator=this.nullStreamingGeneration,this.abortController=new AbortController}onProgressStreaming(e,n){const t=e.slice(this.messageBuffer.length);this.messageBuffer=e;let a=(0,s.cleanUpMessage)(t,!1,!1,!n,this.stoppingStrings);const r=["*",'"',"```"];for(const e of r)if(!n&&(0,s.isOdd)((0,s.countOccurrences)(a,e))){const n=e.length>1?"\n":"";a=a.trimEnd()+n+e}if(s.eventSource.emit("js_stream_token_received_fully",e),s.eventSource.emit("js_stream_token_received_incrementally",a),n){const n=(0,s.cleanUpMessage)(e,!1,!1,!1,this.stoppingStrings);s.eventSource.emit("js_generation_ended",n)}}onErrorStreaming(){this.abortController&&this.abortController.abort(),this.isStopped=!0,I(),(0,s.saveChatConditional)()}async*nullStreamingGeneration(){throw Error("Generation function for streaming is not hooked up")}async generate(){try{const e=new g.Stopwatch(1e3/m.power_user.streaming_fps),n=[];for await(const{text:t}of this.generator()){if(n.push(Date.now()),this.isStopped)return void(this.messageBuffer="");this.result=t,await e.tick((()=>this.onProgressStreaming(t,!1)))}this.isStopped?this.messageBuffer="":this.onProgressStreaming(this.result,!0);const t=(n[n.length-1]-n[0])/1e3;console.warn(`Stream stats: ${n.length} tokens, ${t.toFixed(2)} seconds, rate: ${Number(n.length/t).toFixed(2)} TPS`)}catch(e){if(!this.isFinished)throw this.onErrorStreaming(),Error(`Generate method error: ${e}`);return this.messageBuffer="",this.result}return this.isFinished=!0,this.result}}async function T({user_input:e="",use_preset:n=!0,image:a=null,overrides:r,max_chat_history:c,inject:d=[],order:p,stream:g=!1}={}){h=new AbortController;const v=function(e,n){""===e&&(e=n.send_if_empty.trim());return(0,l.getRegexedString)(e,l.regex_placement.USER_INPUT,{isPrompt:!0,depth:0})}((0,s.substituteParams)(e),u.oai_settings)||"",y=await async function(e,n){const t=n=>{if(e.overrides)return e.overrides[n]};N("chat_history",e)||function(){const e=(0,s.baseChatReplace)(s.characters[s.this_chid]?.data?.extensions?.depth_prompt?.prompt?.trim(),s.name1,s.name2)||"",n=s.characters[s.this_chid]?.data?.extensions?.depth_prompt?.depth??"4",t=(0,s.getExtensionPromptRoleByName)(s.characters[s.this_chid]?.data?.extensions?.depth_prompt?.role??"system");(0,s.setExtensionPrompt)("DEPTH_PROMPT",e,s.extension_prompt_types.IN_CHAT,n,i.extension_settings.note.allowWIScan,t)}();N("chat_history",e)||N("author_note",e)||function(e){const n=e?.overrides?.author_note;let t=n??$("#extension_floating_prompt").val();(0,s.setExtensionPrompt)(o.NOTE_MODULE_NAME,t,s.chat_metadata[o.metadata_keys.position],s.chat_metadata[o.metadata_keys.depth],i.extension_settings.note.allowWIScan,s.chat_metadata[o.metadata_keys.role])}(e);N("chat_history",e)||N("persona_description",e)||function(){const e=m.power_user.persona_description,n="PERSONA_DESCRIPTION";if((0,s.setExtensionPrompt)(n,"",s.extension_prompt_types.IN_PROMPT,0),!e||m.power_user.persona_description_position===m.persona_description_positions.NONE)return;if([m.persona_description_positions.BOTTOM_AN,m.persona_description_positions.TOP_AN].includes(m.power_user.persona_description_position)&&o.shouldWIAddPrompt){const n=(0,i.getContext)().extensionPrompts[o.NOTE_MODULE_NAME].value,t=m.power_user.persona_description_position===m.persona_description_positions.TOP_AN?`${e}\n${n}`:`${n}\n${e}`;(0,s.setExtensionPrompt)(o.NOTE_MODULE_NAME,t,s.chat_metadata[o.metadata_keys.position],s.chat_metadata[o.metadata_keys.depth],i.extension_settings.note.allowWIScan,s.chat_metadata[o.metadata_keys.role])}m.power_user.persona_description_position===m.persona_description_positions.AT_DEPTH&&(0,s.setExtensionPrompt)(n,e,s.extension_prompt_types.IN_CHAT,m.power_user.persona_description_depth,!0,m.power_user.persona_description_role)}();const{description:a,personality:r,persona:c,scenario:d,mesExamples:p,system:_,jailbreak:g}=(0,s.getCharacterCardFields)(),h=N("char_description",e)?"":t("char_description")??a,v=N("char_personality",e)?"":t("char_personality")??r,y=N("persona_description",e)?"":t("persona_description")??c,E=N("scenario",e)?"":t("scenario")??d;let S=A(N("dialogue_examples",e)?"":t("dialogue_examples")??p),C=[];C=(0,u.setOpenAIMessageExamples)(S);const{promptBias:T}=(0,s.getBiasStrings)(n,b);e.inject&&await async function(e){if(!e||!Array.isArray(e.inject))return;const n=e.inject,t={IN_PROMPT:s.extension_prompt_types.IN_PROMPT,IN_CHAT:s.extension_prompt_types.IN_CHAT,BEFORE_PROMPT:s.extension_prompt_types.BEFORE_PROMPT,NONE:s.extension_prompt_types.NONE};for(const e of n){const n={role:x[e.role]??s.extension_prompt_roles.SYSTEM,content:e.content||"",depth:Number(e.depth)||0,scan:Boolean(e.scan)||!0,position:t[e.position]??s.extension_prompt_types.IN_CHAT};(0,s.setExtensionPrompt)(`INJECTION-${e.depth}-${e.role}`,n.content,n.position,n.depth,n.scan,n.role)}}(e);let k=[];e.overrides?.chat_history?k=[...e.overrides.chat_history].reverse():(k=(0,u.setOpenAIMessages)(await async function(e){let n=e.filter((e=>!e.is_system));return await Promise.all(n.map((async(e,t)=>{let a=e.mes,r=e.is_user?l.regex_placement.USER_INPUT:l.regex_placement.AI_OUTPUT,s=(0,l.getRegexedString)(a,r,{isPrompt:!0,depth:n.length-t-1});return{...e,mes:s,index:t}})))}(s.chat)),void 0!==e.max_chat_history&&(k=k.slice(0,e.max_chat_history)));I=n,(0,s.setExtensionPrompt)("TEMP_USER_MESSAGE",I,s.extension_prompt_types.IN_PROMPT,0,!0,1);var I;const R=await async function(e,n){const t=e.filter((e=>"system"!==e.role)).map((e=>{const n="user"===e.role?s.name1:s.name2;return f.world_info_include_names?`${n}: ${e.content}`:e.content})).reverse(),a=(0,s.getMaxContextSize)(),{worldInfoString:r,worldInfoBefore:o,worldInfoAfter:i,worldInfoExamples:l,worldInfoDepth:c}=await(0,f.getWorldInfoPrompt)(t,a,w);await M(["customDepthWI"]),N("with_depth_entries",n)||function(e){Array.isArray(e)&&e.forEach((e=>{const n=e.entries.join("\n");(0,s.setExtensionPrompt)(`customDepthWI-${e.depth}-${e.role}`,n,s.extension_prompt_types.IN_CHAT,e.depth,!1,e.role)}))}(c);const d=N("world_info_before",n)?null:void 0!==n.overrides?.world_info_before?n.overrides.world_info_before:o,p=N("world_info_after",n)?null:void 0!==n.overrides?.world_info_after?n.overrides.world_info_after:i;return{worldInfoString:r,worldInfoBefore:d,worldInfoAfter:p,worldInfoExamples:l,worldInfoDepth:N("with_depth_entries",n)?null:c}}(k,e);return function(){(0,s.setExtensionPrompt)("TEMP_USER_MESSAGE","",s.extension_prompt_types.IN_PROMPT,0,!0,1)}(),S=N("dialogue_examples",e)?[]:await async function(e,n){for(const t of n){if(!t.content.length)continue;const n=A((0,s.baseChatReplace)(t.content,s.name1,s.name2));t.position===f.wi_anchor_position.before?e.unshift(...n):e.push(...n)}return e}(S,R.worldInfoExamples),{characterInfo:{description:h,personality:v,persona:y,scenario:E,system:_,jailbreak:g},chatContext:{oaiMessages:k,oaiMessageExamples:C,promptBias:T},worldInfo:R}}({overrides:r,max_chat_history:c,inject:d,order:p},v),T=n?await async function(e,n,t){let a=null;try{const r=t?.overrides?.scenario;r&&s.characters&&s.characters[s.this_chid]&&(a=s.characters[s.this_chid].scenario||null,s.characters[s.this_chid].scenario=r);const o={role:"user",content:n};t.image&&(o.image=await R(t.image)),e.chatContext.oaiMessages.unshift(o);const l={name2:s.name2,charDescription:e.characterInfo.description,charPersonality:e.characterInfo.personality,Scenario:e.characterInfo.scenario,worldInfoBefore:e.worldInfo.worldInfoBefore,worldInfoAfter:e.worldInfo.worldInfoAfter,extensionPrompts:(0,i.getContext)().extensionPrompts,bias:e.chatContext.promptBias,type:"normal",quietPrompt:"",quietImage:null,cyclePrompt:"",systemPromptOverride:e.characterInfo.system,jailbreakPromptOverride:e.characterInfo.jailbreak,personaDescription:e.characterInfo.persona,messages:e.chatContext.oaiMessages,messageExamples:e.chatContext.oaiMessageExamples},[c]=await(0,u.prepareOpenAIMessages)(l,w);return{prompt:c}}finally{null!==a&&s.characters&&s.characters[s.this_chid]&&(s.characters[s.this_chid].scenario=a)}}(y,v,{image:a,overrides:r,max_chat_history:c,inject:d,order:p}):await async function(e,n,t){const a=new u.ChatCompletion;a.setTokenBudget(u.oai_settings.openai_max_context,u.oai_settings.openai_max_tokens),a.reserveBudget(3);const r=n.order||S,l=r.reduce(((e,n,t)=>("string"==typeof n?e[n.toLowerCase()]=t:"object"==typeof n&&(e[`custom_prompt_${t}`]=t),e)),{}),{systemPrompts:c,dialogue_examples:d}=await async function(e,n){const t=new _.PromptCollection,a=new u.MessageCollection("dialogue_examples"),r=(n.order||S).map(((e,n)=>{if("object"==typeof e&&e.role&&e.content){return{identifier:`custom_prompt_${n}`,role:e.role,content:e.content}}return null})).filter((e=>null!==e));for(const e of r)t.add(new _.Prompt({identifier:e.identifier,role:e.role,content:e.content,system_prompt:"system"===e.role}));const s=[{id:"char_description",content:e.characterInfo.description,role:"system"},{id:"char_personality",content:e.characterInfo.personality,role:"system"},{id:"scenario",content:e.characterInfo.scenario,role:"system"}];s.forEach((e=>{e.content&&t.add(new _.Prompt({identifier:e.id,role:e.role,content:e.content,system_prompt:!0}))})),m.power_user.persona_description&&m.power_user.persona_description_position===m.persona_description_positions.IN_PROMPT&&t.add(new _.Prompt({identifier:"persona_description",role:"system",content:e.characterInfo.persona,system_prompt:!0}));e.worldInfo.world_info_before&&t.add(new _.Prompt({identifier:"world_info_before",role:"system",content:e.worldInfo.world_info_before,system_prompt:!0}));e.worldInfo.world_info_after&&t.add(new _.Prompt({identifier:"world_info_after",role:"system",content:e.worldInfo.world_info_after,system_prompt:!0}));if(e.chatContext.oaiMessageExamples.length>0)for(const n of[...e.chatContext.oaiMessageExamples]){const t=e.chatContext.oaiMessageExamples.indexOf(n),r=[];for(let e=0;e<n.length;e++){const a=n[e],s="system",o=a.content||"",i=`dialogue_examples ${t}-${e}`,l=await u.Message.createAsync(s,o,i);await l.setName(a.name),r.push(l)}for(const e of r)a.add(e)}return{systemPrompts:t,dialogue_examples:a}}(e,n),p=async(e,n)=>{if("object"==typeof e){const t=new u.MessageCollection(`custom_prompt_${n}`),r=await u.Message.createAsync(e.role,e.content,`custom_prompt_${n}`);t.add(r),a.add(t,n)}else if(c.has(e)){const n=c.get(e),t=new u.MessageCollection(e),r=await u.Message.fromPromptAsync(n);t.add(r),a.add(t,l[e])}};for(const[e,t]of r.entries())"string"==typeof t?N(t,n)||await p(t,e):"object"==typeof t&&t.role&&t.content&&await p(t,e);const g=r.findIndex((e=>"string"==typeof e&&"dialogue_examples"===e.toLowerCase()));-1===g||N("dialogue_examples",n)||a.add(d,g);const f=await u.Message.createAsync("user",t,"user_input");a.reserveBudget(f),await async function(e,n,t,a){const r=n.order||S,l=r.findIndex((e=>"string"==typeof e&&"chat_history"===e.toLowerCase())),c=r.findIndex((e=>"string"==typeof e&&"user_input"===e.toLowerCase())),d=-1!==c,p=-1!==l,g=N("chat_history",n),f=await u.Message.createAsync("user",a,"user_input");n.image&&d&&await f.addImage(await R(n.image));if(g||!p){const e=d?c:r.length;return void t.add(new u.MessageCollection("user_input",f),e)}const h=new u.MessageCollection("chat_history"),v=u.oai_settings.new_chat_prompt,y=await u.Message.createAsync("system",(0,s.substituteParams)(v),"newMainChat");t.reserveBudget(y),h.add(y);const b=e.chatContext.oaiMessages[e.chatContext.oaiMessages.length-1],w=await u.Message.createAsync("user",u.oai_settings.send_if_empty,"emptyUserMessageReplacement");b&&"assistant"===b.role&&u.oai_settings.send_if_empty&&t.canAfford(w)&&h.add(w);if(!d){const t={role:"user",content:a,identifier:"user_input",image:n.image?await R(n.image):void 0};e.chatContext.oaiMessages.unshift(t)}const x=(await async function(e,n=[]){let t=[...e],a=0;const r=[],l=(0,i.getContext)().extensionPrompts[o.NOTE_MODULE_NAME];l&&l.value&&r.push({role:k(l.role),content:l.value,identifier:"authorsNote",injection_depth:l.depth,injected:!0});m.power_user.persona_description&&m.power_user.persona_description_position===m.persona_description_positions.AT_DEPTH&&r.push({role:"system",content:m.power_user.persona_description,identifier:"persona_description",injection_depth:m.power_user.persona_description_depth,injected:!0});if(Array.isArray(n))for(const e of n)r.push({identifier:`INJECTION-${e.role}-${e.depth}`,role:e.role,content:e.content,injection_depth:e.depth||0,injected:!0});for(let e=0;e<=s.MAX_INJECTION_DEPTH;e++){const n=r.filter((n=>n.injection_depth===e&&n.content)),s=["system","user","assistant"],o=[],i="\n";for(const e of s){const t=n.filter((n=>n.role===e)).map((e=>e.content.trim())).join(i);t&&o.push({role:e,content:t,injected:!0})}if(o.length){const n=e+a;t.splice(n,0,...o),a+=o.length}}return t}(e.chatContext.oaiMessages,n.inject)).reverse(),$=(0,u.isImageInliningSupported)(),C=[...x];for(const e of C){const n=new _.Prompt(e);n.identifier="chat_history-"+(x.length-C.indexOf(e)),n.content=(0,s.substituteParams)(n.content);const a=await u.Message.fromPromptAsync(n),r=(0,u.setupChatCompletionPromptManager)();if(r.serviceSettings.names_behavior===E.COMPLETION&&n.name){const e=r.isValidName(n.name)?n.name:r.sanitizeName(n.name);await a.setName(e)}if($&&e.image&&await a.addImage(e.image),!t.canAfford(a))break;h.add(a)}t.freeBudget(y),d?(t.add(h,l),t.add(new u.MessageCollection("user_input",f),c)):t.add(h,l)}(e,n,a,t),a.freeBudget(f),u.oai_settings.squash_system_messages&&await a.squashSystemMessages();return{prompt:a.getChat()}}(y,{image:a,overrides:r,max_chat_history:c,inject:d,order:p},v);return console.log("[Generate:发送提示词]",T),await async function(e,n=!1){let a="";try{if((0,s.deactivateSendButtons)(),n){let n=u.oai_settings.stream_openai;n||(u.oai_settings.stream_openai=!0,(0,s.saveSettingsDebounced)());const t=new C;t.generator=await(0,u.sendOpenAIRequest)("normal",e.prompt,h.signal),a=await t.generate(),n!==u.oai_settings.stream_openai&&(u.oai_settings.stream_openai=n,(0,s.saveSettingsDebounced)())}else{s.eventSource.emit("js_generation_started");const n=await(0,u.sendOpenAIRequest)(b,e.prompt,h.signal);a=await async function(e){if(!e)throw Error("未得到响应");if(e.error)throw e?.response&&toastr.error(e.response,t`API Error`,{preventDuplicates:!0}),Error(e?.response);const n=function(e){if("string"==typeof e)return e;return e?.choices?.[0]?.message?.content??e?.choices?.[0]?.text??e?.text??e?.message?.content?.[0]?.text??e?.message?.tool_plan??""}(e);return s.eventSource.emit("js_generation_ended",n),n}(n)}}catch(e){throw e}finally{I(),await M(["INJECTION"])}return a}(T,g)}function A(e){if(0===e.length||"<START>"===e)return[];e.startsWith("<START>")||(e="<START>\n"+e.trim());return e.split(/<START>/gi).slice(1).map((e=>`<START>\n${e.trim()}\n`))}function k(e){switch(e){case s.extension_prompt_roles.SYSTEM:return"system";case s.extension_prompt_roles.USER:return"user";case s.extension_prompt_roles.ASSISTANT:return"assistant";default:return"system"}}function I(){(0,s.activateSendButtons)(),(0,s.showSwipeButtons)(),(0,s.setGenerationProgress)(0),(0,m.flushEphemeralStoppingStrings)()}async function M(e){const n=(0,i.getContext)().extensionPrompts;Object.keys(n).filter((n=>e.some((e=>n.startsWith(e))))).forEach((e=>delete n[e])),await(0,s.saveChatConditional)()}async function R(e){return e instanceof File?await(0,g.getBase64Async)(e):e}function N(e,n){if(!n.overrides)return!1;if("with_depth_entries"===e)return!1===n.overrides.with_depth_entries;if("chat_history"===e){const e=n.overrides.chat_history;return void 0!==e&&0===e.length}const t=n.overrides[e];return void 0!==t&&""===t}function O(){(0,r.cB)("[Generate][generate]",(async e=>{const n=(0,r.Ed)(e),t=e.data.config;console.info(`${(0,r.Jn)(e)}(${n}) 发送生成请求: ${t}`);const a=function(e){return{user_input:e.user_input,use_preset:!0,image:e.image,stream:e.should_stream??!1,overrides:void 0!==e.overrides?v(e.overrides):void 0,inject:void 0!==e.injects?e.injects.map(y):void 0,max_chat_history:"number"==typeof e.max_chat_history?e.max_chat_history:void 0}}(t);return await T(a)})),(0,r.cB)("[Generate][generateRaw]",(async e=>{const n=(0,r.Ed)(e),t=e.data.config;console.info(`${(0,r.Jn)(e)}(${n}) 发送生成请求: ${t}`);const a=function(e){return{user_input:e.user_input,use_preset:!1,image:e.image,stream:e.should_stream??!1,max_chat_history:"number"==typeof e.max_chat_history?e.max_chat_history:void 0,overrides:e.overrides?v(e.overrides):void 0,inject:e.injects?e.injects.map(y):void 0,order:e.ordered_prompts}}(t);return await T(a)}))}$(document).on("click","#mes_stop",(function(){(0,s.stopGeneration)()&&(h&&h.abort("Clicked stop button"),I())}))},628:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({getRegexedString:()=>u.getRegexedString,regex_placement:()=>u.regex_placement})},629:(e,n,t)=>{t.a(e,(async(e,a)=>{try{t.d(n,{$S:()=>_,$s:()=>U,Dt:()=>v,Mc:()=>b,NM:()=>m,Tq:()=>O,YS:()=>y,fX:()=>C});var r=t(799),s=t(29),o=t(365),i=t(489),l=t(249),c=t(553),d=t(892),p=e([r,s]);let u;[r,s]=p.then?(await p)():p;let m=[],_=[],g=!0,f=!0,h=0;const v={audio_enabled:!0,bgm_enabled:!0,ambient_enabled:!0,bgm_mode:"repeat",bgm_muted:!1,bgm_volume:50,bgm_selected:null,bgm_current_time:0,ambient_mode:"stop",ambient_muted:!1,ambient_volume:50,ambient_selected:null,ambient_current_time:0,audio_cooldown:0};async function y(e="bgm",n=!1){if(!i.extension_settings[r.Zi].audio.audio_setting)return;if(!("bgm"===e?i.extension_settings[r.Zi].audio.bgm_enabled:i.extension_settings[r.Zi].audio.ambient_enabled))return;const t="bgm"===e?g:f,a=`#audio_${e}`;if(!n&&""!=$(a).attr("src")&&!t)return;let s="";const l=await w(e);if(n)s="bgm"===e?i.extension_settings[r.Zi].audio.bgm_selected||l[0]:i.extension_settings[r.Zi].audio.ambient_selected||l[0];else{s=x("bgm"===e?i.extension_settings[r.Zi].audio.bgm_mode:i.extension_settings[r.Zi].audio.ambient_mode,l,"bgm"===e?i.extension_settings[r.Zi].audio.bgm_selected:i.extension_settings[r.Zi].audio.ambient_selected)}if(!s)return;const c=$(a)[0];if("ambient"===e){const e=c.src.split("?")[0],n=s.split("?")[0];if(decodeURIComponent(e)===decodeURIComponent(n)&&!t)return}else if(decodeURIComponent(c.src)===decodeURIComponent(s)&&!t)return;if("bgm"===e?g=!1:f=!1,"bgm"===e)c.src=s,c.load(),await new Promise((e=>{const n=()=>{c.removeEventListener("canplaythrough",n),e()};c.readyState>=HTMLMediaElement.HAVE_ENOUGH_DATA?e():c.addEventListener("canplaythrough",n)})),await O(e);else{const n=E(s);c.src=n,c.load(),await new Promise((e=>{const n=()=>{c.removeEventListener("canplaythrough",n),e()};c.readyState>=HTMLMediaElement.HAVE_ENOUGH_DATA?e():c.addEventListener("canplaythrough",n)})),await O(e)}"bgm"===e?i.extension_settings[r.Zi].audio.bgm_selected=s:i.extension_settings[r.Zi].audio.ambient_selected=s;const d=$(`#audio_${e}_select`);d.val()!==s&&d.val(s),(0,o.saveSettingsDebounced)()}async function b(e="bgm"){if(!i.extension_settings[r.Zi].audio[`${e}_enabled`])return;const n=$(`#audio_${e}_select`);n.empty(),"bgm"===e?m=await w("bgm"):_=await w("ambient");const t="bgm"===e?m:_;let a="bgm"===e?i.extension_settings[r.Zi].audio.bgm_selected:i.extension_settings[r.Zi].audio.ambient_selected;if(t&&t.length>0){t.includes(a)||(console.warn(`[Audio] 当前选择的音频 ${a} 不在列表中，自动选择列表第一个音频`),a=t[0],"bgm"===e?i.extension_settings[r.Zi].audio.bgm_selected=a:i.extension_settings[r.Zi].audio.ambient_selected=a,(0,o.saveSettingsDebounced)());(Array.isArray(t)?t:t.split(",").map((e=>e.trim()))).forEach((e=>{const t=e.replace(/^.*[\\\/]/,"").replace(/\.[^/.]+$/,"");n.append(new Option(t,e))})),n.val(a)}else console.log(`[Audio] 暂无可用的 ${e.toUpperCase()} 资源`)}async function w(e="bgm"){const n="bgm"===e?"bgmurl":"ambienturl";return o.chat_metadata.variables?.[n]||[]}function E(e){if(!e)return"";const n=(new Date).getTime(),t=e.includes("?")?"&":"?";return`${e}${t}_=${n}`}function x(e,n,t){if(!n||0===n.length)return"";switch(e){case"repeat":default:return n[0];case"single":return t||n[0];case"random":{const e=n.filter((e=>e!==t));if(0===e.length)return n[0];return e[Math.floor(Math.random()*e.length)]}case"stop":return""}}function S(e,n="enable"){const t=$("#audio_enabled").prop("checked")&&"enable"===n;[`#audio_${e}_play_pause`,`#audio_${e}_mute`,`#audio_${e}_mode`,`#audio_${e}_select`,`#audio_${e}_volume_slider`].forEach((e=>{$(e).prop("disabled",!t)}))}async function C(e="bgm"){const n=$(`#enable_${e}`).prop("checked");i.extension_settings[r.Zi].audio[`${e}_enabled`]=n,(0,o.saveSettingsDebounced)(),n?(S(e,"enable"),await y(e,!1)):($(`#audio_${e}`)[0].pause(),S(e,"disable"))}function T(e){$(`#audio_${e}`).on("ended",(async function(){"bgm"===e?g=!0:f=!0;"stop"!==i.extension_settings[r.Zi].audio[`${e}_mode`]&&await y(e,!1)}))}function A(e){h=i.extension_settings[r.Zi].audio.audio_cooldown;const n=$(`#audio_${e}`),t=$(`#audio_${e}_progress_slider`);n.on("timeupdate",(function(){if(!isNaN(this.duration)){const e=this.currentTime/this.duration*100;t.val(e)}const e=i.extension_settings[r.Zi].audio.audio_cooldown,n=this.duration-this.currentTime;if(e>0&&n<=e&&!this.isFadingOut){const n=this.volume/(10*e);this.isFadingOut=!0;const t=setInterval((()=>{this.volume>0?this.volume=Math.max(0,this.volume-n):(clearInterval(t),this.isFadingOut=!1)}),100)}})),n.on("play",(function(){const n=i.extension_settings[r.Zi].audio.audio_cooldown,t=$(`#audio_${e}_volume_slider`).val()/100;if(n<=0)return void(this.volume=t);this.volume=0;const a=t/(10*n);let s=setInterval((()=>{this.volume<t?this.volume=Math.min(t,this.volume+a):clearInterval(s)}),100)})),n.on("loadedmetadata",(function(){isNaN(this.duration)||t.attr("max",100)})),t.on("input",(function(){const e=$(this).val();isNaN(n[0].duration)||(n[0].currentTime=e/100*n[0].duration)}))}function k(e){const n=$(this);e.preventDefault(),e.stopPropagation();const t=e.deltaY/20;let a=Number(n.val())-t;a<0?a=0:a>100&&(a=100),n.val(a).trigger("input")}function I(e,n){const t=$("#"+e),a=$("#"+n);let r;(0,c.isMobile)()&&(a.on("touchstart",(function(e){r=setTimeout((()=>{t.css("display","block")}),500)})),a.on("touchend",(function(e){clearTimeout(r)})),$(document).on("click",(function(e){a.is(e.target)||0!==a.has(e.target).length||t.is(e.target)||0!==t.has(e.target).length||t.css("display","none")})))}async function M(){b("bgm"),b("ambient")}async function R(e){const n=$(await(0,i.renderExtensionTemplateAsync)(`${r.VE}`,"urlManager"));n.prepend('\n    <style>\n      #saved_audio_url.empty::after {\n        content: "暂无音频";\n        color: #999;\n        margin-top: 20px;\n        font-size: 12px;\n      }\n    </style>\n  ');const t=n.find("#saved_audio_url").empty(),a=$(await(0,i.renderExtensionTemplateAsync)(`${r.VE}`,"urlTemplate"));o.chat_metadata.variables||(o.chat_metadata.variables={});let s=o.chat_metadata.variables[e];if(s)try{0===s.length&&t.addClass("empty")}catch(n){return console.error(`[Audio] Failed to parse ${e}:`,n),null}else s=[],t.addClass("empty");const c={};function p(e,n){const r=a.clone();let s;if(n.includes("/")){const e=n.split("/");s=e[e.length-1]||e[e.length-2]}else s=n;const o=s.replace(/\./g,"-");r.attr("id",o),r.find(".audio_url_name").text(s),r.find(".audio_url_name").attr("data-url",n),r.find(".edit_existing_url").on("click",(async function(){const e=r.find(".audio_url_name").attr("data-url");if(!e)return void console.error("[Audio] No URL found for this element.");const n=await(0,l.callGenericPopup)("",l.POPUP_TYPE.INPUT,e);if(!n)return;const t=n.split("/").pop(),a=t.replace(/\./g,"-");r.attr("id",a),r.find(".audio_url_name").text(t),r.find(".audio_url_name").attr("data-url",n),c[e]=n})),r.find(".delete_url").on("click",(async function(){await(0,l.callGenericPopup)("确认要删除此链接?",l.POPUP_TYPE.CONFIRM)&&(r.remove(),0===t.find(".audio_url_name").length&&t.addClass("empty"))})),e.append(r)}s.forEach((e=>{p(t,e)})),n.find("#import_button").on("click",(async function(){const n=await W();n?(t.removeClass("empty"),n.forEach((e=>{p(t,e)}))):console.debug(`[Audio] ${e} URL导入已取消`)})),t.sortable({delay:(0,d.getSortableDelay)(),handle:".drag-handle",stop:function(){}});if(await(0,l.callGenericPopup)(n,l.POPUP_TYPE.CONFIRM,"",{okButton:"确认",cancelButton:"取消"})){const n=[];t.find(".audio_url_name").each((function(){const e=$(this).attr("data-url");e&&n.push(e)}));const a=i.extension_settings[r.Zi].audio.bgm_selected,s=i.extension_settings[r.Zi].audio.ambient_selected;if("bgmurl"===e&&a&&!n.includes(a)){$("#audio_bgm")[0].pause(),g=!0}else if("ambienturl"===e&&s&&!n.includes(s)){$("#audio_ambient")[0].pause(),f=!0}o.chat_metadata.variables[e]=n,(0,i.saveMetadataDebounced)(),"bgmurl"===e?b("bgm"):"ambienturl"===e&&b("ambient")}}async function N(e=!0,n=!0){if(e&&(u=n,(0,r.P1)("audio_enabled",u)),n){if($("#audio-player-content").css("opacity","1"),!r.Jl)return;S("bgm","enable"),S("ambient","enable");const e=await w("bgm"),n=await w("ambient");if(e.length>0){const e=$("#audio_bgm")[0];try{await e.play()}catch(e){throw new Error("[Audio] 播放音乐失败：没有提供有效源")}}if(n.length>0){const e=$("#audio_ambient")[0];try{await e.play()}catch(e){throw new Error("[Audio] 播放音效失败：没有提供有效源")}}}else $("#audio-player-content").css("opacity","0.5"),$("#audio_bgm")[0].pause(),$("#audio_ambient")[0].pause(),S("bgm","disable"),S("ambient","disable")}async function O(e){if(!i.extension_settings[r.Zi].activate_setting||!i.extension_settings[r.Zi].audio.audio_setting||!i.extension_settings[r.Zi].audio[`${e}_enabled`])return;const n=$(`#audio_${e}`)[0],t=$(`#audio_${e}_play_pause_icon`);if(n.error&&4===n.error.code){console.warn(`The ${e} element has no supported sources. Trying to reload selected audio from dropdown...`);const t=$(`#audio_${e}_select`).val();if(!t)return void console.error(`No audio selected for ${e}`);n.src=t,n.load()}try{await n.play(),t.removeClass("fa-play"),t.addClass("fa-pause")}catch(n){console.error(`[Audio] 播放 ${e} 音频时出错:`,n)}}async function P(e){const n=[{mode:"repeat",icon:"fa-repeat"},{mode:"random",icon:"fa-random"},{mode:"single",icon:"fa-redo-alt"},{mode:"stop",icon:"fa-cancel"}],t=(n.findIndex((n=>n.mode===i.extension_settings[r.Zi].audio[`${e}_mode`]))+1)%n.length;i.extension_settings[r.Zi].audio[`${e}_mode`]=n[t].mode,$(`#audio_${e}_mode_icon`).removeClass("fa-repeat fa-random fa-redo-alt fa-cancel"),$(`#audio_${e}_mode_icon`).addClass(n[t].icon),(0,o.saveSettingsDebounced)()}async function L(e){i.extension_settings[r.Zi].audio[`${e}_selected`]=$(`#audio_${e}_select`).val(),await y(e,!0),(0,o.saveSettingsDebounced)()}async function D(){i.extension_settings[r.Zi].audio.audio_cooldown=~~$("#audio_cooldown").val(),(0,o.saveSettingsDebounced)()}async function j(e){i.extension_settings[r.Zi].audio[`${e}_volume`]=~~$(`#audio_${e}_volume_slider`).val(),$(`#audio_${e}`).prop("volume",.01*i.extension_settings[r.Zi].audio[`${e}_volume`]),$(`#audio_${e}_volume`).text(i.extension_settings[r.Zi].audio[`${e}_volume`]),(0,o.saveSettingsDebounced)()}async function G(e){i.extension_settings[r.Zi].audio[`${e}_muted`]=!i.extension_settings[r.Zi].audio[`${e}_muted`],$(`#audio_${e}_mute_icon`).toggleClass("fa-volume-high"),$(`#audio_${e}_mute_icon`).toggleClass("fa-volume-mute"),$(`#audio_${e}`).prop("muted",!$(`#audio_${e}`).prop("muted")),$(`#audio_${e}_mute`).toggleClass("redOverlayGlow"),(0,o.saveSettingsDebounced)()}async function V(e){if(!i.extension_settings[r.Zi].audio.audio_setting)return;const n=$(`#audio_${e}`)[0],t=$(`#audio_${e}_play_pause_icon`);n.paused?await O(e):(n.pause(),t.removeClass("fa-pause"),t.addClass("fa-play"))}async function W(){const e=await(0,l.callGenericPopup)("输入要导入的网络音频链接（每行一个）",l.POPUP_TYPE.INPUT,"");if(!e)return console.debug("[Audio] URL import cancelled"),null;const n=e.trim().split("\n").map((e=>e.trim())).filter((e=>""!==e));return Array.from(new Set(n))}function B(e){$(`#audio_${e}`).hide(),i.extension_settings[r.Zi].audio[`${e}_muted`]?($(`#audio_${e}_mute_icon`).removeClass("fa-volume-high"),$(`#audio_${e}_mute_icon`).addClass("fa-volume-mute"),$(`#audio_${e}_mute`).addClass("redOverlayGlow"),$(`#audio_${e}`).prop("muted",!0)):($(`#audio_${e}_mute_icon`).addClass("fa-volume-high"),$(`#audio_${e}_mute_icon`).removeClass("fa-volume-mute"),$(`#audio_${e}_mute`).removeClass("redOverlayGlow"),$(`#audio_${e}`).prop("muted",!1)),$(`#enable_${e}`).prop("checked",i.extension_settings[r.Zi].audio[`${e}_enabled`]);const n=$(`#audio_${e}`)[0],t=$(`#audio_${e}_play_pause_icon`);n&&n.paused?(t.removeClass("fa-pause"),t.addClass("fa-play")):n&&!n.paused&&(t.removeClass("fa-play"),t.addClass("fa-pause")),b(e),A(e)}function U(){u=(0,r.CN)("audio_enabled"),u&&N(!0,!0),$("#audio-enable-toggle").prop("checked",u).on("click",(e=>N(!0,e.target.checked))),B("bgm"),B("ambient");const e=["bgm","ambient"];e.forEach((e=>{$(`#enable_${e}`).on("click",(()=>C(e))),((e,n)=>{n.forEach((({selector:n,event:t,handler:a})=>{$(`#${n}`).on(t,(()=>a(e)))}))})(e,[{selector:`enable_${e}`,event:"click",handler:C},{selector:`audio_${e}_mode`,event:"click",handler:P},{selector:`audio_${e}_mute`,event:"click",handler:G},{selector:`audio_${e}_volume_slider`,event:"input",handler:j},{selector:`audio_${e}_select`,event:"change",handler:L},{selector:`audio_${e}_play_pause`,event:"click",handler:V}]),$("#audio_cooldown").on("input",D).val(i.extension_settings[r.Zi].audio.audio_cooldown),T("bgm"),T("ambient");const n=$(`#audio_${e}_volume_slider`).get(0);n&&n.addEventListener("wheel",k,{passive:!1})})),$("#audio_refresh_assets").on("click",(async()=>{await M()})),I("bgm-volume-control","audio_bgm_mute_icon"),I("ambient-volume-control","audio_ambient_mute_icon");const n={bgm:"bgmurl",ambient:"ambienturl"};e.forEach((e=>{$(`#${e}_manager_button`).on("click",(async()=>{await R(n[e]),await M()}))}));const t=$("#audio_bgm")[0],a=$("#audio_ambient")[0],o=(e,n)=>{const t=$(n);e.addEventListener("play",(()=>t.removeClass("fa-play").addClass("fa-pause"))),e.addEventListener("pause",(()=>t.removeClass("fa-pause").addClass("fa-play")))};o(t,"#audio_bgm_play_pause_icon"),o(a,"#audio_ambient_play_pause_icon"),(0,s.y7)()}o.eventSource.on(o.event_types.CHAT_CHANGED,(async()=>{const e=$("#audio_bgm")[0],n=$("#audio_ambient")[0];e&&!e.paused&&e.pause(),n&&!n.paused&&n.pause(),await M(),console.log("[Audio] 聊天已更改，音频资源刷新完成")})),a()}catch(F){a(F)}}))},648:(e,n,t)=>{t.d(n,{Z:()=>c});var a=t(365),r=t(916);const s=(e=>{var n={};return t.d(n,e),n})({getTagsList:()=>m.getTagsList});var o=t(892);var i=t(121),l=t(706);function c(){(0,i.cB)("[Lorebook][getLorebookSettings]",(async e=>{const n={selected_global_lorebooks:(t=(0,l.getWorldInfoSettings)()).world_info.globalSelect,scan_depth:t.world_info_depth,context_percentage:t.world_info_budget,budget_cap:t.world_info_budget_cap,min_activations:t.world_info_min_activations,max_depth:t.world_info_min_activations_depth_max,max_recursion_steps:t.world_info_max_recursion_steps,insertion_strategy:{0:"evenly",1:"character_first",2:"global_first"}[t.world_info_character_strategy],include_names:t.world_info_include_names,recursive:t.world_info_recursive,case_sensitive:t.world_info_case_sensitive,match_whole_words:t.world_info_match_whole_words,use_group_scoring:t.world_info_use_group_scoring,overflow_alert:t.world_info_overflow_alert};var t;return console.info(`${(0,i.Jn)(e)}获取世界书全局设置:\n${JSON.stringify(n,void 0,2)}`),n})),(0,i.cB)("[Lorebook][setLorebookSettings]",(async e=>{const n=e.data.settings;if(n.selected_global_lorebooks){const e=n.selected_global_lorebooks.filter((e=>!l.world_names.includes(e)));if(e.length>0)throw Error(`尝试修改要全局启用的世界书, 但未找到以下世界书: ${JSON.stringify(e)}`)}!function(e){const n={selected_global_lorebooks:e=>{$("#world_info").find('option[value!=""]').remove(),l.world_names.forEach(((n,t)=>$("#world_info").append(`<option value='${t}'${e.includes(n)?" selected":""}>${n}</option>`))),l.selected_world_info.length=0,l.selected_world_info.push(...e),(0,a.saveSettings)()},scan_depth:e=>{$("#world_info_depth").val(e).trigger("input")},context_percentage:e=>{$("#world_info_budget").val(e).trigger("input")},budget_cap:e=>{$("#world_info_budget_cap").val(e).trigger("input")},min_activations:e=>{$("#world_info_min_activations").val(e).trigger("input")},max_depth:e=>{$("#world_info_min_activations_depth_max").val(e).trigger("input")},max_recursion_steps:e=>{$("#world_info_max_recursion_steps").val(e).trigger("input")},insertion_strategy:e=>{const n={evenly:0,character_first:1,global_first:2}[e];$(`#world_info_character_strategy option[value='${n}']`).prop("selected",!0),$("#world_info_character_strategy").val(n).trigger("change")},include_names:e=>{$("#world_info_include_names").prop("checked",e).trigger("input")},recursive:e=>{$("#world_info_recursive").prop("checked",e).trigger("input")},case_sensitive:e=>{$("#world_info_case_sensitive").prop("checked",e).trigger("input")},match_whole_words:e=>{$("#world_info_match_whole_words").prop("checked",e).trigger("input")},use_group_scoring:e=>{$("#world_info_use_group_scoring").prop("checked",e).trigger("change")},overflow_alert:e=>{$("#world_info_overflow_alert").prop("checked",e).trigger("change")}};Object.entries(e).filter((([e,n])=>void 0!==n)).forEach((([e,t])=>{n[e]?.(t)}))}(n),console.info(`${(0,i.Jn)(e)}修改世界书全局设置:\n${JSON.stringify(n,void 0,2)}`)})),(0,i.cB)("[Lorebook][getCharLorebooks]",(async e=>{const n=e.data.option;if(r.selected_group&&!n.name)throw Error("不要在群组中调用这个功能");const t=n.name??(0,o.getCharaFilename)(a.this_chid)??null,c=function({name:e=null,allowAvatar:n=!0,insensitive:t=!0,filteredByTags:i=null,preferCurrentChar:l=!0,quiet:c=!1}={}){const d=a=>!e||n&&a.avatar===e||(t?(0,o.equalsIgnoreCaseAndAccents)(a.name,e):a.name===e);let p=a.characters;i&&(p=a.characters.filter((e=>{const n=(0,s.getTagsList)(e.avatar,!1);return i.every((e=>n.some((n=>n.name==e))))})));const u=r.selected_group?groups.find((e=>e.id===r.selected_group))?.members.map((e=>p.find((n=>n.avatar===e)))):p.filter((e=>a.characters[a.this_chid]?.avatar===e.avatar));if(l){const e=u.filter(d);if(e.length>1&&(c?console.warn("Multiple characters found for given conditions. Returning the first match."):toastr.warning("Multiple characters found for given conditions.")),e.length)return e[0]}if(n&&e){const n=p.find((n=>n.avatar===e));if(n)return n}const m=e?p.filter(d):p;return m.length>1&&(c?console.warn("Multiple characters found for given conditions. Returning the first match."):toastr.warning("Multiple characters found for given conditions.")),m[0]||null}({name:t});if(!c)throw Error(`未找到名为 '${t}' 的角色卡`);let d={primary:null,additional:[]};c.data?.extensions?.world&&(d.primary=c.data?.extensions?.world);const p=l.world_info.charLore?.find((e=>e.name===t));return p&&Array.isArray(p.extraBooks)&&(d.additional=p.extraBooks),console.info(`${(0,i.Jn)(e)}获取角色卡绑定的世界书, 选项: ${JSON.stringify(n)}, 获取结果: ${JSON.stringify(d)}`),d})),(0,i.cB)("[Lorebook][setCurrentCharLorebooks]",(async e=>{const n=e.data.lorebooks;if(r.selected_group&&!option.name)throw Error("不要在群组中调用这个功能");const t=(0,o.getCharaFilename)(a.this_chid);if(!t)throw Error("未打开任何角色卡");const s=[...n.primary&&!l.world_names.includes(n.primary)?[n.primary]:[],...n.additional?n.additional.filter((e=>!l.world_names.includes(e))):[]];if(s.length>0)throw Error(`尝试修改 '${t}' 绑定的世界书, 但未找到以下世界书: ${s}`);if(void 0!==n.primary){const e=String($("#character_world").val());if($("#character_world").val(n.primary?n.primary:""),$(".character_world_info_selector").find("option:selected").val(n.primary?l.world_names.indexOf(n.primary):""),e&&!n.primary){const e=JSON.parse(String($("#character_json_data").val()));e?.data?.character_book&&(e.data.character_book=void 0),$("#character_json_data").val(JSON.stringify(e))}if(!await async function(){$("#rm_info_avatar").html("");const e=new FormData($("#form_create").get(0)),n=e.get("avatar");if(n instanceof File){const t=await(0,o.ensureImageFormatSupported)(n);e.set("avatar",t)}const t=(0,a.getRequestHeaders)();delete t["Content-Type"],e.delete("alternate_greetings");const r=$(".open_alternate_greetings").data("chid");if(r&&Array.isArray(a.characters[r]?.data?.alternate_greetings))for(const n of a.characters[r].data.alternate_greetings)e.append("alternate_greetings",n);return!!(await fetch("/api/characters/edit",{method:"POST",headers:t,body:e,cache:"no-cache"})).ok&&(await(0,a.getOneCharacter)(e.get("avatar_url")),$("#add_avatar_button").replaceWith($("#add_avatar_button").val("").clone(!0)),$("#create_button").attr("value","Save"),!0)}())throw Error(`尝试为 '${t}' 绑定主要世界书, 但在访问酒馆后端时出错`);(0,l.setWorldInfoButtonClass)(void 0,!!n.primary)}if(void 0!==n.additional){let e=l.world_info.charLore??[];const a=e.findIndex((e=>e.name===t));-1===a?e.push({name:t,extraBooks:n.additional}):0===n.additional.length?e.splice(a,1):e[a].extraBooks=n.additional,Object.assign(l.world_info,{charLore:e})}(0,a.saveCharacterDebounced)(),(0,a.saveSettingsDebounced)(),console.info(`${(0,i.Jn)(e)}修改角色卡绑定的世界书, 要修改的部分: ${JSON.stringify(n)}${void 0===n.primary?", 主要世界书保持不变":""}${void 0===n.additional?", 附加世界书保持不变":""}`)})),(0,i.cB)("[Lorebook][getLorebooks]",(async e=>(console.info(`${(0,i.Jn)(e)}获取世界书列表: ${JSON.stringify(l.world_names)}`),l.world_names))),(0,i.cB)("[Lorebook][deleteLorebook]",(async e=>{const n=e.data.lorebook,t=await(0,l.deleteWorldInfo)(n);return console.info(`${(0,i.Jn)(e)}移除世界书 '${n}' ${t?"成功":"失败"}`),t})),(0,i.cB)("[Lorebook][createLorebook]",(async e=>{const n=e.data.lorebook,t=await(0,l.createNewWorldInfo)(n,{interactive:!1});return console.info(`${(0,i.Jn)(e)}新建世界书 '${n}' ${t?"成功":"失败"}`),t}))}},678:(e,n,t)=>{t.a(e,(async(e,a)=>{try{t.d(n,{D:()=>c});var r=t(587),s=t(121),o=t(365),i=t(892),l=e([r]);function c(){(0,s.cB)("[ChatMessage][getChatMessages]",(async e=>{const n=(0,o.substituteParamsExtended)(e.data.range),t=(0,i.stringToRange)(n,0,o.chat.length-1),a=e.data.option;if(!t)throw Error(`提供的消息范围 range 无效: ${n}`);if(!["all","system","assistant","user"].includes(a.role))throw Error(`提供的 role 无效, 请提供 'all', 'system', 'assistant' 或 'user', 你提供的是: ${a.role}`);if(!["all","hidden","unhidden"].includes(a.hide_state))throw Error(`提供的 hide_state 无效, 请提供 'all', 'hidden' 或 'unhidden', 你提供的是: ${a.hide_state}`);const{start:r,end:l}=t,c=async n=>{const t=o.chat[n];if(!t)return console.warn(`${(0,s.Jn)(e)}没找到第 ${n} 楼的消息`),null;const r=(i=t,i.extra?.type===o.system_message_types.NARRATOR?i.is_user?"unknown":"system":i.is_user?"user":"assistant");var i;if("all"!==a.role&&r!==a.role)return console.debug(`${(0,s.Jn)(e)}筛去了第 ${n} 楼的消息因为它的身份不是 ${a.role}`),null;if("all"!==a.hide_state&&"hidden"===a.hide_state!==t.is_system)return console.debug(`${(0,s.Jn)(e)}筛去了第 ${n} 楼的消息因为它${"hidden"===a.hide_state?"":"没"} 被隐藏`),null;const l=t?.swipe_id??0,c=t?.swipes??[t.mes],d=t?.variables??[],p=d[l]??{};return{message_id:n,name:t.name,role:r,is_hidden:t.is_system,message:t.mes,data:p,swipe_id:l,swipes:c,swipes_data:d,is_user:t.is_user,is_system_or_hidden:t.is_system}},d=[];for(let e=t.start;e<=t.end;++e)d.push(c(e));const p=(await Promise.all(d)).filter((e=>null!==e));return console.info(`${(0,s.Jn)(e)}获取${r==l?`第 ${r} `:` ${r}-${l} `}楼的消息, 选项: ${JSON.stringify(a)} `),p})),(0,s.cB)("[ChatMessage][setChatMessage]",(async e=>{const n=e.data.field_values,t=e.data.message_id,a=e.data.option;if("number"!=typeof a.swipe_id&&"current"!==a.swipe_id)throw Error(`提供的 swipe_id 无效, 请提供 'current' 或序号, 你提供的是: ${a.swipe_id} `);if(!["none","display_current","display_and_render_current","all"].includes(a.refresh))throw Error(`提供的 refresh 无效, 请提供 'none', 'display_current', 'display_and_render_current' 或 'all', 你提供的是: ${a.refresh} `);const i=o.chat[t];if(!i)return void console.warn(`${(0,s.Jn)(e)}未找到第 ${t} 楼的消息`);const l=i.swipe_id??0,c="current"==a.swipe_id?l:a.swipe_id,d="none"!=a.refresh?c:l,p=n.message??(i.swipes?i.swipes[c]:void 0)??i.mes,u=(()=>{if("current"===a.swipe_id)return!1;if(0==a.swipe_id||i.swipes&&a.swipe_id<i.swipes.length)return!0;i.swipes||(i.swipe_id=0,i.swipes=[i.mes],i.swipe_info=[{}]);for(let e=i.swipes.length;e<=a.swipe_id;++e)i.swipes.push(""),i.swipe_info.push({});return!0})();(()=>{const e=(0,o.substituteParamsExtended)(p);n.data&&(i.variables||(i.variables=[]),i.variables[c]=n.data),i.swipes&&(i.swipes[c]=e,i.swipe_id=d),d===c&&(i.mes=e)})(),"all"==a.refresh?await(0,o.reloadCurrentChat)():((e=>{const n=$(`div.mes[mesid = "${t}"]`);n&&(e&&n.find(".swipes-counter").text(`${d+1}​/​${i.swipes.length}`),"none"!=a.refresh&&(n.find(".mes_text").empty().append((0,o.messageFormatting)(p,i.name,i.is_system,i.is_user,t)),"display_and_render_current"==a.refresh&&(0,r.YL)(`${t}`)))})(u),await(0,o.saveChatConditional)()),console.info(`${(0,s.Jn)(e)}设置第 ${t} 楼消息, 选项: ${JSON.stringify(a)}, 设置前使用的消息页: ${l}, 设置的消息页: ${c}, 现在使用的消息页: ${d} `)}))}r=(l.then?(await l)():l)[0],a()}catch(d){a(d)}}))},686:(e,n,t)=>{t.d(n,{d:()=>s});var a=t(121);const r=(e=>{var n={};return t.d(n,e),n})({executeSlashCommandsWithOptions:()=>_.executeSlashCommandsWithOptions});function s(){(0,a.cB)("[Slash][triggerSlash]",(async e=>{const n=e.data.command,t=await(0,r.executeSlashCommandsWithOptions)(n);if(t.isError)throw Error(`运行 Slash 命令 '${n}' 时出错: ${t.errorMessage}`);console.info(`${(0,a.Jn)(e)}运行 Slash 命令: ${n}`)})),(0,a.cB)("[Slash][triggerSlashWithResult]",(async e=>{const n=e.data.command,t=await(0,r.executeSlashCommandsWithOptions)(n);if(t.isError)throw Error(`运行 Slash 命令 '${n}' 时出错: ${t.errorMessage}`);return console.info(`${(0,a.Jn)(e)}运行 Slash 命令 '${n}', 结果: ${t.pipe}`),t.pipe}))}},706:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({createNewWorldInfo:()=>g.createNewWorldInfo,createWorldInfoEntry:()=>g.createWorldInfoEntry,deleteWIOriginalDataValue:()=>g.deleteWIOriginalDataValue,deleteWorldInfo:()=>g.deleteWorldInfo,getWorldInfoPrompt:()=>g.getWorldInfoPrompt,getWorldInfoSettings:()=>g.getWorldInfoSettings,loadWorldInfo:()=>g.loadWorldInfo,originalWIDataKeyMap:()=>g.originalWIDataKeyMap,saveWorldInfo:()=>g.saveWorldInfo,selected_world_info:()=>g.selected_world_info,setWIOriginalDataValue:()=>g.setWIOriginalDataValue,setWorldInfoButtonClass:()=>g.setWorldInfoButtonClass,wi_anchor_position:()=>g.wi_anchor_position,world_info:()=>g.world_info,world_info_include_names:()=>g.world_info_include_names,world_names:()=>g.world_names})},740:(e,n,t)=>{t.d(n,{O:()=>m,m:()=>u});var a=t(117),r=t(538),s=t(224),o=t(142);let i=new Map;function l(){0!==i.size&&(console.log("[Script] 清理全局脚本..."),i.forEach(((e,n)=>{e.remove()})),i.clear(),console.log("[Script] 全局脚本清理完成!"))}async function c(){try{l();const e=(0,o.P)("脚本-");console.info(`[Script] 加载全局脚本: ${JSON.stringify(e.map((e=>e.name)))}`);const n=[];e.forEach((e=>{const{iframe:t,load_promise:o}=function(e){const n=document.createElement("iframe");n.style.display="none",n.id=`script-iframe-${e.name}`;const t=`\n    <html>\n    <head>\n      ${s.A}\n      <script src="${r.S.get("iframe_client")}"><\/script>\n      ${a.Sh}\n    </head>\n    <body>\n      ${e.code}\n    </body>\n    </html>\n  `;n.srcdoc=t;const o=new Promise((e=>{n.onload=()=>{console.info(`[Script](${n.id}) 加载完毕`),e()}}));return document.body.appendChild(n),{iframe:n,load_promise:o}}(e);i.set(e.name,t),n.push(o)})),await Promise.allSettled(n)}catch(e){throw console.error("[Script] 全局脚本加载失败:",e),e}}var d=t(365);const p=[d.event_types.CHAT_CHANGED];function u(){p.forEach((e=>{d.eventSource.makeFirst(e,c),d.eventSource.makeFirst(e,a.n_)}))}function m(){p.forEach((e=>{d.eventSource.removeListener(e,c),d.eventSource.removeListener(e,a.n_)})),l(),(0,a.zr)()}},799:(e,n,t)=>{t.a(e,(async(e,a)=>{try{t.d(n,{CN:()=>A,Jl:()=>b,P1:()=>k,VE:()=>y,Zi:()=>v});var r=t(629),s=t(740),o=t(335),i=t(587),l=t(547),c=t(456),d=t(406),p=t(599),u=t(538),m=t(159),_=t(365),g=t(489),f=(t(853),t(892)),h=e([r,o,i,l,d]);[r,o,i,l,d]=h.then?(await h)():h;const v="JS-Slash-Runner",y=`third-party/${v}`;let b;const w={enabled_extension:!0,render:{...i.FF},script:{...l.y8},audio:{...r.Dt}},E=()=>{(0,i.LV)(),A("render.rendering_optimize")&&(0,i.E6)()},x=e=>{const n=parseInt(e,10);(0,i.v2)(n)},S=e=>{const n=parseInt(e,10);(0,p.Ji)(),(0,i.hk)(n),A("render.rendering_optimize")&&(0,i.E6)()},C=e=>{const n=parseInt(e,10);(0,p.Km)(n)};async function T(e=!0,n=!0){e&&(await k("enabled_extension",n),b=n),n?($("#extension-status-icon").css("color","green").next().text("扩展已启用"),u.S.set("iframe_client",c.J),u.S.set("viewport_adjust_script",i.hL),u.S.set("tampermonkey_script",i.rp),(0,o.eX)(),(0,o.PN)(),(0,s.m)(),e&&A("render.rendering_optimize")&&(0,i.mL)(),window.addEventListener("message",d.V),_.eventSource.on(_.event_types.CHAT_CHANGED,E),i.Vl.forEach((e=>{_.eventSource.on(e,x)})),p.NU.forEach((e=>{_.eventSource.on(e,C)})),_.eventSource.on(_.event_types.MESSAGE_DELETED,S),e&&void 0!==_.this_chid&&await(0,_.reloadCurrentChat)()):($("#extension-status-icon").css("color","red").next().text("扩展已禁用"),u.S.delete("iframe_client"),u.S.delete("viewport_adjust_script"),u.S.delete("tampermonkey_script"),(0,o.tf)(),(0,o.lh)(),(0,s.O)(),A("render.rendering_optimize")&&(0,i.jV)(),window.removeEventListener("message",d.V),_.eventSource.removeListener(_.event_types.CHAT_CHANGED,E),i.Vl.forEach((e=>{_.eventSource.removeListener(e,x)})),p.NU.forEach((e=>{_.eventSource.removeListener(e,C)})),_.eventSource.removeListener(_.event_types.MESSAGE_DELETED,S),e&&void 0!==_.this_chid&&await(0,_.reloadCurrentChat)()),$("#js_slash_runner_text").text(A("activate_setting")?"关闭前端渲染":"开启前端渲染"),(0,_.saveSettingsDebounced)()}function A(e){const n=e.split(".");let t=g.extension_settings[v];for(const e of n){if(null==t)return;t=t[e]}return t}async function k(e,n){(0,f.setValueByPath)(g.extension_settings[v],e,n),await(0,_.saveSettingsDebounced)()}function I(e){let n=$(e.currentTarget).attr("id");if(void 0!==n)switch(n=n.replace("-settings-title",""),$("#main-settings-title").removeClass("title-item-active"),$("#render-settings-title").removeClass("title-item-active"),$("#script-settings-title").removeClass("title-item-active"),$("#audio-settings-title").removeClass("title-item-active"),$("#main-settings-content").hide(),$("#render-settings-content").hide(),$("#script-settings-content").hide(),$("#audio-settings-content").hide(),n){case"main":$("#main-settings-title").addClass("title-item-active"),$("#main-settings-content").show();break;case"render":$("#render-settings-title").addClass("title-item-active"),$("#render-settings-content").show();break;case"script":$("#script-settings-title").addClass("title-item-active"),$("#script-settings-content").show();break;case"audio":$("#audio-settings-title").addClass("title-item-active"),$("#audio-settings-content").show()}}function M(){const e=A("enabled_extension");b=e,e&&T(!1,!0),$("#extension-enable-toggle").prop("checked",e).on("change",(function(e){T(!0,$(e.currentTarget).prop("checked"))}))}jQuery((async()=>{const e=await(0,g.renderExtensionTemplateAsync)(`${y}`,"settings");$("#extensions_settings").append(e),g.extension_settings[v]||(g.extension_settings[v]=w,(0,_.saveSettingsDebounced)()),$("#main-settings-title").addClass("title-item-active"),$("#main-settings-content").show(),$("#render-settings-content").hide(),$("#script-settings-content").hide(),$("#audio-settings-content").hide(),$("#main-settings-title").on("click",(e=>I(e))),$("#render-settings-title").on("click",(e=>I(e))),$("#script-settings-title").on("click",(e=>I(e))),$("#audio-settings-title").on("click",(e=>I(e))),M(),(0,i.RV)(),(0,l.yW)(),(0,r.$s)(),(0,m.h)()})),a()}catch(R){a(R)}}))},853:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({SlashCommandParser:()=>f.SlashCommandParser})},869:(e,n,t)=>{t.a(e,(async(e,a)=>{try{t.d(n,{D:()=>c});var r=t(587),s=t(121),o=t(365),i=e([r]);r=(i.then?(await i)():i)[0];class l{charData;constructor(e){this.charData=e}static find({name:e,allowAvatar:n=!0}={}){if(void 0===e){const t=o.characters[o.this_chid];t&&(e=t.avatar,n=!0)}let t=o.characters;if(n&&e){const n=t.find((n=>n.avatar===e));if(n)return n}const a=e?t.filter((t=>!e||t.name===e||n&&t.avatar===e)):t;if(a.length>1&&console.warn(`[Character] [findCharacter] 找到多个符合条件的角色，返回导入时间最早的角色: ${e}`),0===a.length)throw new Error(`[Character] [findCharacter] 提供的名称或头像ID为: ${e}，未找到符合条件的角色`);return a[0]}static findCharacterIndex(e){const n=[(e,n)=>e===n,(e,n)=>e.startsWith(n),(e,n)=>e.includes(n)],t=o.characters.findIndex((n=>n.avatar===e));if(-1!==t)return t;for(const t of n){const n=o.characters.findIndex((n=>t(n.name.toLowerCase(),e.toLowerCase())));if(-1!==n)return n}return-1}static async getChatsFromFiles(e,n){let t={},a=Object.values(e).sort(((e,n)=>e.file_name.localeCompare(n.file_name))).reverse().map((({file_name:e})=>new Promise((async(a,r)=>{try{const r=n?"":e.split(" - ")[0];let s=null,i="";!n&&r&&(s=l.find({name:r}),s&&(i=s.avatar));const c=n?"/api/chats/group/get":"/api/chats/get",d=n?JSON.stringify({id:e}):JSON.stringify({ch_name:r,file_name:e.replace(".jsonl",""),avatar_url:i}),p=await fetch(c,{method:"POST",headers:(0,o.getRequestHeaders)(),body:d,cache:"no-cache"});if(!p.ok)return a();const u=await p.json();n||u.shift(),t[e]=u}catch(e){console.error(e)}return a()}))));return await Promise.all(a),t}getCardData(){return this.charData}getAvatarId(){return this.charData.avatar||""}getRegexScripts(){return this.charData.data?.extensions?.regex_scripts||[]}getCharacterBook(){return this.charData.data?.character_book||null}getWorldName(){return this.charData.data?.extensions?.world||""}}function c(){function e(e,n,t=null,a){(0,s.cB)(e,(async e=>{const{name:r,allowAvatar:i=!0}=e.data;let c=r;if(void 0===c){const e=o.characters[o.this_chid];e&&(c=e.name)}const d=function(e,n=null,t,a=!0){const r=l.find({name:t,allowAvatar:a}),s=r?new l(r):null;return s?e(s):n}((t=>n(t,e)),t,r,i);if(a){const n=a(e,null,c);d instanceof Promise?d.then((t=>{console.info(`${(0,s.Jn)(e)}${n}`,t)})).catch((t=>{throw Error(`${(0,s.Jn)(e)}${n} - 发生错误: ${t}`)})):console.info(`${(0,s.Jn)(e)}${n}`,d)}return d}))}e("[Character][getCharData]",(e=>e.getCardData()),null,((e,n,t)=>`获取角色卡数据, 角色: ${t||"未知"}`)),e("[Character][getCharAvatarPath]",(e=>{const n=(0,o.getThumbnailUrl)("avatar",e.getAvatarId()),t=n.substring(n.lastIndexOf("=")+1);return r.R+t}),null,((e,n,t)=>`获取角色头像路径, 角色: ${t||"未知"}`)),e("[Character][getChatHistoryBrief]",(async e=>{const n=l.findCharacterIndex(e.getAvatarId());return await(0,o.getPastCharacterChats)(n)}),null,((e,n,t)=>`获取角色聊天历史摘要, 角色: ${t||"未知"}`)),(0,s.cB)("[Character][getChatHistoryDetail]",(async e=>{const n=e.data.data,t=e.data.isGroupChat||!1;try{const a=await l.getChatsFromFiles(n,t);return console.info(`${(0,s.Jn)(e)}获取聊天文件详情`,a),a}catch(n){throw Error(`${(0,s.Jn)(e)}获取聊天文件详情 - 发生错误: ${n}`)}}))}a()}catch(d){a(d)}}))},874:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({commonEnumProviders:()=>h.commonEnumProviders,enumIcons:()=>h.enumIcons})},892:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({Stopwatch:()=>v.Stopwatch,debounce:()=>v.debounce,ensureImageFormatSupported:()=>v.ensureImageFormatSupported,equalsIgnoreCaseAndAccents:()=>v.equalsIgnoreCaseAndAccents,getBase64Async:()=>v.getBase64Async,getCharaFilename:()=>v.getCharaFilename,getSortableDelay:()=>v.getSortableDelay,setValueByPath:()=>v.setValueByPath,stringToRange:()=>v.stringToRange,uuidv4:()=>v.uuidv4})},916:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({selected_group:()=>y.selected_group})},948:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({SlashCommandEnumValue:()=>b.SlashCommandEnumValue,enumTypes:()=>b.enumTypes})},983:(e,n,t)=>{e.exports=(e=>{var n={};return t.d(n,e),n})({t:()=>w.t})}},A={};function k(e){var n=A[e];if(void 0!==n)return n.exports;var t=A[e]={exports:{}};return T[e](t,t.exports,k),t.exports}E="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",x="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",S="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",C=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},k.a=(e,n,t)=>{var a;t&&((a=[]).d=-1);var r,s,o,i=new Set,l=e.exports,c=new Promise(((e,n)=>{o=n,s=e}));c[x]=l,c[E]=e=>(a&&e(a),i.forEach(e),c.catch((e=>{}))),e.exports=c,n((e=>{var n;r=(e=>e.map((e=>{if(null!==e&&"object"==typeof e){if(e[E])return e;if(e.then){var n=[];n.d=0,e.then((e=>{t[x]=e,C(n)}),(e=>{t[S]=e,C(n)}));var t={};return t[E]=e=>e(n),t}}var a={};return a[E]=e=>{},a[x]=e,a})))(e);var t=()=>r.map((e=>{if(e[S])throw e[S];return e[x]})),s=new Promise((e=>{(n=()=>e(t)).r=0;var s=e=>e!==a&&!i.has(e)&&(i.add(e),e&&!e.d&&(n.r++,e.push(n)));r.map((e=>e[E](s)))}));return n.r?s:t()}),(e=>(e?o(c[S]=e):s(l),C(a)))),a&&a.d<0&&(a.d=0)},k.d=(e,n)=>{for(var t in n)k.o(n,t)&&!k.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},k.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n);var I=k(799),M=(I=await I).VE,R=I.Zi,N=I.CN,O=I.Jl,P=I.P1;export{M as extensionFolderPath,R as extensionName,N as getSettingValue,O as isExtensionEnabled,P as saveSettingValue};
//# sourceMappingURL=index.js.map